<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>酷 壳 – CoolShell</title>
<description>享受编程和技术所带来的快乐 – Coding Your Ambition</description>
<link>https://coolshell.cn</link>
<pubDate>2021-11-25T11:50:53+08:00</pubDate>
<!-- other elements omitted from this example -->
<item>
<title><![CDATA[ MSDN中的两个命名 ]]></title>
<link>https://coolshell.cn/articles/2363.html</link>
<content><![CDATA[ 
<p>第一个叫：<strong>DestroyPhysicalMonitor</strong></p>
<p><a href="https://msdn.microsoft.com/en-us/library/dd692936(VS.85).aspx">http://msdn.microsoft.com/en-us/library/dd692936(VS.85).aspx</a></p>
<p>在你的程序中调用这个函数，不知道你敢不敢在运行程序。呵呵。</p>
<p>第二个叫：<strong>INITCOMMONCONTROLSEX</strong> –</p>
<p><a href="https://msdn.microsoft.com/en-us/library/bb775507(VS.85).aspx">http://msdn.microsoft.com/en-us/library/bb775507(VS.85).aspx</a></p>
<p>Initialize Common Control Sex ??? 真是淫者见淫啊。呵呵</p>
<p>不知道还有没有其它有趣的？欢迎大家跟贴。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/9308.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2829.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1525.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/894.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7425.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10115.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2363" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="5e0e837582">
<img alt="image placeholder" >
<meta itemprop="headline" content="MSDN中的两个命名">
<meta itemprop="description" content="第一个叫：DestroyPhysicalMonitor

http://msdn.microsoft.com/en-us/library/dd692936(VS.85).aspx

在你的程序中调用这个函数，不知道你敢不敢在运行程序。呵呵。

第二个叫：INITCOMMONCONTROLSEX -

http://msdn.microsoft.com/en-us/library/b...">
<meta itemprop="datePublished" content="2010-04-19T08:45:12+08:00">
<meta itemprop="dateModified" content="2010-04-18T23:53:56+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2363.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2363.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="2.4">
<meta itemprop="ratingCount" content="5">
</div>
</div>
<div id="post-ratings-2363-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-04-19T08:45:12+08:00</pubDate>
<guid>https://coolshell.cn/articles/2363.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 两个C++的资源 ]]></title>
<link>https://coolshell.cn/articles/2365.html</link>
<content><![CDATA[ 
<p>第一个是一个C++第三方类库的A-Z：（<a href="http://www.trumphurst.com/cpplibs/cpplibs.php" target="_blank">http://www.trumphurst.com/cpplibs/cpplibs.php</a>）其中包含了：</p>
<ul>
<li>开源的C++的第三方类库列表</li>
<li>商业的C++的第三方类库列表</li>
<li>一些经典的C++的随书源码</li>
<li>一些C++相关的工具</li>
</ul>
<p>不过，这个网站好像最新更新是在2008年。</p>
<p>第二个是Boost C++的一个教程：（<a href="http://en.highscore.de/cpp/boost/" target="_blank">http://en.highscore.de/cpp/boost/</a>）</p>
<ul>
<li><a href="http://en.highscore.de/cpp/boost/introduction.html">Chapter 1: Introduction</a></li>
<li><a href="http://en.highscore.de/cpp/boost/smartpointers.html">Chapter 2: Smart Pointers</a></li>
<li><a href="http://en.highscore.de/cpp/boost/functionobjects.html">Chapter 3: Function Objects</a></li>
<li><a href="http://en.highscore.de/cpp/boost/eventhandling.html">Chapter 4: Event Handling</a></li>
<li><a href="http://en.highscore.de/cpp/boost/stringhandling.html">Chapter 5: String Handling</a></li>
<li><a href="http://en.highscore.de/cpp/boost/multithreading.html">Chapter 6: Multithreading</a></li>
<li><a href="http://en.highscore.de/cpp/boost/asio.html">Chapter 7: Asynchronous Input and Output</a></li>
<li><a href="http://en.highscore.de/cpp/boost/interprocesscommunication.html">Chapter 8: Interprocess Communication</a></li>
<li><a href="http://en.highscore.de/cpp/boost/filesystem.html">Chapter 9: Filesystem</a></li>
<li><a href="http://en.highscore.de/cpp/boost/datetime.html">Chapter 10: Date and Time</a></li>
<li><a href="http://en.highscore.de/cpp/boost/serialization.html">Chapter 11: Serialization</a></li>
<li><a href="http://en.highscore.de/cpp/boost/parser.html">Chapter 12: Parser</a></li>
<li><a href="http://en.highscore.de/cpp/boost/containers.html">Chapter 13: Containers</a></li>
<li><a href="http://en.highscore.de/cpp/boost/datastructures.html">Chapter 14: Data Structures</a></li>
<li><a href="http://en.highscore.de/cpp/boost/errorhandling.html">Chapter 15: Error Handling</a></li>
<li><a href="http://en.highscore.de/cpp/boost/castoperators.html">Chapter 16: Cast Operators</a></li>
</ul>
<p>这个教程可能是写得比较不错的了，不过是英文的。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12052.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12012.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11466.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2365" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="367b1be70f">
<img alt="image placeholder" >
<meta itemprop="headline" content="两个C++的资源">
<meta itemprop="description" content="第一个是一个C++第三方类库的A-Z：（http://www.trumphurst.com/cpplibs/cpplibs.php）其中包含了：

	开源的C++的第三方类库列表
	商业的C++的第三方类库列表
	一些经典的C++的随书源码
	一些C++相关的工具

不过，这个网站好像最新更新是在2008年。

第二个是Boost C++的一个教程：（http://en.high...">
<meta itemprop="datePublished" content="2010-04-19T09:17:19+08:00">
<meta itemprop="dateModified" content="2010-04-19T01:08:33+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2365.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2365.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.64">
<meta itemprop="ratingCount" content="11">
</div>
</div>
<div id="post-ratings-2365-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-04-19T09:17:19+08:00</pubDate>
<guid>https://coolshell.cn/articles/2365.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 谷歌Chrome取消”http://” ]]></title>
<link>https://coolshell.cn/articles/2367.html</link>
<content><![CDATA[ 
<p>谷歌下一个版本的Chrome浏览器软件将缺少一个在近20年来一直是浏览器的一个特点的功能：在地址栏中的“http://”。目前开发人员版本的Chrome浏览器已经做了这种改变。这个变化虽然看起来很小，但是，已经在Chrome网站引起了程序员们很大的争议。</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/04/URL-BAR.png"><img alt="image placeholder" >
<p>在Google Chrome的开发站点上，又有了一个很热的BUG——<a href="https://code.google.com/p/chromium/issues/detail?id=41467" target="_blank">Issue  41467</a>（上一次的一热议的BUG是的《<a rel="bookmark" href="https://coolshell.cn/articles/1781.html" target="_blank">Go语言更名Issue 9</a>》），这个BUG目前已被关闭。不过在其它地方还在热议中，如：<a href="https://www.reddit.com/r/programming/comments/bt0oh/issue_41467_url_bar_no_longer_shows_http/" target="_blank">Reddit.com</a>。基本上来说，90%以上的程序员反对的，他们希望Google的Chrome可以给一个设置关闭或打开这一功能。</p>
<p>一些程序员觉得这是违反了RFC，并且觉得这是在向End User传播一种很不好的东西，那就是网址可以不用http://，这样一来会给程序员增加很多麻烦，比如：他们的程序无法使用http://这一关键字来检查用户的输出，等等。</p>
<p>iPhone浏览器的也是这样的， 不过当你把光标放到地址栏中，其会显示http://，广大程序员希望Chrome也实现这一方案。然而，<a href="https://code.google.com/p/chromium/issues/detail?id=41467" target="_blank">Issue  41467</a>目前的状态是“WontFix”，呵呵。</p>
<p>有人说，如果你在地址栏中直接输入网址，没有协议前缀，默认就是http://，Google用的就是这个特性，然后，你可以试试在地址栏中输入“<a rel="nofollow" href="ftp://ftp.gnu.org/gnu">ftp.gnu.org/gnu</a>”，你会发现，自动加入的不是http://而是ftp://，呵呵。</p>
<p>有人说，既然你要省，不如也把www.和后面的.com加上/也省了，因为这些都是默认的嘛。直接打google就OK了。Chrome开发团队说，没有www.和.com/只能算是一个主机名，不能算是DNS域名。呵呵。</p>
<p>还有人说，搞这种隐藏的最恶心的就是Windows，隐藏文件后缀名，隐藏系统文件，太扯了，于是，像sexy_girls.jpg.exe，huge-tits.jpg.src这样玩意儿让某些电脑知识薄弱意志不坚定的人深受其害。</p>
<p>如果有空，请留下你的观点。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/19840.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18094.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12136.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9508.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8767.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2367" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="4557cde835">
<img alt="image placeholder" >
<meta itemprop="headline" content="谷歌Chrome取消”http://”">
<meta itemprop="description" content="谷歌下一个版本的Chrome浏览器软件将缺少一个在近20年来一直是浏览器的一个特点的功能：在地址栏中的“http://”。目前开发人员版本的Chrome浏览器已经做了这种改变。这个变化虽然看起来很小，但是，已经在Chrome网站引起了程序员们很大的争议。



在Google Chrome的开发站点上，又有了一个很热的BUG——Issue  41467（上一次的一热议的BUG是的《Go语言...">
<meta itemprop="datePublished" content="2010-04-22T11:12:24+08:00">
<meta itemprop="dateModified" content="2010-04-22T11:50:37+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2367.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2367.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.56">
<meta itemprop="ratingCount" content="9">
</div>
</div>
<div id="post-ratings-2367-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-04-22T11:12:24+08:00</pubDate>
<guid>https://coolshell.cn/articles/2367.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ McAfee误杀svchost.exe ]]></title>
<link>https://coolshell.cn/articles/2376.html</link>
<content><![CDATA[ 
<p>这两天，杀毒软件又出事了。还记得2007年5月，那次是Norton把简体中文Windows下的netapi32.dll 和 lsasrv.dll。最近的一次是，2008年11月，AVG把user32.dll给干掉了。</p>
<p>这次是McAfee的5958版病毒库，导致McAfee误杀了Windows XP SP3下的svchost.exe，这最终导致了Windows不断地重复启动，据说有数十万PC成了小白鼠。简单地到Twitter和各国外技术社区看看，真是受灾严重啊。</p>
<p>下面是出错信息：</p>
<pre>The file C:WINDOWS\system32\svchost.exe contains the W32/Wecorl.a Virus.
Undetermined clean error, OAS denied access and continued.
Detected using Scan engine version 5400.1158 DAT version 5958.0000.</pre>
<p>其实，可能大家都误解了，McAfee把svchost.exe识别为一个恶意程序，我觉得这是一种“实事求是”的态度啊，svchost.exe难道不是Windows下的万恶之源吗？多少年来，svchost.exe成为了多少病毒，木马和流氓程序的温床，这么多年过去了，Windows用户们默默地承受着svchost.exe所带来的痛苦，经过这么长的时间，只有McAfee不惧M$的淫威第一个站出来把svchost.exe揪出来办了，这是一种什么样的精神啊……</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/2941.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/21003.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2593.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/16910.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/566.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1901.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2376" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="c7f2944c78">
<img alt="image placeholder" >
<meta itemprop="headline" content="McAfee误杀svchost.exe">
<meta itemprop="description" content="这两天，杀毒软件又出事了。还记得2007年5月，那次是Norton把简体中文Windows下的netapi32.dll 和 lsasrv.dll。最近的一次是，2008年11月，AVG把user32.dll给干掉了。

这次是McAfee的5958版病毒库，导致McAfee误杀了Windows XP SP3下的svchost.exe，这最终导致了Windows不断地重复启动，据说有数十万PC成...">
<meta itemprop="datePublished" content="2010-04-23T08:45:21+08:00">
<meta itemprop="dateModified" content="2010-04-23T00:23:32+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2376.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2376.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.1">
<meta itemprop="ratingCount" content="21">
</div>
</div>
<div id="post-ratings-2376-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-04-23T08:45:21+08:00</pubDate>
<guid>https://coolshell.cn/articles/2376.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 九个PHP很有用的功能 ]]></title>
<link>https://coolshell.cn/articles/2394.html</link>
<content><![CDATA[ 
<p>下面是九个PHP中很有用的功能，不知道你用过了吗？</p>
<div id="ez-toc-container" class="ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-grey">
<div class="ez-toc-title-container">
<p class="ez-toc-title">目录</p>
<span class="ez-toc-title-toggle"></span>
</div>
<nav><ul class="ez-toc-list ez-toc-list-level-1">
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-1" href="#1_%E5%87%BD%E6%95%B0%E7%9A%84%E4%BB%BB%E6%84%8F%E6%95%B0%E7%9B%AE%E7%9A%84%E5%8F%82%E6%95%B0" title="1. 函数的任意数目的参数">1. 函数的任意数目的参数</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-2" href="#2_%E4%BD%BF%E7%94%A8_Glob_%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6" title="2. 使用 Glob() 查找文件">2. 使用 Glob() 查找文件</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-3" href="#3_%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E4%BF%A1%E6%81%AF" title="3. 内存使用信息">3. 内存使用信息</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-4" href="#4_CPU%E4%BD%BF%E7%94%A8%E4%BF%A1%E6%81%AF" title="4. CPU使用信息">4. CPU使用信息</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-5" href="#5_%E7%B3%BB%E7%BB%9F%E5%B8%B8%E9%87%8F" title="5. 系统常量">5. 系统常量</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-6" href="#6%E7%94%9F%E6%88%90%E5%94%AF%E4%B8%80%E7%9A%84ID" title="6.生成唯一的ID">6.生成唯一的ID</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-7" href="#7_%E5%BA%8F%E5%88%97%E5%8C%96" title="7. 序列化">7. 序列化</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-8" href="#8_%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%8B%E7%BC%A9" title="8. 字符串压缩">8. 字符串压缩</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-9" href="#9_%E6%B3%A8%E5%86%8C%E5%81%9C%E6%AD%A2%E5%87%BD%E6%95%B0" title="9. 注册停止函数">9. 注册停止函数</a></li>
</ul></nav>
</div>
<h4>
<span class="ez-toc-section" id="1_%E5%87%BD%E6%95%B0%E7%9A%84%E4%BB%BB%E6%84%8F%E6%95%B0%E7%9B%AE%E7%9A%84%E5%8F%82%E6%95%B0"></span><span>1. 函数的任意数目的参数</span><span class="ez-toc-section-end"></span>
</h4>
<p>你可能知道PHP允许你定义一个默认参数的函数。但你可能并不知道PHP还允许你定义一个完全任意的参数的函数</p>
<p>下面是一个示例向你展示了默认参数的函数：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// 两个默认参数的函数
function foo($arg1 = '', $arg2 = '') {

	echo "arg1: $arg1\n";
	echo "arg2: $arg2\n";

}

foo('hello','world');
/* 输出:
arg1: hello
arg2: world
*/

foo();
/* 输出:
arg1:
arg2:
*/
</pre>
<p>现在我们来看一看一个不定参数的函数，其使用到了?<a href="http://us2.php.net/manual/en/function.func-get-args.php">func_get_args()</a>方法：<br>
<span id="more-2394"></span></p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// 是的，形参列表为空
function foo() {

	// 取得所有的传入参数的数组
	$args = func_get_args();

	foreach ($args as $k =&gt; $v) {
		echo "arg".($k+1).": $v\n";
	}

}

foo();
/* 什么也不会输出 */

foo('hello');
/* 输出
arg1: hello
*/

foo('hello', 'world', 'again');
/* 输出
arg1: hello
arg2: world
arg3: again
*/
</pre>
<h4>
<span class="ez-toc-section" id="2_%E4%BD%BF%E7%94%A8_Glob_%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6"></span><span>2. </span>使用 Glob() 查找文件<span class="ez-toc-section-end"></span>
</h4>
<p>很多PHP的函数都有一个比较长的自解释的函数名，但是，当你看到?<a href="http://us.php.net/manual/en/function.glob.php">glob()</a> 的时候，你可能并不知道这个函数是用来干什么的，除非你对它已经很熟悉了。</p>
<p>你可以认为这个函数就好?<a href="https://php.net/manual/en/function.scandir.php">scandir()</a> 一样，其可以用来查找文件。</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// 取得所有的后缀为PHP的文件
$files = glob('*.php');

print_r($files);
/* 输出:
Array
(
    [0] =&gt; phptest.php
    [1] =&gt; pi.php
    [2] =&gt; post_output.php
    [3] =&gt; test.php
)
*/
</pre>
<p>你还可以查找多种后缀名</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// 取PHP文件和TXT文件
$files = glob('*.{php,txt}', GLOB_BRACE);

print_r($files);
/* 输出:
Array
(
    [0] =&gt; phptest.php
    [1] =&gt; pi.php
    [2] =&gt; post_output.php
    [3] =&gt; test.php
    [4] =&gt; log.txt
    [5] =&gt; test.txt
)
*/
</pre>
<p>你还可以加上路径：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">$files = glob('../images/a*.jpg');

print_r($files);
/* 输出:
Array
(
    [0] =&gt; ../images/apple.jpg
    [1] =&gt; ../images/art.jpg
)
*/
</pre>
<p>如果你想得到绝对路径，你可以调用?<a href="https://php.net/manual/en/function.realpath.php">realpath()</a> 函数：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">$files = glob('../images/a*.jpg');

// applies the function to each array element
$files = array_map('realpath',$files);

print_r($files);
/* output looks like:
Array
(
    [0] =&gt; C:\wamp\www\images\apple.jpg
    [1] =&gt; C:\wamp\www\images\art.jpg
)
*/
</pre>
<h4>
<span class="ez-toc-section" id="3_%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E4%BF%A1%E6%81%AF"></span><span>3. </span>内存使用信息<span class="ez-toc-section-end"></span>
</h4>
<p>观察你程序的内存使用能够让你更好的优化你的代码。</p>
<p>PHP 是有垃圾回收机制的，而且有一套很复杂的内存管理机制。你可以知道你的脚本所使用的内存情况。要知道当前内存使用情况，你可以使用?<a href="http://us2.php.net/manual/en/function.memory-get-usage.php">memory_get_usage()</a> 函数，如果你想知道使用内存的峰值，你可以调用<a href="http://us2.php.net/manual/en/function.memory-get-peak-usage.php">memory_get_peak_usage()</a> 函数。</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">echo "Initial: ".memory_get_usage()." bytes \n";
/* 输出
Initial: 361400 bytes
*/

// 使用内存
for ($i = 0; $i &lt; 100000; $i++) {
	$array []= md5($i);
}

// 删除一半的内存
for ($i = 0; $i &lt; 100000; $i++) {
	unset($array[$i]);
}

echo "Final: ".memory_get_usage()." bytes \n";
/* prints
Final: 885912 bytes
*/

echo "Peak: ".memory_get_peak_usage()." bytes \n";
/* 输出峰值
Peak: 13687072 bytes
*/
</pre>
<h4>
<span class="ez-toc-section" id="4_CPU%E4%BD%BF%E7%94%A8%E4%BF%A1%E6%81%AF"></span><span>4. </span>CPU使用信息<span class="ez-toc-section-end"></span>
</h4>
<p>使用?<a href="http://us2.php.net/manual/en/function.getrusage.php">getrusage()</a> 函数可以让你知道CPU的使用情况。注意，这个功能在Windows下不可用。</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">print_r(getrusage());
/* 输出
Array
(
    [ru_oublock] =&gt; 0
    [ru_inblock] =&gt; 0
    [ru_msgsnd] =&gt; 2
    [ru_msgrcv] =&gt; 3
    [ru_maxrss] =&gt; 12692
    [ru_ixrss] =&gt; 764
    [ru_idrss] =&gt; 3864
    [ru_minflt] =&gt; 94
    [ru_majflt] =&gt; 0
    [ru_nsignals] =&gt; 1
    [ru_nvcsw] =&gt; 67
    [ru_nivcsw] =&gt; 4
    [ru_nswap] =&gt; 0
    [ru_utime.tv_usec] =&gt; 0
    [ru_utime.tv_sec] =&gt; 0
    [ru_stime.tv_usec] =&gt; 6269
    [ru_stime.tv_sec] =&gt; 0
)

*/
</pre>
<p>这个结构看上出很晦涩，除非你对CPU很了解。下面一些解释：</p>
<ul>
<li>ru_oublock: 块输出操作</li>
<li>ru_inblock: 块输入操作</li>
<li>ru_msgsnd: 发送的message</li>
<li>ru_msgrcv: 收到的message</li>
<li>ru_maxrss: 最大驻留集大小</li>
<li>ru_ixrss: 全部共享内存大小</li>
<li>ru_idrss:全部非共享内存大小</li>
<li>ru_minflt: 页回收</li>
<li>ru_majflt: 页失效</li>
<li>ru_nsignals: 收到的信号</li>
<li>ru_nvcsw: 主动上下文切换</li>
<li>ru_nivcsw: 被动上下文切换</li>
<li>ru_nswap: 交换区</li>
<li>ru_utime.tv_usec: 用户态时间 (microseconds)</li>
<li>ru_utime.tv_sec: 用户态时间(seconds)</li>
<li>ru_stime.tv_usec: 系统内核时间 (microseconds)</li>
<li>ru_stime.tv_sec: 系统内核时间?(seconds)</li>
</ul>
<p>要看到你的脚本消耗了多少CPU，我们需要看看“用户态的时间”和“系统内核时间”的值。秒和微秒部分是分别提供的，您可以把微秒值除以100万，并把它添加到秒的值后，可以得到有小数部分的秒数。</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// sleep for 3 seconds (non-busy)
sleep(3);

$data = getrusage();
echo "User time: ".
	($data['ru_utime.tv_sec'] +
	$data['ru_utime.tv_usec'] / 1000000);
echo "System time: ".
	($data['ru_stime.tv_sec'] +
	$data['ru_stime.tv_usec'] / 1000000);

/* 输出
User time: 0.011552
System time: 0
*/
</pre>
<p>sleep是不占用系统时间的，我们可以来看下面的一个例子：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// loop 10 million times (busy)
for($i=0;$i&lt;10000000;$i++) {

}

$data = getrusage();
echo "User time: ".
	($data['ru_utime.tv_sec'] +
	$data['ru_utime.tv_usec'] / 1000000);
echo "System time: ".
	($data['ru_stime.tv_sec'] +
	$data['ru_stime.tv_usec'] / 1000000);

/* 输出
User time: 1.424592
System time: 0.004204
*/
</pre>
<p>这花了大约14秒的CPU时间，几乎所有的都是用户的时间，因为没有系统调用。</p>
<p>系统时间是CPU花费在系统调用上的上执行内核指令的时间。下面是一个例子：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">$start = microtime(true);
// keep calling microtime for about 3 seconds
while(microtime(true) - $start &lt; 3) {

}

$data = getrusage();
echo "User time: ".
	($data['ru_utime.tv_sec'] +
	$data['ru_utime.tv_usec'] / 1000000);
echo "System time: ".
	($data['ru_stime.tv_sec'] +
	$data['ru_stime.tv_usec'] / 1000000);

/* prints
User time: 1.088171
System time: 1.675315
*/
</pre>
<p>我们可以看到上面这个例子更耗CPU。</p>
<h4>
<span class="ez-toc-section" id="5_%E7%B3%BB%E7%BB%9F%E5%B8%B8%E9%87%8F"></span><span>5. </span>系统常量<span class="ez-toc-section-end"></span>
</h4>
<p>PHP 提供非常有用的<a href="https://php.net/manual/en/language.constants.predefined.php">系统常量</a> 可以让你得到当前的行号 (__LINE__)，文件 (__FILE__)，目录 (__DIR__)，函数名 (__FUNCTION__)，类名(__CLASS__)，方法名(__METHOD__) 和名字空间 (__NAMESPACE__)，很像C语言。</p>
<p>我们可以以为这些东西主要是用于调试，当也不一定，比如我们可以在include其它文件的时候使用?__FILE__ (当然，你也可以在 PHP 5.3以后使用 __DIR__ )，下面是一个例子。</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// this is relative to the loaded script's path
// it may cause problems when running scripts from different directories
require_once('config/database.php');

// this is always relative to this file's path
// no matter where it was included from
require_once(dirname(__FILE__) . '/config/database.php');
</pre>
<p>下面是使用 __LINE__ 来输出一些debug的信息，这样有助于你调试程序：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// some code
// ...
my_debug("some debug message", __LINE__);
/* 输出
Line 4: some debug message
*/

// some more code
// ...
my_debug("another debug message", __LINE__);
/* 输出
Line 11: another debug message
*/

function my_debug($msg, $line) {
	echo "Line $line: $msg\n";
}
</pre>
<h4>
<span class="ez-toc-section" id="6%E7%94%9F%E6%88%90%E5%94%AF%E4%B8%80%E7%9A%84ID"></span><span>6.生成唯一的ID</span><span class="ez-toc-section-end"></span>
</h4>
<p>有很多人使用 md5() 来生成一个唯一的ID，如下所示：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// generate unique string
echo md5(time() . mt_rand(1,1000000));
</pre>
<p>其实，PHP中有一个叫?<a href="http://us2.php.net/manual/en/function.uniqid.php">uniqid()</a> 的函数是专门用来干这个的：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// generate unique string
echo uniqid();
/* 输出
4bd67c947233e
*/

// generate another unique string
echo uniqid();
/* 输出
4bd67c9472340
*/
</pre>
<p>可能你会注意到生成出来的ID前几位是一样的，这是因为生成器依赖于系统的时间，这其实是一个非常不错的功能，因为你是很容易为你的这些ID排序的。这点MD5是做不到的。</p>
<p>你还可以加上前缀避免重名：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// 前缀
echo uniqid('foo_');
/* 输出
foo_4bd67d6cd8b8f
*/

// 有更多的熵
echo uniqid('',true);
/* 输出
4bd67d6cd8b926.12135106
*/

// 都有
echo uniqid('bar_',true);
/* 输出
bar_4bd67da367b650.43684647
*/
</pre>
<p>而且，生成出来的ID会比MD5生成的要短，这会让你节省很多空间。</p>
<h4>
<span class="ez-toc-section" id="7_%E5%BA%8F%E5%88%97%E5%8C%96"></span><span>7. </span>序列化<span class="ez-toc-section-end"></span>
</h4>
<p>你是否会把一个比较复杂的数据结构存到数据库或是文件中？你并不需要自己去写自己的算法。PHP早已为你做好了，其提供了两个函数：?<a href="https://php.net/manual/en/function.serialize.php">serialize()</a> 和 <a href="http://www.php.net/manual/en/function.unserialize.php">unserialize()</a>:</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// 一个复杂的数组
$myvar = array(
	'hello',
	42,
	array(1,'two'),
	'apple'
);

// 序列化
$string = serialize($myvar);

echo $string;
/* 输出
a:4:{i:0;s:5:"hello";i:1;i:42;i:2;a:2:{i:0;i:1;i:1;s:3:"two";}i:3;s:5:"apple";}
*/

// 反序例化
$newvar = unserialize($string);

print_r($newvar);
/* 输出
Array
(
    [0] =&gt; hello
    [1] =&gt; 42
    [2] =&gt; Array
        (
            [0] =&gt; 1
            [1] =&gt; two
        )

    [3] =&gt; apple
)
*/
</pre>
<p>这是PHP的原生函数，然而在今天JSON越来越流行，所以在PHP5.2以后，PHP开始支持JSON，你可以使用 json_encode() 和 json_decode() 函数</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// a complex array
$myvar = array(
	'hello',
	42,
	array(1,'two'),
	'apple'
);

// convert to a string
$string = json_encode($myvar);

echo $string;
/* prints
["hello",42,[1,"two"],"apple"]
*/

// you can reproduce the original variable
$newvar = json_decode($string);

print_r($newvar);
/* prints
Array
(
    [0] =&gt; hello
    [1] =&gt; 42
    [2] =&gt; Array
        (
            [0] =&gt; 1
            [1] =&gt; two
        )

    [3] =&gt; apple
)
*/
</pre>
<p>这看起来更为紧凑一些了，而且还兼容于Javascript和其它语言。但是对于一些非常复杂的数据结构，可能会造成数据丢失。</p>
<h4>
<span class="ez-toc-section" id="8_%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%8B%E7%BC%A9"></span><span>8. </span>字符串压缩<span class="ez-toc-section-end"></span>
</h4>
<p>当我们说到压缩，我们可能会想到文件压缩，其实，字符串也是可以压缩的。PHP提供了?<a href="https://php.net/manual/en/function.gzcompress.php">gzcompress()</a> 和 <a href="http://www.php.net/manual/en/function.gzuncompress.php">gzuncompress()</a> 函数：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">$string =
"Lorem ipsum dolor sit amet, consectetur
adipiscing elit. Nunc ut elit id mi ultricies
adipiscing. Nulla facilisi. Praesent pulvinar,
sapien vel feugiat vestibulum, nulla dui pretium orci,
non ultricies elit lacus quis ante. Lorem ipsum dolor
sit amet, consectetur adipiscing elit. Aliquam
pretium ullamcorper urna quis iaculis. Etiam ac massa
sed turpis tempor luctus. Curabitur sed nibh eu elit
mollis congue. Praesent ipsum diam, consectetur vitae
ornare a, aliquam a nunc. In id magna pellentesque
tellus posuere adipiscing. Sed non mi metus, at lacinia
augue. Sed magna nisi, ornare in mollis in, mollis
sed nunc. Etiam at justo in leo congue mollis.
Nullam in neque eget metus hendrerit scelerisque
eu non enim. Ut malesuada lacus eu nulla bibendum
id euismod urna sodales. ";

$compressed = gzcompress($string);

echo "Original size: ". strlen($string)."\n";
/* 输出原始大小
Original size: 800
*/

echo "Compressed size: ". strlen($compressed)."\n";
/* 输出压缩后的大小
Compressed size: 418
*/

// 解压缩
$original = gzuncompress($compressed);
</pre>
<p>几乎有<span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; line-height: 19px; white-space: normal; font-size: 13px;">50% 压缩比率。同时，你还可以使用?<a href="http://www.php.net/manual/en/function.gzencode.php">gzencode()</a> 和 <a href="http://www.php.net/manual/en/function.gzdecode.php">gzdecode()</a> 函数来压缩，只不用其用了不同的压缩算法。</span></p>
<h4>
<span class="ez-toc-section" id="9_%E6%B3%A8%E5%86%8C%E5%81%9C%E6%AD%A2%E5%87%BD%E6%95%B0"></span><span>9. 注册停止</span>函数<span class="ez-toc-section-end"></span>
</h4>
<p>有一个函数叫做?<a href="http://www.php.net/manual/en/function.register-shutdown-function.php">register_shutdown_function()</a>，可以让你在整个脚本停时前运行代码。让我们看下面的一个示例：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">// capture the start time
$start_time = microtime(true);

// do some stuff
// ...

// display how long the script took
echo "execution took: ".
		(microtime(true) - $start_time).
		" seconds.";
</pre>
<p>上面这个示例只不过是用来计算某个函数运行的时间。然后，如果你在函数中间调用?<a href="https://php.net/manual/en/function.exit.php">exit()</a> 函数，那么你的最后的代码将不会被运行到。并且，如果该脚本在浏览器终止（用户按停止按钮），其也无法被运行。</p>
<p>而当我们使用了register_shutdown_function()后，你的程序就算是在脚本被停止后也会被运行：</p>
<p></p>
<pre data-enlighter-language="php" class="EnlighterJSRAW">$start_time = microtime(true);

register_shutdown_function('my_shutdown');

// do some stuff
// ...

function my_shutdown() {
	global $start_time;

	echo "execution took: ".
			(microtime(true) - $start_time).
			" seconds.";
}
</pre>
<p>文章：<a href="http://net.tutsplus.com/tutorials/php/9-useful-php-functions-and-features-you-need-to-know/" target="_blank">来源</a></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/7886.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5224.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5160.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4795.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2053.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2394" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="d136b15254">
<img alt="image placeholder" >
<meta itemprop="headline" content="九个PHP很有用的功能">
<meta itemprop="description" content="下面是九个PHP中很有用的功能，不知道你用过了吗？
1. 函数的任意数目的参数
你可能知道PHP允许你定义一个默认参数的函数。但你可能并不知道PHP还允许你定义一个完全任意的参数的函数

下面是一个示例向你展示了默认参数的函数：

[php]
// 两个默认参数的函数
function foo($arg1 = '', $arg2 = '') {

	echo &quot;arg1: $a...">
<meta itemprop="datePublished" content="2010-05-06T08:37:49+08:00">
<meta itemprop="dateModified" content="2010-05-05T23:41:01+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2394.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2394.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.41">
<meta itemprop="ratingCount" content="17">
</div>
</div>
<div id="post-ratings-2394-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-06T08:37:49+08:00</pubDate>
<guid>https://coolshell.cn/articles/2394.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 新手该学哪门编程语言 ]]></title>
<link>https://coolshell.cn/articles/2402.html</link>
<content><![CDATA[ 
<p>在某个论坛上看到有人在问——“Which programming language should I learn first？”，看到了下面的这个回答，有点意思。</p>
<blockquote>
<p>Depends.</p>
<ul>
<li>To program in an expressive and powerful language: <strong>Python</strong>
</li>
<li>To get a website up quickly: <strong>PHP</strong>
</li>
<li>To mingle with programmers who call themselves “rockstars”: <strong>Ruby</strong>.</li>
<li>To really learn to program: <strong>C</strong>.</li>
<li>To achieve enlightenment: <strong>Scheme</strong>.</li>
<li>To feel depressed: <strong>SQL</strong>
</li>
<li>To drop a chromosome: <strong>Microsoft Visual Basic</strong>
</li>
<li>To get a guaranteed, mediocre, but well paying job writing financial applications in a cubicle under fluorescent lights: <strong>Java</strong>.</li>
<li>To do the same thing with certifications and letters after your name: <strong>C#</strong>
</li>
<li>To achieve a magical sense of childlike wonder that you have a hard time differentiating from megalomania: <strong>Objective C</strong>
</li>
</ul>
<p>I could go on… but I’m not feeling hateful enough today.</p>
</blockquote>
<p>翻译如下：</p>
<p><span id="more-2402"></span></p>
<blockquote>
<p>看你的需要了。</p>
<ul>
<li>如果你想找一门表达力和功能都很强的语言：Python</li>
<li>如果你想更快速地开发WEB程序：PHP</li>
<li>如果你想和那些“摇滚明星”的程序员为伍：Ruby</li>
<li>如果你想学真正的编程：C</li>
<li>如果你想顿入空门的话：Scheme</li>
<li>如果你想压抑的话：SQL</li>
<li>如果你想基因突变成为非人类的话：Microsoft Visual Basic</li>
<li>如果你想要得到一个有保证的，但普普通通的，收入还不错的，在一间小卧室的荧光灯下写一些金融应用的工作：Java</li>
<li>如果你想在你的名字后放上一些认证和证书：C#</li>
<li>如果你想得到一些很难在自大狂和孩子气中区分的那种魔幻般的感觉：Objective C</li>
</ul>
<p>我还可以再写去，因为今天我还没有足够的愤怒。</p>
</blockquote>
<p>跟着这个思路，我也补充几条吧，</p>
<ul>
<li>如果你想寻找在被虐中被大众称道的感觉：C++</li>
<li>如果你想整天都在说Fxxk的脏话：JavaScript (<a rel="bookmark" href="https://coolshell.cn/articles/1850.html" target="_blank">哪种程序员嘴最脏</a>)</li>
<li>如果你想成为无所不能的BS一切的神：汇编</li>
<li>如果你想成为一个像春哥或犀利哥一样真正的男人：Brainfuck （<a rel="bookmark" href="https://coolshell.cn/articles/1142.html" target="_blank">BT雷人的程序语言</a>）</li>
</ul>
<p>呵呵，欢迎留下你的回答！</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/21589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20977.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20765.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20276.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19612.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19464.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2402" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="4c1d2bdafd">
<img alt="image placeholder" >
<meta itemprop="headline" content="新手该学哪门编程语言">
<meta itemprop="description" content="在某个论坛上看到有人在问——“Which programming language should I learn first？”，看到了下面的这个回答，有点意思。
Depends.

	To program in an expressive and powerful language: Python
	To get a website up quickly: PHP
	To mingle...">
<meta itemprop="datePublished" content="2010-05-10T08:46:42+08:00">
<meta itemprop="dateModified" content="2010-05-12T11:11:06+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2402.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2402.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.36">
<meta itemprop="ratingCount" content="28">
</div>
</div>
<div id="post-ratings-2402-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-10T08:46:42+08:00</pubDate>
<guid>https://coolshell.cn/articles/2402.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 写HTML和CSS的新方法 ]]></title>
<link>https://coolshell.cn/articles/2406.html</link>
<content><![CDATA[ 
<div id="_mcePaste">
<strong><a href="https://code.google.com/p/zen-coding/" target="_blank">Zen Coding</a></strong> 一个用来简化编写 HTML，XML， XSL （或是其它一些诸如此类格式的编辑器）。其主要是用一种缩写方式的语法来书写大量重复和无味的HTML，很像CSS语法。下面是一个例子：</div>
<pre>div#page&gt;div.logo+ul#navigation&gt;li*5&gt;a</pre>
<div>展开后会成为下面这个样子：</div>
<p></p>
<pre data-enlighter-language="html" class="EnlighterJSRAW">&lt;div id="page"&gt;
        &lt;div&gt;&lt;/div&gt;
        &lt;ul id="navigation"&gt;
                &lt;li&gt;&lt;a href=""&gt;&lt;/a&gt;&lt;/li&gt;
                &lt;li&gt;&lt;a href=""&gt;&lt;/a&gt;&lt;/li&gt;
                &lt;li&gt;&lt;a href=""&gt;&lt;/a&gt;&lt;/li&gt;
                &lt;li&gt;&lt;a href=""&gt;&lt;/a&gt;&lt;/li&gt;
                &lt;li&gt;&lt;a href=""&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
&lt;/div&gt;
</pre>
<div id="_mcePaste">可以看出来，#代表ID，&gt;代表下一层。</div>
<div><span id="more-2406"></span></div>
<div>如果你写下：</div>
<pre>select&gt;option#item-$*3</pre>
<div>那么将会得到：</div>
<p></p>
<pre data-enlighter-language="html" class="EnlighterJSRAW">
&lt;select&gt;
	&lt;option id="item-1"&gt;&lt;/option&gt;
	&lt;option id="item-2"&gt;&lt;/option&gt;
	&lt;option id="item-3"&gt;&lt;/option&gt;
&lt;/select&gt;
</pre>
<div>看上去很不错吧。目前，其支持如下的编辑器：</div>
<div>
<p><span style="font-family: arial, sans-serif; line-height: normal;"> </span></p>
<ul>
<li><a style="color: #0000cc;" href="https://code.google.com/p/zen-coding/wiki/AptanaHowToEn">AptanaHowToEn</a></li>
<li>
<strong>TextMate</strong> (Mac). Available in two flavors: basic snippets (Zen HTML and Zen CSS) and full-featured plugin (ZenCoding for TextMate). <sub>Bundles &gt; Zen Coding menu item</sub>
</li>
<li>
<strong>Coda</strong> (Mac) — <a style="color: #0000cc;" rel="nofollow" href="https://github.com/sergeche/tea-for-coda/downloads">external download</a>, via <a style="color: #0000cc;" rel="nofollow" href="http://onecrayon.com/tea/">TEA for Coda</a>. <sub>Plug-ins &gt; TEA for Coda &gt; Zen Coding menu item</sub>
</li>
<li>
<strong>Espresso</strong> (Mac) — <a style="color: #0000cc;" rel="nofollow" href="https://github.com/sergeche/tea-for-espresso/downloads">external download</a>, via <a style="color: #0000cc;" rel="nofollow" href="http://onecrayon.com/tea/">TEA for Espresso</a>. Zen Coding is bundled with Espresso by default, but you should upgrade ZC to latest version. <sub>Actions &gt; HTML menu item</sub>
</li>
<li>
<strong>Komodo Edit/IDE</strong> (crossplatform) — <a style="color: #0000cc;" rel="nofollow" href="http://community.activestate.com/xpi/zen-coding">external download</a>. <sub>Tools &gt; Zen Coding menu item</sub>
</li>
<li>
<strong>Notepad++</strong> (Windows). <sub>Zen Coding menu item</sub>
</li>
<li>
<strong>PSPad</strong> (Windows). <sub>Scripts &gt; Zen Coding menu item</sub>
</li>
<li>
<strong><tt style="font-size: 13px;">&lt;textarea&gt;</tt></strong> (browser-based). See <a style="color: #0000cc;" rel="nofollow" href="http://zen-coding.ru/textarea/">online demo</a>.</li>
<li>
<strong>editArea</strong> (browser-based). See <a style="color: #0000cc;" rel="nofollow" href="http://zen-coding.ru/demo/">online demo</a>.</li>
</ul>
</div>
<p>还有下面这些第三方的插件：</p>
<ul>
<li>
<strong>Dreamweaver</strong> (Windows, Mac)</li>
<li>
<strong>Sublime Text</strong> (Windows)</li>
<li>
<strong>UltraEdit</strong> (Windows)</li>
<li>
<strong>TopStyle</strong> (Windows)</li>
<li>
<strong>GEdit</strong> (crossplatform) — <a rel="nofollow" href="https://github.com/fmarcia/zen-coding-gedit">Franck Marcia’s plugin</a>, <a rel="nofollow" href="https://github.com/mikecrittenden/zen-coding-gedit">Mike Crittenden’s plugin</a>
</li>
<li>
<strong>BBEdit/TextWrangler</strong> (Mac) — <a rel="nofollow" href="http://www.angelwatt.com/coding/zen-coding_bbedit.php">external download</a>
</li>
<li>
<strong>Visual Studio</strong> (Windows) — <a rel="nofollow" href="https://zencoding.codeplex.com/">external download</a>
</li>
</ul>
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9666.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6840.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3903.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3063.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2406" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="e9d0168898">
<img alt="image placeholder" >
<meta itemprop="headline" content="写HTML和CSS的新方法">
<meta itemprop="description" content='Zen Coding 一个用来简化编写 HTML，XML， XSL （或是其它一些诸如此类格式的编辑器）。其主要是用一种缩写方式的语法来书写大量重复和无味的HTML，很像CSS语法。下面是一个例子：
div#page&gt;div.logo+ul#navigation&gt;li*5&gt;a
展开后会成为下面这个样子：
[html]
&lt;div id="page"&gt;
        &lt;div&gt;&lt;/div&gt;...'>
<meta itemprop="datePublished" content="2010-05-11T08:18:19+08:00">
<meta itemprop="dateModified" content="2010-05-10T00:40:06+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2406.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2406.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.4">
<meta itemprop="ratingCount" content="5">
</div>
</div>
<div id="post-ratings-2406-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-11T08:18:19+08:00</pubDate>
<guid>https://coolshell.cn/articles/2406.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ HTML 安全列表 ]]></title>
<link>https://coolshell.cn/articles/2416.html</link>
<content><![CDATA[ 
<p>下面这个网站罗列了，几乎所有的关于HTML 5 在各种主流浏览器上的安全问题，这些安全问题很有可能将会是黑客攻击你的网上的敲门砖，他们几乎都和Javascript都有关系，你就要好好注意了。</p>
<p style="text-align: center;"><a href="http://heideri.ch/jso/" target="_blank"><strong>http://heideri.ch/jso/</strong></a></p>
<p style="text-align: left;">下面罗列几个：</p>
<p style="text-align: left;"><strong>1）&lt;table background=”javascript:alert(1)”&gt;</strong></p>
<p style="text-align: left;">IE6，7，8，9，和Opera 8.x, 9.x, 10.x 都支持这样的语法。</p>
<p style="text-align: left;"><strong>2）&lt;meta charset=”mac-farsi”&gt;¼script¾alert(1)¼/script¾</strong></p>
<p style="text-align: left;">这个问题会存在于所有的Firefox版本中，可以让用户进行XSS（跨站脚本）攻击</p>
<p style="text-align: left;"><strong>3）&lt;script&gt;&amp;amp;#x61;l&amp;amp;#x65;rt&amp;amp;#40;1)&lt;/script&gt;</strong></p>
<p style="text-align: left;">在&lt;script&gt;和&lt;style&gt;的TAG间，根据标据，其可以使用这样的字符来运行脚本。这在所有版本的Firefox, Opera, 和 Chrome中都会有问题。</p>
<p style="text-align: left;"><span id="more-2416"></span></p>
<p style="text-align: left;"><strong>4）({set/**/$($){_/**/setter=$,_=1}}).$=alert</strong></p>
<p style="text-align: left;">上面这个是Firefox的一个<a href="https://developer.mozilla.org/en/Core_JavaScript_1.5_Guide/Working_with_Objects#Defining_Getters_and_Setters" target="_blank">语法</a>，也会产生XSS攻击。</p>
<p style="text-align: left;"><strong>5）&lt;div style=”font-family:foo}x=expression(write(1));”&gt;XXX&lt;/div&gt;</strong></p>
<p style="text-align: left;">自从IE5.5后，直到IE9，IE就可以支持上面这样的语法。</p>
<p style="text-align: left;"><strong>6）src中是可以运行脚本的，如：</strong></p>
<p style="text-align: left; padding-left: 30px;">&lt;embed src=”javascript:alert(1)”&gt;<br>
&lt;img src=”javascript:alert(1)”&gt;<br>
&lt;image src=”javascript:alert(1)”&gt;<br>
&lt;script src=”javascript:alert(1)”&gt;</p>
<p style="text-align: left;">又一个XSS攻击，几乎所有的浏览器都支持这样的方式，如：Firefox全部版本，Chrome 4.x/5.x，Opera 8.x/9.x/10.0，IE 6.0/7.0和Safari 3.x/4.x</p>
<p style="text-align: left;">
</p>
<p style="text-align: left;">还有很多，大家自己去看吧，这个网站经常更新的。总体感觉下来，IE和Firefox的安全问题都在伯仲之间，Safari貌似是问题最少的。</p>
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/19395.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18094.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17607.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17066.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12206.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2416" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="571fa99f78">
<img alt="image placeholder" >
<meta itemprop="headline" content="HTML 安全列表">
<meta itemprop="description" content='下面这个网站罗列了，几乎所有的关于HTML 5 在各种主流浏览器上的安全问题，这些安全问题很有可能将会是黑客攻击你的网上的敲门砖，他们几乎都和Javascript都有关系，你就要好好注意了。
http://heideri.ch/jso/
下面罗列几个：
1）&lt;table background="javascript:alert(1)"&gt;
IE6，7，8，9，和Opera 8.x, 9.x,...'>
<meta itemprop="datePublished" content="2010-05-12T08:57:38+08:00">
<meta itemprop="dateModified" content="2010-05-11T23:29:58+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2416.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2416.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4">
<meta itemprop="ratingCount" content="8">
</div>
</div>
<div id="post-ratings-2416-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-12T08:57:38+08:00</pubDate>
<guid>https://coolshell.cn/articles/2416.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 老手是这样教新手编程的 ]]></title>
<link>https://coolshell.cn/articles/2420.html</link>
<content><![CDATA[ 
<p>comp.lang.c全球最大的C语言新闻组，其Google的链接是：<a href="https://groups.google.com/group/comp.lang.c/" target="_blank">http://groups.google.com/group/comp.lang.c/</a> 可惜被GFW了。在comp.lang.c新闻组，有一个日本网友发了个<a href="https://groups.google.com/group/comp.lang.c/browse_thread/thread/9f3faa6af28577f2/e105e5d339edec01?hide_quotes=no" target="_blank">贴子</a>，说他正在学习一个在线的C语言课程，要完成一个作业，用程序输出如下的结果，而他的老师在美国，因为时差问题，他无法和他联系，所以只有上这里来寻求帮助。</p>
<pre style="text-align: left;font-family: 'Consolas','Courier New', Courier, monospace;">    *
   ***
  *****
 *******
*********
*********
 *******
  *****
   ***
    *</pre>
<p>很明显，在comp.lang.c上发这种贴子是一定会被拍的很惨的，这样的事，以前在SUN的论坛上也发生过，<a href="https://coolshell.cn/articles/1391.html" target="_blank">详情请看这里</a>。还有一个去软件<a href="https://coolshell.cn/articles/1693.html" target="_blank">官网上要一个盗版序列号</a>的。果不然后，我看到了这样的一个<a href="https://groups.google.com/group/comp.lang.c/msg/e105e5d339edec01" target="_blank">回贴</a>。提供这样的一段代码：</p>
<p><span id="more-2420"></span></p>
<p></p>
<pre data-enlighter-language="c" class="EnlighterJSRAW">#define      M 002354l
#define     A   000644l
#define    G     000132l
#define     I   000322l
#define      C 000374l
#define                a ;
#define               b for
#define              c    ++
#define             d       %
#define            e       int
#define           f           ,
#define          g             -
#define         h             011
#define        i                 =
#define       j                   {
#define      k                     )
#define     l                    '\n'
#define    m                      main
#define    n                         &lt;
#define     o                       }
#define      p                     &gt;
#define       q                  &amp;&amp;
#define        r                 (
#define         s              ||
#define          t             ?
#define           u     putchar
#define            v      void
#define             w     '*'
#define              x     :
#define               y ' '
#define                _ /
#define           C_O_O_L return
                   e u r e k a
                         e
                        m r
                       v k j
                      j j j j
                     j j j j j
                    j j j j j j
                   j j j j j j j
                  j e z a b r z i
                 M _ A _ G _ I _ C
                a z n G a u r z d h
               + z _ h p M _ A q z d
              h + z _ h n M _ G q z _
             h n z d h + M _ I q z _ h
            p z d h g M _ C t w x y k f
           z d h g h + 1 s u r l k f z c
          k a u r l k a j j j j j j j j j
         j j C_O_O_L M _ A _ G _ I _ C a o
        o o o o o o o o o o o o o o o o o o
                      o o o o
                      o o o o
                      o o o o
                      o o o o
</pre>
<p>这段程序是可以编译通过的，没有任何问题，而且还是可以得到正确的结果的。关于这样的程序，你可以参考本站的这篇文章《<a title="6个变态的C语言Hello World程序" href="https://coolshell.cn/articles/914.html" target="_blank">6个变态的C语言Hello World程序</a>》，而另一篇文章教你<a href="https://coolshell.cn/articles/933.html">如何搞乱你的C代码</a>。呵呵。当然，你并不需要把在你的VC或是GCC下编译这段代码，现在什么都有在线了，编译器当然也在线了，这里是一篇关于<a href="https://coolshell.cn/articles/1310.html" target="_blank">在线编译器的文章</a>，甚至一个<a href="https://coolshell.cn/articles/1883.html" target="_blank">在线的IDE</a>（连这个网站的CTO都在本站<a href="https://coolshell.cn/articles/1883.html#comment-2234" target="_blank">留言</a>了），上去编译一下你就可以看到<a href="http://codepad.org/Rh6icaWU" target="_blank">结果</a>了。</p>
<p>最后，不恶搞了，在comp.lang.c的这个贴子中看到了很多不错的“如何教新手编程”的观点，下面罗列一些：</p>
<p>1）你把你自认为最好程序贴出来，我会帮你看的，但我是不会帮你写的。</p>
<p>2）要解决这个问题，你需要先观察输出，然后找到其规律，算法总是去描述一些有规律的事情。关于你的这个程序，很明显，你可以分成两个部分，一个正三角，一个倒三角，每一行的星号都是连续的奇数，1，3，5，7，9，而前面的空格又是顺序的自然数：4，3，2，1，你看这样的规律用程序来干不是正合适吗？</p>
<p>从这两个例子，我们可以看到，老手应该如何去教新手，那就是，a）让其独立思考，b）步步为营的引导，c）教一种方法而不是直接给答案。希望与大家共勉。</p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12052.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12012.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11466.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2420" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="61afc92e0f">
<img alt="image placeholder" >
<meta itemprop="headline" content="老手是这样教新手编程的">
<meta itemprop="description" content="comp.lang.c全球最大的C语言新闻组，其Google的链接是：http://groups.google.com/group/comp.lang.c/ 可惜被GFW了。在comp.lang.c新闻组，有一个日本网友发了个贴子，说他正在学习一个在线的C语言课程，要完成一个作业，用程序输出如下的结果，而他的老师在美国，因为时差问题，他无法和他联系，所以只有上这里来寻求帮助。
    *
  ...">
<meta itemprop="datePublished" content="2010-05-13T08:43:19+08:00">
<meta itemprop="dateModified" content="2014-03-06T22:22:41+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2420.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2420.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.5">
<meta itemprop="ratingCount" content="30">
</div>
</div>
<div id="post-ratings-2420-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-13T08:43:19+08:00</pubDate>
<guid>https://coolshell.cn/articles/2420.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 十条不错的编程观点 ]]></title>
<link>https://coolshell.cn/articles/2424.html</link>
<content><![CDATA[ 
<p>在<a href="https://stackoverflow.com/" target="_blank">Stack Overflow</a>上有这样的一个贴子《<a href="https://stackoverflow.com/questions/406760/whats-your-most-controversial-programming-opinion" target="_blank">What’s your most controversial programming opinion?</a>》，翻译成中文就是“<span style="color: #333333;">你认为最有争议的编程观点是什么？</span>”，不过，在400多个主回贴，以及千把个子回贴中，好像并不是很有争议，而是令人相当的茅塞顿开，下面罗列一些，并通过我自己的经历和理解发挥了一些，希望对你有帮助。</p>
<p><strong>1） The only “best practice” you should be using all the time is “Use Your Brain”.</strong></p>
<p>唯一的“Best Practice”并不是使用各种各样被前人总结过的各种设计方法、模式，框架，那些著名的方法、模式、框架只代码赞同他们的人多，并不代表他们适合你，你应该更多的去使用你的大脑，独立地思考那些方法、模式、框架出现的原因和其背后的想法和思想，那才是“best practice”。事实上来说，那些所谓的“Best Practice”只不过是限制那些<a href="https://coolshell.cn/articles/1081.html" target="_blank">糟糕的程序员们</a>的破坏力。</p>
<p><strong>2）Programmers who don’t code in their spare time for fun will never become as good as those that do.</strong></p>
<p>如果你对编程没有感到一种快乐，没有在你空闲的时候去以一种的娱乐方式去生活，无论是编程，还是运动，还是去旅游，那么你只不过是在应付你的工作，无时无刻不扎在程序堆中，这样下来，就算是你是一个非常聪明，非常有才华的人，你也不会成为一个优秀的编程员，要么只会平平凡凡，要么只会整天扎在技术中成为书呆子。当然，这个观点是有争议，热情和能力的差距也是很大的。不过我们可以从中汲取其正面的观点。</p>
<p><strong>3）M</strong><strong>ost comments in code are in fact a pernicious form of code duplication.</strong></p>
<p>注释应该是注释Why，而不是How和What，参看《<a rel="bookmark" href="https://coolshell.cn/articles/340.html" target="_blank">惹恼程序员的十件事</a>》，代码告诉你How，而注释应该告诉你Why。但大多数的程序并不知道什么是好的注释，那些注释其实和code是重复的，毫无意义。</p>
<p><span id="more-2424"></span></p>
<p><strong>4）XML is highly overrated</strong></p>
<p>XML可能被高估了。XML对于Web上的应用是不错的，但是我们把其用到了各种地方，好像没有XML，我们都不会编程了。</p>
<p><strong>5）Not all programmers are created equal</strong></p>
<p>这是那些junior经理或是流程爱犯的错，他们总是认为，DeveloperA == DeveloperB，只要他们的title一样，他们以为他们的能力、工作速度、解决问题的方法，掌握的技能等等都是一样的。呵呵。更扯的是，在某些时候，就算是最差的程序员，他们也会认为其比别人强十倍，这就是现代的SB管理。</p>
<p><strong>6）”Googling it” is okay!</strong></p>
<p>Google只会给你知识，并不会教给你技能。那里只有“鱼”，没有“渔”，过度的使用Google，只会让你越来越离不开他，你越来越去要去立马告诉你答案，而你越来越不会自己去思考，自己去探索，去专研。如果KFC快餐是垃圾食品对我们的身体没有好处，那么使用Google也一种快餐文化对我们的智力发展大大的没有好处。</p>
<p><strong>7）</strong><strong>If you only know one language, no matter how well you know it, you’re not a great programmer.</strong></p>
<p>如果你只懂一种语言，准确的说，如果你只懂一类语类，如：Java和C#，PHP和Perl，那么，你将会被局限起来，只有了解了各种各样的语言，了解了不同语言的不同方法 ，你才会有比较，只有了比较，你才会明白各种语言的长处和短处，才会让你有更为成熟的观点，而且不整天和别的程序在网上斗嘴争论是Windows好还是Unix好，是C好还是C++好，有这点工夫能干好多事了。世界因为不同而精彩，只知道事物的一面是有害的。</p>
<p><strong>8）Your job is to put yourself out of work.</strong></p>
<p>你的工作不是保守，那种教会徒弟，饿死师父的想法，不但是相当短浅的，而且还是相当脑残的。因为，在计算机世界里，你掌握的老技术越多，你就越没用，因为技术更新的太快。你对工作越保守，这个工作就越来越离不开你，你就越不越不能抽身去学新的东西，你也就越来越OUT了。记住：If you can’t be replaced then you can’t be promoted!</p>
<p><strong>9）<strong>Design patterns are hurting good design more than they’re helping it.</strong></strong></p>
<p>很多程序员把设计模式奉为天神，他们过度的追求设计模式以至都都忘了需求是什么，结果整个系统设计被设计模式搞得乱七八糟，我们叫这种编程为“<a href="https://coolshell.cn/articles/2058.html" target="_blank">设计模式驱动编程</a>”，正如第一点所说，如果你不懂得用自己的大脑思考的话，知其然，不知所以然的话，那么你不但得不到其好处，反而受其所累。</p>
<p><strong>10）</strong><strong>Unit Testing won’t help you write good code</strong></p>
<p>准确地说，我们可以认为这是Test-Driven开发，其实，这种开发就是先写unit test case，这样的开发方式的主要目的是，为了防止你不会因为一个改动而引入Bug，但这并不会让你能写出更好的代码。这只会让你写出不会出错的代码。同第一点，这样的方法，只不过是防止<a href="https://coolshell.cn/articles/1081.html" target="_blank">糟糕的程序员</a>，而并不是让程序员或代码质量更有长进。反而，通过Unit Test会为程序员的为自己代码做辩解的一种托辞。</p>
<p>最后，顺便说一下，以前去那个敏捷的公司面试，发现那个公司的某些技术人员中毒不浅，具体表现在上述的1）9）10）观点上。</p>
<p><strong>（转载本文请注明作者和出处，请勿用于商业用途）</strong></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/21589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20977.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20765.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20276.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19612.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19464.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2424" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="196e8cfadf">
<img alt="image placeholder" >
<meta itemprop="headline" content="十条不错的编程观点">
<meta itemprop="description" content='在Stack Overflow上有这样的一个贴子《What’s  your most controversial programming opinion?》，翻译成中文就是“你认为最有争议的编程观点是什么？”，不过，在400多个主回贴，以及千把个子回贴中，好像并不是很有争议，而是令人相当的茅塞顿开，下面罗列一些，并通过我自己的经历和理解发挥了一些，希望对你有帮助。

1） The only "...'>
<meta itemprop="datePublished" content="2010-05-14T08:50:24+08:00">
<meta itemprop="dateModified" content="2010-05-14T01:58:05+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2424.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2424.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.55">
<meta itemprop="ratingCount" content="49">
</div>
</div>
<div id="post-ratings-2424-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-14T08:50:24+08:00</pubDate>
<guid>https://coolshell.cn/articles/2424.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 如何管理并设计你的口令 ]]></title>
<link>https://coolshell.cn/articles/2428.html</link>
<content><![CDATA[ 
<p>在互联网上，需要我们输入用户名口令的地方实在是太多了，多得都让人记不过来了，N个电子邮件帐号，QQ， MSN，校内，开心，facebook，Blog，各种论坛，网银，淘宝，电子相册……，太多了，想想看，你要用多少用户名口令，相信很多人可能会这样做，用几乎一样的口令和用户名来申请所有的这些帐号，我估计这是大多数人的做法。当然，这样一来，你就需要保管好你的用户名和口令了，因为只要被破解了，就相当于你所有的帐号被破解了，这是多数恐怖的一件事情啊。你可能觉得别人破解你的口令很难，但我告诉你也许会非常容易，因为，如果你只使用一样的用户名和口令的话，也许某天，你注册了一个不知名的小网站，可能会意味着你所有的用户名和口令都被人获取了，要小心啊。</p>
<p>对我来说，我通常会有几组组帐号和密码，</p>
<ul>
<li>一个帐号/密码是用于一些大的可以依赖的站点，如：MSN，gmail，linkedin，facebook，hotmail等，因为我相信这些站点应该可以足够信任不会出卖用户信息，也有足够的能力不会让用户信息和口令外泄。</li>
<li>一个帐号/密码用于一些国内的一些大的网站，如：QQ，开心，CSDN，Sina，网易，Blog，同学录等，因为这些站点必竟还受到国家的监管，以及其内部不良员工可能会倒卖我的信息，指不定什么时候我的用户信息就会外泄。</li>
<li>一个帐号/密码用于我的一些经济活动，如网银，淘宝，支付宝什么的。</li>
<li>最后一个帐号/密码用于登录那些必需要注册的破站点，一个最简单的用户名口令。</li>
</ul>
<p>真烦啊。在这样的一个社会里，忘记密码绝对是一件最普通不过的事情了。就算是我这样的分组归类，同样需要超强的记忆力。不知道你会不会把你的密码写在某处呢？是啊，我也是想写啊，但那岂不是相当的危险，不丢则已，一丢就全丢了。</p>
<p>今天，在国外的某论坛里看到了这样的一个设计方法，好像很不错，分享给大家。</p>
<p><span id="more-2428"></span></p>
<p>1）首先，先找一句你喜欢的话（你一辈子都记得的话），当然，只有你记得的，无论中英文，然后取各个单词或字的英文、拼音、五笔头一个字母。比如：<strong>I</strong> <strong>L</strong>ike <strong>L</strong>ong <strong>C</strong>omplicated <strong>P</strong>asswords, <strong>T</strong>hey <strong>C</strong>onfuse <strong>P</strong>eople，取头一个字母则成为了：<strong>illcptcp</strong>。中文的——“信春哥得永生”的五笔的第一个字母是：<strong>wdstyt</strong>。这个东西只有你自己知道，就算是别人看到明码，也很难马上记下来，是吧。</p>
<p>2）加上一些数字吧，比如你的生日，学号，电话，纪念日等。比如世界末日：2012年的12月21日(我们只取12月21日)。把这些数字加在断句的地方，于是得到这样的口令：<strong>illcp12tcp21 </strong>或是 <strong>wds12tyt21</strong>。</p>
<p>3）我们把第二步得到的口令叫基本口令。然后你可以在其前后(或是中间)加上站点的简称（用大写）。如：</p>
<ul>
<li>gmail：<strong>GM</strong><strong>illcp12tcp21</strong>
</li>
<li>CSDN：<strong>CS</strong><strong>wds12tyt21DN</strong>
</li>
<li>MSN<strong><span style="font-weight: normal;">：</span><strong>illcp12tcp21MSN</strong></strong>
</li>
<li><strong><span style="font-weight: normal;">QQ：</span><strong>Q<strong>wds12tyt21Q</strong></strong></strong></li>
</ul>
<p>4）改良。你可以在上述的第2）步，在输入数字时按着Shift键，于是，你可以得到更BT的口令：<strong><a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="422b2e2e21326302362132">[email protected]</a>@! </strong>，或是在第3)步聚的前缀和后缀间加上特殊字符，如：&amp;, ＃，^等等。</p>
<p>相信这样的规则会让你的口令即不重复，又好记，而且又足够复杂。不然，你真的要去下载一个软件来记你的口令了。</p>
<p>大家不妨也说说你的口令的设计或管理方法。</p>
<p>(全文完)</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/6193.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5353.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3877.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3801.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2451.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2078.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2428" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="3169b9ee16">
<img alt="image placeholder" >
<meta itemprop="headline" content="如何管理并设计你的口令">
<meta itemprop="description" content="在互联网上，需要我们输入用户名口令的地方实在是太多了，多得都让人记不过来了，N个电子邮件帐号，QQ， MSN，校内，开心，facebook，Blog，各种论坛，网银，淘宝，电子相册……，太多了，想想看，你要用多少用户名口令，相信很多人可能会这样做，用几乎一样的口令和用户名来申请所有的这些帐号，我估计这是大多数人的做法。当然，这样一来，你就需要保管好你的用户名和口令了，因为只要被破解了，就相当于你所...">
<meta itemprop="datePublished" content="2010-05-18T08:42:41+08:00">
<meta itemprop="dateModified" content="2011-12-21T23:17:00+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2428.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2428.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.43">
<meta itemprop="ratingCount" content="30">
</div>
</div>
<div id="post-ratings-2428-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-18T08:42:41+08:00</pubDate>
<guid>https://coolshell.cn/articles/2428.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 碰触，合作和团队绩效 ]]></title>
<link>https://coolshell.cn/articles/2440.html</link>
<content><![CDATA[ 
<p>公司有时候会举行团队建设活动，让大家出去跋山涉水，一起做有肢体接触游戏（例如用废报纸和胶布搭建一个能把所有人容下的遮阳棚）。这其中是有道理的。</p>
<p>今日读到一篇加州伯克利大学的文章 <a href="http://ist-socrates.berkeley.edu/~keltner/publications/kraus.huang.keltner.2010.pdf">touch, cooperation, and performance</a>, 用科学的研究方法解释了为什么NBA球员们为什么要“high five（击掌）”，并用统计方法论证了碰触行为可以导致更好的比赛成绩。其实想想，其实人们握手，鼓励式地拍肩膀，引导别人进门的时候好客地推别人的背，道理都是一样。身体接触（符合社交礼仪范围的）是建立信任的一种微妙行为。这些大多不会写在领导力的书里。</p>
<p>猴子之间互相捉虱子梳理毛发不是为了营养，而是增进群体的凝聚力。人类口头上的语言的第一功能不是为了表达知识，而是为了促进社会联系，其内容并不需要都是重要信息。这就是为什么我们一天之内说话内容的80%其实都是扯淡，八卦和闲聊。</p>
<p>（注意：职场上有社交礼仪，此方法需要适度）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3100.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11021.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/599.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/169.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/528.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8767.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2440" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="eb4a1795f1">
<img alt="image placeholder" >
<meta itemprop="headline" content="碰触，合作和团队绩效">
<meta itemprop="description" content="公司有时候会举行团队建设活动，让大家出去跋山涉水，一起做有肢体接触游戏（例如用废报纸和胶布搭建一个能把所有人容下的遮阳棚）。这其中是有道理的。

今日读到一篇加州伯克利大学的文章 touch, cooperation, and performance, 用科学的研究方法解释了为什么NBA球员们为什么要“high five（击掌）”，并用统计方法论证了碰触行为可以导致更好的比赛成绩。其实想想，其...">
<meta itemprop="datePublished" content="2010-05-19T08:40:39+08:00">
<meta itemprop="dateModified" content="2010-05-19T00:46:35+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2440.html">
<meta itemprop="author" content="mailper">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2440.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.44">
<meta itemprop="ratingCount" content="9">
</div>
</div>
<div id="post-ratings-2440-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-19T08:40:39+08:00</pubDate>
<guid>https://coolshell.cn/articles/2440.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 黑客的价值观 ]]></title>
<link>https://coolshell.cn/articles/2439.html</link>
<content><![CDATA[ 
<p>黑客，可能在大家的眼里是那些入侵别人计算机搞破坏的人，其实并不是那样的。如果你这样认为了，只能说明你对计算机文化并不了解，真正的黑客是一种自由的象征，他们挑战权威，追求自由，并和很多非人类的行为作斗争。如果你想了解黑客文化，你一定要去看看我写的《Unix传奇，<a href="https://coolshell.cn/articles/2322.html" target="_blank">上篇</a>，<a href="https://coolshell.cn/articles/2324.html" target="_blank">下篇</a>》。你会对正宗的计算机文化以及黑客文化有所了解的。而那些只懂得入侵别人计算机搞破坏活动的“黑客”只能称为是街头的小混混，他们根本就不配称黑客。</p>
<p>下面有四篇关于“Hacker’s Code”文章，我觉得相当的不错，可以让你明白什么是黑客的行为规范，道德准则，以及黑客的历史使命，希望能对你有启发。但是翻译水平有限，所以我请<strong><a href="https://coolshell.cn/?author=3" target="_blank">Mailper</a><span style="font-weight: normal;">同学帮忙翻译了一下，但还是觉得原文更为传神，尤其是原文中的押韵，双意以及朗朗上口，所以，下面提供了中英文对照。如果有翻译得不好的还请大家指正。</span></strong></p>
<p><strong><span style="font-weight: normal;"> </span></strong></p>
<h1 style="text-align: center;">The Hacker’s Code</h1>
<p style="text-align: center;"><a href="http://muq.org/~cynbe/hackers-code.html" target="_blank">http://muq.org/~cynbe/hackers-code.htm</a>l</p>
<p><em>“A hacker of the Old Code.”</em></p>
<ul>
<li>Hackers come and go, but a great hack is forever.<br>
黑客们来来往往，但是只有黑客的壮举是永存的</li>
</ul>
<ul>
<li>Public goods belong to the public.<strong>*</strong><br>
公众的东西是属于大众的</li>
</ul>
<ul>
<li>Software hoarding is evil.<br>
Software does the greatest good given to the greatest number.<br>
圈养软件是邪恶的，最好的软件是有最多人使用的</li>
</ul>
<p><span id="more-2439"></span></p>
<ul>
<li>Don’t be evil.<br>
不作恶</li>
</ul>
<ul>
<li>Sourceless software sucks.<br>
不公开源码的软件是令人厌恶的</li>
</ul>
<ul>
<li>People have rights.<br>
Organizations live on sufferance.<br>
每个人都是有权利的，而组织是建立在互相的容忍上的</li>
</ul>
<ul>
<li>Governments are organizations.<br>
政府也是组织</li>
</ul>
<ul>
<li>If it is wrong when citizens do it,<br>
it is wrong when governments do it.<br>
对与错的标准，对于公民和政府是同样适用的。(不能“只许州官放火不许百姓点灯”)</li>
</ul>
<ul>
<li>Information wants to be free.<br>
Information <em>deserves</em> to be free.<br>
信息需要自由（免费），信息也应该是是自由（免费）的</li>
</ul>
<ul>
<li>Being legal doesn’t make it right.Being illegal doesn’t make it wrong.<br>
合法的不一定是正确的，不合法不一定就是错误的</li>
</ul>
<ul>
<li>Subverting tyranny is the highest duty.<br>
推翻专制是黑客的最高天职</li>
</ul>
<ul>
<li>Trust your technolust!<br>
相信你的“技术贪欲”</li>
</ul>
<p><span>* <strong>Definition</strong>:<em> A good is <strong>public</strong> if the marginal production cost is lower than the marginal billing cost.<br>
<strong><span style="font-style: normal;">定义</span></strong>： </em>一个好的公众事物仅当其边际产值小于其边际广告值。（<span style="font-size: 13px;">关于<em> marginal production</em>是一个经济学术语，我不是很懂，大家可以参考<a href="https://hi.baidu.com/loftyambition/blog/item/90c586df69909f1b6227980b.html" target="_blank">这篇文章</a>）</span></span></p>
<p><span><span style="font-size: 13px;"> </span></span></p>
<p><span><span style="font-size: 13px;"> </span></span></p>
<h1 style="text-align: center;"><strong>The Hacker’s Code of Ethics</strong></h1>
<p style="text-align: center;"><a href="http://courses.cs.vt.edu/cs3604/lib/WorldCodes/Hackers.Code.html" target="_blank">http://courses.cs.vt.edu/cs3604/lib/WorldCodes/Hackers.Code.html</a></p>
<p>Levy (1984) suggests that there is a “code of ethics” for hacking which, though not pasted on the walls, is in the air:</p>
<p>列维认为黑客有一种准则，这种准则不是墙上贴着的，而是像空气一样无处不在的。</p>
<ul>
<li>Access to Computers – and anything which might teach you something about the way the world works – should be unlimited and total. Always yield to the Hands-On Imperative!<br>
计算机的使用（就像任何教会你去了解这个世界的东西一样）应该是无限和无所不包的。真理来自实际动手操作。</li>
</ul>
<ul>
<li>All information should be free.<br>
所有的信息都应该是自由的（免费和不加限制的）</li>
</ul>
<ul>
<li>Mistrust Authority – Promote Decentralization.<br>
不要相信权威，推崇分权和群众的智慧</li>
</ul>
<ul>
<li>Hackers should be judged by their hacking, not bogus criteria such as degrees, age, race, or position.<br>
英雄（黑客）不问出处，更不会去计较世俗的标准：学历，年龄，种族和职位高低。</li>
</ul>
<ul>
<li>You can create art and beauty on a computer.<br>
黑客可以在计算机上创造艺术和美。</li>
</ul>
<ul>
<li>Computers can change your life for the better.<br>
计算机可以提升你的生命。</li>
</ul>
<p><strong>Reference:</strong></p>
<p>Levy, Steven. 1984. Hackers: Heroes of the Computer Revolution, Anchor Press/Doubleday, Garden City, NY, 458 pp.</p>
<p>史蒂芬.列维 1984  黑客：计算机革命的英豪们， Achor Press… 第458页</p>
<h1 style="text-align: center;">
<span style="color: green;">DRAFT</span> The Hacker’s Code <span style="color: green;">DRAFT</span>
</h1>
<p style="text-align: center;"><a href="http://www.petascale.org/code/code.html" target="_blank"><span style="font-weight: normal;">http://www.petascale.org/code/code.html</span></a></p>
<p>Preamble: We, the people of the electronic universe, in order to establish a society of knowledge and skills, do hereby proclaim the following.</p>
<p>导言：我们，数字领域的主宰者，为了建一个知识和技术的社区，我们发出下面的声明。</p>
<p>Hackers are diverse, from all cultures and backgrounds. Every hacker is unique, yet we all share some characteristics. While not every hacker follows this Code, many believe it is a fair description of our shared traditions, goals and values.</p>
<p>黑客是各式各样的，无论是从文化还是背景。每个黑客都是唯一的，然后，我们是有一些相同的特质的。也许并不是所有的黑客都会跟从下面的准则，但大多数黑客都相信这是一个公正的惯例，目标和价值观。</p>
<ul>
<li>Hackers share and are willing to teach their knowledge<br>
黑客共享并愿意传播他们的知识。</li>
</ul>
<ul>
<li>Hackers are skilled. Many are self-taught, or learn by interacting with other hackers.<br>
黑客都是老手。他们中很多人要么是自学，要么是与别的黑客相互共世而成长的。</li>
</ul>
<ul>
<li>Hackers seek knowledge. This knowledge may come from unauthorized or unusual sources, and is often hidden.<br>
黑客查找知识。那些知识可能是多一些未授权或是不寻常的通常都是被隐藏起来的地方来的。</li>
</ul>
<ul>
<li>Hackers are tinkerers. They like to understand how things work, and want to make their own improvements or modifications.<br>
黑客都是些好管闲事的人。他们总是喜欢对事物刨根问底，而且总是要为改善那些事情加上自己的想法。</li>
</ul>
<ul>
<li>Hackers often disagree with authority, including parents, employers, social customs and laws. They often seek to circumvent authority they disagree with.<br>
黑客通常都在挑战权威，包括家长，同事，用户以及法律。他们总是挑战那些他们并不认可以权威。</li>
</ul>
<ul>
<li>Hackers disagree with each other. Different hackers have different values, and come from all backgrounds. This means that what one hacker is opposed to might be embraced by another.<br>
黑客也是互不信任的。不同的黑客有不同的价值取向，而且也有相同的背景。也就是说，某个黑客被反对了，但也会被别的黑客所拥护。</li>
</ul>
<ul>
<li>Hackers are persistent, and are willing to devote hours, days and years to pursuing their individual passions.<br>
黑客是永不放弃的。他们愿意全身心地把他们的热情投入到每一个小时，每一天，每一年中。</li>
</ul>
<ul>
<li>This Code is not to prescribe how hackers act. Instead, it is to help us to recognize our own diversity and identify.<br>
准则并不是说明黑客是什么样的，而说让我们明白我们的不同性和一致性。</li>
</ul>
<ul>
<li>Every hacker must make his or her own decisions about what is right or wrong, and some might do things they believe are illegal, amoral or anti-social to achieve higher goals.<br>
每一个黑客必需自己为对和错作决定，有一些事可能是不合法，不道德的，甚至反社会的，但却可以让他们攀上自己价值观的高峰。</li>
</ul>
<ul>
<li>Hackers’ motivations are their own, and there is no reason for all hackers to agree.<br>
黑客的动机是他们自己的，而且无需任何理由获得其它的同意。</li>
</ul>
<ul>
<li>Hackers have a shared identify, however, and many shared interests.<br>
黑客一般会有共同的认识，然而，许多黑客却是拥有共同的利益。</li>
</ul>
<ul>
<li>By reading this Code, hackers can recognize themselves and each other, and understand better the group they are a part of. This will be beneficial to all hackers.<br>
了解了这些准则，黑客们能够赏识自己或相互赏识，并相当明白他们是这个团体的一部分。这会让所有的黑客受益。</li>
</ul>
<h1 style="text-align: center;">The Conscience of a Hacker</h1>
<p style="text-align: center;"><a href="http://www.phrack.org/issues.html?issue=7&amp;id=3&amp;mode=html">http://www.phrack.org/issues.html?issue=7&amp;id=3&amp;mode=html</a></p>
<p>##=========================================</p>
<p>\/\The Conscience of a Hacker/\/</p>
<p>by</p>
<p>+++The Mentor+++</p>
<p>笔名：导师</p>
<p>Written on January 8, 1986</p>
<p>=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=</p>
<p>Another one got caught today, it’s all over the papers.  “Teenager Arrested in Computer Crime Scandal”, “Hacker Arrested after Bank Tampering”… Damn kids.  They’re all alike.</p>
<p>今天有一个被捕的消息受到媒体热议。“某少年由于计算机犯罪被捕”，“入侵银行的黑客被捕”…一帮臭小子，他们都一样。</p>
<p>But did you, in your three-piece psychology and 1950’s technobrain, ever take a look behind the eyes of the hacker?  Did you ever wonder what made him tick, what forces shaped him, what may have molded him?</p>
<p>但是你们是帮老朽只知道老套的心理学和50年代的技术。你们有没有想想黑客究竟在想什么？你们有没有想想他们为什么这么做，什么造就了他们，什么塑造了这帮黑客？</p>
<p>I am a hacker, enter my world…</p>
<p>我是名黑客，请走进我的世界…</p>
<p>Mine is a world that begins with school… I’m smarter than most of the other kids, this crap they teach us bores me…</p>
<p>我的世界是从学校开始的…我是学校里最聪明的孩子，学校教我的垃圾让我厌倦。</p>
<p>Damn underachiever.  They’re all alike.</p>
<p>都他妈的水货，这帮子成绩不好的都一样烂。</p>
<p>I’m in junior high or high school.  I’ve listened to teachers explain for the fifteenth time how to reduce a fraction.  I understand it.  “No, Ms. Smith, I didn’t show my work.  I did it in my head…”</p>
<p>我初中高中时候就是如此了。白痴老师一个分式化简要解释15次。这些我全懂。所以我说”不用了，XX老师，我不用写这些步骤，我可以心算…”</p>
<p>Damn kid.  Probably copied it.  They’re all alike.</p>
<p>一帮傻同学，估计都只知道抄写老师的板书，一棒子二百五。</p>
<p>I made a discovery today.  I found a computer.  Wait a second, this is cool.  It does what I want it to.  If it makes a mistake, it’s because I screwed it up.  Not because it doesn’t like me…</p>
<p>今天我发现新大陆了。我遇到了一台计算机。真是太酷了，计算机完全按照我的指令执行。如果计算机犯了错，是因为我没搞对。而不是因为它不喜欢我…</p>
<p>Or feels threatened by me…</p>
<p>也不是觉得我成绩太好到威胁它了，也不是因为我是个自是聪明自以为是，而且不对我教条主义</p>
<p>Or thinks I’m a smart ass…</p>
<p>Or doesn’t like teaching and shouldn’t be here…</p>
<p>Damn kid.  All he does is play games.  They’re all alike.</p>
<p>而我的一帮傻逼同学，都他妈只知道玩。</p>
<p>And then it happened… a door opened to a world… rushing through the phone line like heroin through an addict’s veins, an electronic pulse is sent out, a refuge from the day-to-day incompetencies is sought… a board is found.</p>
<p>突然，与计算机相处为我打开了一扇通往另一个世界的门。一股电脉冲从电话线传送出去，就好像海洛因冲过毒瘾者的血脉，我可以逃离那帮子傻逼，一个新大陆！</p>
<p>“This is it… this is where I belong…”</p>
<p>是的！计算机是我的归属。</p>
<p>I know everyone here… even if I’ve never met them, never talked to them, may never hear from them again… I know you all…</p>
<p>在这个世界里，我认识这里的每一个人…虽然我并没有跟他们见面，没跟他们交谈，也许以后也不会再提到他们的消息。但是他们对我是那么的熟悉。</p>
<p>Damn kid.  Tying up the phone line again.  They’re all alike…</p>
<p>一棒子傻逼，大概他们又把我的电话线打结了。</p>
<p>You bet your ass we’re all alike… we’ve been spoon-fed baby food at school when we hungered for steak… the bits of meat that you did let slip through were pre-chewed and tasteless.  We’ve been dominated by sadists, or ignored by the apathetic.  The few that had something to teach found us willing pupils, but those few are like drops of water in the desert.</p>
<p>是的，我们黑客都差不多…我们智力高度成熟，我们想啃牛排的时候只有被喂婴儿食物。好不容易有点肉吃，也是被嚼烂了的。我们被虐待狂欺负，被冷漠者漠视。偶尔有好人理解我们其实是最好学的学生，但是这种人少得跟沙漠中的水滴一样。</p>
<p>This is our world now… the world of the electron and the switch, the beauty of the baud.  We make use of a service already existing without paying for what could be dirt-cheap if it wasn’t run by profiteering gluttons, and you call us criminals.  We explore… and you call us criminals.  We seek after knowledge… and you call us criminals.  We exist without skin color, without nationality, without religious bias… and you call us criminals.</p>
<p>You build atomic bombs, you wage wars, you murder, cheat, and lie to us and try to make us believe it’s for our own good, yet we’re the criminals.</p>
<p>我们这些黑客长大了…这个世界充满着电子，开关，和美丽的波特（信号传输单位）。我们并不是在犯罪，我们只是在免费使用服务，这些服务要不是因为那些敛财狂本可以是非常廉价的。我们在探索…可你们说我们是在犯罪。我们是在寻求知识…可你们说我们是在犯罪。我们黑客无处不在，不分肤色，没有国界，没有宗教偏见…可你们说我们是在犯罪。你们这些伪君子制造了原子弹，发动战争，某战争，不忠，并且对我们说谎；你们居然说你们的行径是为我们好，而我们黑客是犯罪分子。</p>
<p>Yes, I am a criminal.  My crime is that of curiosity.  My crime is that of judging people by what they say and think, not what they look like. My crime is that of outsmarting you, something that you will never forgive me for.</p>
<p>好吧，我是犯罪分子。我所犯的最是好奇心。我的罪过是基于一个人的言行评判一个人，而不是他的长相。我的罪过是我比你聪明，而你大概永远不会原谅我比你聪明。</p>
<p>I am a hacker, and this is my manifesto.  You may stop this individual, but you can’t stop us all… after all, we’re all alike.</p>
<p>我是一名黑客，以上是我的宣言。你可以制止一个个体，但是你阻止不了我们全部…因为，我们黑客都一样。</p>
<p>+++The Mentor+++</p>
<p>署名：导师</p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/21589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20977.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20765.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20276.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19612.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19464.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2439" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="36afefceba">
<img alt="image placeholder" >
<meta itemprop="headline" content="黑客的价值观">
<meta itemprop="description" content="黑客，可能在大家的眼里是那些入侵别人计算机搞破坏的人，其实并不是那样的。如果你这样认为了，只能说明你对计算机文化并不了解，真正的黑客是一种自由的象征，他们挑战权威，追求自由，并和很多非人类的行为作斗争。如果你想了解黑客文化，你一定要去看看我写的《Unix传奇，上篇，下篇》。你会对正宗的计算机文化以及黑客文化有所了解的。而那些只懂得入侵别人计算机搞破坏活动的“黑客”只能称为是街头的小混混，他们根本就...">
<meta itemprop="datePublished" content="2010-05-19T08:50:50+08:00">
<meta itemprop="dateModified" content="2010-05-19T00:15:13+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2439.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2439.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.38">
<meta itemprop="ratingCount" content="13">
</div>
</div>
<div id="post-ratings-2439-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-19T08:50:50+08:00</pubDate>
<guid>https://coolshell.cn/articles/2439.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Twitter的禁用口令 ]]></title>
<link>https://coolshell.cn/articles/2451.html</link>
<content><![CDATA[ 
<p>打开Twitter的注册页面，<a href="https://twitter.com/signup" target="_blank">https://twitter.com/signup</a>，查看一下源码，你会看到一个很长的禁用口令列表（见本文最下面），其中的某些口令的确很雷人。你可以参看本站的《<a title="如何管理并设计你的口令" href="https://coolshell.cn/articles/2428.html">如何管理并设计你的口令</a>》来设计和管理你的口令。其中的某些口令需要向你解释一下：</p>
<ul>
<li>
<strong>ncc1701</strong> 这是星际迷航中的战舰号。</li>
<li>
<strong>thx1138</strong> 这是乔治卢卡斯的第一个电影，1971年，其学生时代的作品。</li>
<li>
<strong>qazwsx</strong> 这是键盘的布局顺序键。</li>
<li>
<strong>666666</strong> 这是6个6</li>
<li>
<strong>7777777</strong> 这是7个7</li>
<li>
<strong>ou812</strong> 这是1988范 海伦Van Halen 专辑</li>
<li>
<strong>8675309</strong> 这是 1982 Tommy Tutone song歌中提到的数字。这首歌导致人们开始播打电话867- 5309 寻找 “Jenny”</li>
</ul>
<p>经过统计，9个人里就有1个人会使用下面这个列表中的一个口令，而50个人就会有1个人使用top 20里的一个口令。你可能会问，top20是怎么来的？而twitter这个列表又是哪里来的？请看下面的表格。这是top 500最烂的口令列表。其来源是<a href="http://www.whatsmypass.com/the-top-500-worst-passwords-of-all-time" target="_blank">这里</a>。</p>
<p><span id="more-2451"></span></p>
<table>
<tbody>
<tr>
<td>NO</td>
<td>Top 1-100</td>
<td>Top 101–200</td>
<td>Top 201–300</td>
<td>Top 301–400</td>
<td>Top 401–500</td>
</tr>
<tr>
<td>1</td>
<td>123456</td>
<td>porsche</td>
<td>firebird</td>
<td>prince</td>
<td>rosebud</td>
</tr>
<tr>
<td>2</td>
<td>password</td>
<td>guitar</td>
<td>butter</td>
<td>beach</td>
<td>jaguar</td>
</tr>
<tr>
<td>3</td>
<td>12345678</td>
<td>chelsea</td>
<td>united</td>
<td>amateur</td>
<td>great</td>
</tr>
<tr>
<td>4</td>
<td>1234</td>
<td>black</td>
<td>turtle</td>
<td>7777777</td>
<td>cool</td>
</tr>
<tr>
<td>5</td>
<td>pussy</td>
<td>diamond</td>
<td>steelers</td>
<td>muffin</td>
<td>cooper</td>
</tr>
<tr>
<td>6</td>
<td>12345</td>
<td>nascar</td>
<td>tiffany</td>
<td>redsox</td>
<td>1313</td>
</tr>
<tr>
<td>7</td>
<td>dragon</td>
<td>jackson</td>
<td>zxcvbn</td>
<td>star</td>
<td>scorpio</td>
</tr>
<tr>
<td>8</td>
<td>qwerty</td>
<td>cameron</td>
<td>tomcat</td>
<td>testing</td>
<td>mountain</td>
</tr>
<tr>
<td>9</td>
<td>696969</td>
<td>654321</td>
<td>golf</td>
<td>shannon</td>
<td>madison</td>
</tr>
<tr>
<td>10</td>
<td>mustang</td>
<td>computer</td>
<td>bond007</td>
<td>murphy</td>
<td>987654</td>
</tr>
<tr>
<td>11</td>
<td>letmein</td>
<td>amanda</td>
<td>bear</td>
<td>frank</td>
<td>brazil</td>
</tr>
<tr>
<td>12</td>
<td>baseball</td>
<td>wizard</td>
<td>tiger</td>
<td>hannah</td>
<td>lauren</td>
</tr>
<tr>
<td>13</td>
<td>master</td>
<td>xxxxxxxx</td>
<td>doctor</td>
<td>dave</td>
<td>japan</td>
</tr>
<tr>
<td>14</td>
<td>michael</td>
<td>money</td>
<td>gateway</td>
<td>eagle1</td>
<td>naked</td>
</tr>
<tr>
<td>15</td>
<td>football</td>
<td>phoenix</td>
<td>gators</td>
<td>11111</td>
<td>squirt</td>
</tr>
<tr>
<td>16</td>
<td>shadow</td>
<td>mickey</td>
<td>angel</td>
<td>mother</td>
<td>stars</td>
</tr>
<tr>
<td>17</td>
<td>monkey</td>
<td>bailey</td>
<td>junior</td>
<td>nathan</td>
<td>apple</td>
</tr>
<tr>
<td>18</td>
<td>abc123</td>
<td>knight</td>
<td>thx1138</td>
<td>raiders</td>
<td>alexis</td>
</tr>
<tr>
<td>19</td>
<td>pass</td>
<td>iceman</td>
<td>porno</td>
<td>steve</td>
<td>aaaa</td>
</tr>
<tr>
<td>20</td>
<td>fuckme</td>
<td>tigers</td>
<td>badboy</td>
<td>forever</td>
<td>bonnie</td>
</tr>
<tr>
<td>21</td>
<td>6969</td>
<td>purple</td>
<td>debbie</td>
<td>angela</td>
<td>peaches</td>
</tr>
<tr>
<td>22</td>
<td>jordan</td>
<td>andrea</td>
<td>spider</td>
<td>viper</td>
<td>jasmine</td>
</tr>
<tr>
<td>23</td>
<td>harley</td>
<td>horny</td>
<td>melissa</td>
<td>ou812</td>
<td>kevin</td>
</tr>
<tr>
<td>24</td>
<td>ranger</td>
<td>dakota</td>
<td>booger</td>
<td>jake</td>
<td>matt</td>
</tr>
<tr>
<td>25</td>
<td>iwantu</td>
<td>aaaaaa</td>
<td>1212</td>
<td>lovers</td>
<td>qwertyui</td>
</tr>
<tr>
<td>26</td>
<td>jennifer</td>
<td>player</td>
<td>flyers</td>
<td>suckit</td>
<td>danielle</td>
</tr>
<tr>
<td>27</td>
<td>hunter</td>
<td>sunshine</td>
<td>fish</td>
<td>gregory</td>
<td>beaver</td>
</tr>
<tr>
<td>28</td>
<td>fuck</td>
<td>morgan</td>
<td>porn</td>
<td>buddy</td>
<td>4321</td>
</tr>
<tr>
<td>29</td>
<td>2000</td>
<td>starwars</td>
<td>matrix</td>
<td>whatever</td>
<td>4128</td>
</tr>
<tr>
<td>30</td>
<td>test</td>
<td>boomer</td>
<td>teens</td>
<td>young</td>
<td>runner</td>
</tr>
<tr>
<td>31</td>
<td>batman</td>
<td>cowboys</td>
<td>scooby</td>
<td>nicholas</td>
<td>swimming</td>
</tr>
<tr>
<td>32</td>
<td>trustno1</td>
<td>edward</td>
<td>jason</td>
<td>lucky</td>
<td>dolphin</td>
</tr>
<tr>
<td>33</td>
<td>thomas</td>
<td>charles</td>
<td>walter</td>
<td>helpme</td>
<td>gordon</td>
</tr>
<tr>
<td>34</td>
<td>tigger</td>
<td>girls</td>
<td>cumshot</td>
<td>jackie</td>
<td>casper</td>
</tr>
<tr>
<td>35</td>
<td>robert</td>
<td>booboo</td>
<td>boston</td>
<td>monica</td>
<td>stupid</td>
</tr>
<tr>
<td>36</td>
<td>access</td>
<td>coffee</td>
<td>braves</td>
<td>midnight</td>
<td>shit</td>
</tr>
<tr>
<td>37</td>
<td>love</td>
<td>xxxxxx</td>
<td>yankee</td>
<td>college</td>
<td>saturn</td>
</tr>
<tr>
<td>38</td>
<td>buster</td>
<td>bulldog</td>
<td>lover</td>
<td>baby</td>
<td>gemini</td>
</tr>
<tr>
<td>39</td>
<td>1234567</td>
<td>ncc1701</td>
<td>barney</td>
<td>cunt</td>
<td>apples</td>
</tr>
<tr>
<td>40</td>
<td>soccer</td>
<td>rabbit</td>
<td>victor</td>
<td>brian</td>
<td>august</td>
</tr>
<tr>
<td>41</td>
<td>hockey</td>
<td>peanut</td>
<td>tucker</td>
<td>mark</td>
<td>3333</td>
</tr>
<tr>
<td>42</td>
<td>killer</td>
<td>john</td>
<td>princess</td>
<td>startrek</td>
<td>canada</td>
</tr>
<tr>
<td>43</td>
<td>george</td>
<td>johnny</td>
<td>mercedes</td>
<td>sierra</td>
<td>blazer</td>
</tr>
<tr>
<td>44</td>
<td>sexy</td>
<td>gandalf</td>
<td>5150</td>
<td>leather</td>
<td>cumming</td>
</tr>
<tr>
<td>45</td>
<td>andrew</td>
<td>spanky</td>
<td>doggie</td>
<td>232323</td>
<td>hunting</td>
</tr>
<tr>
<td>46</td>
<td>charlie</td>
<td>winter</td>
<td>zzzzzz</td>
<td>4444</td>
<td>kitty</td>
</tr>
<tr>
<td>47</td>
<td>superman</td>
<td>brandy</td>
<td>gunner</td>
<td>beavis</td>
<td>rainbow</td>
</tr>
<tr>
<td>48</td>
<td>asshole</td>
<td>compaq</td>
<td>horney</td>
<td>bigcock</td>
<td>112233</td>
</tr>
<tr>
<td>49</td>
<td>fuckyou</td>
<td>carlos</td>
<td>bubba</td>
<td>happy</td>
<td>arthur</td>
</tr>
<tr>
<td>50</td>
<td>dallas</td>
<td>tennis</td>
<td>2112</td>
<td>sophie</td>
<td>cream</td>
</tr>
<tr>
<td>51</td>
<td>jessica</td>
<td>james</td>
<td>fred</td>
<td>ladies</td>
<td>calvin</td>
</tr>
<tr>
<td>52</td>
<td>panties</td>
<td>mike</td>
<td>johnson</td>
<td>naughty</td>
<td>shaved</td>
</tr>
<tr>
<td>53</td>
<td>pepper</td>
<td>brandon</td>
<td>xxxxx</td>
<td>giants</td>
<td>surfer</td>
</tr>
<tr>
<td>54</td>
<td>1111</td>
<td>fender</td>
<td>tits</td>
<td>booty</td>
<td>samson</td>
</tr>
<tr>
<td>55</td>
<td>austin</td>
<td>anthony</td>
<td>member</td>
<td>blonde</td>
<td>kelly</td>
</tr>
<tr>
<td>56</td>
<td>william</td>
<td>blowme</td>
<td>boobs</td>
<td>fucked</td>
<td>paul</td>
</tr>
<tr>
<td>57</td>
<td>daniel</td>
<td>ferrari</td>
<td>donald</td>
<td>golden</td>
<td>mine</td>
</tr>
<tr>
<td>58</td>
<td>golfer</td>
<td>cookie</td>
<td>bigdaddy</td>
<td>0</td>
<td>king</td>
</tr>
<tr>
<td>59</td>
<td>summer</td>
<td>chicken</td>
<td>bronco</td>
<td>fire</td>
<td>racing</td>
</tr>
<tr>
<td>60</td>
<td>heather</td>
<td>maverick</td>
<td>penis</td>
<td>sandra</td>
<td>5555</td>
</tr>
<tr>
<td>61</td>
<td>hammer</td>
<td>chicago</td>
<td>voyager</td>
<td>pookie</td>
<td>eagle</td>
</tr>
<tr>
<td>62</td>
<td>yankees</td>
<td>joseph</td>
<td>rangers</td>
<td>packers</td>
<td>hentai</td>
</tr>
<tr>
<td>63</td>
<td>joshua</td>
<td>diablo</td>
<td>birdie</td>
<td>einstein</td>
<td>newyork</td>
</tr>
<tr>
<td>64</td>
<td>maggie</td>
<td>sexsex</td>
<td>trouble</td>
<td>dolphins</td>
<td>little</td>
</tr>
<tr>
<td>65</td>
<td>biteme</td>
<td>hardcore</td>
<td>white</td>
<td>0</td>
<td>redwings</td>
</tr>
<tr>
<td>66</td>
<td>enter</td>
<td>666666</td>
<td>topgun</td>
<td>chevy</td>
<td>smith</td>
</tr>
<tr>
<td>67</td>
<td>ashley</td>
<td>willie</td>
<td>bigtits</td>
<td>winston</td>
<td>sticky</td>
</tr>
<tr>
<td>68</td>
<td>thunder</td>
<td>welcome</td>
<td>bitches</td>
<td>warrior</td>
<td>cocacola</td>
</tr>
<tr>
<td>69</td>
<td>cowboy</td>
<td>chris</td>
<td>green</td>
<td>sammy</td>
<td>animal</td>
</tr>
<tr>
<td>70</td>
<td>silver</td>
<td>panther</td>
<td>super</td>
<td>slut</td>
<td>broncos</td>
</tr>
<tr>
<td>71</td>
<td>richard</td>
<td>yamaha</td>
<td>qazwsx</td>
<td>8675309</td>
<td>private</td>
</tr>
<tr>
<td>72</td>
<td>fucker</td>
<td>justin</td>
<td>magic</td>
<td>zxcvbnm</td>
<td>skippy</td>
</tr>
<tr>
<td>73</td>
<td>orange</td>
<td>banana</td>
<td>lakers</td>
<td>nipples</td>
<td>marvin</td>
</tr>
<tr>
<td>74</td>
<td>merlin</td>
<td>driver</td>
<td>rachel</td>
<td>power</td>
<td>blondes</td>
</tr>
<tr>
<td>75</td>
<td>michelle</td>
<td>marine</td>
<td>slayer</td>
<td>victoria</td>
<td>enjoy</td>
</tr>
<tr>
<td>76</td>
<td>corvette</td>
<td>angels</td>
<td>scott</td>
<td>asdfgh</td>
<td>girl</td>
</tr>
<tr>
<td>77</td>
<td>bigdog</td>
<td>fishing</td>
<td>2222</td>
<td>vagina</td>
<td>apollo</td>
</tr>
<tr>
<td>78</td>
<td>cheese</td>
<td>david</td>
<td>asdf</td>
<td>toyota</td>
<td>parker</td>
</tr>
<tr>
<td>79</td>
<td>matthew</td>
<td>maddog</td>
<td>video</td>
<td>travis</td>
<td>qwert</td>
</tr>
<tr>
<td>80</td>
<td>121212</td>
<td>hooters</td>
<td>london</td>
<td>hotdog</td>
<td>time</td>
</tr>
<tr>
<td>81</td>
<td>patrick</td>
<td>wilson</td>
<td>7777</td>
<td>paris</td>
<td>sydney</td>
</tr>
<tr>
<td>82</td>
<td>martin</td>
<td>butthead</td>
<td>marlboro</td>
<td>rock</td>
<td>women</td>
</tr>
<tr>
<td>83</td>
<td>freedom</td>
<td>dennis</td>
<td>srinivas</td>
<td>xxxx</td>
<td>voodoo</td>
</tr>
<tr>
<td>84</td>
<td>ginger</td>
<td>fucking</td>
<td>internet</td>
<td>extreme</td>
<td>magnum</td>
</tr>
<tr>
<td>85</td>
<td>blowjob</td>
<td>captain</td>
<td>action</td>
<td>redskins</td>
<td>juice</td>
</tr>
<tr>
<td>86</td>
<td>nicole</td>
<td>bigdick</td>
<td>carter</td>
<td>erotic</td>
<td>abgrtyu</td>
</tr>
<tr>
<td>87</td>
<td>sparky</td>
<td>chester</td>
<td>jasper</td>
<td>dirty</td>
<td>777777</td>
</tr>
<tr>
<td>88</td>
<td>yellow</td>
<td>smokey</td>
<td>monster</td>
<td>ford</td>
<td>dreams</td>
</tr>
<tr>
<td>89</td>
<td>camaro</td>
<td>xavier</td>
<td>teresa</td>
<td>freddy</td>
<td>maxwell</td>
</tr>
<tr>
<td>90</td>
<td>secret</td>
<td>steven</td>
<td>jeremy</td>
<td>arsenal</td>
<td>music</td>
</tr>
<tr>
<td>91</td>
<td>dick</td>
<td>viking</td>
<td>11111111</td>
<td>access14</td>
<td>rush2112</td>
</tr>
<tr>
<td>92</td>
<td>falcon</td>
<td>snoopy</td>
<td>bill</td>
<td>wolf</td>
<td>russia</td>
</tr>
<tr>
<td>93</td>
<td>taylor</td>
<td>blue</td>
<td>crystal</td>
<td>nipple</td>
<td>scorpion</td>
</tr>
<tr>
<td>94</td>
<td>111111</td>
<td>eagles</td>
<td>peter</td>
<td>iloveyou</td>
<td>rebecca</td>
</tr>
<tr>
<td>95</td>
<td>131313</td>
<td>winner</td>
<td>pussies</td>
<td>alex</td>
<td>tester</td>
</tr>
<tr>
<td>96</td>
<td>123123</td>
<td>samantha</td>
<td>cock</td>
<td>florida</td>
<td>mistress</td>
</tr>
<tr>
<td>97</td>
<td>bitch</td>
<td>house</td>
<td>beer</td>
<td>eric</td>
<td>phantom</td>
</tr>
<tr>
<td>98</td>
<td>hello</td>
<td>miller</td>
<td>rocket</td>
<td>legend</td>
<td>billy</td>
</tr>
<tr>
<td>99</td>
<td>scooter</td>
<td>flower</td>
<td>theman</td>
<td>movie</td>
<td>6666</td>
</tr>
<tr>
<td>100</td>
<td>please</td>
<td>jack</td>
<td>oliver</td>
<td>success</td>
<td>albert</td>
</tr>
</tbody>
</table>
<p>打开twitter注册页看到的禁用口令</p>
<p>//&lt;![CDATA[ twttr.BANNED_PASSWORDS = [“000000”, “111111”, “11111111”, “112233”, “121212”, “123123”, “123456”, “1234567”, “12345678”, “123456789”, “131313”, “232323”, “654321”, “666666”, “696969”, “777777”, “7777777”, “8675309”, “987654”, “aaaaaa”, “abc123”, “abc123”, “abcdef”, “abgrtyu”, “access”, “access14”, “action”, “albert”, “alberto”, “alexis”, “alejandra”, “alejandro”, “amanda”, “amateur”, “america”, “andrea”, “andrew”, “angela”, “angels”, “animal”, “anthony”, “apollo”, “apples”, “arsenal”, “arthur”, “asdfgh”, “asdfgh”, “ashley”, “asshole”, “august”, “austin”, “badboy”, “bailey”, “banana”, “barney”, “baseball”, “batman”, “beatriz”, “beaver”, “beavis”, “bigcock”, “bigdaddy”, “bigdick”, “bigdog”, “bigtits”, “birdie”, “bitches”, “biteme”, “blazer”, “blonde”, “blondes”, “blowjob”, “blowme”, “bond007”, “bonita”, “bonnie”, “booboo”, “booger”, “boomer”, “boston”, “brandon”, “brandy”, “braves”, “brazil”, “bronco”, “broncos”, “bulldog”, “buster”, “butter”, “butthead”, “calvin”, “camaro”, “cameron”, “canada”, “captain”, “carlos”, “carter”, “casper”, “charles”, “charlie”, “cheese”, “chelsea”, “chester”, “chicago”, “chicken”, “cocacola”, “coffee”, “college”, “compaq”, “computer”, “cookie”, “cooper”, “corvette”, “cowboy”, “cowboys”, “crystal”, “cumming”, “cumshot”, “dakota”, “dallas”, “daniel”, “danielle”, “debbie”, “dennis”, “diablo”, “diamond”, “doctor”, “doggie”, “dolphin”, “dolphins”, “donald”, “dragon”, “dreams”, “driver”, “eagle1”, “eagles”, “edward”, “einstein”, “erotic”, “estrella”, “extreme”, “falcon”, “fender”, “ferrari”, “firebird”, “fishing”, “florida”, “flower”, “flyers”, “football”, “forever”, “freddy”, “freedom”, “fucked”, “fucker”, “fucking”, “fuckme”, “fuckyou”, “gandalf”, “gateway”, “gators”, “gemini”, “george”, “giants”, “ginger”, “golden”, “golfer”, “gordon”, “gregory”, “guitar”, “gunner”, “hammer”, “hannah”, “hardcore”, “harley”, “heather”, “helpme”, “hentai”, “hockey”, “hooters”, “horney”, “hotdog”, “hunter”, “hunting”, “iceman”, “iloveyou”, “internet”, “iwantu”, “jackie”, “jackson”, “jaguar”, “jasmine”, “jasper”, “jennifer”, “jeremy”, “jessica”, “johnny”, “johnson”, “jordan”, “joseph”, “joshua”, “junior”, “justin”, “killer”, “knight”, “ladies”, “lakers”, “lauren”, “leather”, “legend”, “letmein”, “letmein”, “little”, “london”, “lovers”, “maddog”, “madison”, “maggie”, “magnum”, “marine”, “mariposa”, “marlboro”, “martin”, “marvin”, “master”, “matrix”, “matthew”, “maverick”, “maxwell”, “melissa”, “member”, “mercedes”, “merlin”, “michael”, “michelle”, “mickey”, “midnight”, “miller”, “mistress”, “monica”, “monkey”, “monkey”, “monster”, “morgan”, “mother”, “mountain”, “muffin”, “murphy”, “mustang”, “naked”, “nascar”, “nathan”, “naughty”, “ncc1701”, “newyork”, “nicholas”, “nicole”, “nipple”, “nipples”, “oliver”, “orange”, “packers”, “panther”, “panties”, “parker”, “password”, “password”, “password1”, “password12”, “password123”, “patrick”, “peaches”, “peanut”, “pepper”, “phantom”, “phoenix”, “player”, “please”, “pookie”, “porsche”, “prince”, “princess”, “private”, “purple”, “pussies”, “qazwsx”, “qwerty”, “qwertyui”, “rabbit”, “rachel”, “racing”, “raiders”, “rainbow”, “ranger”, “rangers”, “rebecca”, “redskins”, “redsox”, “redwings”, “richard”, “robert”, “roberto”, “rocket”, “rosebud”, “runner”, “rush2112”, “russia”, “samantha”, “sammy”, “samson”, “sandra”, “saturn”, “scooby”, “scooter”, “scorpio”, “scorpion”, “sebastian”, “secret”, “sexsex”, “shadow”, “shannon”, “shaved”, “sierra”, “silver”, “skippy”, “slayer”, “smokey”, “snoopy”, “soccer”, “sophie”, “spanky”, “sparky”, “spider”, “squirt”, “srinivas”, “startrek”, “starwars”, “steelers”, “steven”, “sticky”, “stupid”, “success”, “suckit”, “summer”, “sunshine”, “superman”, “surfer”, “swimming”, “sydney”, “tequiero”, “taylor”, “tennis”, “teresa”, “tester”, “testing”, “theman”, “thomas”, “thunder”, “thx1138”, “tiffany”, “tigers”, “tigger”, “tomcat”, “topgun”, “toyota”, “travis”, “trouble”, “trustno1”, “tucker”, “turtle”, “twitter”, “united”, “vagina”, “victor”, “victoria”, “viking”, “voodoo”, “voyager”, “walter”, “warrior”, “welcome”, “whatever”, “william”, “willie”, “wilson”, “winner”, “winston”, “winter”, “wizard”, “xavier”, “xxxxxx”, “xxxxxxxx”, “yamaha”, “yankee”, “yankees”, “yellow”, “zxcvbn”, “zxcvbnm”, “zzzzzz”];</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/6193.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5353.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3877.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3801.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2428.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2078.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2451" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="8a0cb9cc88">
<img alt="image placeholder" >
<meta itemprop="headline" content="Twitter的禁用口令">
<meta itemprop="description" content="打开Twitter的注册页面，https://twitter.com/signup，查看一下源码，你会看到一个很长的禁用口令列表（见本文最下面），其中的某些口令的确很雷人。你可以参看本站的《如何管理并设计你的口令》来设计和管理你的口令。其中的某些口令需要向你解释一下：

	ncc1701 这是星际迷航中的战舰号。
	thx1138 这是乔治卢卡斯的第一个电影，1971年，其学生时代的作品。...">
<meta itemprop="datePublished" content="2010-05-20T08:58:44+08:00">
<meta itemprop="dateModified" content="2011-12-21T23:16:52+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2451.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2451.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.57">
<meta itemprop="ratingCount" content="14">
</div>
</div>
<div id="post-ratings-2451-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-20T08:58:44+08:00</pubDate>
<guid>https://coolshell.cn/articles/2451.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Google吃豆游戏Logo的源码 ]]></title>
<link>https://coolshell.cn/articles/2466.html</link>
<content><![CDATA[ 
<p>这两天，Google的logo换成了那个经典的吃豆游戏，很强大，也引发了大众的热议。如果你想要其源代码的话，你可以到这里下载：<span style="font-family: Consolas, Monaco, 'Courier New', Courier, monospace; line-height: 18px; font-size: 14px; white-space: pre;"><a href="https://github.com/macek/google_pacman" target="_blank"><strong>http://github.com/macek/google_pacman</strong></a></span>。而在线演示在这里：<span style="font-family: Consolas, Monaco, 'Courier New', Courier, monospace; line-height: 18px; font-size: 12px; white-space: pre;"><a href="https://macek.github.com/google_pacman/">http://macek.github.com/google_pacman/</a>。</span></p>
<figure id="attachment_2467" aria-describedby="caption-attachment-2467" style="width: 554px" class="wp-caption aligncenter"><img alt="image placeholder" >
<p>需要注意的是，那个源程序在你的本机是不会有声音的，因为这跟flash的设置有关系，如果你需要有游戏声音，你还需要有以下的设置：</p>
<pre>  1. 打开 Adobe Flash Control Panel:
     <a href="https://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html" target="_blank">http://www.macromedia.com/support/documentation/en/flashplayer/help/settings_manager04.html</a>
  2. 点击 `Edit Locations`
  3. 点击 `Add Location`
  4. 浏览你的 `google_pacman` 目录
  5. 点击 `Add`</pre>
<p>需要注意的是，这个源程序并不是Google官方发布的，只不过是某些好事者的网友发布的，不知道在日后的<a href="https://www.google.com/logos/index.html" target="_blank">Google的Logo归档</a>中是否会见到这个Logo。顺便说一下，根据 <a href="https://googleblog.blogspot.com/2010/05/celebrating-pac-mans-30th-birthday.html" target="_blank">Google官方BLOG</a>，这个程序是由 Marcin Wichary 和 Ryan Germick做的。真是又应了那句话——“如果一个应用能被Javascript实现，那么其最终会被Javascript实现”。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/12136.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9508.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7829.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5537.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5815.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5701.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2466" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="16f1b4a7df">
<img alt="image placeholder" >
<meta itemprop="headline" content="Google吃豆游戏Logo的源码">
<meta itemprop="description" content="这两天，Google的logo换成了那个经典的吃豆游戏，很强大，也引发了大众的热议。如果你想要其源代码的话，你可以到这里下载：http://github.com/macek/google_pacman。而在线演示在这里：http://macek.github.com/google_pacman/。



需要注意的是，那个源程序在你的本机是不会有声音的，因为这跟flash的设置有关系，如果...">
<meta itemprop="datePublished" content="2010-05-22T23:42:10+08:00">
<meta itemprop="dateModified" content="2010-05-23T00:18:14+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2466.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2466.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.6">
<meta itemprop="ratingCount" content="10">
</div>
</div>
<div id="post-ratings-2466-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-22T23:42:10+08:00</pubDate>
<guid>https://coolshell.cn/articles/2466.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ （麻省理工免费课程）C语言内存管理和C++面向对象编程 ]]></title>
<link>https://coolshell.cn/articles/2474.html</link>
<content><![CDATA[ 
<p>此课程有全部<a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-088-introduction-to-c-memory-management-and-c-object-oriented-programming-january-iap-2010/lecture-notes" target="_blank">讲义</a>和<a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-088-introduction-to-c-memory-management-and-c-object-oriented-programming-january-iap-2010/assignments" target="_blank">习题</a>。</p>
<p>课程描述实在得令人发指。翻译如下：</p>
<blockquote>
<p>您是否由于自己的Python程序比同僚们的C程序慢而垂头丧气？你是否想不用JAVA实现面向对象？加入我们，学习C和C++吧！我们带您从简单的C程序入手，深入C语言的内存管理，简介C++里的面向对象，深入C++面向对象的高级功能以及STL。我们还教您一些以后面试用得着的技巧和知识。</p>
<p>原文：</p>
<p>Ever hang your head in shame after your Python program wasn’t as fast as your friend’s C program? Ever wish you could use objects without having to use Java? Join us for this fun introduction to C and C++! We will take you through a tour that will start with writing simple C programs, go deep into the caves of C memory manipulation, resurface with an introduction to using C++ classes, dive deeper into advanced C++ class use and the C++ Standard Template Libraries. We’ll wrap up by teaching you some tricks of the trade that you may need for tech interviews.</p>
</blockquote>
<p>麻省理工开放课程里有很多计算机科学的宝贝。不仅有一流的教程，还有习题和答案。适合英语不错的程序员平时充电。</p>
<p><a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-088-introduction-to-c-memory-management-and-c-object-oriented-programming-january-iap-2010/index.htm#features" target="_blank">课程地址</a>（英文）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3723.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12052.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12012.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2474" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="e3bd527155">
<img alt="image placeholder" >
<meta itemprop="headline" content="（麻省理工免费课程）C语言内存管理和C++面向对象编程">
<meta itemprop="description" content="此课程有全部讲义和习题。

课程描述实在得令人发指。翻译如下：
您是否由于自己的Python程序比同僚们的C程序慢而垂头丧气？你是否想不用JAVA实现面向对象？加入我们，学习C和C++吧！我们带您从简单的C程序入手，深入C语言的内存管理，简介C++里的面向对象，深入C++面向对象的高级功能以及STL。我们还教您一些以后面试用得着的技巧和知识。

原文：

Ever hang your...">
<meta itemprop="datePublished" content="2010-05-23T08:15:05+08:00">
<meta itemprop="dateModified" content="2011-12-12T22:35:01+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2474.html">
<meta itemprop="author" content="mailper">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2474.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.16">
<meta itemprop="ratingCount" content="19">
</div>
</div>
<div id="post-ratings-2474-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-23T08:15:05+08:00</pubDate>
<guid>https://coolshell.cn/articles/2474.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 说服他人的5种技巧 – Guy Kawasaki ]]></title>
<link>https://coolshell.cn/articles/2460.html</link>
<content><![CDATA[ 
<p>硅谷传奇创业者+精神领袖 Guy Kawasaki最近写了一篇新文章总结了以下5种说服他人的技巧。希望对大家对付老外有帮助。摘要如下：<img alt="image placeholder" >
<ol>
<li>
<strong>先给予，后索取 </strong>(Be the first to give )。研究表明，我们容易被给我们帮过忙的人说服：有些服务员给我们结账的时候带来口香糖，我们一般给他们的小费多些。工作中我们更倾向于给帮助过我们的人更多支持…</li>
<li>
<strong>不要给对方太多选择 </strong>(don’t offer too many choices)：不论是给用户选择，还是给员工的奖励机制，太多的选择经常会给人带来挫折感…</li>
<li>
<strong>不要以自我为中心辩护</strong>(argue against self-interest)。在说服别人的过程中，信任是最关键的。有时候在大力鼓吹之前承认自己方面的一些小不足可以提高信任感…</li>
<li>
<strong>失去比得到更有说服力</strong> (losses are more persuasive than gains)。告诉对方如果不接受你的意见或者不买的你的产品会失去什么，要比只是说明他们会得到什么要更能说服人…</li>
<li>
<strong>让对方觉得自己已经取得了一定进步</strong> (make people feel as if they’ve already made progress toward a goal)。例如以下两种推销洗车会员卡服务的方法，方法2的顾客保持率是方法1的两倍。
<ol>
<li>洗八次赠一次</li>
<li>洗十次车赠一次，第一次算免费赠送</li>
</ol>
</li>
</ol>
<p>原文<a href="http://www.openforum.com/idea-hub/topics/the-world/article/5-ways-to-be-persuasive-guy-kawasaki">link</a></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/10169.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/925.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/536.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3716.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4710.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3713.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2460" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="896a9b1674">
<img alt="image placeholder" >
<meta itemprop="headline" content="说服他人的5种技巧 – Guy Kawasaki">
<meta itemprop="description" content="硅谷传奇创业者+精神领袖 Guy Kawasaki最近写了一篇新文章总结了以下5种说服他人的技巧。希望对大家对付老外有帮助。摘要如下：

	先给予，后索取 (Be the first to give )。研究表明，我们容易被给我们帮过忙的人说服：有些服务员给我们结账的时候带来口香糖，我们一般给他们的小费多些。工作中我们更倾向于给帮助过我们的人更多支持...
	不要给对方太多选择 (don't...">
<meta itemprop="datePublished" content="2010-05-23T08:20:17+08:00">
<meta itemprop="dateModified" content="2010-05-23T00:20:45+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2460.html">
<meta itemprop="author" content="mailper">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2460.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.95">
<meta itemprop="ratingCount" content="19">
</div>
</div>
<div id="post-ratings-2460-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-05-23T08:20:17+08:00</pubDate>
<guid>https://coolshell.cn/articles/2460.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 四个流行的Java连接池 ]]></title>
<link>https://coolshell.cn/articles/2483.html</link>
<content><![CDATA[ 
<p><strong><img alt="image placeholder" >
<p><strong>BoneCP </strong>是一个开源的快速的 JDBC 连接池。BoneCP很小，只有四十几K（运行时需要<a href="https://logging.apache.org/log4j/1.2/index.html" target="_blank">log4j</a>和<a href="https://code.google.com/p/google-collections/" target="_blank">Google Collections</a>的支持，这二者加起来就不小了），而相比之下 <a href="https://sourceforge.net/projects/c3p0/" target="_blank">C3P0</a> 要六百多K。另外个人觉得 BoneCP 有个缺点是，JDBC驱动的加载是在连接池之外的，这样在一些应用服务器的配置上就不够灵活。当然，体积小并不是 BoneCP 优秀的原因，BoneCP 到底有什么突出的地方呢，请看看<a href="http://jolbox.com/benchmarks.html" target="_blank">性能测试报告</a>。（主页：<a href="http://jolbox.com/" target="_blank">http://jolbox.com/</a>）</p>
<p><strong>DBCP</strong> （<strong>D</strong>ata<strong>b</strong>ase <strong>C</strong>onnection <strong>P</strong>ool）是一个依赖Jakarta commons-pool对象池机制的数据库连接池，Tomcat的数据源使用的就是DBCP。目前 DBCP 有两个版本分别是 1.3 和 1.4。1.3 版本对应的是 JDK 1.4-1.5 和 JDBC 3，而1.4 版本对应 JDK 1.6 和 JDBC 4。因此在选择版本的时候要看看你用的是什么 JDK 版本了，功能上倒是没有什么区别。（主页：<a href="https://commons.apache.org/dbcp/" target="_blank">http://commons.apache.org/dbcp/</a>）</p>
<p><strong>Proxool</strong>是一个Java SQL Driver驱动程序，提供了对你选择的其它类型的驱动程序的连接池封装。可以非常简单的移植到现存的代码中。完全可配置。快速，成熟，健壮。可以透明地为你现存的JDBC驱动程序增加连接池功能。（主页：<a href="http://proxool.sourceforge.net/" target="_blank">http://proxool.sourceforge.net/</a>）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11541.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11454.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11175.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9703.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2483" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="4a2383e301">
<img alt="image placeholder" >
<meta itemprop="headline" content="四个流行的Java连接池">
<meta itemprop="description" content="C3P0是一个开放源代码的JDBC连接池，它在lib目录中与Hibernate一起发布,包括了实现jdbc3和jdbc2扩展规范说明的Connection 和Statement 池的DataSources 对象。（主页：http://sourceforge.net/projects/c3p0/）

BoneCP 是一个开源的快速的 JDBC 连接池。BoneCP很小，只有四十几K（运行时需要l...">
<meta itemprop="datePublished" content="2010-06-02T09:31:12+08:00">
<meta itemprop="dateModified" content="2010-06-02T09:37:22+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2483.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2483.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.75">
<meta itemprop="ratingCount" content="8">
</div>
</div>
<div id="post-ratings-2483-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-06-02T09:31:12+08:00</pubDate>
<guid>https://coolshell.cn/articles/2483.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ WTF Javascript ]]></title>
<link>https://coolshell.cn/articles/2492.html</link>
<content><![CDATA[ 
<p>请先看一下下面的这段Javascript程序以及其结果。</p>
<p>[javascript]<br>
1 + + 1              // =&gt; 2<br>
1 + – + 1            // =&gt; 0<br>
1 + – + – + 1        // =&gt; 2<br>
1 + – + – + – + 1    // =&gt; 0<br>
1 + – + + + – + 1    // =&gt; 2<br>
1 + / + + + / + 1    // =&gt; 1/ + + + /1<br>
[/javascript]</p>
<p>提示一下，1++1等价于1 + (+1)，也就是1加上一个正数1，如果你能搞懂其它的表达式的话，请看看下面的这段程序，你能说出其结果吗？</p>
<p>[javascript]<br>
1 + / + / + / + 1 // =&gt; ?<br>
[/javascript]</p>
<p>如果不知道的话，你可以到这个<a href="http://mir.aculo.us/2010/05/28/valid-javascript-or-not/" target="_blank">网页上去讨论讨论</a>。当然，如果你不懂也没有什么关系，因为Javascript本身就是一个很怪异的语言，再加上浏览器的种种不是，所以，<a href="https://coolshell.cn/articles/1850.html" target="_blank">Javascript程序员也是很郁闷的</a>。在以前的“<a rel="bookmark" href="https://coolshell.cn/articles/2053.html" target="_blank">最为奇怪的程序语言的特性</a>”中也说过一些。Javascript最怪异的特性导致了<a href="http://wtfjs.com/">wtfjs.com</a>这样的一个网站，还有一个<a href="https://github.com/brianleroux/wtfjs" target="_blank">WTF JS的开源站点</a>。呵呵。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17524.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10822.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10739.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10337.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2492" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="de90a93d2b">
<img alt="image placeholder" >
<meta itemprop="headline" content="WTF Javascript">
<meta itemprop="description" content="请先看一下下面的这段Javascript程序以及其结果。

[javascript]
1 + + 1              // =&gt; 2
1 + - + 1            // =&gt; 0
1 + - + - + 1        // =&gt; 2
1 + - + - + - + 1    // =&gt; 0
1 + - + + + - + 1    // =&gt; 2
1 + ...">
<meta itemprop="datePublished" content="2010-06-02T09:51:49+08:00">
<meta itemprop="dateModified" content="2010-06-02T09:52:19+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2492.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2492.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.57">
<meta itemprop="ratingCount" content="7">
</div>
</div>
<div id="post-ratings-2492-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-06-02T09:51:49+08:00</pubDate>
<guid>https://coolshell.cn/articles/2492.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 把Flash转成Javascript/HTML5 ]]></title>
<link>https://coolshell.cn/articles/2497.html</link>
<content><![CDATA[ 
<p><img alt="image placeholder" >
<p>HTML5几乎颠覆了原来的HTML，其可以让你用HTML不单单只是做网页布局，而且还让你可以开发更强的东西，比如：<a href="https://dev.w3.org/html5/websockets/" target="_blank">WebSockets</a>，使用这项技术，已经有人在搞Web版的Quake 2了（<a href="https://code.google.com/p/quake2-gwt-port/" target="_blank">http://code.google.com/p/quake2-gwt-port/</a>），还有<a href="https://coolshell.cn/articles/599.html" target="_blank">Google的3D Javascript API</a>，所以，把swf完美地转成Javscript/HTML5可能也只是一个时间问题。</p>
<p>虽然，HTML5还在<a href="https://dev.w3.org/html5/spec/Overview.html" target="_blank">draft阶段</a>，而且很多东西都和flash重复了。所以，加上iPhone的推波助澜，发生这样的事情也不奇怪，不知道adobe会怎么想？也许adobe目前对其AIR或是Actionscript还抱有希望，虽然有这样<a href="http://infoworld.com/d/developer-world/html5-vs-flash-the-case-flash-721" target="_blank">一篇文章</a>力挺Flash，但未来真的不好说，adobe会使用HTML5/Javascript来作为其flash的引擎吗？如果不这样的话，我相信总有一天，会有人开发出HTML5/Javascript的IDE。而且，有理由相信，一旦在未来所有的浏览全面支持HTML5，那么我们可以想像，这个世界可能几乎所有的桌面应用都会被Web所取代，这个进程可能会越来越快。让我们拭目以待。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9666.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5537.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4795.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3516.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2497" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="05903192fb">
<img alt="image placeholder" >
<meta itemprop="headline" content="把Flash转成Javascript/HTML5">
<meta itemprop="description" content="SmokeScreen是这样一个开源软件，它可以把Flash的swf文件转成Javascript/HTML5，它的口号是：Flash without plugin。为什么要这样做呢？它说主要是因主Apple的iPhone/iPod/iPad不支持flash，而且看似Steve Jobs也不愿意在以后支持flash。所以，他们搞了这样一个玩意。目前，这个开源软件还在开发阶段，在其主页上，你可以看到一...">
<meta itemprop="datePublished" content="2010-06-03T08:29:18+08:00">
<meta itemprop="dateModified" content="2010-06-03T08:58:26+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2497.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2497.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.7">
<meta itemprop="ratingCount" content="10">
</div>
</div>
<div id="post-ratings-2497-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-06-03T08:29:18+08:00</pubDate>
<guid>https://coolshell.cn/articles/2497.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 信XML，得永生！ ]]></title>
<link>https://coolshell.cn/articles/2504.html</link>
<content><![CDATA[ 
<p>在计算机的世界里，什么最牛？<a href="https://coolshell.cn/?tag=javascript" target="_blank">Javascript</a>？<a href="https://coolshell.cn/articles/914.html" target="_blank">C语言</a>？<a href="https://coolshell.cn/articles/1724.html" target="_blank">C++</a>？<a href="https://coolshell.cn/articles/2086.html" target="_blank">iPad</a>？还是<a href="https://coolshell.cn/articles/1142.html" target="_blank">brainfuck</a>？我个人觉得都不是，这个世界里，XML最NB，这世界到处都充斥着XML，正如在“<a href="https://coolshell.cn/articles/2424.html" target="_blank">十条不错的编程观点</a>”文中所说，我们不用XML我们都不知道怎么编程了。下面，让我们来看一看XML的几个真实的示例，相信你会同意我的观点的。</p>
<div id="ez-toc-container" class="ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-grey">
<div class="ez-toc-title-container">
<p class="ez-toc-title">目录</p>
<span class="ez-toc-title-toggle"></span>
</div>
<nav><ul class="ez-toc-list ez-toc-list-level-1">
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-1" href="#%E4%B8%80%E3%80%81%E5%A6%82%E4%BD%95%E7%94%A8XML%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE%E5%BA%93SQL%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C" title="一、如何用XML返回数据库SQL查询结果">一、如何用XML返回数据库SQL查询结果</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-2" href="#%E4%BA%8C%E3%80%81%E5%A6%82%E4%BD%95%E7%94%A8XML%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%80%E4%B8%AA%E5%9B%BE%E7%89%87" title="二、如何用XML序列化一个图片">二、如何用XML序列化一个图片</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-3" href="#%E4%B8%89%E3%80%81%E5%A6%82%E4%BD%95%E8%AE%A9XML%E4%B8%8ECSV%E6%A0%BC%E5%BC%8F%E5%85%BC%E5%AE%B9" title="三、如何让XML与CSV格式兼容">三、如何让XML与CSV格式兼容</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-4" href="#%E5%9B%9B%E3%80%81%E5%A6%82%E4%BD%95%E6%8A%8AXML%E5%BD%93%E6%88%90%E6%95%B0%E7%BB%84%E6%9D%A5%E7%94%A8" title="四、如何把XML当成数组来用">四、如何把XML当成数组来用</a></li>
</ul></nav>
</div>
<h4>
<span class="ez-toc-section" id="%E4%B8%80%E3%80%81%E5%A6%82%E4%BD%95%E7%94%A8XML%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE%E5%BA%93SQL%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C"></span>一、如何用XML返回数据库SQL查询结果<span class="ez-toc-section-end"></span>
</h4>
<p></p>
<pre data-enlighter-language="xml" class="EnlighterJSRAW">&lt;?xml version="1.0" encoding="iso-8859-1" ?&gt;
&lt;result&gt;
  &lt;fields&gt;
    &lt;field&gt;NAME&lt;/field&gt;
    &lt;field&gt;LAST NAME&lt;/field&gt;
    &lt;field&gt;MOTHER MAIDEN NAME&lt;/field&gt;
    &lt;field&gt;BIRTHDATE&lt;/field&gt;
    ...
  &lt;/fields&gt;
  &lt;data&gt;
    &lt;row&gt;
      &lt;value&gt;MARLENE&lt;/value&gt;
      &lt;value&gt;RUTH&lt;/value&gt;
      &lt;value&gt;DE MARCO&lt;/value&gt;
      &lt;value&gt;1973-02-24 00:00:00&lt;/value&gt;
      ...
    &lt;/row&gt;
  &lt;/data&gt;
&lt;/result&gt;</pre>
<p><span id="more-2504"></span></p>
<h4>
<span class="ez-toc-section" id="%E4%BA%8C%E3%80%81%E5%A6%82%E4%BD%95%E7%94%A8XML%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%80%E4%B8%AA%E5%9B%BE%E7%89%87"></span>二、如何用XML序列化一个图片<span class="ez-toc-section-end"></span>
</h4>
<p></p>
<pre data-enlighter-language="xml" class="EnlighterJSRAW">&lt;attachments xmlns = "http://webservices..." &gt;
  &lt;bytes&gt;37&lt;/bytes&gt;
  &lt;bytes&gt;80&lt;/bytes&gt;
  &lt;bytes&gt;68&lt;/bytes&gt;
  &lt;bytes&gt;70&lt;/bytes&gt;
  &lt;bytes&gt;45&lt;/bytes&gt;
  &lt;bytes&gt;49&lt;/bytes&gt;
  &lt;bytes&gt;46&lt;/bytes&gt;
  &lt;bytes&gt;52&lt;/bytes&gt;
  &lt;bytes&gt;10&lt;/bytes&gt;
  &lt;bytes&gt;37&lt;/bytes&gt;
  &lt;bytes&gt;-30&lt;/bytes&gt;
  &lt;bytes&gt;-29&lt;/bytes&gt;
  &lt;bytes&gt;-49&lt;/bytes&gt;
  &lt;bytes&gt;-45&lt;/bytes&gt;
  &lt;bytes&gt;10&lt;/bytes&gt;
  &lt;bytes&gt;52&lt;/bytes&gt;
  &lt;bytes&gt;32&lt;/bytes&gt;
  &lt;bytes&gt;48&lt;/bytes&gt;
  &lt;bytes&gt;32&lt;/bytes&gt;
  &lt;bytes&gt;111&lt;/bytes&gt;
  ...
  ...
  ...</pre>
<h4>
<span class="ez-toc-section" id="%E4%B8%89%E3%80%81%E5%A6%82%E4%BD%95%E8%AE%A9XML%E4%B8%8ECSV%E6%A0%BC%E5%BC%8F%E5%85%BC%E5%AE%B9"></span>三、如何让XML与CSV格式兼容<span class="ez-toc-section-end"></span>
</h4>
<p></p>
<pre data-enlighter-language="xml" class="EnlighterJSRAW">&lt;?xml version="1.0" encoding="iso8859-1" ?&gt;
&lt;import tag="1stTEST" type="data" mode="update"&gt;
&lt;options&gt;
    &lt;dateformat mmddyyyy="true"/&gt;
        &lt;notification&gt;
            &lt;EMail&gt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="6d08150c001d01082d08150c001d0108430e0200">[email protected]</a>&lt;/EMail&gt;
        &lt;/notification&gt;
    &lt;/options&gt;
    &lt;fields&gt;
        &lt;field name="name" type="char" mapsto="person.data"/&gt;
        &lt;field name="officeid" type="char" mapsto="custom.locationid"/&gt;
        &lt;field name="startyear" type="char" mapsto="person.yearstarted"/&gt;
        &lt;field name="personelid" type="int" mapsto="person.id"/&gt;
        &lt;field name="dob" type="date" mapsto="person.dateofbith"/&gt;
        &lt;field name="sex" type="char" mapsto="person.sex"/&gt;
        &lt;field name="modified" type="date" mapsto="record.modified"/&gt;
    &lt;/fields&gt;
    &lt;csvdata columnheaders="false"&gt;
&lt;![CDATA[
"Jack Wade",214,2002,111012,07/04/1975,"M",02/11/2006
"Sam Davidson",214,1999,104841,10/15/1967,"M",02/10/2006
"Denise V Law",214,1998,104660,01/21/1971,"F",02/17/2006
"Lisa Blake",214,1989,100987,08/01/1982,"F",01/21/2006
"Andrew Match",214,1991,101074,12/25/1980,"M",02/28/2006
]]&gt;
    &lt;/csvdata&gt;
&lt;/import&gt;</pre>
<h4>
<span class="ez-toc-section" id="%E5%9B%9B%E3%80%81%E5%A6%82%E4%BD%95%E6%8A%8AXML%E5%BD%93%E6%88%90%E6%95%B0%E7%BB%84%E6%9D%A5%E7%94%A8"></span>四、如何把XML当成数组来用<span class="ez-toc-section-end"></span>
</h4>
<p></p>
<pre data-enlighter-language="xml" class="EnlighterJSRAW">&lt;rootNode&gt;
   &lt;numberOfAddresses&gt;110&lt;/numberOfAddresses&gt;
   &lt;address_1&gt;442 Fake St.&lt;/address_1&gt;
   &lt;address_2&gt;61 Main St.&lt;/address_2&gt;
   ...
   ...
   ...
   &lt;address_110&gt;3881 N 4th Ave. #5D&lt;/address_110&gt;
&lt;/rootNode&gt;</pre>
<p>相信你一定有比这更牛X的例子，欢迎与我们分享！</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/9508.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4905.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3609.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3585.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3498.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2504" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="2a9196f6cc">
<img alt="image placeholder" >
<meta itemprop="headline" content="信XML，得永生！">
<meta itemprop="description" content="在计算机的世界里，什么最牛？Javascript？C语言？C++？iPad？还是brainfuck？我个人觉得都不是，这个世界里，XML最NB，这世界到处都充斥着XML，正如在“十条不错的编程观点”文中所说，我们不用XML我们都不知道怎么编程了。下面，让我们来看一看XML的几个真实的示例，相信你会同意我的观点的。
一、如何用XML返回数据库SQL查询结果
[xml]&lt;?xml version=...">
<meta itemprop="datePublished" content="2010-06-09T08:27:42+08:00">
<meta itemprop="dateModified" content="2010-06-09T00:28:26+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2504.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2504.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="2.88">
<meta itemprop="ratingCount" content="16">
</div>
</div>
<div id="post-ratings-2504-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-06-09T08:27:42+08:00</pubDate>
<guid>https://coolshell.cn/articles/2504.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 2000年的iMac和2010年的iPhone ]]></title>
<link>https://coolshell.cn/articles/2507.html</link>
<content><![CDATA[ 
<p>以前本站发过“<a rel="bookmark" href="https://coolshell.cn/articles/410.html" target="_blank">1980年和2009年的1GB电脑内存的比较</a>”，下面是2000年的iMac和2010年的iPhone的比较。</p>
<p><strong><img alt="image placeholder" >
<p style="text-align: left;">操作系统 – Mac OS 9.0.4<br>
处理器 – 500 MHz PowerPC G3 CPU, 128MB Memory<br>
显示卡 – ATI Rage 128 Pro, 8MB of memory (8 million triangles)<br>
屏幕- 786K pixels<br>
数据传输速度 – 1.3-12.5 MB/s (DVD-ROM-1/100 Ethernet)<br>
存储设备 – 30GB Hard Drive<br>
显示器 – 15.0 x 15.0 x 17.1 inches<br>
重量 – 12.25公斤<br>
<strong> </strong></p>
<p style="text-align: left;"><strong><span style="font-weight: normal;"><br>
</span></strong></p>
<p style="text-align: left;"><strong>2010 – iPhone 4</strong><br>
<img alt="image placeholder" >
处理器 – 1 Ghz ARM A4 CPU, 512MB Memory<br>
显示卡 – PowerVR SGX 535, uses system memory (28 million triangles)<br>
屏幕 – 614K pixels<br>
数据传输速度 – .04-20MB/s (3G-WiFi)<br>
存储设备 – 32GB Flash Drive<br>
显示器 – 4.5 x 2.31 x .31 inches<br>
重量 – 136克</p>
<p>那么，2020年的产品会是怎么样的？</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/5089.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3903.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2913.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2719.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3921.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2507" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="2bd5bab0fd">
<img alt="image placeholder" >
<meta itemprop="headline" content="2000年的iMac和2010年的iPhone">
<meta itemprop="description" content="以前本站发过“1980年和2009年的1GB电脑内存的比较”，下面是2000年的iMac和2010年的iPhone的比较。

2000 - iMac
操作系统 - Mac OS 9.0.4
处理器 - 500 MHz PowerPC G3 CPU, 128MB Memory
显示卡 - ATI Rage 128 Pro, 8MB of memory (8 million triangle...">
<meta itemprop="datePublished" content="2010-06-22T08:22:01+08:00">
<meta itemprop="dateModified" content="2010-06-21T15:48:31+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2507.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2507.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.75">
<meta itemprop="ratingCount" content="16">
</div>
</div>
<div id="post-ratings-2507-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-06-22T08:22:01+08:00</pubDate>
<guid>https://coolshell.cn/articles/2507.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 伦敦地铁实时图 ]]></title>
<link>https://coolshell.cn/articles/2520.html</link>
<content><![CDATA[ 
<p>下面这个网站是关于伦敦地铁实时的运行图：<a href="http://traintimes.org.uk:81/map/tube/">http://traintimes.org.uk:81/map/tube/</a></p>
<p style="text-align: left;">这是个很有意思的网站，其数据是通过伦敦政府发布的<a href="http://data.london.gov.uk/apibeta" target="_blank">TfL API</a>获得的，然后再加上Google Maps的API，于是就有了这样的一个页面。很不错哦。</p>
<div class="mceTemp" style="text-align: center;">
<dl id="attachment_2521" class="wp-caption alignnone" style="width: 567px;">
<dt class="wp-caption-dt" style="text-align: center;"><a href="http://traintimes.org.uk:81/map/tube/"><img alt="image placeholder" >
<dd class="wp-caption-dd">伦敦地铁实时图</dd>
</dl>
</div>
<p style="text-align: left;">
</p>
<p>从这个事情，我们可以得到，英国的信息化的发达，首先地铁部门有实时监控的数据，然后以Web API的方式发布，从这点看来，我国的信息化水平还很差。主要是钱都投到G/F/W上去了。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/16910.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2964.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5201.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8275.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2305.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5353.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2520" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="0c8bfee138">
<img alt="image placeholder" >
<meta itemprop="headline" content="伦敦地铁实时图">
<meta itemprop="description" content="下面这个网站是关于伦敦地铁实时的运行图：http://traintimes.org.uk:81/map/tube/
这是个很有意思的网站，其数据是通过伦敦政府发布的TfL API获得的，然后再加上Google Maps的API，于是就有了这样的一个页面。很不错哦。

  伦敦地铁实时图 

从这个事情，我们可以得到，英国的信息化的发达，首先地铁部门有实时监控的数据，然后以Web API的...">
<meta itemprop="datePublished" content="2010-06-23T08:24:06+08:00">
<meta itemprop="dateModified" content="2010-06-22T20:22:38+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2520.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2520.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.77">
<meta itemprop="ratingCount" content="13">
</div>
</div>
<div id="post-ratings-2520-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-06-23T08:24:06+08:00</pubDate>
<guid>https://coolshell.cn/articles/2520.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 面试题：布尔变量 ]]></title>
<link>https://coolshell.cn/articles/2514.html</link>
<content><![CDATA[ 
<p>下面这篇文章是从<a href="https://stackoverflow.com/questions/3076078/check-if-at-least-2-out-of-3-booleans-is-true/" target="_blank">StackOverflow</a>来的。LZ面试的时候遇到了一道面试题：“如果有三个Bool型变量，请写出一程序得知其中有2个以上变量的值是true”，于是LZ做了下面的这样的程序：</p>
<p></p>
<pre data-enlighter-language="java" class="EnlighterJSRAW">boolean atLeastTwo(boolean a, boolean b, boolean c) {
    if ((a &amp;&amp; b) || (b &amp;&amp; c) || (a &amp;&amp; c)) {
        return true;
    } else {
        return false;
    }
}</pre>
<p>面试官接着问到，请对你的这个程序改进一下，但LZ不知道怎么改进，于是上StackOverflow上问了一下，下面是StackOverflow上的众网友的回答。再往下看的时候，希望你自己能先想一想怎么改进。</p>
<p><span id="more-2514"></span></p>
<p>有人说，如果你有下面这样的代码？</p>
<p></p>
<pre data-enlighter-language="c" class="EnlighterJSRAW">    if (someExpression) {
        return true;
    } else {
        return false;
    }</pre>
<p>你应该改成：</p>
<p><code data-enlighter-language="c" class="EnlighterJSRAW"> return someExpression;</code></p>
<p>所以，LZ的代码应该写成：</p>
<p><code data-enlighter-language="c" class="EnlighterJSRAW">return ((a &amp;&amp; b) || (b &amp;&amp; c) || (a &amp;&amp; c));</code></p>
<p>当然，解法不单单只有一种，还有下面的这些解决：</p>
<p><strong>1）使用</strong><a href="https://en.wikipedia.org/wiki/Karnaugh_map" target="_blank"><strong>卡诺图</strong></a></p>
<p><code data-enlighter-language="c" class="EnlighterJSRAW">return a ? (b || c) : (b &amp;&amp; c);</code></p>
<p><strong>2）使用异或</strong></p>
<p><code data-enlighter-language="c" class="EnlighterJSRAW">return a ^ b ? c : a</code></p>
<p><strong>3）按照字面</strong></p>
<p><code data-enlighter-language="c" class="EnlighterJSRAW">(a?1:0)+(b?1:0)+(c?1:0) &gt;= 2</code></p>
<p><code data-enlighter-language="c" class="EnlighterJSRAW">a&amp;&amp;b || b&amp;&amp;c || a&amp;&amp;c</code></p>
<p><strong>4）把Bool当成0和1</strong></p>
<p><code data-enlighter-language="c" class="EnlighterJSRAW">a&amp;b | b&amp;c | c&amp;a</code></p>
<p><code data-enlighter-language="c" class="EnlighterJSRAW">a + b + c &lt;= 2</code></p>
<p><strong>5）如果bool不能当成0和1，则：</strong></p>
<p></p>
<pre data-enlighter-language="c" class="EnlighterJSRAW">int howManyBooleansAreTrue =
(a ? 1 : 0)
+ (b ? 1 : 0)
+ (c ? 1 : 0);

return howManyBooleansAreTrue &gt;= 2;</pre>
<p>欢迎你留下你的想法。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/7965.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4429.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4162.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3961.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3738.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3445.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2514" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="f0b13ebf43">
<img alt="image placeholder" >
<meta itemprop="headline" content="面试题：布尔变量">
<meta itemprop="description" content="下面这篇文章是从StackOverflow来的。LZ面试的时候遇到了一道面试题：“如果有三个Bool型变量，请写出一程序得知其中有2个以上变量的值是true”，于是LZ做了下面的这样的程序：

[java]boolean atLeastTwo(boolean a, boolean b, boolean c) {
    if ((a &amp;&amp; b) || (b &amp;&amp; c) || (a &amp;&amp; c)...">
<meta itemprop="datePublished" content="2010-06-23T08:50:24+08:00">
<meta itemprop="dateModified" content="2011-04-11T08:06:00+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2514.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2514.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.43">
<meta itemprop="ratingCount" content="14">
</div>
</div>
<div id="post-ratings-2514-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-06-23T08:50:24+08:00</pubDate>
<guid>https://coolshell.cn/articles/2514.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 几个Web的资源 ]]></title>
<link>https://coolshell.cn/articles/2524.html</link>
<content><![CDATA[ 
<p>首先一个先给大家介绍一个HTML5的资源网站：<a href="https://www.html5rocks.com/" target="_blank">http://www.html5rocks.com/</a> ，在这个网站上，有三个子站：</p>
<ol>
<li>HTML5的幻灯片：<a href="http://slides.html5rocks.com/" target="_blank">http://slides.html5rocks.com/</a>，虽然是英文的，但相信我，这个幻灯片做得很好，你应该能看得懂。</li>
<li>HTML5的操练场：<a href="http://playground.html5rocks.com/" target="_blank">http://playground.html5rocks.com/</a>，这个页面上有很多HTML5的源码，你可以就直接在上面修改，并查看修改结果。</li>
<li>HTML5的教程：<a href="https://www.html5rocks.com/tutorials/" target="_blank">http://www.html5rocks.com/tutorials/</a>，这个页上有一些Steps by Steps的教程，很不错。</li>
</ol>
<p>第二个，给大家推荐一个Javascript库，叫——<a href="http://code.ovidiu.ch/dragdealer/" target="_blank">DragDealer</a>。这个JS主要是处理Web上的各种拖动效果，脚本很小，在没有压缩的情况下也只有12K，而且没有任何的dependence，使用起来也比较方便。</p>
<p>第三个，是Apple的Showcase，我们都知道，iPhone不支持flash，但支持HTML5，大家可以点下面这些链接看看Apple公司自己做的HTML5的一些效果。当然，有一些需要safari浏览器。</p>
<p><span id="more-2524"></span></p>
<ul>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/showcase/video/">Video effects</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/showcase/typography/">Web typography</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/showcase/gallery/">Web gallery</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/showcase/transitions/">Photo transitions</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/showcase/audio/">Audio</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/showcase/threesixty/">360°</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/showcase/vr/">VR</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/CanvasPixelManipulation/">Canvas pixel manipulation</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/StickyNotes/">Sticky notes</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/ConcertPoster/">Concert Poster</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/Checkers/">Checkers</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/LightTable/">Light table</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/OfflineCalendar/">Offline calendar</a></li>
<li><a rel="nofollow" href="https://developer.apple.com/safaridemos/MovieTrailers/">Movie trailers</a></li>
</ul>
<p>如果大家也有一些相似的资源，不妨一起来分享。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9666.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5537.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4795.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3516.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2524" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="9062b4a46e">
<img alt="image placeholder" >
<meta itemprop="headline" content="几个Web的资源">
<meta itemprop="description" content="首先一个先给大家介绍一个HTML5的资源网站：http://www.html5rocks.com/ ，在这个网站上，有三个子站：

	HTML5的幻灯片：http://slides.html5rocks.com/，虽然是英文的，但相信我，这个幻灯片做得很好，你应该能看得懂。
	HTML5的操练场：http://playground.html5rocks.com/，这个页面上有很多HTML5的...">
<meta itemprop="datePublished" content="2010-06-24T08:35:32+08:00">
<meta itemprop="dateModified" content="2010-06-23T12:01:50+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2524.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2524.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.5">
<meta itemprop="ratingCount" content="6">
</div>
</div>
<div id="post-ratings-2524-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-06-24T08:35:32+08:00</pubDate>
<guid>https://coolshell.cn/articles/2524.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ StackOverflow的404错误页 ]]></title>
<link>https://coolshell.cn/articles/2529.html</link>
<content><![CDATA[ 
<p>不知道大家有没有注意到StakeOverflow的<a href="https://stackoverflow.com/404" target="_blank">404错误页面</a>？其显示了下面的这个图片：</p>
<p style="text-align: center;"><img alt="image placeholder" >
<p style="text-align: left;">这个是一个很有意思的图片，不知道你看懂了吗？看上去像Python，又像 Ruby，还像 Perl，当然也有 C的影子，还有<a href="https://coolshell.cn/articles/1142.html" target="_blank">Brainfuck</a>。是的，这是一个杂交程序，杂交了Python，Ruby，Perl，C，还有Brainfuck（注意其中的#号），所有的语句都是输出“404”字符串。</p>
<p style="text-align: left;">关于这种杂交程序，本站以前也发布过《<a rel="bookmark" href="https://coolshell.cn/articles/1824.html" target="_blank">C语言和sh脚本的杂交代码</a>》，大家可以前往一看。这样的有趣的玩法叫“<a rel="nofollow" href="https://en.wikipedia.org/wiki/Polyglot_%28computing%29" target="_blank">Polyglot</a>”，也就是说，把N种语言写在一个文件中，然后，该文件在任何编译器下都可以运行，上述的那段代码在Python，Ruby，Perl，Brainfuck下都可以正常运行，也可以被C和的编译器编译通过，并被运行。</p>
<p style="text-align: left;">下面是这个图片的字符码，以供各位试试。</p>
<p style="text-align: left;"><span id="more-2529"></span></p>
<pre><code># define v putchar
#   define print(x) main(){v(4+v(v(52)-4));return 0;}/*
#&gt;+++++++4+[&gt;++++++&lt;-]&gt;++++.----.++++.*/
print(202*2);exit();
#define/*&gt;<a href="/cdn-cgi/l/email-protection" class="__cf_email__" data-cfemail="725c32">[email protected]</a>*/exit()</code></pre>
<p style="text-align: left;">欢迎你留下你的看法。</p>
<p style="text-align: left;">（全文完）</p>
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/1839.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1532.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10337.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10169.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7886.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2529" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="f505756d33">
<img alt="image placeholder" >
<meta itemprop="headline" content="StackOverflow的404错误页">
<meta itemprop="description" content="不知道大家有没有注意到StakeOverflow的404错误页面？其显示了下面的这个图片：

这个是一个很有意思的图片，不知道你看懂了吗？看上去像Python，又像 Ruby，还像 Perl，当然也有 C的影子，还有Brainfuck。是的，这是一个杂交程序，杂交了Python，Ruby，Perl，C，还有Brainfuck（注意其中的#号），所有的语句都是输出“404”字符串。
关于这种杂...">
<meta itemprop="datePublished" content="2010-06-25T08:35:41+08:00">
<meta itemprop="dateModified" content="2011-02-23T13:50:58+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2529.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2529.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.33">
<meta itemprop="ratingCount" content="15">
</div>
</div>
<div id="post-ratings-2529-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-06-25T08:35:41+08:00</pubDate>
<guid>https://coolshell.cn/articles/2529.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 参透软件开发的本质 – Uncle Bob Martin 推荐的经典书籍 ]]></title>
<link>https://coolshell.cn/articles/2539.html</link>
<content><![CDATA[ 
<p>数量级25（10^25）是 Uncle Bob 在 <a href="http://en.oreilly.com/rails2010">RailsConf</a> 演讲的主题。如果你用一台 PDP 8（ 1960年代的计算机）和 Mac PowerBook 做比较的话，你会发现 Mac PowerBook 比 PDP 8 快8000倍，有6百万倍大的内存，11000倍的耗能，1500倍的容量等等。如果将这些0累加起来，很容易达到10^25。在过去40年里，我们的硬件计算能力获得了10^25倍的提升，而作为软件开发人员的我们并没有利用这些计算能力来提升多少我们的软件开发能力。没错，我们是写了不少的代码，但是它们基本上都是一些顺序语句，if 语句，和 while 循环等，没有什么新鲜的东西。你可能会说面向对象是新东西呀，但是那只是另外一种组织顺序、选择和迭代等语句的方法而已。除我们现有的编程语言之外，如果有新的编程语言能够产生并创造新的“微积分学”，从而将软件开发提高到一个新的高度，将会是一件非常令人期待的事情，因为顺序语句，选择语句和迭代等最终将成为历史。</p>
<p>Uncle Bob 认为以下四本书是软件开发人员必须阅读的，并由他自己来排名。</p>
<p>1. The Structure &amp; Interpretation of Computer Programs 计算机程序的构造和解释 （By Harold Abelson &amp; Gerald Sussman）</p>
<p>书中使用的是 Scheme 语言（Lisp 的一个变种），此书的内容曾经是 MIT 计算机系的一门课程，当然现在已经不是了。</p>
<p>2. Structured Programming 结构化程序设计 （By Edsger W. Dijkstra）</p>
<p>相信软件专业的同学们都上过此课程，我们的启蒙书籍。这本书讨论了 go to 是怎样的邪恶，同时也讨论了面向对象。对比一下今天我们视为 best practice 的测试驱动开发（TDD），go to 在过去也曾经是 Fortran，Cobol 等语言的核心。</p>
<p>3. The Annotated TURING （By Charles Petzold）</p>
<p>Uncle Bob 令人尴尬地忘记了这本书的名字，他自嘲说自己从来记不住这本书名。但是此书在他的推荐列表中列第三位。</p>
<p>4. Clean Code （By Robert C. Martin）</p>
<p>Uncle Bob 本人的大作。</p>
<p>我的一位同事将这位 Uncle Bob 视为软件开发领域中的上帝，Uncle Bob 这位大师在当下各类编程语言和平台层出不穷的时候，在我们为该学什么语言买什么书举棋不定的时候，推荐给读者这几本经典，也许是煞费苦心地想让我们参透软件开发的本质吧。不过会不会也是因为我们都在慢慢变老，许多旧的东西如今又变成了新鲜有趣的事情啦？（出自采访记者之口）</p>
<p><a href="https://vimeo.com/12957619"><em>文章来源</em></a></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/6639.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4626.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3385.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3270.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3192.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3100.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2539" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="5f715ed887">
<img alt="image placeholder" >
<meta itemprop="headline" content="参透软件开发的本质 – Uncle Bob Martin 推荐的经典书籍">
<meta itemprop="description" content="数量级25（10^25）是 Uncle Bob 在 RailsConf 演讲的主题。如果你用一台 PDP 8（ 1960年代的计算机）和 Mac PowerBook 做比较的话，你会发现 Mac PowerBook 比 PDP 8 快8000倍，有6百万倍大的内存，11000倍的耗能，1500倍的容量等等。如果将这些0累加起来，很容易达到10^25。在过去40年里，我们的硬件计算能力获得了10^2...">
<meta itemprop="datePublished" content="2010-07-05T08:30:29+08:00">
<meta itemprop="dateModified" content="2010-07-03T11:31:07+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2539.html">
<meta itemprop="author" content="jnj">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2539.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.75">
<meta itemprop="ratingCount" content="8">
</div>
</div>
<div id="post-ratings-2539-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-05T08:30:29+08:00</pubDate>
<guid>https://coolshell.cn/articles/2539.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Eclipse 3.6 （Helios）新特性 ]]></title>
<link>https://coolshell.cn/articles/2554.html</link>
<content><![CDATA[ 
<p>2010年6月23日 Eclipse 3.6 Helios 正式发布，对 Java 程序员来说有哪些新特性值得关注？</p>
<p>1、检查并报告是否有缺失的 @Override 注解，此功能仅对 Java 1.6 版本适用。在以前版本中，当我们为一个方法加上 @Override  注解，但是这个方法实际上并没有过载（override）任何父类的方法时，将会得到警告信息。在新版本中，如果我们忘记为一个过载方法加上 @Override 注解，同样也会得到警告信息。</p>
<p>2、变量视图中新增了一个列用于显示当前变量类型的实例数（Layout -&gt; Select Column）。</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/07/Eclipse-3.6-6.bmp"><img alt="image placeholder" >
<p>3、Java 视图中的包名称可以用自定义的规则来显示（Window –&gt; Preferences –&gt; Java –&gt; Appearance）。</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/07/Eclipse-3.6-3.png"><img alt="image placeholder" >
<p><span id="more-2554"></span></p>
<p>4、用户可以选择在关闭 Eclipse 时不清除本地更改历史（local history），这样可以加快关闭的速度，但同时本地更改历史记录将会无限制地增大。</p>
<p>5、查看实现代码（Open Implementation）。此功能在 Navigate 菜单中能够找到，目前没有缺省的快捷键，用户可以为其自定义一个（Windows –&gt; Preferences –&gt; General –&gt; Keys）。例如，用户可以查看一个抽象方法的具体实现，如果有多个实现， Eclipse 会显示一个弹出窗口。</p>
<p><a href="../wp-content/uploads/2010/07/Eclipse-3.6-2.png"><img alt="image placeholder" >
<p>6、虚拟文件夹（Virtual Folders）。用户可以在 workspace 中创建文件夹，这些文件夹只对 Eclipse 可见，对操作系统不可见。并且它们只能包含其他的虚拟文件夹和外部链接资源。</p>
<p><a href="../wp-content/uploads/2010/07/Eclipse-3.6-4.png"><img alt="image placeholder" >
<p>7、安装配置比较（Compare Configurations）。通过此功能用户可以查看那些组件在哪一时间被安装，还可以选择卸载无用的安装以节省空间。</p>
<p><a href="../wp-content/uploads/2010/07/Eclipse-3.6-5.png"><img alt="image placeholder" >
<p>8、提供了对 JSF 2.0，Apache Tomcat 7，和 Aapache CXF 的支持，新增了 JAX-RS project facet。</p>
<p>9、Eclipse 市场客户端（Eclipse Market Place Client）。在以前的版本中安装插件（plugins）一直都不能说是一件简单的事情，用户需要搜索相应的 update site URL。新版本引入了和 Apple 的应用商店类似的概念，用户可以在 Eclipse IDE 内搜索和安装插件了，此功能在 Help 菜单中可以找到。</p>
<p><a href="../wp-content/uploads/2010/07/Eclipse-3.6-1.png"><img alt="image placeholder" >
<p><em><a href="http://www.techsagar.com/2010/07/10-new-features-which-i-liked-the-most-in-eclipse-helios-3-6-2/">文章来源一</a>，<a href="https://rajakannappan.blogspot.com/2010/05/new-features-in-eclipse-36-helios.html">文章来源二</a></em></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11541.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11454.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11175.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9703.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2554" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="d0f2516a82">
<img alt="image placeholder" >
<meta itemprop="headline" content="Eclipse 3.6 （Helios）新特性">
<meta itemprop="description" content="2010年6月23日 Eclipse 3.6 Helios 正式发布，对 Java 程序员来说有哪些新特性值得关注？

1、检查并报告是否有缺失的 @Override 注解，此功能仅对 Java 1.6 版本适用。在以前版本中，当我们为一个方法加上 @Override  注解，但是这个方法实际上并没有过载（override）任何父类的方法时，将会得到警告信息。在新版本中，如果我们忘记为一个过载...">
<meta itemprop="datePublished" content="2010-07-07T08:30:14+08:00">
<meta itemprop="dateModified" content="2010-07-05T15:09:14+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2554.html">
<meta itemprop="author" content="jnj">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2554.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.17">
<meta itemprop="ratingCount" content="6">
</div>
</div>
<div id="post-ratings-2554-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-07T08:30:14+08:00</pubDate>
<guid>https://coolshell.cn/articles/2554.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 如何在低速率网络中测试 Web 应用 ]]></title>
<link>https://coolshell.cn/articles/2574.html</link>
<content><![CDATA[ 
<p>大家看到标题后的第一个问题可能是：“我们需要这样做吗？”</p>
<p>如果我们开发的是局域网 Web 应用的话，可能没有必要这样做。但如果我们的 Web 应用面向的是互联网上的成千上万的用户，这样做就很必要了。因为在现实世界中并不是所有的用户都有高数率的网络连接，也许用户使用的是拨号接入，移动设备，3G，或者是 USB 网络加密狗。如果我们没有在低数率的网络环境中测试过我们 Web 应用，极有可能在上线后收到一些意想不到的关于系统性能方面的抱怨。这个时候无论我们的 Web 应用界面多么地 Web 2.0，功能多么地强大，对于用户来说都失去了使用价值。</p>
<p>目前有很多工具能够模拟慢速网络，值得一提的是 <a href="https://addons.mozilla.org/en-US/firefox/addon/5917/">Firefox Throttle</a>，这是一个 Firefox 插件，你可以设置上载和下载的数率，并且监控当前带宽的使用情况。另一个非常有用的特性是它可以控制你的 localhost 的连接数率，对本地测试很有用。</p>
<p>Firefox Throttle 的截图</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/07/Firefox-Throttle.png"><img alt="image placeholder" >
<p>另一个工具是 <a href="http://www.dallaway.com/sloppy/">Sloppy</a>，它是一个 Java Web Start application。</p>
<p><em><a href="http://www.devcurry.com/2010/07/simulate-slow-internet-connections.html">文章来源</a></em></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/2589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18094.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12225.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12206.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12136.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2574" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="f21ff1cd20">
<img alt="image placeholder" >
<meta itemprop="headline" content="如何在低速率网络中测试 Web 应用">
<meta itemprop="description" content="大家看到标题后的第一个问题可能是：“我们需要这样做吗？”

如果我们开发的是局域网 Web 应用的话，可能没有必要这样做。但如果我们的 Web 应用面向的是互联网上的成千上万的用户，这样做就很必要了。因为在现实世界中并不是所有的用户都有高数率的网络连接，也许用户使用的是拨号接入，移动设备，3G，或者是 USB 网络加密狗。如果我们没有在低数率的网络环境中测试过我们 Web 应用，极有可能在上线...">
<meta itemprop="datePublished" content="2010-07-09T08:00:14+08:00">
<meta itemprop="dateModified" content="2010-07-07T22:30:28+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2574.html">
<meta itemprop="author" content="jnj">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2574.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="2.8">
<meta itemprop="ratingCount" content="5">
</div>
</div>
<div id="post-ratings-2574-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-09T08:00:14+08:00</pubDate>
<guid>https://coolshell.cn/articles/2574.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Web版的VNC ]]></title>
<link>https://coolshell.cn/articles/2593.html</link>
<content><![CDATA[ 
<p>想在Web上远程控制远端的电脑吗？<a href="http://guacamole.sourceforge.net/" target="_blank">Guacamole</a>开源项目提供了这样的解决方案，其主要使用了HTML5和Ajax。下面是一个载图。如果你能够访问Youtube的话，你可以看看这个<a href="https://www.youtube.com/watch?v=Oag4EUlpL4c&amp;feature=player_embedded" target="_blank">视频</a>。</p>
<figure style="width: 564px" class="wp-caption aligncenter"><a href="http://guacamole.sourceforge.net/"><img alt="image placeholder" >
<p>是啊，HTML5强大了，什么都能干了，<a href="https://coolshell.cn/articles/2497.html" target="_blank">连Flash也要取代了</a>。现如今，什么事都在往Web上移植了，Chrome也OS了。可以预见在HTML5出来后，未来这样的事情会越来越多，以后的一些移动和掌上设备真的只需要一个Web Browsers.</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9749.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9666.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5537.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4795.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2593" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="ab4194f89a">
<img alt="image placeholder" >
<meta itemprop="headline" content="Web版的VNC">
<meta itemprop="description" content="想在Web上远程控制远端的电脑吗？Guacamole开源项目提供了这样的解决方案，其主要使用了HTML5和Ajax。下面是一个载图。如果你能够访问Youtube的话，你可以看看这个视频。



是啊，HTML5强大了，什么都能干了，连Flash也要取代了。现如今，什么事都在往Web上移植了，Chrome也OS了。可以预见在HTML5出来后，未来这样的事情会越来越多，以后的一些移动和掌上设备...">
<meta itemprop="datePublished" content="2010-07-11T12:18:19+08:00">
<meta itemprop="dateModified" content="2010-07-11T12:18:19+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2593.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2593.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="2.67">
<meta itemprop="ratingCount" content="6">
</div>
</div>
<div id="post-ratings-2593-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-11T12:18:19+08:00</pubDate>
<guid>https://coolshell.cn/articles/2593.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 一些重要的算法 ]]></title>
<link>https://coolshell.cn/articles/2583.html</link>
<content><![CDATA[ 
<div>
<p>下面是一些比较重要的算法，<a href="http://www.risc.jku.at/people/ckoutsch/stuff/e_algorithms.html" target="_blank">原文</a>罗列了32个，但我觉得有很多是数论里的，和计算机的不相干，所以没有选取。下面的这些，有的我们经常在用，有的基本不用。有的很常见，有的很偏。不过了解一下也是好事。也欢迎你留下你觉得有意义的算法。（注：本篇文章并非翻译，其中的算法描述大部份摘自Wikipedia，因为维基百科描述的很专业了）<big></big></p>
<ol>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/A*%E6%90%9C%E5%AF%BB%E7%AE%97%E6%B3%95" target="_blank"><strong>A*搜寻算法</strong><br>
</a></big>俗称A星算法。这是一种在图形平面上，有多个节点的路径，求出最低通过成本的算法。常用于游戏中的NPC的移动计算，或线上游戏的BOT的移动计算上。该算法像<a title="Dijkstra算法" href="https://zh.wikipedia.org/zh-cn/Dijkstra%E7%AE%97%E6%B3%95" target="_blank">Dijkstra算法</a>一样，可以找到一条最短路径；也像<a title="BFS" href="https://zh.wikipedia.org/zh-cn/BFS" target="_blank">BFS</a>一样，进行启发式的搜索。</li>
<li>
<big><a href="https://en.wikipedia.org/wiki/Beam_search" target="_blank"><strong>Beam Search</strong></a></big><br>
束搜索(beam search) 方法是解决优化问题的一种启发式方法,它是在分枝定界方法基础上发展起来的,它使用启发式方法估计k 个最好的路径,仅从这k 个路径出发向下搜索,即每一层只有满意的结点会被保留,其它的结点则被永久抛弃,从而比分枝定界法能大大节省运行时间。束搜索于20 世纪70 年代中期首先被应用于人工智能领域,1976 年Lowerre 在其称为HARPY的语音识别系统中第一次使用了束搜索方法,他的目标是并行地搜索几个潜在的最优决策路径以减少回溯,并快速地获得一个解。</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/%E6%8A%98%E5%8D%8A%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95" target="_blank"><strong>二分取中查找算法</strong></a></big><br>
一种在有序数组中查找某一特定元素的搜索算法。搜素过程从数组的中间元素开始，如果中间元素正好是要查找的元素，则搜素过程结束；如果某一特定元素大于或者小于中间元素，则在数组大于或小于中间元素的那一半中查找，而且跟开始一样从中间元素开始比较。这种搜索算法每一次比较都使搜索范围缩小一半。<br>
<span id="more-2583"></span>
</li>
<li>
<big><a href="https://en.wikipedia.org/wiki/Branch_and_bound" target="_blank"><strong>Branch and bound</strong></a></big><br>
分支定界 (branch and bound) 算法是一种在问题的解空间树上搜索问题的解的方法。但与回溯算法不同，分支定界算法采用广度优先或最小耗费优先的方法搜索解空间树，并且，在分支定界算法中，每一个活结点只有一次机会成为扩展结点。</li>
<li>
<big><a href="https://en.wikipedia.org/wiki/Data_compression" target="_blank"><strong>数据压缩</strong></a><br>
</big>数据压缩是通过减少计算机中所存储数据或者通信传播中数据的冗余度，达到增大数据密度，最终使数据的存储空间减少的技术。数据压缩在文件存储和分布式系统领域有着十分广泛的应用。数据压缩也代表着尺寸媒介容量的增大和网络带宽的扩展。</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/Diffie-Hellman%E5%AF%86%E9%92%A5%E4%BA%A4%E6%8D%A2" target="_blank"><strong>Diffie–Hellman密钥协商</strong></a><br>
</big>Diffie–Hellman key exchange，简称“D–H”， 是一种安全协议。它可以让双方在完全没有对方任何预先信息的条件下通过不安全信道建立起一个密钥。这个密钥可以在后续的通讯中作为对称密钥来加密通讯内容。</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/%E8%BF%AA%E7%A7%91%E6%96%AF%E5%BD%BB%E7%AE%97%E6%B3%95" target="_blank"><strong>Dijkstra’s 算法</strong></a><br>
</big>迪科斯彻算法（Dijkstra）是由荷兰计算机科学家<a title="艾兹格·迪科斯彻" href="https://zh.wikipedia.org/zh-cn/%E8%89%BE%E8%8C%B2%E6%A0%BC%C2%B7%E8%BF%AA%E7%A7%91%E6%96%AF%E5%BE%B9">艾兹格·迪科斯彻</a>（Edsger Wybe Dijkstra）发明的。算法解决的是有向图中单个源点到其他顶点的最短路径问题。举例来说，如果图中的顶点表示城市，而边上的权重表示著城市间开车行经的距离，迪科斯彻算法可以用来找到两个城市之间的最短路径。</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92" target="_blank"><strong>动态规划</strong></a><br>
</big>动态规划是一种在数学和计算机科学中使用的，用于求解包含重叠子问题的<a title="最优化" href="https://zh.wikipedia.org/zh-cn/%E6%9C%80%E4%BC%98%E5%8C%96">最优化</a>问题的方法。其基本思想是，将原问题分解为相似的子问题，在求解的过程中通过子问题的解求出原问题的解。动态规划的思想是多种算法的基础，被广泛应用于计算机科学和工程领域。比较著名的应用实例有：求解<a title="最短路径" href="https://zh.wikipedia.org/zh-cn/%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84">最短路径</a>问题，<a title="背包问题" href="https://zh.wikipedia.org/zh-cn/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98">背包问题</a>，<a title="项目管理" href="https://zh.wikipedia.org/zh-cn/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86">项目管理</a>，<a title="网络流" href="https://zh.wikipedia.org/zh-cn/%E7%BD%91%E7%BB%9C%E6%B5%81">网络流</a>优化等。这里也有<a href="https://www.cnblogs.com/drizzlecrj/archive/2007/10/26/939159.html" target="_blank">一篇文章</a>说得比较详细。</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95" target="_blank"><strong>欧几里得算法</strong></a><br>
</big>在数学中，辗转相除法，又称欧几里得算法，是求<a title="最大公约数" href="https://zh.wikipedia.org/zh-cn/%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0">最大公约数</a>的算法。辗转相除法首次出现于<a title="欧几里得" href="https://zh.wikipedia.org/zh-cn/%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97">欧几里得</a>的《<a title="几何原本" href="https://zh.wikipedia.org/zh-cn/%E5%87%A0%E4%BD%95%E5%8E%9F%E6%9C%AC">几何原本</a>》（第VII卷，命题i和ii）中，而在中国则可以追溯至东汉出现的《<a title="九章算术" href="https://zh.wikipedia.org/zh-cn/%E4%B9%9D%E7%AB%A0%E7%AE%97%E6%9C%AF">九章算术</a>》。</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/%E6%9C%80%E5%A4%A7%E6%9C%9F%E6%9C%9B%E7%AE%97%E6%B3%95" target="_blank"><strong>最大期望（EM）算法</strong></a><br>
</big>在统计计算中，最大期望（EM）算法是在<a title="概率" href="https://zh.wikipedia.org/zh-cn/%E6%A6%82%E7%8E%87">概率</a>（<a title="en:probability" href="https://en.wikipedia.org/wiki/probability">probabilistic</a>）模型中寻找参数最大似然估计的算法，其中概率模型依赖于无法观测的隐藏变量（<a title="en:latent variable" href="https://en.wikipedia.org/wiki/latent_variable">Latent Variable</a>）。最大期望经常用在<a title="机器学习" href="https://zh.wikipedia.org/zh-cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0">机器学习</a>和<a title="计算机视觉" href="https://zh.wikipedia.org/zh-cn/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89">计算机视觉</a>的<a title="数据聚类" href="https://zh.wikipedia.org/zh-cn/%E6%95%B0%E6%8D%AE%E8%81%9A%E7%B1%BB">数据聚类</a>（<a title="en:data clustering" href="https://en.wikipedia.org/wiki/data_clustering">Data Clustering</a>）领域。最大期望算法经过两个步骤交替进行计算，第一步是计算期望（E），利用对隐藏变量的现有估计值，计算其最大似然估计值；第二步是最大化（M），最大化在 E 步上求得的最大似然值来计算参数的值。M 步上找到的参数估计值被用于下一个 E 步计算中，这个过程不断交替进行。</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2" target="_blank"><strong>快速傅里叶变换</strong></a><strong> (FFT)</strong><br>
</big>快速傅里叶变换（Fast Fourier Transform，FFT），是<a title="离散傅里叶变换" href="https://zh.wikipedia.org/zh-cn/%E7%A6%BB%E6%95%A3%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2">离散傅里叶变换</a>的快速算法，也可用于计算离散傅里叶变换的逆变换。快速傅里叶变换有广泛的应用，如<a title="数字信号处理" href="https://zh.wikipedia.org/zh-cn/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86">数字信号处理</a>、计算<a title="大整数乘法（尚未撰写）" href="https://zh.wikipedia.org/w/index.php?title=%E5%A4%A7%E6%95%B4%E6%95%B0%E4%B9%98%E6%B3%95&amp;action=edit&amp;redlink=1">大整数乘法</a>、求解<a title="偏微分方程" href="https://zh.wikipedia.org/zh-cn/%E5%81%8F%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B">偏微分方程</a>等等。本条目只描述各种快速算法，对于离散傅里叶变换的性质和应用，请参见<a title="离散傅里叶变换" href="https://zh.wikipedia.org/zh-cn/%E7%A6%BB%E6%95%A3%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2">离散傅里叶变换</a>。</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B8" target="_blank"><strong>哈希函数</strong></a><br>
</big>Hash Function是一种从任何一种数据中创建小的数字“指纹”的方法。该函数将数据打乱混合，重新创建一个叫做散列值的指纹。散列值通常用来代表一个短的随机字母和数字组成的字符串。好的散列函数在输入域中很少出现散列冲突。在散列表和数据处理中，不抑制冲突来区别数据，会使得数据库记录更难找到。</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/%E5%A0%86%E7%A9%8D%E6%8E%92%E5%BA%8F" target="_blank"><strong>堆排序</strong></a><br>
</big><strong>Heapsort </strong>是指利用<a title="堆 (数据结构)" href="https://zh.wikipedia.org/zh-cn/%E5%A0%86_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)">堆积树</a>（<a title="堆 (数据结构)" href="https://zh.wikipedia.org/zh-cn/%E5%A0%86_(%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84)">堆</a>）这种数据结构所设计的一种排序算法。堆积树是一个近似<a title="完全二叉树" href="https://zh.wikipedia.org/zh-cn/%E5%AE%8C%E5%85%A8%E4%BA%8C%E5%8F%89%E6%A0%91">完全二叉树</a>的结构，并同时满足<em>堆积属性</em>：即子结点的键值或索引总是小于（或者大于）它的父结点。</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F" target="_blank"><strong>归并排序</strong></a><br>
</big><strong>Merge sort</strong>是建立在归并操作上的一种有效的<a title="排序" href="https://zh.wikipedia.org/zh-cn/%E6%8E%92%E5%BA%8F">排序</a><a title="算法" href="https://zh.wikipedia.org/zh-cn/%E7%AE%97%E6%B3%95">算法</a>。该算法是采用<a title="分治法" href="https://zh.wikipedia.org/zh-cn/%E5%88%86%E6%B2%BB%E6%B3%95">分治法</a>（Divide and Conquer）的一个非常典型的应用。</li>
<li>
<big><a href="https://en.wikipedia.org/wiki/RANSAC" target="_blank"><strong>RANSAC 算法</strong></a><br>
</big>RANSAC 是”RANdom SAmple Consensus”的缩写。该算法是用于从一组观测数据中估计数学模型参数的迭代方法，由Fischler and Bolles在1981 提出，它是一种非确定性算法，因为它只能以一定的概率得到合理的结果，随着迭代次数的增加，这种概率是增加的。 该算法的基本假设是观测数据集中存在”inliers”（那些对模型参数估计起到支持作用的点）和”outliers”（不符合模型的点），并且这组观测数据受到噪声影响。RANSAC 假设给定一组”inliers”数据就能够得到最优的符合这组点的模型。</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-tw/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95" target="_blank"><strong>RSA加密演算法</strong></a></big><br>
这是一个公钥加密算法，也是世界上第一个适合用来做签名的算法。今天的RSA已经专利失效，其被广泛地用于电子商务加密，大家都相信，只要密钥足够长，这个算法就会是安全的</li>
<li>
<big><a href="https://zh.wikipedia.org/zh-cn/%E5%B9%B6%E6%9F%A5%E9%9B%86" target="_blank"><strong>并查集Union-find</strong></a><br>
</big>并查集是一种树型的数据结构，用于处理一些不相交集合（Disjoint Sets）的合并及查询问题。常常在使用中以森林来表示。</li>
<li>
<big><a href="http://blog.52nlp.org/hmm-learn-best-practices-six-viterbi-algorithm-1" target="_blank"><strong>Viterbi algorithm</strong></a><br>
</big>寻找最可能的隐藏状态序列(Finding most probable sequence of hidden states)</li>
</ol>
<p><strong>附录</strong></p>
<ul>
<li>关于这个世界上的算法，你可以看看Wikipedia的这个网页：<a href="https://en.wikipedia.org/wiki/List_of_algorithms">http://en.wikipedia.org/wiki/List_of_algorithms</a>
</li>
<li>关于排序算法，你可以看看本站的这几篇文章《<a rel="bookmark" href="https://coolshell.cn/articles/536.html" target="_blank">一个显示排序过程的Python脚本</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/399.html" target="_blank">一个排序算法比较的网站</a>》</li>
</ul>
<p>。</p>
</div>
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3933.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/536.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/399.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12052.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6010.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4671.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2583" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="708a75c7b1">
<img alt="image placeholder" >
<meta itemprop="headline" content="一些重要的算法">
<meta itemprop="description" content="

下面是一些比较重要的算法，原文罗列了32个，但我觉得有很多是数论里的，和计算机的不相干，所以没有选取。下面的这些，有的我们经常在用，有的基本不用。有的很常见，有的很偏。不过了解一下也是好事。也欢迎你留下你觉得有意义的算法。（注：本篇文章并非翻译，其中的算法描述大部份摘自Wikipedia，因为维基百科描述的很专业了）

	A*搜寻算法
俗称A星算法。这是一种在图形平面上，有多个节点的...">
<meta itemprop="datePublished" content="2010-07-12T08:27:38+08:00">
<meta itemprop="dateModified" content="2010-07-12T11:34:15+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2583.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2583.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.39">
<meta itemprop="ratingCount" content="18">
</div>
</div>
<div id="post-ratings-2583-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-12T08:27:38+08:00</pubDate>
<guid>https://coolshell.cn/articles/2583.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 十个免费的Web压力测试工具 ]]></title>
<link>https://coolshell.cn/articles/2589.html</link>
<content><![CDATA[ 
<p><img alt="image placeholder" >
<p><strong><a href="http://grinder.sourceforge.net/" target="_blank">Grinder</a></strong> –  Grinder是一个开源的JVM负载测试框架，它通过很多负载注射器来为分布式测试提供了便利。 支持用于执行测试脚本的Jython脚本引擎HTTP测试可通过HTTP代理进行管理。根据项目网站的说法，Grinder的 主要目标用户是“理解他们所测代码的人——Grinder不仅仅是带有一组相关响应时间的‘黑盒’测试。由于测试过程可以进行编码——而不是简单地脚本 化，所以程序员能测试应用中内部的各个层次，而不仅仅是通过用户界面测试响应时间。</p>
<p><strong><a href="http://www.pylot.org/" target="_blank">Pylot</a></strong> -Pylot是一款开源的测试web service性能和扩展性的工具，它运行HTTP 负载测试，这对容量计划，确定基准点，分析以及系统调优都很有用处。Pylot产生并发负载（HTTP Requests），检验服务器响应，以及产生带有metrics的报表。通过GUI或者shell/console来执行和监视test suites。</p>
<p><a href="http://www.iis.net/community/default.aspx?tabid=34&amp;i=1466&amp;g=6" target="_blank"><strong>Web Capacity Analysis Tool (WCAT)</strong></a> – 这是一种轻量级负载生成实用工具，不仅能够重现对 Web 服务器（或负载平衡服务器场）的脚本 HTTP 请求，同时还可以收集性能统计数据供日后分析之用。WCAT 是多线程应用程序，并且支持从单个源控制多个负载测试客户端，因此您可以模拟数千个并发用户。该实用工具利用您的旧机器作为测试客户端，其中每个测试客户端又可以产生多个虚拟客户端（最大数量取决于客户端机器的网络适配器和其他硬件）。您可以选择使用 HTTP 1.0 还是 HTTP 1.1 请求，以及是否使用 SSL。并且，如果测试方案需要，您还可以使用脚本执行的基本或 NTLM 身份验证来访问站点的受限部分。（如果您的站点使用 cookie、表单或基于会话的身份验证，那您可以创建正确的 GET 或 POST 请求来对测试用户进行身份验证。）WCAT 还可管理您站点可能设置的任何 cookie，所以配置文件和会话信息将永久保存。</p>
<p><span id="more-2589"></span></p>
<p><strong><a href="http://fwptt.sourceforge.net/index.html" target="_blank">fwptt</a></strong> – fwptt 也是一个用来进行WEB应用负载测试的工具。它可以记录一般的请求，也可以记录Ajax请求。它可以用来测试 asp.net， jsp， php 或是其它的Web应用。</p>
<p><strong><a href="http://jcrawler.sourceforge.net/" target="_blank">JCrawler</a></strong> – JCrawler是一个开源(<a href="http://www.opensource.org/licenses/cpl.php" target="_blank"> CPL</a>) 的WEB应用压力测试工具。通过其名字，你就可以知道这是一个用Java写的像网页爬虫一样的工具。只要你给其几个URL，它就可以开始爬过去了，它用一种特殊的方式来产生你WEB应用的负载。这个工具可以用来测试搜索引擎对你站点产生的负载。当然，其还有另一功能，你可以建立你的网站地图和再点击一下，将自动提交Sitemap给前5名的搜索引擎！</p>
<p><strong><a href="https://jakarta.apache.org/jmeter/" target="_blank">Apache JMeter</a></strong> – Apache JMeter是一个专门为运行和服务器装载测试而设计的、100％的纯Java桌面运行程序。原先它是为Web/HTTP测试而设计的，但是它已经扩展以支持各种各样的测试模块。它和用于HTTP和SQL数据库（使用JDBC）的模块一起运送。它可以用来测试静止资料库或者活动资料库中的服务器的运行情况，可以用来模拟对服务器或者网络系统加以重负荷以测试它的抵抗力，或者用来分析不同负荷类型下的所有运行情况。它也提供了一个可替换的界面用来定制数据显示，测试同步及测试的创建和执行。</p>
<p><strong><a href="http://www.joedog.org/index/siege-home" target="_blank">Siege</a></strong> -Siege（英文意思是围攻）是一个压力测试和评测工具，设计用于WEB开发这评估应用在压力下的承受能力：可以根据配置对一个WEB站点进行多用户的并发访问，记录每个用户所有请求过程的相应时间，并在一定数量的并发访问下重复进行。 Siege 支持基本的认证，cookies， HTTP 和 HTTPS 协议。</p>
<p><strong><a href="http://www.acme.com/software/http_load/" target="_blank">http_load</a></strong> – http_load 以并行复用的方式运行，用以测试web服务器的吞吐量与负载。但是它不同于大多数压力测试工具，它可以以一个单一的进程运行，一般不会把客户机搞死。可以可以测试HTTPS类的网站请求。</p>
<p><strong><a href="http://www.web-polygraph.org/" target="_blank">Web Polygraph</a></strong> – Web Polygraph这个软件也是一个用于测试WEB性能的工具，这个工具是很多公司的标准测试工具，包括微软在分析其软件性能的时候，也是使用这个工具做为基准工具的。很多招聘测试员的广告中都注明需要熟练掌握这个测试工具。</p>
<p><strong><a href="http://opensta.org/" target="_blank">OpenSTA</a></strong> – OpenSTA是一个免费的、开放源代码的web性能测试工具，能录制功能非常强大的脚本过程，执行性能测试。例如虚拟多个不同的用户同时登陆被测试网站。其还能对录制的测试脚本进行,按指定的语法进行编辑。在录制完测试脚本后，可以对测试脚本进行编辑，以便进行特定的性能指标分析。其较为丰富的图形化测试结果大大提高了测试报告的可阅读性。OpenSTA 基于CORBA 的结构体系，它通过虚拟一个proxy，使用其专用的脚本控制语言，记录通过proxy 的一切HTTP/S traffic。通过分析OpenSTA的性能指标收集器收集的各项性能指标，以及HTTP 数据，对系统的性能进行分析。</p>
<p>欢迎您留下你认为不错的WEB应用性能测试的工具。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/8767.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2574.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18094.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12225.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12206.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2589" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="eb3e04be49">
<img alt="image placeholder" >
<meta itemprop="headline" content="十个免费的Web压力测试工具">
<meta itemprop="description" content="两天，jnj在本站发布了《如何在低速率网络中测试 Web 应用》，那是测试网络不好的情况。而下面是十个免费的可以用来进行Web的负载/压力测试的工具，这样，你就可以知道你的服务器以及你的WEB应用能够顶得住多少的并发量，以及你的网站的性能。我相信，北京奥组委的订票网站的开发团队并不知道有这样的测试工具。

Grinder -  Grinder是一个开源的JVM负载测试框架，它通过很多负载注射器...">
<meta itemprop="datePublished" content="2010-07-13T08:50:40+08:00">
<meta itemprop="dateModified" content="2010-07-11T12:20:38+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2589.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2589.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.67">
<meta itemprop="ratingCount" content="6">
</div>
</div>
<div id="post-ratings-2589-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-13T08:50:40+08:00</pubDate>
<guid>https://coolshell.cn/articles/2589.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Google App Inventor ]]></title>
<link>https://coolshell.cn/articles/2608.html</link>
<content><![CDATA[ 
<p>Google 本周一发布了一个新的工作可以让任何人创建Android手机应用。这个工具叫<a href="http://appinventor.googlelabs.com/" target="_blank"><strong>Google App Inventor</strong></a>。（目前， App Inventor好像只对教育者开放）Google说：“你不必是一个专业开发人员就能轻松使用App Inventor。使用App Inventor无须掌握编程知识。因为你根本就不需要编写代码，你只需在可视化界面上设计应用的界面，并使用“blocks”指定应用的行为（behavior）。”</p>
<figure id="attachment_2610" aria-describedby="caption-attachment-2610" style="width: 552px" class="wp-caption aligncenter"><a href="http://appinventor.googlelabs.com/"><img alt="image placeholder" >
<p>注意，Google说的是任何人，也就是包括那些不会编程的人。这个工具可以将枯燥的代码变成了一块一块的拼图，你需要做的只是把这些零散的拼图按照你自己的意思组合在一起，点击生成，你的第一个 Android 程序就诞生了。这里有一篇来自 <a href="https://www.nytimes.com/2010/07/12/technology/12google.html" target="_blank">纽约时代的报道</a>，《纽约时代》报道称，App Inventor已经在六年级的孩子们中完成测试，他们能够使用App Inventor制作简单的应用。如果你可以访问Youtube的话，你可以看看这个<a href="https://www.youtube.com/watch?v=8ADwPLSFeY8" target="_blank">视频</a>。</p>
<p><span id="more-2608"></span></p>
<p>这个想法，这会让 Android 市场不仅对程序开放，而且我们可能看到还有一大批很有创意但不懂编程的人为这个平台添砖加瓦，当然，这也可能会出现很多垃圾应用，正如不会做网页的人用所见即所得的编辑器做出的那些相当ugly劣质网页一样。瑕不蔽玉，就算是有大量的劣质应用的出现，我也相信，同样会涌现出更多更好的应用，那些都是技术人员无法做到的。</p>
<p>当然，这种想法以前也有，不过仅仅是当玩具玩玩，这回，做这个事的是Google，我不知道他能把这个事情做成什么样？但觉得可能会比较专业。如果只是整成另一个VB的翻版嘛，那就很囧了。</p>
<p>让我们看看，最终这个玩意，<span style="color: #000000;"><strong>会成为像Dreamweaver或Flash那样把网页开发变成傻瓜化，还是会像VB那样把程序员变成傻瓜</strong></span>。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/12136.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3549.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2853.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1152.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17066.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12225.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2608" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="99210b442d">
<img alt="image placeholder" >
<meta itemprop="headline" content="Google App Inventor">
<meta itemprop="description" content="Google 本周一发布了一个新的工作可以让任何人创建Android手机应用。这个工具叫Google App Inventor。（目前， App Inventor好像只对教育者开放）Google说：“你不必是一个专业开发人员就能轻松使用App Inventor。使用App Inventor无须掌握编程知识。因为你根本就不需要编写代码，你只需在可视化界面上设计应用的界面，并使用“blocks”指定应...">
<meta itemprop="datePublished" content="2010-07-13T16:37:06+08:00">
<meta itemprop="dateModified" content="2010-07-14T08:48:29+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2608.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2608.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.82">
<meta itemprop="ratingCount" content="11">
</div>
</div>
<div id="post-ratings-2608-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-13T16:37:06+08:00</pubDate>
<guid>https://coolshell.cn/articles/2608.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 五个编程语言设计的失误 ]]></title>
<link>https://coolshell.cn/articles/2598.html</link>
<content><![CDATA[ 
<p>在近几年来，编程语言的设计正在经历着类似于“文艺复兴”的过程，这么说主要是基于下面两个事实：1）多核技术推动着PC消费者更多的关注并行程序。2）动态语言的性能越来越好，其性期已经可以足够用来实现互联网服务，并且它们正在走出“脚本语言”阴影。</p>
<p>这篇文章试图收集最重要的编程语言的设计错误，以便让那些程序语言设计者们在设计新型的编程语言时避免。我避免了一些纠缠不清的有好有坏的问题，如：动态类型或是静态类型。我也省略了那些看起来并不严重，很容易被修改的错误。例如，加入“参量”（Parametric Type），这在Java中已经有了。Sun在发布Java 1.0版后的第八年才加入了这一功能。还有一个最近的例子是 <a href="https://golang.org/doc/go_lang_faq.html#generics" target="_blank">Google Go Language Design FAQ</a> 中说到的：: “Generics may well be added at some point. We don’t feel an urgency for them, although we understand some programmers do.”</p>
<h3>0. Null 指针</h3>
<p>几乎在所有的主流编程语言中，对一个对像的引用可能会是一个空指针，这个错误会引发运行时错误。 C.A.R. Hoare 最近声明向这一“发明”负责，尽管如此，其它许多的设计者们都应该对这样的设计受到批评。下面是 C.A.R Hoare 的“忏悔”：</p>
<blockquote>
<p>I call it my billion-dollar mistake. It was the invention of the null reference in 1965. […] More recent programming languages like Spec# have introduced declarations for non-null references. This is the solution, which I rejected in 1965. – <a href="http://qconlondon.com/london-2009/presentation/Null+References:+The+Billion+Dollar+Mistake" target="_blank">C.A.R. Hoare</a></p>
<p>我把它叫做“亿万美元错误”。这个空指针的发明创造来自1965年。…… 现在的编程语言引入了“非空引用”的声明规格。这个方案被我在1965年给拒绝了。</p>
</blockquote>
<p><span id="more-2598"></span></p>
<p>其它语言，如 C/C++ 更夸张，它们在运到这样的错误时，直接Crash掉，而 Java， Python 和其它语言会抛出一NullPointerException异常，但问题是，这个 RuntimeException 可能会被几乎所有的语句抛出。其实，只需要一个静态类型的语言就可以保证不会出现空指针或空引用。例如： <a href="http://cyclone.thelanguage.org/" target="_blank">Cyclone</a> 是一个安全的C变种，其引入了非空指针和指针运算的限制。</p>
<p>一些语言甚至让你根本不可能创建空指针，虽然这使得明确的指针不能行进行运算。Haskell 就是这样的一个语言，其提供了Maybe Monad，其强制程序员考虑“Null”的情形。</p>
<h3>1. 很难解析的语法</h3>
<p>编程语言的语法应该来自 <a href="https://en.wikipedia.org/wiki/LALR_parser" target="_blank">LALR</a> 或是更好的 <a href="https://en.wikipedia.org/wiki/LL_parser" target="_blank">LL(1)</a>。今天的程序员需要适当的工具来支持其开发语言，也就是我们常说的IDE，编译器或是其它可以帮你解析程序语言的编程工具。这并不会出现在一个单一的前端。也许，多重编译器已经被实现出来了。这可能让我们的开始变得更容易一些。然而，我们现实中的一个反例是 C++，几乎没有哪个C++的编译器可以把C++这个语言完美地正确地解释出来，而且不同C++的编译器的行为如此的诡异。编程语法的开销是微不足道的，程序员应该在编写程序中享有更快速和高效的回报。</p>
<h3>2. 未定义的语义</h3>
<p>别在语言规格中说“实现规范”！尽可能的少使用“未定义”这样的术语来描述语言的行为（C/C++中出现了很多undefined的行为）！黄金准则是StandardML，其是一个完整地正式的语义。C 语言是这样一个反例，其规则中有太多太多的未定义的情况。然而，由于其广泛使用，所以某些行为的定义已经成为了世界的共识（江湖的行规，或，潜规则）。 举个例子，在C中，整型 overflow 的行为是未定义的，而编译器也是有能力推断出“ <code>x &lt; x+1</code> ”是否总是为真。不幸的是，这个本来是编译器应该干的事，交给了程序员，于是在C的世界里，出现了大量的整型溢出的代码。而当整型溢出的时候，几乎所有的行为都是像x86处理器一样（如： <code>maxint+1 == minint）。</code></p>
<p>明确的语义可以让验证和错误检查更容易。虽然，软件校验来得比缓慢，但一定会来。我可以想像，编程语言的下一个机会将会是更容易地校验，这可能需要十到二十年的时间，但今天开始这样做的语言将会在那天成为世界的主流。</p>
<h3>3. 坏的Unicode 支持</h3>
<p>程序中几乎都要处理字符串，但别忘了并不是所有人都会使用英语来编程。今天，几乎所有的编程语言都不支持Unicode，所以，我们只能使用ANSI的英语来编程。这个时代， 程序员应该使用Unicode 来编程，所以，源代码也可以声明其用什么来编码。</p>
<p>在文本和字节序间的转换和区分在的标准库方面会比语言方面更是一个问题，当然，这也影响了语法。读一读 <a href="https://docs.python.org/py3k/whatsnew/3.0.html#text-vs-data-instead-of-unicode-vs-8-bit" target="_blank">Python 3 是怎么解决这个问题</a>可能会更有一些帮助。</p>
<h3>4. 预处理器</h3>
<p>像C++和MP4的预处理器已经被广泛地使用着，使用预处理器更像是一种hack而不是一个干净的解决方案。 他们被用来，使用外部文件（如头文件，但确没有正确地模块机制），使用条件编译，宏替换，等。把这些功能与编程语言集成起来一起使用可以增加程序的性能和开发效率，并没有什么不好的地方。</p>
<p>如果要举一个反例，那么就是预编译器的模块化系统。C使用<code>#include</code> 而 C++ 更痛苦，因为模板需要写一个大的头文件，而且其会被包含在几乎所有的其它文件中。而一个真正的模块化的系统是不需要使用 <code>extern</code> 关键字，也不需要程序的链接，而应该是直接使用。</p>
<h2></h2>
<p>文章：<a href="http://beza1e1.tuxen.de/articles/proglang_mistakes.html" target="_blank">来源</a></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/6639.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4626.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3385.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3100.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2724.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2539.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2598" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="067c9c9c29">
<img alt="image placeholder" >
<meta itemprop="headline" content="五个编程语言设计的失误">
<meta itemprop="description" content="在近几年来，编程语言的设计正在经历着类似于“文艺复兴”的过程，这么说主要是基于下面两个事实：1）多核技术推动着PC消费者更多的关注并行程序。2）动态语言的性能越来越好，其性期已经可以足够用来实现互联网服务，并且它们正在走出“脚本语言”阴影。

这篇文章试图收集最重要的编程语言的设计错误，以便让那些程序语言设计者们在设计新型的编程语言时避免。我避免了一些纠缠不清的有好有坏的问题，如：动态类型或是...">
<meta itemprop="datePublished" content="2010-07-14T08:38:34+08:00">
<meta itemprop="dateModified" content="2010-07-11T15:41:49+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2598.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2598.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.25">
<meta itemprop="ratingCount" content="16">
</div>
</div>
<div id="post-ratings-2598-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-14T08:38:34+08:00</pubDate>
<guid>https://coolshell.cn/articles/2598.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 五个方法成为更好的程序员 ]]></title>
<link>https://coolshell.cn/articles/2606.html</link>
<content><![CDATA[ 
<p>对我来说，一个好的程序员应该是努力去追求尽可能无错的高质量的符合需求的代码实现。 一些人也许认为好的程序员是那些懂得多门编程语言，懂得很牛技术的程序员，是的，这在某些情况下是对的。但归根到底，无论你用什么样的技术，什么样的语言，所有的程序被写出来，其功能都要符合需求以及尽可能地健壮无错和高质量。  我们可以想像一下，如果一个能力普通的程序员有足够多的时间来做测试，那么，其也可以保证他的代码的质量。所以，有一种观点这样认为——要达到质量高的代码只需要有足够多的时间来做测试。这对于以结果为导向的商业软件开发中是可以理解的（我们可以看到那些制汽车的产商在汽车测试上花费的精力和时间就可以明白这一道理）。</p>
<p>但是，很明显，所有的已经开发出来项目都是在不完美的条件下开发出来的，一般来说，几乎所有的项目都是在最大化程序员软件的开发速度。而且，很多情况下，我们似乎对深度测试和压力测试并不是很关心，所以，我们总是在祈祷并期望那些赶工出来的代码可以正常工作，尤其是在上线的时候，这种唯心主义的价值观更为强烈。  其实，开发速度和软件产品质量并不矛盾。<span style="color: #008000;"><strong>好的程序员并一定是技术强的程序员，而是那些可以在不完美的工作环境下保证软件质量和工作效率的程序员</strong></span>。下面是是五个程序员可以在这种不完美的情况下做得更好的观点（它们都和语言和技术没什么关系，只不过是一种你的工作行为，能够和所有的行业相通），这五个观点也许可以让你成为这样的好程序员。</p>
<p><strong> </strong></p>
<ul>
<li>
<span style="font-weight: normal;"><strong>寻找不同观点：</strong>程序员好像并不喜欢技术上有异见的人，他们特别喜欢争论各自的技术观点。但是，他们忽略了不同观点的价值。任何事情都有好有坏，我们应该学会在不同观点中学习和平衡。这样才会更多的了解编程和技术。要经常在做事之前问自己和别人，这么做对不对？做完事后问自己，还可不可以改进？努力去寻找别的不同的观点或方法。程序员应该经常上网，经常和同事讨论不同的实现方法，不同的技术观点，这样才能取长补短。然而，在实际工作中，我发现程序员们并不喜欢互相请教，因为请教的人怕别人看不起他，而被请教的人总是先贬低对方的能力，哎……（参看《</span><a rel="bookmark" href="https://coolshell.cn/articles/1081.html">十个让你变成糟糕的程序员的行为</a>》），如果有这样的文化氛围的话，那也没有关系。上网吧，网上的人谁也不认识谁，可以尽情地问一些愚蠢的问题。呵呵。总之，一定要明白，如果某些事情只有一个观点，那么你一定要怀疑一下了，没有观点和技术方案的比较，没有百花齐放的情况，你就无法知道是否还有更好的东西。真正的和谐不是只有一种声音，真正的和谐而是在不同的观点声音下取长补短，百家争鸣（参看《<a rel="bookmark" href="https://coolshell.cn/articles/2424.html" target="_blank">十条不错的编程观点</a>》）。否则，你永远都不会接受到新的观点，也就无法进步和成长了。</li>
</ul>
<p><span id="more-2606"></span></p>
<p><strong> </strong></p>
<ul>
<li><span style="font-weight: normal;"><strong>千万别信自己的代码</strong>: 在任何时候，一定要高度怀疑自己的代码。很多时候，错误总是自己造成的。所以，当出现问题的时候，要学会review代码中所有的可疑点，千万别觉得某段代码很简单，可以略过。事实证明，很多疏忽大意都是在阴沟里翻的船，都是那些很低级的错误。在查错的过程中，切忌过早下结论，切忌四处乱改（参看《<a rel="bookmark" href="https://coolshell.cn/articles/2058.html" target="_blank">各种流行的编程风格</a>》），停下来，想一想，会是哪儿的代码有重大嫌疑，然后查看一下代码，捋一捋程序的逻辑（参看《<a rel="bookmark" href="https://coolshell.cn/articles/1719.html">橡皮鸭程序调试法</a>》），调试并验证一下程序的逻辑和变量在运行时是否是正确的。很多时候，对于那些难缠的问题，最后解决了总是因为我们开始认真回头审视所有的代码。只有对自己的代码保持着高度的怀疑，这样我们才会想着如何让其运行得更好更稳定，也会让我们在单元测试中下更多的功夫，这样才能更能在那忙碌的环境中节省时间。相信我，在集成测试中fix bug的成本要比在单元测试Fix bug的成本大得多的多。一个简单的例子就是memory leak。程序员对自己的程序需要有忧患意识，这样才会越来越成熟，而自己的能力也会越来越强。</span></li>
</ul>
<p><strong> </strong></p>
<ul>
<li><span style="font-weight: normal;"><strong>思考和放松</strong>: 做事前多想一想，这样做事的时候就不会不顾此失彼，手忙脚乱，一旦事情一乱，你的心情也会更乱，于是，事情也就会更乱。最后，你只得重写，这种事情太多了。而且，在工作中要学会享受，要学会放松心情，我并不是让你工作的时候聊QQ，我只是说，有时候，心态过于紧张，压力过大，你的工作成果反而更不好，从而又反过来造成新一轮的焦虑和紧张。我个人认为，<strong>思考和放松是可以完美统一的</strong>，思考其实就是一种放松，停下来，休息一下，回头看看走过的路，喝口水，登个高，看看过去走的对不对？总体是个什么样？总结一下，然后看看前路怎么样好走，这会你才会越走越好，越走越快。好的程序员都不是那种埋头苦干的人，好的程序员总是那些善于总结成败得失，善于思考，善于调整，善于放松的人（参看《<a href="https://coolshell.cn/articles/222.html" target="_blank">优秀程序员的十个习惯</a>》）。不然，我能看到的情形是，你很快地把事干完，回到家刚坐下来，老板或是客户就打电话来告诉你你的程序出问题了。总之，深思熟虑，动作会很慢，但是你可以保证你工作成果的质量，反而能让你更多的节约时间。</span></li>
</ul>
<p><strong> </strong></p>
<ul>
<li>
<span style="font-weight: normal;"><strong>学习历史，跟上时代</strong>: 如果你是从十年前开始编程的，那么，今天的这门语言或是技术会有很多很多的改进和改善。你以前开发一个功能或函数，今天早已被集成时了语言中，而且做得比你的版本要好得多。以前你需要100行代码完成的事情，今天只需要1行代码。这样的事情在未来还会发生，所以，今天的你一定要学会如何跟上时代。但是，你也不要放弃历史，我现在看到很多程序员对一些现代的语言和技术使用的非常好，他们可以很容易地跟上时代。但不要忘了，计算机世界的技术更新和技术淘汰也是非常猛的。所以，你一定要学习历史，这些历史不是产商的历史，而是整个计算机文化的历史（参见《<a rel="bookmark" href="https://coolshell.cn/articles/2322.html" target="_blank">Unix传奇</a>》）。只有通过历史，你才能明白历史上出现的问题，新技术出来的原因，这样才能够对今天的这些新的技术更了解，也才能明白明天的方向在哪里。学习历史和跟上时代都是相当重要的。使用新型的技术，停下来接受培训，可以让你工作得更快，更高效（参看《</span><a rel="bookmark" href="https://coolshell.cn/articles/511.html" target="_blank">未来五年程序员需要掌握的10项技能</a>》）。而学习和总结历史，才会让你在纷乱的世界中找到方向。</li>
</ul>
<p><strong> </strong></p>
<ul>
<li><span style="font-weight: normal;"><strong>积极推动测试活动</strong>: 只有测试才能证明软件可以正常工作，只有测试才能保证软件的质量。无论什么产品，都需要经过或多或少的测试。测试地充分的产品或模块，你会发现其质量总是那么好，测试的不充的产品，质量总是那么次。德系汽车，日系汽车质量怎么样，关键还是在于怎么去测试的，测试的是否充分。所以，在你开发软件的过程中，如果你说你的程序写地好，质量高，那么请你拿出实实在在的测试报告。在整个软件开发过程中，做为一个好的程序员，你应该积极地在各个环节推动项目组进行测试活动。不要以为技术需求阶段和设计阶段不需要测试，一样的，只要你要release什么，release的这个东西都需要进行测试。技术需求怎么做测试？用户案例就是测试案例。在软件开发的整个过程中，保证产品质量有时候比实现需求更重要，尤其是那些非常重要甚至人命关天的产品。</span></li>
</ul>
<p>上面这些五个观点都是可能让你在不完美的工作环境中可以工作得更好，更快，更高效，希望能够对你有用。另外，也欢迎你留下你的观点！</p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/21589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20977.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20765.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20276.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19612.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19464.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2606" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="cfa7313d15">
<img alt="image placeholder" >
<meta itemprop="headline" content="五个方法成为更好的程序员">
<meta itemprop="description" content="对我来说，一个好的程序员应该是努力去追求尽可能无错的高质量的符合需求的代码实现。 一些人也许认为好的程序员是那些懂得多门编程语言，懂得很牛技术的程序员，是的，这在某些情况下是对的。但归根到底，无论你用什么样的技术，什么样的语言，所有的程序被写出来，其功能都要符合需求以及尽可能地健壮无错和高质量。  我们可以想像一下，如果一个能力普通的程序员有足够多的时间来做测试，那么，其也可以保证他的代码的质量。...">
<meta itemprop="datePublished" content="2010-07-15T07:53:16+08:00">
<meta itemprop="dateModified" content="2010-07-22T14:09:52+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2606.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2606.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.32">
<meta itemprop="ratingCount" content="25">
</div>
</div>
<div id="post-ratings-2606-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-15T07:53:16+08:00</pubDate>
<guid>https://coolshell.cn/articles/2606.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 为什么敏捷方法能在软件开发中行之有效？ ]]></title>
<link>https://coolshell.cn/articles/2622.html</link>
<content><![CDATA[ 
<p><em><a href="http://universite-du-si.com/en/conferences/6/sessions/909">文章来源 – Martin Fowler 和 Neal Ford 在 Paris – USI 2010 的演讲</a></em></p>
<p>有很多的书籍讨论敏捷方法是怎样工作的（How it works？），在这个主题演讲中，Martin Fowler 和他的同事 Neal Ford 讨论了敏捷方法能够在软件开发项目中行之有效的原因（Why it works？）。作为敏捷方法的发起人和传道者，Martin Fowler 和 ThoughtWorks 一直试图从理论层面证明敏捷方法的可行性，同时不厌其烦地解答着客户们的各种困惑，正如他们所说，敏捷方法中的很多概念不是特别的直观，除非人们真正实践过一段时间，否则有些概念很难从字面上去完全理解。</p>
<p>Martin Fowler 谈到一个有意思的现象，那就是今天许多人们口中谈论的敏捷方法，和最初的敏捷方法大相径庭，他把这种现象称为“语义扩散（Semantic Diffusion）”，大意是某种思想在传播的过程中，在逐渐扩散的同时，其语义也渐渐变得模糊。在敏捷开发领域里，“语义扩散”导致的一个问题是，在一些使用敏捷方法的项目或者公司中，我们甚至无法辨别出敏捷方法的影子，原因是很多人没有真正地理解敏捷方法，也就不能够正确地运用和实践，从而也就无法真正了解自己是否能够从敏捷方法中获益。</p>
<p style="text-align: center;"><a href="https://coolshell.cn/wp-content/uploads/2010/07/Martin-Flower1.jpg"><img alt="image placeholder" >
<p>以下是为什么敏捷方法行之有效的原因：</p>
<p><span id="more-2622"></span></p>
<h4><span style="color: #000000;"><strong>1. 敏捷方法和传统的计划驱动方法的两个主要区别</strong></span></h4>
<p>i. 预测性计划（Predictive Planning）和自适应计划（Adaptive Planning）</p>
<p>计划驱动方法首先计划要做的工作（plan your work），然后着手工作以完成计划（work your plan）。这是一种带有预测性质的方法，其衡量项目成功的标准则是我们是否按计划、按时、按预算完成了工作。这种方法在很多领域里是适用的。但是对于软件开发而言，如果我们的需求没有办法做到不变更的话，我们就无法保证我们的计划以及其后的工作是不会变更的。Martin Fowler 向现场观众提出了一个问题，大意是你们当中有多少人的软件开发项目的需求是一成不变的，结果没有一位观众举手。因此，敏捷方法引入了自适应计划的概念，既然我们无法保证需求不变更，那么就让我们随时准备接受变更，接受挑战吧。自适应计划将计划驱动的流程缩短为以数周为单位的循环周期，在每一个周期中，我们根据当前的情况不断地调整计划以及计划的执行过程，同时不断地产生能够工作的代码，并且不断地将代码部署到应用环境中去。当然要实现这个目标我们需要一些具体方法的支持，如：自测试代码（Self-Testing Code），持续集成（Continuous Integration），重构（Refactoring），和简洁设计（Simple Design）等等这些技术层面上的方法。Martin Fowler 指出，一些公司和项目之所以受困于敏捷方法，原因之一是他们忽略了这些技术层面的方法，而仅仅实施了项目管理层面的方法。</p>
<p>ii. 以流程为本（Process First）和以人为本（People First）</p>
<p>在传统的方法论中，我们总是需要事先定义好工作的方法和流程，然后“工人们”被要求遵照这些方法和流程来工作。在软件开发领域，很多人把软件开发过程等同于软件本身，也就是说，软件开发的过程也如同软件程序般象机器一样运行，组件之间环环相扣，严密地协同工作。问题是软件开发的核心是人，人相对于机器零件和流水线而言，是相对不可预测的和不那么精密的。所以敏捷方法反其道而行之，提倡将“首先定义流程，然后要求软件开发人员遵照流程工作”变为“让参与软件开发的人员自己来定义和选择适合他们的流程”。简单来说就是以人为本，不把人当螺丝钉，发挥人的主观能动性，当然前提是需要团队成员有较高的平均素质。</p>
<h4><span style="color: #000000;">2. 沟通（Communication）</span></h4>
<p>Neal Ford 让我们回顾或想象一下失败的软件开发项目，它们的失败是由于技术因素还是人的因素呢？《人件》的作者认为都是人的因素。人类的社会性决定了沟通的重要。Neal 举了几个有趣的例子，如：监狱里的犯人宁愿和其他人渣待在一起也不愿被关禁闭。很多国家禁止驾驶员驾驶时打移动电话，那为什么和乘客聊天就没有问题呢？原因是直接对话是最为有效和便捷的沟通方式，信息的传递在对话过程中非常顺畅和完整。虽然现在的移动通讯已经非常先进，信号质量也很高，但是我们的通话过程仍然是有损的，我们的大脑这个时候就需要努力地试图将通话信息拼凑得更完整以便能够理解对方的意思，因此才会分散驾驶的注意力。随后，Martin Fowler 举了另一个例子，拿他做水果蛋糕的方法和他在酒店的浴室中冲凉的方法来进行比较。因为做水果蛋糕的整个流程和配料都是非常固定的，所以他只需要按步照搬地烹饪即可做出味道非常一致（地好或者差）的水果蛋糕。而在酒店中冲凉就有些不同，因为每一个酒店浴室的开关设计几乎都是不一样的，所以他需要不断地调整开关来获得一个理想的水温，也就是需要不断地重复“调整开关”（输入），“用手试温”（输出）这个过程。相对于做水果蛋糕，在酒店浴室冲凉更好地反应了软件开发的特征，这就是在软件开发领域中，如果我们善于根据用户反馈的信息来做出新的判断和调整，就有可能提高产品的质量和用户的满意度。</p>
<p>沟通的确是一个非常重要的环节，它是敏捷方法的核心。在敏捷方法中，单元测试是程序员和代码组件的沟通，功能测试是程序员以及QA和系统的沟通，故事墙（Story Wall）和回顾（Retrospective）是团队和成员之间的沟通，功能演示（Showcase 或者 Demo）是团队通过产品和最终用户的沟通，持续集成（Continuous Integration）是产品和企业计算环境的沟通。沟通好了，什么事情都可以妥善解决，沟通得不好，好事也会变坏事。和广大技术爱好者交流沟通也是酷壳存在的目的和意义。</p>
<p>整个演讲时长一个小时，本文只是节选了我认为比较有意思的观点加上本人的理解写成，如有错误之处欢迎指正，不同看法欢迎交流。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/8209.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7657.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5531.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5625.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5143.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5044.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2622" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="b24e1b95f7">
<img alt="image placeholder" >
<meta itemprop="headline" content="为什么敏捷方法能在软件开发中行之有效？">
<meta itemprop="description" content="文章来源 - Martin Fowler 和 Neal Ford 在 Paris - USI 2010 的演讲

有很多的书籍讨论敏捷方法是怎样工作的（How it works？），在这个主题演讲中，Martin Fowler 和他的同事 Neal Ford 讨论了敏捷方法能够在软件开发项目中行之有效的原因（Why it works？）。作为敏捷方法的发起人和传道者，Martin Fowler...">
<meta itemprop="datePublished" content="2010-07-18T10:28:25+08:00">
<meta itemprop="dateModified" content="2010-07-20T00:23:56+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2622.html">
<meta itemprop="author" content="jnj">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2622.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.06">
<meta itemprop="ratingCount" content="17">
</div>
</div>
<div id="post-ratings-2622-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-18T10:28:25+08:00</pubDate>
<guid>https://coolshell.cn/articles/2622.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 五大基于JVM的脚本语言 ]]></title>
<link>https://coolshell.cn/articles/2631.html</link>
<content><![CDATA[ 
<p>还记得以前本站的一篇文章《<a rel="bookmark" href="https://coolshell.cn/articles/531.html" target="_blank">如何在Google App Engine上运行PHP</a>》吗，其实那是借用 <a href="http://www.caucho.com/resin-3.0/quercus/">Quercus</a>， 一个 100% 的用Java 实现的一个 PHP 引擎。今天，这样的东西太多了，能运行在Java的虚拟机JVM上的程序意味着有天然的跨平台性，现在JVM并不单单只能运行Java程序，在JVM上出现了若干使用Java虚拟机运行的脚本程序，比如什么PHP, Python, Ruby等等，这里有一篇<a href="http://infoworld.com/d/developer-world/top-five-scripting-languages-the-jvm-855" target="_blank">文章</a>评论了在JVM上的可以运行的排名前五脚本语言。他们分别是：</p>
<ol>
<li>
<a href="http://groovy.codehaus.org/" target="_blank"> <strong>Groovy</strong></a>。构建在强大的Java语言之上 并添加了从Python，Ruby和Smalltalk等语言中学到的诸多特征，为Java开发者提供了现代最流行的编程语言特性，而且学习成本很低（几乎为零），在开发Web，GUI，数据库或控制台程序时， 通过减少框架性代码 大大提高了开发者的效率。支持单元测试和模拟（对象），可以简化测试。无缝集成 所有已经存在的 Java对象和类库。直接编译成Java字节码，这样可以在任何使用Java的地方 使用Groovy。</li>
<li>
<a href="http://jruby.org/" target="_blank"><strong>JRuby</strong></a>。一个纯Java实现的Ruby解释器。通过JRuby，你可以在JVM上直接运行Ruby程序，调用Java的类库。很多Java编写的Ruby IDE都是使用JRuby来解释语法的。</li>
<li>
<a href="https://www.scala-lang.org/" target="_blank"> <strong>Scala</strong></a>。一种多范式的编程语言，设计意图是要整合面向对象编程和函数式编程的各种特性。Scala编程语言近来抓住了很多开发者的眼球。它看起来像是一种纯粹的面向对象编程语言，而又无缝地结合了命令式和函数式的编程风格。Scala的名称表明，它还是一种高度可伸缩的语言。Scala的设计始终贯穿着一个理念：创造一种更好地支持组件的语言。</li>
<li>
<a href="http://fantom.org/" target="_blank"><strong>Fantom </strong></a>。Fantom 前身是 (Fan) 是一个基于 Java 和 .NET 平台的编程脚本引擎，用来在运行时产生 JVM 和 .NET 平台的字节码，该语言是面向对象的，跟 Groovy 和 JRuby 有点类似，可通过特定的接口来集成 Java 的类库。</li>
<li>
<a href="http://www.jython.org/" target="_blank"><strong>Jython</strong></a>。Jython由于继承了Java和Python二者的特性而显得很独特。其是一种完整的语言，而不是一个Java翻译器或仅仅是一个Python编译器，它是一个Python语言在Java中的完全实现。Jython也有很多从CPython中继承的模块库。最有趣的事情是Jython不像CPython或其他任何高级语言，它提供了对其实现语言的一切存取。所以Jython不仅给你提供了Python的库，同时也提供了所有的Java类。这使其有一个巨大的资源库。</li>
</ol>
<p><a href="http://www.infoworld.com/d/developer-world/top-five-scripting-languages-the-jvm-855?page=0,1#jvm1"></a></p>
<p><a href="http://www.infoworld.com/d/developer-world/top-five-scripting-languages-the-jvm-855?page=0,3#jvm4"></a></p>
<p>下面是一张表格比较了这五大JVM脚本语言：</p>
<p><span id="more-2631"></span></p>
<table border="0" align="center">
<tbody>
<tr>
<th></th>
<th><a href="http://groovy.codehaus.org/" target="_blank"><strong>Groovy</strong></a></th>
<th><a href="http://jruby.org/" target="_blank"><strong>JRuby</strong></a></th>
<th><a href="https://www.scala-lang.org/" target="_blank"><strong>Scala</strong></a></th>
<th><a href="http://fantom.org/" target="_blank"><strong>Fantom</strong></a></th>
<th><a href="http://www.jython.org/" target="_blank"><strong>Jython</strong></a></th>
</tr>
<tr>
<td><strong>风格类型</strong></td>
<td>OO / 动态</td>
<td>OO / 动态</td>
<td>OO, 过程/ 静态</td>
<td>OO / 静态</td>
<td>OO / 动态</td>
</tr>
<tr>
<td><strong>源语言</strong></td>
<td>Java</td>
<td>Ruby</td>
<td>N/A</td>
<td>N/A</td>
<td>Python</td>
</tr>
<tr>
<td><strong>运行</strong></td>
<td>编译型</td>
<td>编译型,<br>
解释型</td>
<td>编译型</td>
<td>半编译型</td>
<td>编译型</td>
</tr>
<tr>
<td><strong>平台</strong></td>
<td>JVM</td>
<td>JVM</td>
<td>JVM</td>
<td>JVM, .Net CLR</td>
<td>JVM</td>
</tr>
<tr>
<td><strong>Java集成</strong></td>
<td>极好</td>
<td>极好</td>
<td>极好</td>
<td>好</td>
<td>极好</td>
</tr>
<tr>
<td><strong>运行速度</strong></td>
<td>好</td>
<td>好</td>
<td>极好</td>
<td>很好</td>
<td>慢</td>
</tr>
<tr>
<td><strong>工具支持</strong></td>
<td>广泛</td>
<td>还可以</td>
<td>广泛</td>
<td>几乎没有</td>
<td>几乎没有</td>
</tr>
</tbody>
</table>
<p>其它一些JVM的脚本语言也我们可以关注一下，如：<a href="http://clojure.org/" target="_blank"><strong>Clojure</strong></a>, <a href="http://javafx.com/" target="_blank"><strong>JavaFX</strong></a>, 和IBM的 <a href="https://www.ibm.com/software/awdtools/netrexx/" target="_blank"><strong>NetRexx</strong></a>。</p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/11541.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4905.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11454.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11175.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2631" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="b3634f74f0">
<img alt="image placeholder" >
<meta itemprop="headline" content="五大基于JVM的脚本语言">
<meta itemprop="description" content="还记得以前本站的一篇文章《如何在Google App Engine上运行PHP》吗，其实那是借用 Quercus， 一个 100% 的用Java 实现的一个 PHP 引擎。今天，这样的东西太多了，能运行在Java的虚拟机JVM上的程序意味着有天然的跨平台性，现在JVM并不单单只能运行Java程序，在JVM上出现了若干使用Java虚拟机运行的脚本程序，比如什么PHP, Python, Ruby等等，...">
<meta itemprop="datePublished" content="2010-07-19T19:40:42+08:00">
<meta itemprop="dateModified" content="2010-07-20T00:54:45+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2631.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2631.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.5">
<meta itemprop="ratingCount" content="14">
</div>
</div>
<div id="post-ratings-2631-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-19T19:40:42+08:00</pubDate>
<guid>https://coolshell.cn/articles/2631.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 浏览器正则表达式检查插件 ]]></title>
<link>https://coolshell.cn/articles/2667.html</link>
<content><![CDATA[ 
<p>以前本站介绍过一个在线的《<a rel="bookmark" href="https://coolshell.cn/articles/1830.html" target="_blank">正则表达式生成器</a>》，下面是两个在浏览器中检查正则表达式的插件，Firefox的和Chrome的，希望对你有用。</p>
<h3>1）Firefox：<a href="https://addons.mozilla.org/en-US/firefox/addon/2077/" target="_blank">Regular Expressions Tester</a>
</h3>
<figure style="width: 448px" class="wp-caption aligncenter"><img alt="image placeholder" >
<h3></h3>
<h3>2）Chrome：<a href="https://chrome.google.com/extensions/detail/pgnkpcgniljiolidjmodgfljeomjjiha" target="_blank">Regular Expression Checker</a>
</h3>
<p><span id="more-2667"></span></p>
<p><figure style="width: 544px" class="wp-caption aligncenter"><img alt="image placeholder" >
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2936.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2704.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2367.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2069.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1830.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2667" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="423203444b">
<img alt="image placeholder" >
<meta itemprop="headline" content="浏览器正则表达式检查插件">
<meta itemprop="description" content="以前本站介绍过一个在线的《正则表达式生成器》，下面是两个在浏览器中检查正则表达式的插件，Firefox的和Chrome的，希望对你有用。
1）Firefox：Regular Expressions Tester


2）Chrome：Regular Expression Checker


">
<meta itemprop="datePublished" content="2010-07-20T08:10:40+08:00">
<meta itemprop="dateModified" content="2010-07-20T00:50:28+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2667.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2667.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.78">
<meta itemprop="ratingCount" content="9">
</div>
</div>
<div id="post-ratings-2667-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-20T08:10:40+08:00</pubDate>
<guid>https://coolshell.cn/articles/2667.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ .NET代码转换器 ]]></title>
<link>https://coolshell.cn/articles/2672.html</link>
<content><![CDATA[ 
<p>想把.NET的代码（C#和VB.NET)互转吗？或是转成Python或Ruby吗？在 <a href="http://www.developerfusion.com/" target="_blank">http://www.developerfusion.com/</a> 站点上有这样的在线工具。点击下面的链接你可以使用这些工具。当然，这些工具也有很多<a href="http://feedback.developerfusion.com/pages/code_converter" target="_blank">BUG</a>。</p>
<ul>
<li><a href="http://www.developerfusion.com/tools/convert/csharp-to-vb/" target="_blank">把 C# 转成 VB.NET</a></li>
<li><a href="http://www.developerfusion.com/tools/convert/csharp-to-python/" target="_blank">把 C# 转成 Python</a></li>
<li><a href="http://www.developerfusion.com/tools/convert/csharp-to-ruby/" target="_blank">把 C# 转成Ruby</a></li>
<li><a href="http://www.developerfusion.com/tools/convert/vb-to-csharp/" target="_blank">把 VB.NET 转成C#</a></li>
<li><a href="http://www.developerfusion.com/tools/convert/vb-to-python/" target="_blank">把 VB.NET 转成 Python</a></li>
<li><a href="http://www.developerfusion.com/tools/convert/vb-to-ruby/" target="_blank">把 VB.NET 转成 Ruby</a></li>
</ul>
<p>老实说，我并不太清楚这些工具有什么用，看似很useless。难道是为了用来学习新的语言？就像Google的Translator的一样？就像一个并不懂中文的老外可以用Google Translator在其Facebook中整点中文耍耍酷一样，难道说，一个C#的程序员可以用这样的工具和一个Python的程序员也耍耍酷？各位看客觉得这个东西有意义吗？</p>
<p>不过，有一点我可以确定，如果有工具把Unix/Linux下的C源码和Windows下的C源码相互自动转换，估计这会是相当划时代的，因为，这应该会让那些什么Wine或Cygwin之类的东西都统统会成为历史了。不过，这样的东西在实现上又将会有多么大的难度（OS系统API的相互转换），这个事会有可行性吗？</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/11235.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3192.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3008.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2672" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="04fa3466f2">
<img alt="image placeholder" >
<meta itemprop="headline" content=".NET代码转换器">
<meta itemprop="description" content="想把.NET的代码（C#和VB.NET)互转吗？或是转成Python或Ruby吗？在 http://www.developerfusion.com/ 站点上有这样的在线工具。点击下面的链接你可以使用这些工具。当然，这些工具也有很多BUG。

	把 C# 转成 VB.NET
	把 C# 转成 Python
	把 C# 转成Ruby
	把 VB.NET 转成C#
	把 VB.NET 转成 ...">
<meta itemprop="datePublished" content="2010-07-20T10:24:22+08:00">
<meta itemprop="dateModified" content="2010-07-20T00:50:43+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2672.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2672.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.82">
<meta itemprop="ratingCount" content="11">
</div>
</div>
<div id="post-ratings-2672-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-20T10:24:22+08:00</pubDate>
<guid>https://coolshell.cn/articles/2672.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 在Javascript里写Python ]]></title>
<link>https://coolshell.cn/articles/2688.html</link>
<content><![CDATA[ 
<p>以前，本站介绍过去一种<a rel="bookmark" href="https://coolshell.cn/articles/2406.html" target="_blank">写HTML和CSS的新方法</a>，以<a href="https://coolshell.cn/articles/2529.html" target="_blank">一种杂交式的代码</a>，昨天给大家介绍了<a href="https://coolshell.cn/articles/2672.html" target="_blank">.NET代码和Python及Ruby代码的互相转换工具</a>，但是这个世界可能比我们想像的还疯狂。<a href="http://ironpython.net/" target="_blank">IronPython</a> 是一个在.NET平台上运行Python的东西，就像那些在<a href="https://coolshell.cn/articles/2631.html" target="_blank">JVM上运行其它语言的东东</a>一样。当然，IronPython最邪恶的事情并不是在.NET上运行Python，而是在Javascript里写Python的语法。这个畸形混血儿的网址在<a href="http://ironpython.net/browser/" target="_blank">这里</a>（请注意翻墙）。</p>
<p>使用这个玩意很简单，下面，让我们看看这个混血儿长啥样？</p>
<p>首先，你需要链接一个js文件：</p>
<p></p>
<pre data-enlighter-language="html" class="EnlighterJSRAW">&lt;script src="http://gestalt.ironpython.net/dlr-latest.js" type="text/javascript"&gt;&lt;/script&gt;</pre>
<p>然后，让我们看看如何写一个按钮事件：</p>
<p></p>
<pre data-enlighter-language="html" class="EnlighterJSRAW">&lt;input id="button" type="button" value="Say, Hello!" /&gt;
&lt;script type="text/python"&gt;
  def button_onclick(s, e):
      window.Alert("Hello from Python!")
  document.button.events.onclick += button_onclick
&lt;/script&gt;
</pre>
<p>你对此事怎么看？欢迎留下你的看法。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10822.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10169.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17524.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11265.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2688" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="9f36d9fc8c">
<img alt="image placeholder" >
<meta itemprop="headline" content="在Javascript里写Python">
<meta itemprop="description" content="以前，本站介绍过去一种写HTML和CSS的新方法，以一种杂交式的代码，昨天给大家介绍了.NET代码和Python及Ruby代码的互相转换工具，但是这个世界可能比我们想像的还疯狂。IronPython 是一个在.NET平台上运行Python的东西，就像那些在JVM上运行其它语言的东东一样。当然，IronPython最邪恶的事情并不是在.NET上运行Python，而是在Javascript里写Pyth...">
<meta itemprop="datePublished" content="2010-07-21T08:17:39+08:00">
<meta itemprop="dateModified" content="2010-07-20T21:39:44+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2688.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2688.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.44">
<meta itemprop="ratingCount" content="9">
</div>
</div>
<div id="post-ratings-2688-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-21T08:17:39+08:00</pubDate>
<guid>https://coolshell.cn/articles/2688.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Kent Beck 谈单元测试和持续部署 ]]></title>
<link>https://coolshell.cn/articles/2681.html</link>
<content><![CDATA[ 
<p><em><a href="http://blog.typemock.com/2010/07/video-kent-beck-on-junit-max-and-lean.html">文章来源</a></em></p>
<p>2010年7月2日，Roy Osherove 和 Kent Beck 在 blog.typemock.com 进行了一次对话，话题涉及单元测试（Unit Testing），<a href="http://www.threeriversinstitute.org/junitmax/">JUnit Max</a>（Kent 开发的一个单元测试的 Eclipse Plugin，不免费），和面向初创企业的精益方法（Lean Startups）。</p>
<p><strong>单元测试和 JUnit Max</strong><br>
作为软件开发方法学的大师、极限编程XP的创始人、敏捷宣言的创始人之一，Kent Beck 一直在努力最大化地利用单元测试的价值，他说一些程序员仍然认为单元测试并不是他们的工作，但是单元测试确实能够提高软件的质量。目前他正在开发 JUnit Max，这是一个 Eclipse plugin，每当程序员保存一个 Java 源文件的时候，JUnit Max 就会运行测试并报告反馈信息。测试中的错误将会如同编译错误一样被报告给程序员。JUnit Max 的核心思想是测试错误应该和编译错误一样被 IDE 报告给程序员，程序员不需要额外的菜单选项或者运行其他的工具来运行测试。特别是那些经常失败的测试，对于程序员来说是非常有价值的反馈信息。在测试驱动开发（Test Driven Development – TDD）中，我们重复着这样一个循环：“编写一个‘失败’的测试（Failing Test）” – “编码实现功能以便让测试通过”，随着开发的深入，测试越来越丰富，测试能够反馈给程序员的信息也越来越多，它们可以帮助程序员找出那些需要改进的代码。JUnit Max 能够缩短这个循环的周期，因为它更为频繁地运行测试和提供反馈。Roy 问道：“当你一个人编码的时候，你是否严格地遵循 TDD，即一定要先写测试，然后写实现代码。我个人发现这并不是一件容易做到的事情，特别是当一个人编码的时候。” Kent 回答：“视情况而定，有时候并不需要死板地遵循 TDD，比如当我在做一些探索性或者说实验性的编码时，并不需要写测试，因为我只是想尝试一下某些功能和特性。”</p>
<p><span id="more-2681"></span></p>
<p>Roy： “你在测试驱动开发中见过的最糟糕的错误有哪些？”<br>
Kent：“很多程序员仅仅是拷贝和粘贴测试代码，但并不理解它们。所以我们经常能看到没有断言的测试，同时测试很多逻辑和功能的测试，过于臃肿或者过于短小的测试等等。当然这些错误在学习过程中很普遍，也是我们学习的一部分。”</p>
<p>Roy：“你下一步最想尝试的新概念是什么？”<br>
Kent：“我最近谈论的一个主题是 Software G Forces，是关于软件产品的部署频率（Frequency of Deployment），这里的部署是指面向最终用户的部署或者说发布，是生产环境而非测试环境。从前的软件产品每年（或数年）发布一个新的版本，而现在的软件产品发布频率越来越快，从每季度，每月，每周，每天，直至每小时。Kent 提及有一些非常复杂的软件产品的发布频率甚至是每天 40 到 50 次。此时 Roy 提出了一个非常好的问题：“产品发布得如此频繁，我们如何能够在这么短的时间间隔内获得用户反馈呢？”，Kent 回答道：“持续部署（Continuous Deployment）确实需要一些基础设施建设来支持，比如：自动版本回滚，自动错误检测，系统同时运行多个版本的能力，比如一个服务器集群中不同的服务器上可以运行产品的不同版本。”</p>
<p>Roy 问道：“当你在开发一个产品的时候，你在为客户创造价值，而持续部署创造的则是一种内在的价值，并且实施过程也是非常复杂的，你怎样投入时间去实施它呢？是否需要从产品设计的一开始就考虑这些问题呢？”，Kent 答道：“5 年之内市场上可能会有许多持续部署的产品出现，目前我们可能需要自己来寻求解决方案，因为现在它还是一个较新的领域。持续部署的重点之一是及时捕获系统错误，不仅仅是技术层面上的错误，同时也包括业务层面。以 Amazon.com 为例，他们评价系统运行的良好程度是以业务运营状况为依据的，如果销售额出现不明原因的下降，系统也会发出错误警告。”</p>
<p>注：为了不让文章过长，下半部分的面向初创企业的精益方法（Lean Startups）将在后面发布。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/21589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20977.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20765.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20533.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20276.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19612.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2681" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="2e5f8baec3">
<img alt="image placeholder" >
<meta itemprop="headline" content="Kent Beck 谈单元测试和持续部署">
<meta itemprop="description" content="文章来源

2010年7月2日，Roy Osherove 和 Kent Beck 在 blog.typemock.com 进行了一次对话，话题涉及单元测试（Unit Testing），JUnit Max（Kent 开发的一个单元测试的 Eclipse Plugin，不免费），和面向初创企业的精益方法（Lean Startups）。

单元测试和 JUnit Max
作为软件开发方法学的大...">
<meta itemprop="datePublished" content="2010-07-22T08:00:23+08:00">
<meta itemprop="dateModified" content="2010-07-22T08:48:42+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2681.html">
<meta itemprop="author" content="jnj">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2681.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4">
<meta itemprop="ratingCount" content="10">
</div>
</div>
<div id="post-ratings-2681-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-22T08:00:23+08:00</pubDate>
<guid>https://coolshell.cn/articles/2681.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 检查素数的正则表达式 ]]></title>
<link>https://coolshell.cn/articles/2704.html</link>
<content><![CDATA[ 
<p>一般来说，我们会使用正规表达式来做字符串匹配，今天在网上浏览的时候，看到了有人用正则表达式来检查一个数字是否为素数（质数），让我非常感兴趣，这个正则表达式如入所示：</p>
<figure id="attachment_2705" aria-describedby="caption-attachment-2705" style="width: 450px" class="wp-caption aligncenter"><img alt="image placeholder" >
<p>要使用这个正规则表达式，你需要把自然数转成多个1的字符串，如：2 要写成 “11”， 3 要写成 “111”, 17 要写成“11111111111111111”，这种工作使用一些脚本语言可以轻松的完成。</p>
<p>一开始我对这个表达式持怀疑态度，但仔细研究了一下这个表达式，发现是非常合理的，下面，让我带你来细细剖析一下是这个表达式的工作原理。</p>
<p>首先，我们看到这个表达式中有“|”，也就是说这个表达式可以分成两个部分：/^1?$/ 和 /^(11+?)\1+$/</p>
<ul>
<li>
<strong>第一部分：/^1?$/</strong>， 这个部分相信不用我多说了，其表示匹配“空串”以及字串中只有一个“1”的字符串。</li>
<li>
<strong>第二部分：/^(11+?)\1+$/</strong>，这个部分是整个表达式的关键部分。其可以分成两个部分，<strong>(11+?)</strong> 和<strong>\1+$</strong>，前半部很简单了，匹配以“11”开头的并重复0或n个1的字符串，后面的部分意思是把前半部分作为一个字串去匹配还剩下的字符串1次或多次（这句话的意思是——<span style="color: #008000;">剩余的字串的1的个数要是前面字串1个数的整数倍</span>）。</li>
</ul>
<p>可见这个正规则表达式是取非素数，要得到素数还得要对整个表达式求反。通过上面的分析，我们知道，第二部分是最重要的，对于第二部分，举几个例子，</p>
<p><span id="more-2704"></span></p>
<p><strong>示例一：判断自然数8</strong>。我们可以知道，8转成我们的格式就是“11111111”，对于<strong>(11+?)</strong>，其匹配了“11”，于是还剩下“111111”，而<strong>\1+$</strong>正好匹配了剩下的“111111”，因为，“11”这个模式在“111111”出现了三次，符合模式匹配，返回true。所以，匹配成功，于是这个数不是质数。</p>
<p><strong>示例二：判断自然数11</strong>。转成我们需要的格式是“11111111111”（十一个1），对于<strong>(11+?)</strong>，其匹配了“11”（前两个1），还剩下“111111111”（九个1），而<strong>\1+$</strong>无法为“11”匹配那“九个1”，因为“11”这个模式并没有在“九个1”这个串中正好出现N次。于是，我们的正则表达式引擎会尝试下一种方法，先匹配“111”（前三个1），然后把“111”作为模式去匹配剩下的“11111111”（八个1），很明显，那“八个1”并没有匹配“三个1”多次。所以，引擎会继续向下尝试……直至尝试所有可能都无法匹配成功。所以11是素数。</p>
<p>通过示例二，我们可以得到这样的等价数算算法，正则表达式会匹配这若干个1中有没有出现“二个1”的整数倍，“三个1”的整数倍，“四个1”的整数倍……，而，这正好是我们需要的算素数的算法。现在大家明白了吧。</p>
<p>下面，我们用perl来使用这个正规则表达式不停地输出素数：（关于perl的语法我就不多说了，请注意表达式前的取反操作符）</p>
<p>[perl]perl -e’$|++;(1 x$_)!~/^1?$|^(11+?)\1+$/&amp;&amp;print"$_ "while ++$_'[/perl]</p>
<p>另外，让我们来举一反三，根据上述的这种方法，我们甚至可以用正则表达式来求证某方式是否有解，如：</p>
<ul>
<li>
<strong>二元方程</strong>：17x + 12y = 51   判断其是否有解的正则表达式是：<strong>^</strong><strong>(</strong><strong>.*</strong><strong>)</strong><strong>\1{16}</strong><strong>(</strong><strong>.*</strong><strong>)</strong><strong>\2{11}$</strong>
</li>
<li>
<strong>三元方程</strong>：11x + 2y + 5z = 115 判断其是否有解的正则表达式是：<strong>^</strong><strong>(</strong><strong>.*</strong><strong>)</strong><strong>\1{10}</strong><strong>(</strong><strong>.*</strong><strong>)</strong><strong>\2{1}</strong><strong>(</strong><strong>.*</strong><strong>)</strong><strong>\3{4}$</strong>
</li>
</ul>
<p>大家不妨自己做做练习，为什么上述的两个正则表达式可以判断方程是否有解。如果无法参透其中的奥妙的话，你可以读读这篇<a href="http://blog.stevenlevithan.com/archives/algebra-with-regexes" target="_blank">英文文章</a>。</p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/2667.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1830.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1387.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2967.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1242.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1245.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2704" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="a6096808d9">
<img alt="image placeholder" >
<meta itemprop="headline" content="检查素数的正则表达式">
<meta itemprop="description" content="一般来说，我们会使用正规表达式来做字符串匹配，今天在网上浏览的时候，看到了有人用正则表达式来检查一个数字是否为素数（质数），让我非常感兴趣，这个正则表达式如入所示：



要使用这个正规则表达式，你需要把自然数转成多个1的字符串，如：2 要写成 “11”， 3 要写成 “111”, 17 要写成“11111111111111111”，这种工作使用一些脚本语言可以轻松的完成。

一开始我...">
<meta itemprop="datePublished" content="2010-07-23T08:22:27+08:00">
<meta itemprop="dateModified" content="2010-07-26T15:35:50+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2704.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2704.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.58">
<meta itemprop="ratingCount" content="40">
</div>
</div>
<div id="post-ratings-2704-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-23T08:22:27+08:00</pubDate>
<guid>https://coolshell.cn/articles/2704.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 苹果开发工具Xcode 4 第二预览版 ]]></title>
<link>https://coolshell.cn/articles/2719.html</link>
<content><![CDATA[ 
<p>今天，苹果公司向开发者发布Xcode 4 Preview 2，这是一个IDE用来开发在Mac，iPhone，iPad上应用程序的工具。在这个第二预览版中，主要有以下新的功能：</p>
<ul>
<li>这个版本不像以往的版本有太多的窗口，其把以前那些窗口督统一起来，只有一个窗口。</li>
<li>集成了Interface Builder（以前这个东东和Xcode是两个东西）</li>
<li>Xcode Assistant 可以让你的设计和代码同时呈现。</li>
<li>LLVM Compiler 2.0。LLVM是下一代的编译器，其完全支持C，C++和Objective C，而且编译的速度和编译成的执行速度都快于GCC。同时也引入了LLDB做为新的调试器。</li>
<li>多版本编译。这个功能可以让你在IDE中编译两个版本的代码，而且可以和Subversion或Git集成。</li>
</ul>
<p>你可以访问 <a href="https://developer.apple.com/technologies/tools/whats-new.html" target="_blank">What’s New</a> 来看看具体的细节。</p>
<p><figure style="width: 651px" class="wp-caption aligncenter"><a href="https://developer.apple.com/technologies/tools/whats-new.html"><img alt="image placeholder" >
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/5089.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2913.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11112.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7617.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6775.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5901.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2719" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="5221f31d22">
<img alt="image placeholder" >
<meta itemprop="headline" content="苹果开发工具Xcode 4 第二预览版">
<meta itemprop="description" content="今天，苹果公司向开发者发布Xcode 4 Preview 2，这是一个IDE用来开发在Mac，iPhone，iPad上应用程序的工具。在这个第二预览版中，主要有以下新的功能：

	这个版本不像以往的版本有太多的窗口，其把以前那些窗口督统一起来，只有一个窗口。
	集成了Interface Builder（以前这个东东和Xcode是两个东西）
	Xcode Assistant 可以让你的设计和...">
<meta itemprop="datePublished" content="2010-07-23T17:40:00+08:00">
<meta itemprop="dateModified" content="2010-07-23T17:40:00+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2719.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2719.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.38">
<meta itemprop="ratingCount" content="8">
</div>
</div>
<div id="post-ratings-2719-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-23T17:40:00+08:00</pubDate>
<guid>https://coolshell.cn/articles/2719.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 计算机编程简史图 ]]></title>
<link>https://coolshell.cn/articles/2724.html</link>
<content><![CDATA[ 
<p>这个图片太经典了，本来想翻译的，后来觉得这么经典的图片可能早已被人翻译了，简单的Google一下，果然有人翻译了。那我就把英文版和中文版都转过来吧。我们可以看到，其中很大一部分人都和Unix有着不解之缘（参见《<a rel="bookmark" href="https://coolshell.cn/articles/2322.html" target="_blank">Unix传奇上篇</a>，<a href="https://coolshell.cn/articles/2324.html" target="_blank">Unix传奇下篇</a>》）</p>
<ul>
<li><a href="http://www.smashingmagazine.com/2010/06/06/designing-the-world-of-programming-infographic/" target="_blank">英文原版</a></li>
<li><a href="http://www.mazingtech.com/cn/list.aspx/News/1/%E5%9B%BE%E8%AF%B4%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B%E7%AE%80%E5%8F%B2" target="_blank">中文翻译版</a></li>
</ul>
<p>什么也不说了，直接上图（图片比较大，单击图片看大图）</p>
<hr>
<figure id="attachment_2726" aria-describedby="caption-attachment-2726" style="width: 409px" class="wp-caption aligncenter"><a href="https://coolshell.cn/wp-content/uploads/2010/07/aboutprogramming04.eng_.jpg"><img alt="image placeholder" >
<hr>
<p><span id="more-2724"></span></p>
<p><figure id="attachment_2725" aria-describedby="caption-attachment-2725" style="width: 409px" class="wp-caption aligncenter"><a href="https://coolshell.cn/wp-content/uploads/2010/07/aboutprogramming04_cn.jpg"><img alt="image placeholder" >
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/19996.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17998.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12103.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12052.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11847.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2724" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="fc9b6d2583">
<img alt="image placeholder" >
<meta itemprop="headline" content="计算机编程简史图">
<meta itemprop="description" content="这个图片太经典了，本来想翻译的，后来觉得这么经典的图片可能早已被人翻译了，简单的Google一下，果然有人翻译了。那我就把英文版和中文版都转过来吧。我们可以看到，其中很大一部分人都和Unix有着不解之缘（参见《Unix传奇上篇，Unix传奇下篇》）

	英文原版
	中文翻译版

什么也不说了，直接上图（图片比较大，单击图片看大图）







">
<meta itemprop="datePublished" content="2010-07-26T07:54:16+08:00">
<meta itemprop="dateModified" content="2010-07-24T09:31:29+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2724.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2724.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.06">
<meta itemprop="ratingCount" content="18">
</div>
</div>
<div id="post-ratings-2724-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-26T07:54:16+08:00</pubDate>
<guid>https://coolshell.cn/articles/2724.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ HTML5 和 Flash 之争 ]]></title>
<link>https://coolshell.cn/articles/2735.html</link>
<content><![CDATA[ 
<p><em><a href="http://html5.tomasdev.com.ar/">文章来源</a></em></p>
<p>二者之间的竞争会演变成为一场“战争”吗？（现在甚至出现了可以<a rel="bookmark" href="https://coolshell.cn/articles/2497.html" target="_blank">把Flash转成Javascript/HTML5</a>的工具）</p>
<p>首先需要弄清楚二者之间最主要的区别，HTML 是一种语言（超文本标记语言 – HyperText Markup Language），而 Flash 是 Adobe（其收购了Macromedia）公司的一个浏览器插件（Plugin）。HTML5 目前还是 W3.org 规范中一个草案，这意味着其还没有最终定案，希望到 2012 年这项工作能够完成。</p>
<p>以下是二者各自的一些特点：</p>
<div id="ez-toc-container" class="ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-grey">
<div class="ez-toc-title-container">
<p class="ez-toc-title">目录</p>
<span class="ez-toc-title-toggle"></span>
</div>
<nav><ul class="ez-toc-list ez-toc-list-level-1">
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-1" href="#HTML5" title="HTML5">HTML5</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-2" href="#Flash" title="Flash">Flash</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-3" href="#%E7%BB%93%E8%AE%BA" title="结论">结论</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-4" href="#HTML5_%E7%9B%B8%E5%85%B3%E7%9A%84%E4%B8%80%E4%BA%9B%E9%93%BE%E6%8E%A5" title="HTML5 相关的一些链接">HTML5 相关的一些链接</a></li>
</ul></nav>
</div>
<h4>
<span class="ez-toc-section" id="HTML5"></span><strong>HTML5</strong><span class="ez-toc-section-end"></span>
</h4>
<p>这个新的技术更为易学和易用，比较 .FLA 和 .SWF 文件更容易编辑。并且基本上过去所有由 Flash 才能制作的动画效果都能够使用 JS + HTML5 + CSS 3 来完成，不过工作量可能会更大一些，不仅文件尺寸会增大，性能方面也会有影响。</p>
<p>以前为 Web 表单设定风格我们一定需要使用到 JavaScript， 但是 HTML5 中的 contenteditable 属性让我们可以做得更多。一些新的输入类型（Types of Inputs）也被加入到 HTML5 中，如：电子邮件，数字，值范围等等。</p>
<p>用户不仅仅需要一个支持 HTML5 的浏览器，还需要 CCS 3 和新的 JavaScript 引擎的支持。</p>
<p>免费（不包括第三方字体和音频视频等等）</p>
<p>更好地移动设备支持（HTML5 正在被运用于 iPhone，iPod，iPad 和 Android 应用的开发）</p>
<p>拖拽，事实上这不是 HTML5 的一部分，但是在新版本的 GMail 中，从桌面拖拽文件到浏览器能够用 HTML5 很好地实现。对于 Flash 我不知道这是否可以实现？</p>
<p><span id="more-2735"></span></p>
<h4>
<span class="ez-toc-section" id="Flash"></span><strong>Flash</strong><span class="ez-toc-section-end"></span>
</h4>
<p>文件经过压缩，所以文件尺寸会比 HTML5 + CSS + JavaScript + 图像 + 其他 小。</p>
<p>硬件优化</p>
<p>需要安装 Flash 插件， Android 2.2（代号 FroYo）同样支持 Flash 插件。</p>
<p>Adobe 在它的 Creative Suite 5 中包含了 Flash Builder 4.0。</p>
<p>也许对很多人来说，相对于 HTML + JavaScript + CSS，Flash 应用 更难于“破解”。</p>
<p>以下是一些 Flash 能够实现而 HTML5 + JavaScript + CSS 3 不能的功能：</p>
<ul>
<li>增强现实（Augmented Reality）</li>
<li>3D</li>
<li>真正的面向对象，而非原型（Prototyping）</li>
<li>对麦克风和摄像头的支持（事实上 HTML5 已经宣布要提供这些支持）</li>
<li>混色模式（如：渐进色，重叠色等等）</li>
<li>Action Message Format （AMF）</li>
<li>二进制数据（Binary Data）</li>
<li>位图数据（BitMapData，HTML5 的画布 Canvas 和矢量标记语言 VML 可以实现近似的功能）</li>
<li>图形处理器的利用（Use of GPU）</li>
</ul>
<h4>
<span class="ez-toc-section" id="%E7%BB%93%E8%AE%BA"></span>结论<span class="ez-toc-section-end"></span>
</h4>
<p>HTML5 是一项新技术，很多人会想要尝试它，而 Flash 业已存在很久，并且还将会有很长的生命周期。HTML5 短期内无法完全替代 Flash，而 Flash 可以作为 HTML5 的一个很好的补充。</p>
<h4>
<span class="ez-toc-section" id="HTML5_%E7%9B%B8%E5%85%B3%E7%9A%84%E4%B8%80%E4%BA%9B%E9%93%BE%E6%8E%A5"></span>HTML5 相关的一些链接<span class="ez-toc-section-end"></span>
</h4>
<ul>
<li><a href="https://html5test.com/">HTML5 Browser Compatibility Test</a></li>
<li><a href="https://www.apple.com/html5/">HTML5 by Apple</a></li>
<li><a href="http://html5demos.com/">HTML5 Demos</a></li>
<li><a href="https://www.html5rocks.com/">HTML5 Rocks</a></li>
<li>
<a href="http://html5watch.tumblr.com/">HTML5 Watch</a>, not necessarily HMTL5 but interesting applies of JS like the Google Pacman</li>
<li><a href="https://www.chromeexperiments.com/">Chrome Experiments</a></li>
<li><a href="http://www.webhostingsecretrevealed.com/featured-articles/learn-html5-10-must-read-lessons/">Learn HTML5: 10 must read lessons</a></li>
</ul>
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3013.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2926.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12206.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9666.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6840.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2735" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="5b05d9d59c">
<img alt="image placeholder" >
<meta itemprop="headline" content="HTML5 和 Flash 之争">
<meta itemprop="description" content="文章来源

二者之间的竞争会演变成为一场“战争”吗？（现在甚至出现了可以把Flash转成Javascript/HTML5的工具）

首先需要弄清楚二者之间最主要的区别，HTML 是一种语言（超文本标记语言 - HyperText Markup Language），而 Flash 是 Adobe（其收购了Macromedia）公司的一个浏览器插件（Plugin）。HTML5 目前还是 W3....">
<meta itemprop="datePublished" content="2010-07-27T08:00:04+08:00">
<meta itemprop="dateModified" content="2010-07-27T08:59:55+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2735.html">
<meta itemprop="author" content="jnj">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2735.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.73">
<meta itemprop="ratingCount" content="11">
</div>
</div>
<div id="post-ratings-2735-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-27T08:00:04+08:00</pubDate>
<guid>https://coolshell.cn/articles/2735.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 五种应该避免的代码注释 ]]></title>
<link>https://coolshell.cn/articles/2746.html</link>
<content><![CDATA[ 
<p>在酷壳，有很多文章都提到了代码注释，如：《<a rel="bookmark" href="https://coolshell.cn/articles/2424.html" target="_blank">十条不错的编程观点</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/1007.html" target="_blank">优质代码的十诫</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/1095.html" target="_blank">整洁代码的4个提示</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/340.html" target="_blank">惹恼程序员的十件事</a>》等等。今天，某国外的程序员在<a href="http://repeatgeek.com/career/5-types-of-comments-to-avoid-making-in-your-code/" target="_blank"><strong>这里</strong></a>列举五种应该避免的程序注释，我觉得比较有道理，但我觉得有少数几个观点也并不绝对。所以，我把原文的这五种应该避免的程序注释罗列在下面，并放上原作者和我的个人观点作为比较。希望对大家有用。</p>
<h3>一、自恋型注释</h3>
<p>（注：原文为Proud，我觉得“自恋”更好一点）</p>
<p></p>
<pre data-enlighter-language="java" class="EnlighterJSRAW">public class Program
{
    static void Main(string[] args)
    {
        string message = "Hello World!";  // 07/24/2010 Bob
        Console.WriteLine(message); // 07/24/2010 Bob
        message = "I am so proud of this code!"; // 07/24/2010 Bob
        Console.WriteLine(message); // 07/24/2010 Bob
    }
}</pre>
<p><strong>原文</strong>：这样的程序员对于自己的代码改动非常骄傲和自恋，所以，他觉得需在在这些自己的代码上标上自己的名字。其实，一个版本控制工具（如：CVS或Subversion）可以完整地记录下所有的关于代码的改动的和作者相关的一切信息，只不过不是那么明显罢了。</p>
<p><strong>陈皓</strong>：我同意原文的观点。在我的团队里也有这样的事情发生。有段时间我认真思考过这样的事情，是否应该把这样的事情在代码中铲除出去。后来，我觉得，允许这样的行为并不一定是坏事，因为两点：</p>
<p><span id="more-2746"></span></p>
<ol>
<li>调动程序员下属的积极性可能更为重要。即然，这种方式可以让程序员有骄傲的感觉，能在写代码中找到成就感，为什么要阻止呢？又不是什么大问题。</li>
<li>调动程序员的负责任的态度。程序员敢把自己的名字放在代码里，说明他对这些代码的信心，是想向大家展示其才能。所以，他当然知道，如果这段他加入的代码有问题的话，他的声誉必然受到损失，所以，他敢这么干，也就表明他敢于对自己的代码全面的负责。这不正是我们所需要的？！</li>
</ol>
<p>所以，基于上述考虑，我个人认为，<strong>从代码的技术角度上来说，这样的注释很不好。但从团队的激励和管理上来说，这样的方式可能也挺好的</strong>。所以，我并不阻止也不鼓励这样的注释。关键在于其是否能有更好的结果。</p>
<h3>二、废弃代码的注释</h3>
<p></p>
<pre data-enlighter-language="java" class="EnlighterJSRAW">public class Program
{
    static void Main(string[] args)
    {
        /* This block of code is no longer needed
         * because we found out that Y2K was a hoax
         * and our systems did not roll over to 1/1/1900 */
        //DateTime today = DateTime.Today;
        //if (today == new DateTime(1900, 1, 1))
        //{
        //    today = today.AddYears(100);
        //    string message = "The date has been fixed for Y2K.";
        //    Console.WriteLine(message);
        //}
    }
}</pre>
<p><strong>原文</strong>：如果某段代码不再使用了，那就应该直接删除。我们不应该使用注释来标准废弃的代码。同样，我们有版本控制工具来管理我们的源代码，在版本控制工具里，是不可能有代码能被真正的物理删除的。所以，你总是可以从以前的版本上找回你的代码的。</p>
<p><strong>陈皓</strong>：我非常同意这样的观点。只要你是废弃的，就应该是删除，而不是注释掉。注释并不是用来删除代码的。也许你会争论到，在迭代开发中，你觉得被注释的代码很有可能在未来会被使用，但现在因为种种问题暂时用不到，所以，你先注释着，然后等到某一天再enable它。所以你注释掉一些未来会有的程序。在这样的情况，你可以注释掉这段代码，但你要明白，这段代码不是“废弃”的，而是“临时”不用的。所以，我在这里提醒你，请不要教条式地在你的程序源码中杜绝这样的注释形式，是否“废弃”是其关键。</p>
<h3>三、明显的注释</h3>
<p></p>
<pre data-enlighter-language="java" class="EnlighterJSRAW">public class Program
{
    static void Main(string[] args)
    {
        /* This is a for loop that prints the
         * words "I Rule!" to the console screen
         * 1 million times, each on its own line. It
         * accomplishes this by starting at 0 and
         * incrementing by 1. If the value of the
         * counter equals 1 million the for loop
         * stops executing.*/
        for (int i = 0; i &lt; 1000000; i++)
        {
            Console.WriteLine("I Rule!");
        }
    }
}</pre>
<p><strong>原文</strong>：看看上面的例子，代码比注释还容易读。是的，大家都是程序员，对于一些简单的，显而易见的程序逻辑，不需要注释的。而且，你不需要在你的注释中教别人怎么编程，你这是在浪费时间去解释那些显而易见的东西。你应该用注释去解释你的代码功能，原因，想法，而不是代码本身。</p>
<p><strong>陈皓</strong>：非常同意。最理解的情况是你的代码写得直接易读，代码本身就是自解释的，根本不需要注释。这是最高境界。注释应该说明下面的代码主要完成什么样的功能，为什么需要他，其主要算法怎么设计的，等等。而不是解释代码是怎么工作的。这点很多新手程序员都做得不够好。别外，我需要指出的是，代码注释不宜过多，如果太多的话，你应该去写文档，而不是写注释了。</p>
<h3>四、故事型注释</h3>
<p></p>
<pre data-enlighter-language="java" class="EnlighterJSRAW">public class Program
{
    static void Main(string[] args)
    {
       /* I discussed with Jim from Sales over coffee
        * at the Starbucks on main street one day and he
        * told me that Sales Reps receive commission
        * based upon the following structure.
        * Friday: 25%
        * Wednesday: 15%
        * All Other Days: 5%
        * Did I mention that I ordered the Caramel Latte with
        * a double shot of Espresso?
       */
        double price = 5.00;
        double commissionRate;
        double commission;
        if (DateTime.Today.DayOfWeek == DayOfWeek.Friday)
        {
            commissionRate = .25;
        }
        else if (DateTime.Today.DayOfWeek == DayOfWeek.Wednesday)
        {
            commissionRate = .15;
        }
        else
        {
            commissionRate = .05;
        }
        commission = price * commissionRate;
    }
}</pre>
<p><strong>原文</strong>：如果你不得不在你的代码注释中提及需求，那也不应该提及人名。在上面的示例中，好像程序想要告诉其它程序员，下面那些代码的典故来自销售部的Jim，如果有不懂的，你可以去问他。其实，这根本没有必要在注释中提到一些和代码不相干的事。</p>
<p><strong>陈皓</strong>：太同意了。这里仅仅是代码，不要在代码中掺入别的和代码不相干的事。这里你也许会有以下的争辩：</p>
<ol>
<li>有时候，那些所谓的“高手”逼着我这么干，所以，我要把他的名字放在这里让所有人看看他有多SB。</li>
<li>有时候，我对需求并不了解，我们应该放一个联系人在在这里，以便你可以去询问之。</li>
</ol>
<p>对于第一点，我觉得这是一种情绪化。如果你的上级提出一些很SB的想法，我觉得你应该做的是努力去和他沟通，说明你的想法。如果这样都不行的话，你应该让你的经理或是那个高手很正式地把他的想法和方案写在文档里或是电子邮件里，然后，你去执行。这样，当出现问题的时候，你可以用他的文档和邮件作为你的免责证据，而不是在代码里干这些事。</p>
<p>对于第二点，这些需求的联系人应该是在需求文档中，如果有人有一天给你提了一个需求，你应该把其写在你的需求文档中，而不是你的代码里。要学会使用流程来管理你的工作，而不是用注释。</p>
<p>最后，关于故事型的注释，我需要指出也有例外的情况，我们团队中有人写注释喜欢在注释或文档里写一些名人名言（如 <a rel="bookmark" href="https://coolshell.cn/articles/808.html" target="_blank">22条经典的编程引言</a>，<a rel="bookmark" href="https://coolshell.cn/articles/1212.html" target="_blank">编程引言补充</a>，<a rel="bookmark" href="https://coolshell.cn/articles/1278.html" target="_blank">Linus Torvalds 语录 Top 10</a> ），甚至写一些小笑话，幽默的短句。我并不鼓励这么做，但如果这样有利于培养团队文化，有利于让大家对工作更感兴趣，有利于大家在一种轻松愉快的环境下读/写代码，那不也是挺好的事吗？</p>
<p>另外，做为一个管理者，有时候我们应该去看看程序员的注释，因为那里面可能会有程序员最直实的想法和情绪（<a href="https://coolshell.cn/articles/1850.html" target="_blank">程序员嘴最脏??</a>）。了解了他们的想法有利于你的管理。</p>
<h3>五、“TODO”注释</h3>
<p></p>
<pre data-enlighter-language="java" class="EnlighterJSRAW">public class Program
{
    static void Main(string[] args)
    {
       //TODO: I need to fix this someday – 07/24/1995 Bob
       /* I know this error message is hard coded and
        * I am relying on a Contains function, but
        * someday I will make this code print a
        * meaningful error message and exit gracefully.
        * I just don’t have the time right now.
       */
       string message = "An error has occurred";
       if(message.Contains("error"))
       {
           throw new Exception(message);
       }
    }
}</pre>
<p><strong>原文</strong>：当你在初始化一个项目的时候，TODO注释是非常有用的。但是，如果这样的注释在你的产品源码中出现了N多年，那就有问题了。如果有BUG要被fix，那就Fix吧，没有必要整一个TODO。</p>
<p><strong>陈皓</strong>：是的，TODO是一个好的标志仅当存在于还未release的项目中，如果你的软件产品都release了，你的代码里还有TODO，这个就不对了。也许你会争辩说，那是你下一个版本要干的事。OK，那你应该使用项目管理，或是需求管理来管理你下一个版本要干的事，而不是使用代码注释。通常，在项目release的前夕，你应该走查一下你代码中的TODO标志，并且做出决定，是马上做，还是以后做。如果是以后做，那么，你应该使用项目管理或需求管理的流程。</p>
<p>上述是你应该避免使用的注释，以及我个人的一些观点，也欢迎你留下你的观点！</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8990.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8745.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7886.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5444.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5201.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2746" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="c9a5f97cb6">
<img alt="image placeholder" >
<meta itemprop="headline" content="五种应该避免的代码注释">
<meta itemprop="description" content="在酷壳，有很多文章都提到了代码注释，如：《十条不错的编程观点》、《优质代码的十诫》、《整洁代码的4个提示》、《惹恼程序员的十件事》等等。今天，某国外的程序员在这里列举五种应该避免的程序注释，我觉得比较有道理，但我觉得有少数几个观点也并不绝对。所以，我把原文的这五种应该避免的程序注释罗列在下面，并放上原作者和我的个人观点作为比较。希望对大家有用。
一、自恋型注释
（注：原文为Proud，我觉得“...">
<meta itemprop="datePublished" content="2010-07-28T08:48:15+08:00">
<meta itemprop="dateModified" content="2010-07-28T11:50:16+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2746.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2746.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.3">
<meta itemprop="ratingCount" content="23">
</div>
</div>
<div id="post-ratings-2746-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-07-28T08:48:15+08:00</pubDate>
<guid>https://coolshell.cn/articles/2746.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 最佳编程语录 ]]></title>
<link>https://coolshell.cn/articles/2753.html</link>
<content><![CDATA[ 
<p>以前本站发布过《<a rel="bookmark" href="https://coolshell.cn/articles/808.html" target="_blank">22条经典的编程引言</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/1212.html" target="_blank">编程引言补充</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/1278.html" target="_blank">Linus Torvalds 语录</a>》还有《<a href="https://coolshell.cn/articles/2424.html" target="_blank">十条不错的编程观点</a>》。今天向大家介绍“最佳编程语录”，条条都是很不错的语录，如同我们的太阳，照亮了我们的方向（所以我们选用了一个红色的图片，希望能够通过五毛们的网络审查）。<img alt="image placeholder" >
<blockquote>
<p>A good programmer is someone who looks both ways before crossing a one-way street. — Doug Linder, systems administrator</p>
<p>好的程序员这样一类人，这类人在横穿一条单行道前都要先看一下路两边。– Doug Linder, 系统管理员</p>
</blockquote>
<blockquote>
<p>A most important, but also most elusive, aspect of any tool is its influence on the habits of those who train themselves in its use. If the tool is a programming language this influence is, whether we like it or not, an influence on our thinking habits. — Edsger Dijkstra, computer scientist</p>
<p>关于工具，一个最重要的，也是最不易察觉的方面是，工具对使用此工具的人的习惯的潜移默化的影响。如果这个工具是一门程序语言，不管我们是否喜欢它，它都会影响我们的思维惯式。 –Edsger Dijkstra, 著名的计算机科学家。</p>
</blockquote>
<blockquote>
<p>Being abstract is something profoundly different from being vague… The purpose of abstraction is not to be vague, but to create a new semantic level in which one can be absolutely precise. — Edsger Dijkstra</p>
<p>抽象和模糊完全地不同，抽象的目的并不是把事情变模糊，而去创建一个新的语义层，在那里是绝对精确的描述。 — Edsger Dijkstra</p>
</blockquote>
<blockquote>
<p>Besides a mathematical inclination, an exceptionally good mastery of one’s native tongue is the most vital asset of a competent programmer. — Edsger Dijkstra</p>
<p>除了数学爱好，对于一个有能力的程序员来说，出色地掌握自己的母语是最宝贵的财富。– Edsger Dijkstra</p>
</blockquote>
<p><span id="more-2753"></span></p>
<blockquote>
<p>C makes it easy to shoot yourself in the foot; C++ makes it harder, but when you do, it blows away your whole leg. — Bjarne Stroustrup, developer of the C++ programming language</p>
<p>C很容易使你搬起石头砸自己的脚，而C++把这事变得更难，但是如果一定要这么做，那么你的整条腿都会被炸飞 -Bjarne Stroustrup, C++语言的发明者</p>
</blockquote>
<blockquote>
<p>Commentary: most debugging problems are fixed easily; identifying the location of the problem is hard. — unknown</p>
<p>修复bug很容易，但是定位bug却很困难 – 匿名</p>
</blockquote>
<blockquote>
<p>Considering the current sad state of our computer programs, software development is clearly still a black art, and cannot yet be called an engineering discipline. — Bill Clinton, former President of the United States</p>
<p>看看当前计算机程序糟糕的事态，软件开发明显一直是一门妖术，其仍然不能被称为一个工程学。 –比尔.克林顿 美国前总统</p>
</blockquote>
<blockquote>
<p>For a long time it puzzled me how something so expensive, so leading edge, could be so useless, and then it occurred to me that a computer is a stupid machine with the ability to do incredibly smart things, while computer programmers are smart people with the ability to do incredibly stupid things. They are, in short, a perfect match. — Bill Bryson, author, from Notes from a Big Country</p>
<p>长期以来，有个事一直困扰着我，那就是越是昂贵的，越是前沿的，就越可能是没用的。然后，困扰我的另一个事是，计算机是一个死的机器，却可以不可思议地去完成那些巧妙的事情，而计算机程序员是那么聪明人却在做着不可思议的愚蠢的事情，简而言之，他们真是天生的一对。– Bill Bryson旅游文学作家 Big Country中的笔记</p>
</blockquote>
<blockquote>
<p>Given enough eyeballs, all bugs are shallow (e.g., given a large enough beta-tester and co-developer base, almost every problem will be characterized quickly and the fix obvious to someone). — Eric S. Raymond, programmer and advocate of open source software, from The Cathedral and the Bazaar</p>
<p>足够多的眼睛，就可让所有问题浮现(比如：只要给于足够多的beta测试者和开发人员一起工作，那么，几所所有的问题都会很快的出现，而修正也会是显而易见的）</p>
</blockquote>
<blockquote>
<p>Good code is its own best documentation. As you’re about to add a comment, ask yourself, ‘How can I improve the code so that this comment isn’t needed?’ Improve the code and then document it to make it even clearer. — Steve McConnell, software engineer and author, from Code Complete</p>
<p>好的代码自己本身就是最好的文档。当你打算加注释的时候，问问自己‘我如何才能把我的代码改善到不需增加注释？’重构自己的代码，然后使文档让其更清楚。 — Steve McConnell《代码大全》的作者</p>
</blockquote>
<blockquote>
<p>Hey! It compiles! Ship it! — unknown</p>
<p>嘿，编译通过了！出货！–匿名</p>
</blockquote>
<blockquote>
<p>Inside every well-written large program is a well-written small program. — Charles Antony Richard Hoare, computer scientist</p>
<p>在每个编写精良的大程序里面都是一个编写精良的小程序。 –Charles Antony Richard Hoare,计算机科学家</p>
</blockquote>
<blockquote>
<p>It should be noted that no ethically-trained software engineer would ever consent to write a DestroyBaghdad procedure. Basic professional ethics would instead require him to write a DestroyCity procedure, to which Baghdad could be given as a parameter. — Nathaniel S. Borenstein, computer scientist</p>
<p>需要注意的是，没有哪个经过规范培训的工程师会赞成写一个DestoryBaghdad（摧毁巴克达）的函数。最基本的职业规范会告诉他们应该去写一个叫DestoryCity的函数，然后把“Baghdad”（巴克达）当成这个函数的参数。——　Nathaniel S. Borenstein,　计算机科学家</p>
</blockquote>
<blockquote>
<p>Managing programmers is like herding cats. — unknown</p>
<p>管理程序员就如同养一群猫一样 –匿名</p>
</blockquote>
<blockquote>
<p>Measuring programming progress by lines of code is like measuring aircraft building progress by weight. — Bill Gates, co-founder of Microsoft Corporation</p>
<p>用代码行数来衡量编程的进度，就如同用航空器零件的重量来衡量航空飞机的制造进度一样。——Bill Gates，微软创始人</p>
</blockquote>
<blockquote>
<p>More good code has been written in languages denounced as bad than in languages proclaimed wonderful — much more. — Bjarne Stroustrup, from The Design and Evolution of C++</p>
<p>更多的优秀代码是用被认为很烂的语言写成的，而不是用那些被说的好的不得了的语言。——Bjarne Stroustrup, 摘自《The Design and Evolution of C++》</p>
</blockquote>
<blockquote>
<p>Programs must be written for people to read, and only incidentally for machines to execute. — Harold Abelson and Gerald Jay Sussman, computer scientists and authors, from The Structure and Interpretation of Computer Programs</p>
<p>代码应该是写给其他人来读的，而能让机器运行的仅仅是附带着的。——　Harold Abelson 与 Gerald Jay Sussman, 计算机科学家和作家，摘自《The Structure and Interpretation of Computer Programs》</p>
</blockquote>
<blockquote>
<p>Real programmers don’t comment their code. If it was hard to write, it should be hard to understand. — unknown</p>
<p>真正程序员从来不写代码的注释，如果代码非常难写，那么同样代码的注释也会非常难懂 –匿名</p>
</blockquote>
<blockquote>
<p>Simplicity is prerequisite for reliability. — Edsger Dijkstra</p>
<p>简单是可靠的前提条件 — 迪杰斯特拉</p>
</blockquote>
<blockquote>
<p>The C programming language — a language which combines the flexibility of assembly language with the power of assembly language. — unknown</p>
<p>C语言—— 一门同时具有了汇编语言灵活性和汇编语言强大能力的语言。– 匿名</p>
</blockquote>
<blockquote>
<p>The first 90% of the code accounts for the first 90% of the development time. The remaining 10% of the code accounts for the other 90% of the development time. — Tom Cargill, object-oriented programming expert at Bell Labs</p>
<p>开始的90%的代码用了90%的开发时间，而剩下的最后的10%的代码会需要另外90%的开发时间。– Tom Cargill,贝尔实验室的面向对象编程专家。</p>
</blockquote>
<blockquote>
<p>The important point is that the cost of adding a feature isn’t just the time it takes to code it. The cost also includes the addition of an obstacle to future expansion. Sure, any given feature list can be implemented, given enough coding time. But in addition to coming out late, you will usually wind up with a codebase that is so fragile that new ideas that should be dead-simple wind up taking longer and longer to work into the tangled existing web. The trick is to pick the features that don’t fight each other. — John Carmack, computer game programmer</p>
<p>增加一个功能特性的成本并不单单是为这些功能编码所花费时间的成本，还这个成本应该包括特性扩展的障碍成本。当然，任何的功能清单都可以被实现，只需要有足够的时间。但是除些之外，你应该对你的代码库的脆弱性感到紧张，而那些新的想法应该足够的简单，而不是去花费更多更多的时间去纠缠于现有的蜘蛛网。这里的决窃是挑选那些不会和别人冲突的的功能。</p>
</blockquote>
<blockquote>
<p>The key to performance is elegance, not battalions of special cases. The terrible temptation to tweak should be resisted unless the payoff is really noticeable. — Jon Bently and M. Douglas McIlroy, both computer scientists at Bell Labs</p>
<p>表现的关键是精美和典雅的，并不是使用大量的特殊案例。对于任何调整的冲动都应该是被限制的，除非其回报真的是值得注意的。– Jon Bently and M. Douglas McIlroy, 二者都是贝尔试验实的计算机科学家</p>
</blockquote>
<blockquote><p>The last good thing written in C was Franz Schubert’s Symphony Number 9. — Erwin Dieterich, programmer<br>
最后一件用C做的好作品就是弗朗茨.舒伯特的C大调第9交响曲 — Erwin Dieterich, programmer程序员</p></blockquote>
<blockquote>
<p>The problem with using C++ … is that there’s already a strong tendency in the language to require you to know everything before you can do anything. — Larry Wall, developer of the Perl language</p>
<p>使用C++最大的问题是..在C++语言里，存在这一种很强的趋势，就是如果你不明白C++语言的细节，你就无法做好任何事情。– Larry Wall, developer of the Perl language</p>
</blockquote>
<blockquote>
<p>The sooner you start to code, the longer the program will take. — Roy Carlson, University of Wisconsin</p>
<p>你越早开始都手编码，你所花费来编程的时间就越长 — Roy Carlson, University of Wisconsin</p>
</blockquote>
<blockquote>
<p>The value of a prototype is in the education it gives you, not in the code itself. — Alan Cooper, software author, from The Inmates are Running the Asylum</p>
<p>原型的价值在于他给你的教训，而不是代码自身 — Alan Cooper, software author, from The Inmates are Running the Asylum</p>
</blockquote>
<blockquote>
<p>There are only two kinds of programming languages: those people always bitch about and those nobody uses. — Bjarne Stroustrup</p>
<p>世界上只有两类编程语言：人们都抱怨的语言和从来没有人使用的语言 — Bjarne Stroustrup</p>
</blockquote>
<blockquote>
<p>There are two ways of constructing a software design. One way is to make it so simple that there are obviously no deficiencies. And the other way is to make it so complicated that there are no obvious deficiencies. — Charles Antony Richard Hoare</p>
<p>世界上有两个设计软件的方法，一种方法是设计的尽量简单，以至于明显的没有什么缺陷，另外一种方式是使他尽量的复杂，以至于其缺陷不那么明显。</p>
</blockquote>
<blockquote>
<p>Ugly programs are like ugly suspension bridges: they’re much more liable to collapse than pretty ones, because the way humans (especially engineer-humans) perceive beauty is intimately related to our ability to process and understand complexity. A language that makes it hard to write elegant code makes it hard to write good code. — Eric S. Raymond</p>
<p>丑陋的程序就像一座丑陋的吊桥：他们相比漂亮的良好的吊桥起来，更有可能会坍塌，这是因为人类（尤其是工程师）感知漂亮的东西是和我们处理和理解复杂问题的能力相关的。所以，一个程序语言如果很难以优雅地方式编程，那么其就很难写出好的代码。</p>
</blockquote>
<blockquote>
<p>Weeks of programming can save you hours of planning. — unknown</p>
<p>多做几周的编程可以节省你做计划的时间 —— 匿名 （意思为，只有实践过了，你才更容易做计划，没有实践过，做起计划来将会很头痛）</p>
</blockquote>
<blockquote>
<p>When a programming language is created that allows programmers to program in simple English, it will be discovered that programmers cannot speak English. — unknown</p>
<p>当程序语言被设计成允许程序以很简单的英语来编程的时候，人们将会发现编写程序的程序员都来自不会说英语的地方。 –匿名</p>
</blockquote>
<p>（全文完，翻译水平有限，如果有误，还请批评指正！）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5444.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5201.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4875.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4758.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3005.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2753" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="aa0a55f680">
<img alt="image placeholder" >
<meta itemprop="headline" content="最佳编程语录">
<meta itemprop="description" content="以前本站发布过《22条经典的编程引言》、《编程引言补充》、《Linus Torvalds 语录》还有《十条不错的编程观点》。今天向大家介绍“最佳编程语录”，条条都是很不错的语录，如同我们的太阳，照亮了我们的方向（所以我们选用了一个红色的图片，希望能够通过五毛们的网络审查）。其中只有一两条在以前本站发布过的文章中出现过。这篇文章的出处在这里，下面是“Neo”和“陈皓”的翻译，我们的翻译水平有限，所以...">
<meta itemprop="datePublished" content="2010-08-02T08:15:45+08:00">
<meta itemprop="dateModified" content="2010-10-20T22:57:56+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2753.html">
<meta itemprop="author" content="Neo">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2753.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4">
<meta itemprop="ratingCount" content="25">
</div>
</div>
<div id="post-ratings-2753-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-08-02T08:15:45+08:00</pubDate>
<guid>https://coolshell.cn/articles/2753.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 免费电子书列表 ]]></title>
<link>https://coolshell.cn/articles/2775.html</link>
<content><![CDATA[ 
<p>在StackOverflow上，有人要打算收集个免费电子书的列表，结果很快就有人分享了一个列表。很不错，我就转过来了。原帖的地址在<a href="https://stackoverflow.com/questions/194812/list-of-freely-available-programming-books">http://stackoverflow.com/questions/194812/list-of-freely-available-programming-books</a> （注意：有些连接可能会被墙掉）</p>
<p>List of Free Programming books (compiled): <strong>Meta-List</strong></p>
<ul>
<li><a rel="nofollow" href="http://www.htdp.org/2003-09-26/Book/">How to Design Programs: An Introduction to Computing and Programming</a></li>
<li><a rel="nofollow" href="http://www.coderholic.com/25-free-computer-science-books/">25 Free Computer Science Ebooks</a></li>
<li><a rel="nofollow" href="http://www.freetechbooks.com/">Free Tech Books</a></li>
<li>
<a rel="nofollow" href="http://www.mindviewinc.com/Books/">MindView Inc</a> (List of Free Books)</li>
<li><a rel="nofollow" href="https://en.wikibooks.org/wiki/Category%3aProgramming">Wikibooks: Programming</a></li>
<li>
<a rel="nofollow" href="https://en.wikibooks.org/wiki/Category%3aProgramming"></a><a rel="nofollow" href="http://refcardz.dzone.com/">Cheat Sheets (Free)</a>
</li>
<li><a rel="nofollow" href="https://blogs.msdn.com/wriju/archive/2009/01/07/free-ebooks-at-codeplex.aspx">CodePlex List of Free E-Books</a></li>
<li><a rel="nofollow" href="http://www.booktraining.net/">Book Training – On Video!</a></li>
<li><a rel="nofollow" href="http://www.spmn.com/products_guidebooks.html">Sofware Program Managers Network – Free EBooks</a></li>
<li><a rel="nofollow" href="http://www.linbai.info/">EBook Share @ linbai.info</a></li>
<li><a rel="nofollow" href="http://www.freebooksclub.net/">FreeBooksClub.Net</a></li>
<li>
<a rel="nofollow" href="http://theassayer.org/">Theassayer.org</a> (Free Online books)</li>
<li><a rel="nofollow" href="https://oreilly.com/openbook/">O’Reilly’s Open Books Project</a></li>
<li><a rel="nofollow" href="http://www.techbooksforfree.com/">TechBooksForFree.com</a></li>
<li>
<a rel="nofollow" href="http://www.galileocomputing.de/katalog/openbook">Galileo Computing</a> (Free Downloadable German Books)</li>
</ul>
<p><span id="more-2775"></span><strong>Graphics Programming</strong></p>
<ul>
<li>Nvidia <a rel="nofollow" href="http://http.developer.nvidia.com/GPUGems/gpugems_part01.html">GPU Gems 1</a>
</li>
<li>Nvidia <a rel="nofollow" href="http://http.developer.nvidia.com/GPUGems2/gpugems2_part01.html">GPU Gems 2</a>
</li>
<li>Nvidia <a rel="nofollow" href="http://http.developer.nvidia.com/GPUGems3/gpugems3_part01.html">GPU Gems 3</a>
</li>
<li><a rel="nofollow" href="https://www.gamedev.net/reference/articles/article1698.asp">Graphics Programming Black Book</a></li>
</ul>
<p><strong>Language Agnostic</strong></p>
<ul>
<li>
<a rel="nofollow" href="http://codebetter.com/files/folders/codebetter_downloads/entry179694.aspx">Foundations of Programming</a> by Karl Seguin</li>
<li>
<a rel="nofollow" href="http://scpd.stanford.edu/knuth/index.jsp">Computer Musings</a> (Lectures by Donald Knuth)</li>
<li>
<a rel="nofollow" href="http://www.catb.org/esr/writings/cathedral-bazaar/">The Cathedral and the Bazaar</a> (Introduction to Open Source Software)</li>
<li><a rel="nofollow" href="https://www.codeplex.com/AppArchGuide">Patterns and Practices: Application Architecture Guide 2.0</a></li>
<li><a rel="nofollow" href="https://www.cl.cam.ac.uk/~rja14/book.html">Security Engineering</a></li>
<li><a rel="nofollow" href="http://www.dspguide.com/">Digital Signal Processing For Engineers and Scientists</a></li>
<li>
<a rel="nofollow" href="https://gettingreal.37signals.com/">Getting Real</a> (Courtesy <a rel="nofollow" href="https://37signals.com/">37 Signals</a>)</li>
<li><a rel="nofollow" href="https://mitpress.mit.edu/sicp/">Structure and Interpretation of Computer Programs</a></li>
<li><a rel="nofollow" href="http://www.infoq.com/minibooks/domain-driven-design-quickly">Domain Driven Design Quickly</a></li>
<li><a rel="nofollow" href="http://homepage.mac.com/s_lott/books/oodesign.html">OO Design</a></li>
<li><a rel="nofollow" href="https://smartbear.com/codecollab-code-review-book.php">Best Kept Secrets of Peer Code Review</a></li>
<li><a rel="nofollow" href="http://www.scribd.com/doc/7181362/NASA-Software-Measurement-Guidebook">NASA Software Measurement Handbook</a></li>
<li><a rel="nofollow" href="http://homepages.inf.ed.ac.uk/dts/pm/Papers/nasa-manage.pdf">NASA Manager Handbook for Software Development</a></li>
<li>
<a rel="nofollow" href="https://www.cl.cam.ac.uk/teaching/Lectures/funprog-jrh-1996/">Introduction to Functional Programming</a> – Class Lectures and Slides</li>
<li>
<a rel="nofollow" href="http://www.htdp.org/">How to Design Programs</a> – MIT Press</li>
<li>
<a rel="nofollow" href="http://www.swebok.org/stoneman/trial_1_00.html">Guide to the Software Engineering Body of Knowledge</a> – IEEE Computer Society Press</li>
<li>
<a rel="nofollow" href="http://ocw.mit.edu/OcwWeb/web/home/home/index.htm">Online Course Materials</a> – MIT</li>
<li>
<a rel="nofollow" href="https://www.cs.berkeley.edu/~vazirani/algorithms.html">Algorithms</a> (Draft Copy)</li>
<li><a rel="nofollow" href="http://dotnetslackers.com/projects/Data-Structures-And-Algorithms/">Data Structures and Algorithms</a></li>
<li><a rel="nofollow" href="http://www.agileskills.org/download.html.en">Essential Skills for Agile Development</a></li>
<li><a rel="nofollow" href="http://www.cs.brown.edu/~sk/Publications/Books/ProgLangs/">Programming Languages: Application and Interpretation</a></li>
<li><a rel="nofollow" href="http://pine.fm/LearnToProgram/">Learn to Program</a></li>
<li><a rel="nofollow" href="http://www.dreamsongs.com/Files/PatternsOfSoftware.pdf">Patterns of Software: Tales from the Software Community</a></li>
<li><a rel="nofollow" href="http://freeworld.thc.org/root/phun/unmaintain.html">How to write Unmaintainable Code</a></li>
<li><a rel="nofollow" href="http://catb.org/esr/writings/taoup/html/">The Art of Unix Programming</a></li>
<li><a rel="nofollow" href="http://nexus.realtimepublishers.com/dgbcq.php">The Definitive Guide to Building Code Quality</a></li>
<li><a rel="nofollow" href="http://openbookproject.net/thinkcs/cpp.php">How to Think Like a Computer Scientist</a></li>
<li><a rel="nofollow" href="http://planning.cs.uiuc.edu/">Planning Algorithms</a></li>
<li><a rel="nofollow" href="http://greenteapress.com/semaphores/">The Little Book of Semaphores</a></li>
<li><a rel="nofollow" href="http://www.ii.uib.no/~michal/und/i227/book/book.pdf">Mathematical Logic – an Introduction</a></li>
<li><a rel="nofollow" href="http://www.cse.ohio-state.edu/~gurari/theory-bk/theory-bk.html">An Introduction to the Theory of Computation</a></li>
<li><a rel="nofollow" href="http://devshaped.com/book">Developers Developers Developers Developers</a></li>
<li><a rel="nofollow" href="http://www.iecc.com/linker/">Linkers and loaders</a></li>
<li><a rel="nofollow" href="https://beej.us/guide/bgnet/">Beej’s Guide to Network Programming</a></li>
<li><a rel="nofollow" href="http://www.infoq.com/minibooks/domain-driven-design-quickly">Domain Driven Design Quickly</a></li>
<li><a rel="nofollow" href="http://compilers.iecc.com/crenshaw/">Let’s Build a Compiler</a></li>
<li><a rel="nofollow" href="http://producingoss.com/">Producing Open Source Software</a></li>
<li><a rel="nofollow" href="http://www.lindaspaces.com/book/">How to Write Parallel Programs</a></li>
<li><a rel="nofollow" href="http://www.neildavidson.com/dontjustrollthedice.html">Don’t Just Roll the Dice</a></li>
</ul>
<p><strong>ASP.NET MVC</strong>:</p>
<ul>
<li><a rel="nofollow" href="https://weblogs.asp.net/scottgu/archive/2009/03/10/free-asp-net-mvc-ebook-tutorial.aspx">NerdDinner Walkthrough</a></li>
</ul>
<p><strong>Assembly Language</strong></p>
<ul>
<li><a rel="nofollow" href="https://download.savannah.gnu.org/releases/pgubook/ProgrammingGroundUp-1-0-booksize.pdf">ProgrammingGroundUp</a></li>
<li><a rel="nofollow" href="http://drpaulcarter.com/pcasm/">Paul Carter’s Tutorial on x86 Assembly</a></li>
<li><a rel="nofollow" href="http://www.agner.org/optimize/">Software optimization resources by Agner Fog</a></li>
</ul>
<p><strong>Bash</strong></p>
<ul>
<li><a rel="nofollow" href="http://tldp.org/LDP/abs/html/">Advanced Bash-Scripting Guide</a></li>
</ul>
<p><strong>C/C++</strong></p>
<ul>
<li><a rel="nofollow" href="http://www.knosof.co.uk/cbook/cbook.html">The new C standard – an annotated reference</a></li>
<li><a rel="nofollow" href="http://publications.gbdirect.co.uk/c_book/">The C book</a></li>
<li><a rel="nofollow" href="http://www.mindview.net/Books/TICPP/ThinkingInCPP2e.html">Thinking in C++, Second Edition</a></li>
<li><a rel="nofollow" href="http://cppannotations.sourceforge.net/">C++ Annotations</a></li>
<li><a rel="nofollow" href="http://www.agner.org/optimize/">Software optimization resources by Agner Fog</a></li>
<li>
<a rel="nofollow" href="http://cartan.cas.suffolk.edu/oopdocbook/opensource/index.html">Introduction to Design Patterns in C++ with Qt 4</a> (Open Publication License)</li>
</ul>
<p><strong>C#</strong></p>
<ul>
<li>See <strong>.NET</strong> below</li>
</ul>
<p><strong>Django</strong></p>
<ul>
<li><a rel="nofollow" href="http://djangobook.com/">Djangobook.com</a></li>
</ul>
<p><strong>Forth</strong></p>
<ul>
<li><a rel="nofollow" href="http://home.iae.nl/users/mhx/sf.html">Starting Forth</a></li>
</ul>
<p><strong>Git</strong></p>
<ul>
<li><a rel="nofollow" href="http://progit.org/book/">Pro Git</a></li>
<li><a rel="nofollow" href="http://book.git-scm.com/index.html">The Git Community Book</a></li>
</ul>
<p><strong>Haskell</strong></p>
<ul>
<li><a rel="nofollow" href="http://learnyouahaskell.com/chapters">Learn You a Haskell</a></li>
<li><a rel="nofollow" href="http://book.realworldhaskell.org/read/">Real World Haskell</a></li>
</ul>
<p><strong>Java</strong></p>
<ul>
<li><a rel="nofollow" href="http://java.sun.com/docs/books/tutorial/">Sun’s Java Tutorials</a></li>
<li><a rel="nofollow" href="http://www.mindview.net/Books/TIJ/">Thinking in Java</a></li>
<li><a rel="nofollow" href="http://openbookproject.net/thinkcs/java.php">How to Think Like a Computer Scientist</a></li>
<li><a rel="nofollow" href="https://www.redbooks.ibm.com/redbooks/SG245118.html">Java Thin-Client Programming</a></li>
<li>
<a rel="nofollow" href="https://s3.amazonaws.com/neilbartlett.name/osgibook_preview_20090110.pdf">OSGi in Practice</a> (CreativeCommons Attribution Non-commercial Share Alike License)</li>
</ul>
<p><strong>JavaScript</strong></p>
<ul>
<li><a rel="nofollow" href="https://eloquentjavascript.net/">Eloquent JavaScript</a></li>
<li><a rel="nofollow" href="http://www.crockford.com/javascript/">Crockford’s JavaScript</a></li>
<li>
<a rel="nofollow" href="http://www.rebeccamurphey.com/jqfundamentals/">jQuery Fundamentals</a> (starts with JS basics)</li>
</ul>
<p><strong>Linux</strong></p>
<ul>
<li><a rel="nofollow" href="http://www.advancedlinuxprogramming.com/">Advanced Linux Programming</a></li>
</ul>
<p><strong>Lisp</strong></p>
<ul>
<li><a rel="nofollow" href="http://www.gigamonkeys.com/book/">Practical Common Lisp</a></li>
<li><a rel="nofollow" href="http://www.paulgraham.com/onlisp.html">On Lisp</a></li>
<li><a rel="nofollow" href="http://www.paulgraham.com/acl.html">ANSI Common Lisp</a></li>
<li><a rel="nofollow" href="https://www.cs.cmu.edu/Groups/AI/html/cltl/mirrors.html">Common Lisp the Language, 2nd Edition</a></li>
<li><a rel="nofollow" href="http://psg.com/~dlamkins/sl/contents.html">Successful Lisp</a></li>
<li><a rel="nofollow" href="http://letoverlambda.com/index.cl/toc">Let Over Lamda – 50 Years of Lisp</a></li>
</ul>
<p><strong>Lua</strong></p>
<ul>
<li>
<a rel="nofollow" href="https://www.lua.org/pil/">Programming In Lua</a> (for v5 but still largely relevant)</li>
</ul>
<p><strong>Maven</strong></p>
<ul>
<li><a rel="nofollow" href="http://www.maestrodev.com/better-build-maven">Better Builds with Maven</a></li>
<li><a rel="nofollow" href="http://www.sonatype.com/books/mvnex-book/reference/public-book.html">Maven by Example</a></li>
<li><a rel="nofollow" href="http://www.sonatype.com/books/maven-book/reference/">Maven: The Definitive Guide</a></li>
</ul>
<p><strong>Mercurial</strong></p>
<ul>
<li><a rel="nofollow" href="http://hgbook.red-bean.com/">Mercurial: The Definitive Guide</a></li>
<li><a rel="nofollow" href="http://hginit.com/">HGInit – Mercurial Tutorial by Joel Spolsky</a></li>
</ul>
<p><strong>.NET (C#)</strong></p>
<ul>
<li>
<a rel="nofollow" href="http://www.programmersheaven.com/2/CSharpBook">Free C# Book</a> Covers C#1.0 and 2.0 (Courtesy of <a rel="nofollow" href="http://www.programmersheaven.com/">Programmers Heaven</a>)</li>
<li><a rel="nofollow" href="http://www.infoq.com/minibooks/vsnettt">Visual Studio Tips and Tricks</a></li>
<li>
<a rel="nofollow" href="https://weblogs.asp.net/zeeshanhirani/archive/2008/12/05/my-christmas-present-to-the-entity-framework-community.aspx">Entity Framework</a> (514 pages)</li>
<li><a rel="nofollow" href="http://www.charlespetzold.com/dotnet/index.html">Charles Petzold’s .Net Book 0</a></li>
<li><a rel="nofollow" href="http://www.albahari.com/threading/">Threading in C#</a></li>
<li>
<a rel="nofollow" href="http://www.csharpcourse.com/">C# Yellow Book</a> (Intro to programming)</li>
<li><a rel="nofollow" href="https://en.wikibooks.org/wiki/C_Sharp_Programming">C# Programming – Wikibook</a></li>
<li><a rel="nofollow" href="http://www.techotopia.com/index.php/C_Sharp_Essentials">C# Essentials</a></li>
<li><a rel="nofollow" href="http://www.brpreiss.com/books/opus6/">Data Structures and Algorithms with Object-Oriented Design Patterns in C#</a></li>
<li>
<a rel="nofollow" href="http://downloads.red-gate.com/ebooks/DotNet/illustratedcsharp2008.zip">Illustrated C# 2008</a> (Download) (<strong>.ZIP</strong>) [dead link]</li>
<li>
<a rel="nofollow" href="https://www.red-gate.com/products/ants_performance_profiler/be_ahead_of_the_game_ebook.htm?utm_source=simpletalk&amp;utm_medium=email&amp;utm_content=nlv_aheadofgame-ebook&amp;utm_campaign=antsperformanceprofiler">O’Reilly’s C# Pocket Reference Manual</a> (<em>Free Ebook courtesy of <a rel="nofollow" href="https://www.red-gate.com/">Red Gate Software</a></em>) [dead link]</li>
</ul>
<p><strong>NoSQL</strong></p>
<ul>
<li><a rel="nofollow" href="http://books.couchdb.org/relax/">CouchDB: The Definitive Guide</a></li>
</ul>
<p><strong>Objective-C</strong></p>
<ul>
<li><a rel="nofollow" href="https://developer.apple.com/DOCUMENTATION/Cocoa/Conceptual/ObjectiveC/">The Objective-C Programming Language</a></li>
</ul>
<p><strong>Parrot / Perl 6</strong></p>
<ul>
<li>
<a rel="nofollow" href="https://github.com/perl6/book/">Perl 6</a> (Work in progress)</li>
</ul>
<p><strong>Perl</strong></p>
<ul>
<li><a rel="nofollow" href="http://hop.perl.plover.com/book/">Higher Order Perl</a></li>
<li><a rel="nofollow" href="http://www.greenteapress.com/perl/">Perl The Hard Way</a></li>
<li><a rel="nofollow" href="http://www.extremeperl.org/bk/home">Extreme Perl</a></li>
<li>
<a rel="nofollow" href="http://linkmingle.com/list/13-plus-List-of-Free-Great-Perl-Books-available-Online-freebooksandarticles">Perl Free Online EBooks</a> <strong>Meta-List</strong>
</li>
<li><a rel="nofollow" href="http://www.masonbook.com/book/">The Mason Book</a></li>
<li><a rel="nofollow" href="http://modperlbook.org/">Practical mod_perl</a></li>
<li><a rel="nofollow" href="https://www.perl.org/books/beginning-perl/">Beginning Perl</a></li>
<li>
<a rel="nofollow" href="http://www.masonbook.com/book/">Embedding Perl in HTML with Mason</a> (Open Publication License)</li>
<li><a rel="nofollow" href="http://lwp.interglacial.com/index.html">Perl &amp; LWP</a></li>
<li><a rel="nofollow" href="http://www.globalspin.com/thebook/">Perl for the Web</a></li>
<li><a rel="nofollow" href="https://oreilly.com/openbook/webclient/">Web Client Programming with Perl</a></li>
<li>
<a rel="nofollow" href="https://github.com/chromatic/modern_perl_book/">Modern Perl 5</a> (Work in progress)</li>
</ul>
<p><strong>PHP</strong></p>
<ul>
<li>
<a rel="nofollow" href="http://www.ipbwiki.com/Practical_PHP_Programming%3aTable_Of_Contents">Practical PHP Programming</a> (Wiki that contains O’Reilly’s <em>PHP In a Nutshell</em>)</li>
<li><a rel="nofollow" href="http://www.survivethedeepend.com/">Zend Framework: Survive the Deep End</a></li>
</ul>
<p><strong>PowerShell</strong></p>
<ul>
<li><a rel="nofollow" href="http://powershell.com/cs/blogs/ebook/">Mastering PowerShell</a></li>
</ul>
<p><strong>Prolog</strong></p>
<ul>
<li><a rel="nofollow" href="http://www.amzi.com/ExpertSystemsInProlog/">Building Expert Systems in Prolog</a></li>
<li><a rel="nofollow" href="http://www.amzi.com/AdventureInProlog/advfrtop.htm">Adventure in Prolog</a></li>
<li><a rel="nofollow" href="http://computing.unn.ac.uk/staff/cgpb4/prologbook/">Prolog Programming A First Course</a></li>
<li><a rel="nofollow" href="http://www.ida.liu.se/~ulfni/lpp/">Logic, Programming and Prolog (2ed)</a></li>
<li><a rel="nofollow" href="http://www.j-paine.org/prolog/mathnotes/files/pms/pms.html">Introduction to Prolog for Mathematicians</a></li>
<li><a rel="nofollow" href="http://www.learnprolognow.org/">Learn Prolog Now!</a></li>
<li><a rel="nofollow" href="http://cs.union.edu/~striegnk/courses/nlp-with-prolog/html/">Natural Language Processing Techniques in Prolog</a></li>
</ul>
<p><strong>PostgreSQL</strong></p>
<ul>
<a rel="nofollow" href="http://cs.union.edu/~striegnk/courses/nlp-with-prolog/html/"> </a>
<li><a rel="nofollow" href="http://www.commandprompt.com/ppbook/">Practical PostgreSQL</a></li>
</ul>
<p><strong>Python</strong></p>
<ul>
<li><a rel="nofollow" href="http://diveintopython.org/">Dive Into Python</a></li>
<li><a rel="nofollow" href="http://diveintopython3.org/">Dive Into Python 3</a></li>
<li><a rel="nofollow" href="http://www.swaroopch.com/notes/Python">Byte of Python</a></li>
<li><a rel="nofollow" href="http://homepage.mac.com/s_lott/books/python.html">Building Skills in Python Version 2.5</a></li>
<li>
<a rel="nofollow" href="http://linkmingle.com/list/List-of-Free-Online-Python-Books-freebooksandarticles">Python Free Online Ebooks</a> <strong>Meta-List</strong>
</li>
<li><a rel="nofollow" href="http://openbookproject.net/pybiblio/">Python Bibliotheca</a></li>
<li><a rel="nofollow" href="http://www.greenteapress.com/thinkpython/thinkpython.pdf">Think Python</a></li>
<li><a rel="nofollow" href="http://www.brpreiss.com/books/opus7/html/book.html">Data Structures and Algorithms in Python</a></li>
<li><a rel="nofollow" href="http://www.greenteapress.com/thinkpython/thinkCSpy/">How to Think Like a Computer Scientist: Learning with Python</a></li>
<li><a rel="nofollow" href="http://www.openbookproject.net/py4fun/">Python for Fun</a></li>
<li><a rel="nofollow" href="http://inventwithpython.com/">Invent Your Own Computer Games With Python</a></li>
<li><a rel="nofollow" href="http://www.mindview.net/Books/TIPython/">Thinking in Python</a></li>
<li><a rel="nofollow" href="http://djangobook.com/">The Django Book</a></li>
<li><a title="SWFK" rel="nofollow" href="http://www.briggs.net.nz/log/writing/snake-wrangling-for-kids/">Snake Wrangling For Kids</a></li>
</ul>
<p><strong>Ruby</strong></p>
<ul>
<li><a rel="nofollow" href="https://www.ruby-doc.org/docs/ProgrammingRuby/">Programming Ruby</a></li>
<li>
<a rel="nofollow" href="http://mislav.uniqpath.com/poignant-guide/">Why’s (Poignant) Guide to Ruby</a> (<a rel="nofollow" href="http://www.scribd.com/doc/2236084/Whys-Poignant-Guide-to-Ruby">Mirror</a> via <a rel="nofollow" href="https://www.scribd.com/">Scribd</a>)</li>
<li><a rel="nofollow" href="http://www.humblelittlerubybook.com/">Mr. Neighborly’s Humble Little Ruby Book</a></li>
<li><a rel="nofollow" href="http://rubybestpractices.com/">Ruby Best Practices</a></li>
<li><a rel="nofollow" href="http://macruby.labs.oreilly.com/">MacRuby: The Definitive Guide</a></li>
<li><a rel="nofollow" href="http://www.railstutorial.org/">Ruby on Rails Tutorial: Learn Rails By Example</a></li>
</ul>
<p><strong>Scala</strong></p>
<ul>
<li><a rel="nofollow" href="https://www.scala-lang.org/docu/files/ScalaTutorial.pdf">A Scala Tutorial for Java programmers</a></li>
<li><a rel="nofollow" href="https://www.scala-lang.org/docu/files/ScalaByExample.pdf">Scala By Example</a></li>
<li><a rel="nofollow" href="http://programming-scala.labs.oreilly.com/index.html">Programing Scala</a></li>
<li>
<a rel="nofollow" href="https://github.com/leithaus/XTrace/tree/monadic/src/main/book/content/">Xtrace</a> (Github)</li>
<li>
<a rel="nofollow" href="https://github.com/tjweir/liftbook">List</a> (Github)</li>
<li><a rel="nofollow" href="https://github.com/leithaus/XTrace/tree/monadic/src/main/book/content/">Pro Scala: Monadic Design Patterns for the Web</a></li>
<li>
<a rel="nofollow" href="https://github.com/tjweir/liftbook">Exploring Lift</a> (published earlier as “The Definitive Guide to Lift”, <a rel="nofollow" href="https://groups.google.com/group/the-lift-book">pdf</a>)</li>
</ul>
<p><strong>Scheme</strong></p>
<ul>
<li><a rel="nofollow" href="http://www.scheme.com/tspl4/">The Scheme Programming Language (Edition 4)</a></li>
</ul>
<p><strong>SmallTalk</strong></p>
<ul>
<li>
<a rel="nofollow" href="http://stephane.ducasse.free.fr/FreeBooks.html">SmallTalk Free Ebooks</a> <em>Courtesy of Stéphane Ducasse</em>
</li>
<li>
<a rel="nofollow" href="http://www.squeakbyexample.org/">Squeak By Example</a> (Smalltalk IDE)</li>
</ul>
<p><strong>Subversion</strong></p>
<ul>
<li><a rel="nofollow" href="http://www.phptr.com/content/images/0131855182/downloads/Nagel_book.pdf">Subversion Version Control: Using the Subversion Version Control System in Development Projects</a></li>
</ul>
<p><strong>*<em>SQL (Implementation agnostic) *</em> </strong></p>
<li>
<a rel="nofollow" href="https://www.cs.arizona.edu/people/rts/publications.html">Developing Time-Oriented Database Applications in SQL</a>,Richard T. Snodgrass</li>
<p><strong>Vim</strong></p>
<ul>
<li><a rel="nofollow" href="http://www.swaroopch.com/notes/Vim">A Byte of Vim</a></li>
</ul>
<p>你有和我们分享的计算机电子书列表吗？欢迎在回复中和我们分享。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3270.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3192.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5479.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4710.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4220.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3903.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2775" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="30b2d73d95">
<img alt="image placeholder" >
<meta itemprop="headline" content="免费电子书列表">
<meta itemprop="description" content="在StackOverflow上，有人要打算收集个免费电子书的列表，结果很快就有人分享了一个列表。很不错，我就转过来了。原帖的地址在http://stackoverflow.com/questions/194812/list-of-freely-available-programming-books （注意：有些连接可能会被墙掉）

List of Free Programming books ...">
<meta itemprop="datePublished" content="2010-08-04T18:37:59+08:00">
<meta itemprop="dateModified" content="2010-08-05T09:45:30+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2775.html">
<meta itemprop="author" content="Neo">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2775.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.12">
<meta itemprop="ratingCount" content="17">
</div>
</div>
<div id="post-ratings-2775-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-08-04T18:37:59+08:00</pubDate>
<guid>https://coolshell.cn/articles/2775.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 微软最囧的UI ]]></title>
<link>https://coolshell.cn/articles/2792.html</link>
<content><![CDATA[ 
<p>以前，本站介绍过一些<a href="https://coolshell.cn/articles/1907.html" target="_blank">Ugly的UI</a>，今天我们来看看微软Windows里的“画笔”程序，看看微软的某个功能干了什么样的囧事。</p>
<p>我打开了一个比较大的图片，有点太大了，我想缩小一下看看，很好，微软在菜单项里供了Zoom选项，其中有一个Custom（自定义），挺不错的。</p>
<p><img alt="image placeholder" >
<p>但是，当我看到这个自定义的对话框后，我彻底无语了，大哥你是怎么想的啊……</p>
<p><span id="more-2792"></span></p>
<p><img alt="image placeholder" >
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/4220.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3877.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3207.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3142.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3097.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3013.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2792" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="c80d1a0012">
<img alt="image placeholder" >
<meta itemprop="headline" content="微软最囧的UI">
<meta itemprop="description" content="以前，本站介绍过一些Ugly的UI，今天我们来看看微软Windows里的“画笔”程序，看看微软的某个功能干了什么样的囧事。

我打开了一个比较大的图片，有点太大了，我想缩小一下看看，很好，微软在菜单项里供了Zoom选项，其中有一个Custom（自定义），挺不错的。



但是，当我看到这个自定义的对话框后，我彻底无语了，大哥你是怎么想的啊……



">
<meta itemprop="datePublished" content="2010-08-09T08:36:47+08:00">
<meta itemprop="dateModified" content="2010-08-09T13:55:47+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2792.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2792.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.2">
<meta itemprop="ratingCount" content="20">
</div>
</div>
<div id="post-ratings-2792-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-08-09T08:36:47+08:00</pubDate>
<guid>https://coolshell.cn/articles/2792.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ JS1K 演示 ]]></title>
<link>https://coolshell.cn/articles/2785.html</link>
<content><![CDATA[ 
<p>以前本站发布过很多和Javascript相关的东西，如：《<a rel="bookmark" href="https://coolshell.cn/articles/2276.html">又一个Javascript试验田</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/2065.html">一个Windows 3.1的Web网站</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/1932.html">哥是玩程序的</a>》。今天要介绍另外一组，先看下面的这个Javascript特效（在IE下无法正常工作），你可以用Chrome查看，很炫。不过最炫的是其源码，非常的简单，不超过1K。如果你要知道这个效果的原理，这里有一个<a href="http://acko.net/blog/js1k-demo-the-making-of" target="_blank">教程</a>。这里有个网站：<a href="http://js1k.com/" target="_blank">JS1K Demo</a>， 这个站上主要收集一些Javascript不大于1K的程序。</p>
<p align="center"><iframe loading="lazy" id="1kjs" frameborder="0" style="background:#000;border:0" width="510" height="320" src="https://acko.net/files/1022b.html"></iframe><br> <br>
<button id="1kjs-stop" onclick="document.getElementById('1kjs').src='about:blank';document.getElementById('1kjs-stop').style.display='none';document.getElementById('1kjs-start').style.display='block';">停止演示</button><button style="display: none" id="1kjs-start" onclick="document.getElementById('1kjs').src='http://acko.net/files/1022b.html';document.getElementById('1kjs-start').style.display='none';document.getElementById('1kjs-stop').style.display='block';">开始演示</button></p>
<p>下面是其源码：<br>
<span id="more-2785"></span></p>
<p>[javascript]<br>
f=Math; _=document.body; _.style.background="#000"; e=_.children[0]; e.width=w=innerWidth-10; e.height=h=innerHeight-25; g=e.getContext("2d"); t=w/h; with(g){scale(w*0.5/t,h*0.5); translate(1*t,1); globalCompositeOperation="lighter"; lw=45/h; $=p=m=q=r=d=0; g=u=-8; setInterval(function(){if(–d&lt; 0){h=f.random; e=h()*18-9; r2=h()*18-9; u2=h()*18-9; d=70}function A(C,B){return C+(B-C)*0.04}p=A(p,e); m=A(m,r2); g=A(g,u2); q=A(q,p); r=A(r,m); u=A(u,g); a=f.atan2(q,-u*2); b=f.atan2(r*2,f.sqrt(u*u+q*q)); $+=0.05; clearRect(-t,-1,2*t,2); for(i=12; i; –i){v=0; for(j=45; j; ){c=f.cos; s=f.sin; j–; w=$-j*0.03-i*3; A=f.sqrt(j+0.2); n=c(w+s(w*0.31))*2+s(w*0.83)*3+w*0.02; o=s(w*0.7)-c(3+w*0.23)*3; x=c(n)*c(o)*A-q; y=s(n)*c(o)*A-r; z=s(o)*A-u; n=c(a); o=s(a); k=x*n+z*o; h=z*n-x*o; n=c(b); o=s(b); l=y*n+h*o; z=h*n-y*o; lineTo(k/z,l/z); lineWidth=lw*(2+!j)/z; h=f.round; w=h(60-j)*(1+!j+f.max(0,s($*6-j/8)-0.95)*70); strokeStyle="rgb("+h(w*(!j+s(i+$*0.15)+1))+","+h(!j+w*(s(i-1)+1))+","+h(!j+w*(s(i-1.3)+1))+")"; if(z&gt; 0.1){v++&amp;&amp;stroke()}else{v=0}beginPath(); moveTo(k/z,l/z)}}},33)}<br>
[/javascript]</p>
<p>下面，让我们再看一个只有1023字节的3D演示，同样，只有在Chrome中才能看到最佳效果。</p>
<p align="center"><iframe loading="lazy" id="1kjs1" frameborder="0" style="background:#000;border:0" width="510" height="320" src="https://js1k.com/pleaseDontHotlinkMe/15"></iframe><br> <br>
<button id="1kjs-stop1" onclick="document.getElementById('1kjs1').src='about:blank';document.getElementById('1kjs-stop1').style.display='none';document.getElementById('1kjs-start1').style.display='block';">停止演示</button><button style="display: none" id="1kjs-start1" onclick="document.getElementById('1kjs1').src='http://js1k.com/pleaseDontHotlinkMe/15';document.getElementById('1kjs-start1').style.display='none';document.getElementById('1kjs-stop1').style.display='block';">开始演示</button></p>
<p>其源代码如下：</p>
<p>[javascript]<br>
with(document.body.style){margin="0px";overflow="hidden";}var w=window.innerWidth;var h=window.innerHeight;var ca=document.getElementById("c");ca.width=w;ca.height=h;var c=ca.getContext("2d");m=Math;fs=m.sin;fc=m.cos;fm=m.max;setInterval(d,30);function p(x,y,z){return{x:x,y:y,z:z};}function s(a,z){r=w/10;R=w/3;b=-20*fc(a*5+t);return p(w/2+(R*fc(a)+r*fs(z+2*t))/z+fc(a)*b,h/2+(R*fs(a))/z+fs(a)*b);}function q(a,da,z,dz){var v=[s(a,z),s(a+da,z),s(a+da,z+dz),s(a,z+dz)];c.beginPath();c.moveTo(v[0].x,v[0].y);for(i in v)c.lineTo(v[i].x,v[i].y);c.fill();}var Z=-0.20;var t=0;function d(){t+=1/30.0;c.fillStyle="#000";c.fillRect(0,0,w,h);c.fillStyle="#f00";var n=30;var a=0;var da=2*Math.PI/n;var dz=0.25;for(var z=Z+8;z&gt;Z;z-=dz){for(var i=0;i&lt;n;i++){fog=1/(fm((z+0.7)-3,1));if(z&lt;=2){fog=fm(0,z/2*z/2);}var k=(205*(fog*Math.abs(fs(i/n*2*3.14+t))))&gt;&gt;0;k*=(0.55+0.45*fc((i/n+0.25)*Math.PI*5));k=k&gt;&gt;0;c.fillStyle="rgb("+k+","+k+","+k+")";q(a,da,z,dz);if(i%3==0){c.fillStyle="#000";q(a,da/10,z,dz);}a+=da;}}Z-=0.05;if(Z&lt;=dz)Z+=dz;}<br>
[/javascript]</p>
<p>你可以前往一看更多的<a href="http://js1k.com/demos" target="_blank">演示</a>。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3429.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17524.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10822.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10739.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2785" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="16754e7172">
<img alt="image placeholder" >
<meta itemprop="headline" content="JS1K 演示">
<meta itemprop="description" content="以前本站发布过很多和Javascript相关的东西，如：《又一个Javascript试验田》、《一个Windows 3.1的Web网站》、《哥是玩程序的》。今天要介绍另外一组，先看下面的这个Javascript特效（在IE下无法正常工作），你可以用Chrome查看，很炫。不过最炫的是其源码，非常的简单，不超过1K。如果你要知道这个效果的原理，这里有一个教程。这里有个网站：JS1K Demo， 这个...">
<meta itemprop="datePublished" content="2010-08-09T13:51:37+08:00">
<meta itemprop="dateModified" content="2010-08-11T14:41:20+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2785.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2785.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="2.8">
<meta itemprop="ratingCount" content="10">
</div>
</div>
<div id="post-ratings-2785-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-08-09T13:51:37+08:00</pubDate>
<guid>https://coolshell.cn/articles/2785.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ C技巧：结构体参数转成不定参数 ]]></title>
<link>https://coolshell.cn/articles/2801.html</link>
<content><![CDATA[ 
<p>下面这段程序是一个C语言的小技巧，其展示了如何把一个参数为结构体的函数转成一个可变参数的函数，其中用到了宏和内建宏“<code>__VA_ARGS__</code>”，下面这段程序可以在GCC下正常编译通过：</p>
<p></p>
<pre data-enlighter-language="c" class="EnlighterJSRAW">#include &lt;stdio.h&gt;

#define func(...) myfunc((struct mystru){__VA_ARGS__})

struct mystru { const char *name; int number; };

void myfunc(struct mystru ms )
{
  printf("%s: %d\n", ms.name ?: "untitled", ms.number);
}

int main(int argc, char **argv)
{
  func("three", 3);
  func("hello");
  func(.name = "zero");
  func(.number = argc, .name = "argc",);
  func(.number = 42);
  return 0;
}
</pre>
<p>从上面这段程序，我们可以看到一个叫 myfunc的函数，被func的宏改变了，本来myfunc需要的是一个叫mystru的结构，然而通过宏，我们把struct mystru的这个参数，变成了不定参数列表的一个函数。上面这段程序输出入下，</p>
<p><span id="more-2801"></span></p>
<blockquote><p>three: 3<br>
hello: 0<br>
zero: 0<br>
argc: 1<br>
untitled: 42</p></blockquote>
<p>虽然，这样的用法并不好，但是你可以从另外一个方面了解一下这世上对C稀奇古怪的用法。 如果你把宏展开后，你就明的为什么了。下面是宏展开的样子：</p>
<p></p>
<pre data-enlighter-language="c" class="EnlighterJSRAW">  myfunc((struct mystru){"three", 3});
  myfunc((struct mystru){"hello"});
  myfunc((struct mystru){.name = "zero"});
  myfunc((struct mystru){.number = argc, .name = "argc",});
  myfunc((struct mystru){.number = 42});
</pre>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12052.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12012.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11466.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2801" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="d93b3658de">
<img alt="image placeholder" >
<meta itemprop="headline" content="C技巧：结构体参数转成不定参数">
<meta itemprop="description" content="下面这段程序是一个C语言的小技巧，其展示了如何把一个参数为结构体的函数转成一个可变参数的函数，其中用到了宏和内建宏“__VA_ARGS__”，下面这段程序可以在GCC下正常编译通过：

[c]#include &lt;stdio.h&gt;

#define func(...) myfunc((struct mystru){__VA_ARGS__})

struct mystru { const ...">
<meta itemprop="datePublished" content="2010-08-10T08:24:52+08:00">
<meta itemprop="dateModified" content="2010-08-08T19:19:38+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2801.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2801.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.22">
<meta itemprop="ratingCount" content="9">
</div>
</div>
<div id="post-ratings-2801-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-08-10T08:24:52+08:00</pubDate>
<guid>https://coolshell.cn/articles/2801.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 程序员版的凡客 ]]></title>
<link>https://coolshell.cn/articles/2806.html</link>
<content><![CDATA[ 
<p>现在“凡客诚品”的PS风已经成为了一场运动，详见这里：<a href="http://bigfools.com/2010/08/6634.html" target="_blank">http://bigfools.com/2010/08/6634.html</a>。这两天，公司内部要出期刊，正好下班没事，于是跟着这股网风，为公司的期刊做了一个插图，那些语句着实花了我很多时间。用PPT乱做的，希望大家喜欢。呵呵。</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/08/coolshell.programmer.jpg"><img alt="image placeholder" >
<p>欢迎你留下你的版本，尤其是那些语句。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/21589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20977.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20765.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20276.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19612.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19464.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2806" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="cce25527b2">
<img alt="image placeholder" >
<meta itemprop="headline" content="程序员版的凡客">
<meta itemprop="description" content="现在“凡客诚品”的PS风已经成为了一场运动，详见这里：http://bigfools.com/2010/08/6634.html。这两天，公司内部要出期刊，正好下班没事，于是跟着这股网风，为公司的期刊做了一个插图，那些语句着实花了我很多时间。用PPT乱做的，希望大家喜欢。呵呵。



欢迎你留下你的版本，尤其是那些语句。">
<meta itemprop="datePublished" content="2010-08-12T15:24:48+08:00">
<meta itemprop="dateModified" content="2010-08-12T15:27:46+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2806.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2806.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.9">
<meta itemprop="ratingCount" content="20">
</div>
</div>
<div id="post-ratings-2806-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-08-12T15:24:48+08:00</pubDate>
<guid>https://coolshell.cn/articles/2806.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 两个教程：Socket和HTML5 ]]></title>
<link>https://coolshell.cn/articles/2829.html</link>
<content><![CDATA[ 
<p><img alt="image placeholder" >
<p>关于Socket，相信大家都知道这个是用来做TCP/IP网络编程的，其由FreeBSD引入，现在，只要你相做网络编程，你必然会使用到它。这里有一个叫<strong><a href="https://beej.us/guide/bgnet/" target="_blank">Beej’s Guide to Network Programming</a><span style="font-weight: normal;"> 的网站</span></strong>，非常不错的一个教程。在其主页上显示有<a href="http://docs.chinalinuxpub.com/doc/pro/is.html" target="_blank">中译版</a>，不过很可惜，打不开。好像网络有很多转载，你可以<a href="https://www.google.com.hk/search?hl=zh-CN&amp;source=hp&amp;q=beej+%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B&amp;btnG=Google+%E6%90%9C%E7%B4%A2" target="_blank">Google一下</a>。</p>
<p>另一个是关于HTML5的众多标签，大家可以访问这个叫做“<a href="http://diveintohtml5.org/peeks-pokes-and-pointers.html" target="_blank"><strong>HTML5 Peeks, Pokes and Pointers</strong></a>”的网站，其就像一个速查手册一样，你可要查阅HTML5的那些BT的tag，比如：多媒体，画布，地理，表单，等等。</p>
<p>希望大家喜欢，不妨你也说说你知道的相关的一些教程。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/12206.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9666.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6840.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5537.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5224.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4795.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2829" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="d8268ecd68">
<img alt="image placeholder" >
<meta itemprop="headline" content="两个教程：Socket和HTML5">
<meta itemprop="description" content="给大家介绍两个教程，一个是关于Socket编程的，一个是关于HTML5的。

关于Socket，相信大家都知道这个是用来做TCP/IP网络编程的，其由FreeBSD引入，现在，只要你相做网络编程，你必然会使用到它。这里有一个叫Beej's Guide to Network Programming 的网站，非常不错的一个教程。在其主页上显示有中译版，不过很可惜，打不开。好像网络有很多转载，你可以...">
<meta itemprop="datePublished" content="2010-08-23T10:47:28+08:00">
<meta itemprop="dateModified" content="2010-08-23T13:56:25+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2829.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2829.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="2.78">
<meta itemprop="ratingCount" content="9">
</div>
</div>
<div id="post-ratings-2829-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-08-23T10:47:28+08:00</pubDate>
<guid>https://coolshell.cn/articles/2829.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 史上最烂的超级玛丽 ]]></title>
<link>https://coolshell.cn/articles/2834.html</link>
<content><![CDATA[ 
<p>啥也不说了，自己访问一下吧，F是跳，D是加速，回车的是开始，还挺好玩，简单是简单了点，但好歹也是用Java写的，也是Web的，呵呵。</p>
<p style="text-align: center;"><a href="http://meatfighter.com/mario/mario.html" target="_blank">http://meatfighter.com/mario/mario.html</a></p>
<p><a href="http://meatfighter.com/mario/mario.html"><img alt="image placeholder" >
<p>你还见过更烂的吗？</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5537.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4990.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3903.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18094.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2834" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="03172be024">
<img alt="image placeholder" >
<meta itemprop="headline" content="史上最烂的超级玛丽">
<meta itemprop="description" content="啥也不说了，自己访问一下吧，F是跳，D是加速，回车的是开始，还挺好玩，简单是简单了点，但好歹也是用Java写的，也是Web的，呵呵。
http://meatfighter.com/mario/mario.html


你还见过更烂的吗？">
<meta itemprop="datePublished" content="2010-08-23T15:20:21+08:00">
<meta itemprop="dateModified" content="2010-08-23T19:21:22+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2834.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2834.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.27">
<meta itemprop="ratingCount" content="11">
</div>
</div>
<div id="post-ratings-2834-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-08-23T15:20:21+08:00</pubDate>
<guid>https://coolshell.cn/articles/2834.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 使用grep恢复被删文件内容 ]]></title>
<link>https://coolshell.cn/articles/2822.html</link>
<content><![CDATA[ 
<p>在Unix/Linux下，最危险的命令恐怕就属rm命令了，每次在root下使用这个命令的时候，我都要盯着命令行看上几分钟才敢把回车敲下去。以前，看到同事在脚本中使用rm命令 —— <code>rm {$App_Dir}/*</code> 。因为脚本没有判断变量$App_Dir是否为空，结果，在一次用root操作的时候，整个操作系统一下就不见了，还好只是开发机。从此，我们大家都再也不敢使用rm命令了。</p>
<p>这里给大家介绍一个小技巧用来恢复一些被rm了的文件中的数据。我们知道，rm命令其实并不是真正的从物理上删除文件内容，只过不把文件的inode回收了，其实文件内容还在硬盘上。所以，如果你不小删除了什么比较重要的程序配置文件的时候，我们完全可以用grep命令在恢复，下面是一个恢复示例：</p>
<p><code data-enlighter-language="shell" class="EnlighterJSRAW">grep -a -B 50 -A 60 'some string in the file' /dev/sda1 &gt; results.txt</code></p>
<p>说明：</p>
<ul>
<li>关于grep的-a意为–binary-files=text，也就是把二进制文件当作文本文件。</li>
<li>-B和-A的选项就是这段字符串之前几行和之后几行。</li>
<li>/dev/sda1，就是硬盘设备，</li>
<li>&gt; results.txt，就是把结果重定向到results.txt文件中。</li>
</ul>
<p>如果你幸运的话，你就可以看到被恢复的内容了。这正是Unix的简单哲学（详见《<a href="https://coolshell.cn/articles/2324.html" target="_blank">Unix传奇下篇</a>》）——<strong> 所有的设备都是文件</strong>。</p>
<p>当然，我还是建议你把root用户的rm的命令用alias换成别一个脚本，那个脚本会帮你把删除的文件放到某个地方。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17998.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12103.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11847.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9104.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9070.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2822" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="98b6767c66">
<img alt="image placeholder" >
<meta itemprop="headline" content="使用grep恢复被删文件内容">
<meta itemprop="description" content="在Unix/Linux下，最危险的命令恐怕就属rm命令了，每次在root下使用这个命令的时候，我都要盯着命令行看上几分钟才敢把回车敲下去。以前，看到同事在脚本中使用rm命令 —— rm {$App_Dir}/* 。因为脚本没有判断变量$App_Dir是否为空，结果，在一次用root操作的时候，整个操作系统一下就不见了，还好只是开发机。从此，我们大家都再也不敢使用rm命令了。

这里给大家介绍一...">
<meta itemprop="datePublished" content="2010-08-24T08:56:24+08:00">
<meta itemprop="dateModified" content="2010-08-26T09:19:55+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2822.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2822.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.82">
<meta itemprop="ratingCount" content="17">
</div>
</div>
<div id="post-ratings-2822-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-08-24T08:56:24+08:00</pubDate>
<guid>https://coolshell.cn/articles/2822.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 实用Android开发工具和资源精选 ]]></title>
<link>https://coolshell.cn/articles/2853.html</link>
<content><![CDATA[ 
<p><strong>出处</strong>：<a href="http://speckyboy.com/2010/08/04/a-useful-selection-of-android-developer-tools-and-resources/">A Useful Selection of Android Developer Tools and Resources</a></p>
<p>在google、开源平台，和来自移动电话制造商HTC,Samsung和Sony Ericsson的支持下，Android平台在市场占有率上相比去年取得的886%增长！如果我只看增长率，IPhone据统计才有61%的增长。这些数据可以给你关于两个平台流行度的印像，但是事实上，这些数据告诉了智能机开发员的谁才是真正的赢家。在时下，智能机越来越流行，因此成为一个快速增长的Android平台的智能机开发人员将会是一个不错的选择。</p>
<p>相比较其他的平台，Android不依赖于任何约束第三方应用程序的私有的操作系统（题外话：美国最近<a href="https://www.bbc.co.uk/news/technology-10836692">宣布</a>对于IPhone的破解和越狱是合法行为），Android本身就是开源的。由于开源，Android有巨大的开发社区支持。各种个样的例子和教程，GUI素材，和开发工具下载。几乎所有的都是免费提供的。我们选出接近20个可以免费或开源的，工具，资源，开发指南。希望这些资源能给你的Android应用带来帮助。<br>
<strong> 相关文章参看:</strong></p>
<ul>
<li><a href="http://speckyboy.com/2010/05/10/android-app-developers-gui-kits-icons-fonts-and-tools/">Android App Developers GUI Kits, Icons, Fonts and Tools →</a></li>
<li><a href="http://speckyboy.com/2010/04/30/iphone-and-ipad-development-gui-kits-stencils-and-icons/">iPhone and iPad Development GUI Kits, Stencils and Icons →</a></li>
<li><a href="http://speckyboy.com/2010/04/12/mobile-web-and-app-development-testing-and-emulation-tools/">Mobile Web and App Development Testing and Emulation Tools →</a></li>
<li><a href="http://speckyboy.com/2010/03/08/14-free-mobile-app-development-icon-sets/">14 Free Mobile Application Development Icon Sets →</a></li>
</ul>
<p><img alt="image placeholder" >
<p><span id="more-2853"></span></p>
<h3><a href="http://andbook.anddev.org/">免费的Android开发人员电子书:andbook</a></h3>
<p><img alt="image placeholder" >
<p>如果你刚步入Android的开发，那么对于第一次开发Android应用程序的你来说，这本书是非常适合的。这本只有62页的PDF电子书里，有简单易懂的入门教程，帮助你在没有任何Android开发知识的背景下，教你开发Android应用程序。<br>
<a href="http://andbook.anddev.org/">Free Android Developer Ebook: andbook! →</a></p>
<h3><a href="http://kronox.org/documentacion/Professional_Android_Application_Development.pdf">免费的Android开发人员电子书:专业Android应用程序开发</a></h3>
<p><img alt="image placeholder" >
<p>专业Android应用程序开发PDF电子书，是一本创建移动手机应用程序的上手指南，这本书特点简洁，还有着能帮助你快速构建真实Android移动电话应用程序的典型的例子。本书覆盖了Android手机所有本质特性，并同时展示了Android手机的高级特性。<br>
<a href="http://kronox.org/documentacion/Professional_Android_Application_Development.pdf">Free Android Developer Ebook: Professional Android Application Development →</a></p>
<h3>免费和开源的应用程序</h3>
<ul>
<li>
<a href="https://code.google.com/p/apps-for-android/">apps-for-android (Open Source Applications) →<br>
</a>这个链接中包含了许多实用的开源的Android应用程序。这些应用程序展示了Android的许多特性。</li>
</ul>
<ul>
<li>
<a href="https://developer.android.com/resources/samples/index.html">List of Sample Android Apps →</a>（<strong>译者注：</strong>我勒个擦！墙掉了，中国Android开发人员杯具了，看来官方不给力啊，这次元还真是不毛之地啊）<br>
这个Web页面是一个Android开发包中的实例程序列表。使用这个页面上的链接，你可以通过你的浏览器来阅读这些例子程序的源代码。你也可以把这些实例程序下载下来，当你需要的时候，你可以修改并使用他们。</li>
</ul>
<ul>
<li>
<a href="https://code.google.com/p/android-cookbook/">Android Cookbook (Examples in Cookbook Form) →<br>
</a>这个站点有很多实用的Android示例程序，你完全可以重用这些例子。</li>
</ul>
<ul>
<li>
<a href="http://www.openintents.org/en/">OpenIntents →<br>
</a>OpenIntends 设计和实现了开放式 intents和接口，其使得Android移动应用程序能更紧密的结合在一起。同时OpenIntends免费的提供了更专业和复杂的实例应用程序来演示他们的用法。</li>
</ul>
<ul>
<li>
<a href="http://www.androidsnippets.org/">Android Snippets (Share Useful Snippets of Source Code) →<br>
</a>Android Snippets 是一个Android的实用代码段库，这个库是用来分享实用和优秀的Android应用程序代码；如果没有特别的需求，我们可以大量的重用这些代码库。</li>
</ul>
<h3><a href="http://www.addictivetips.com/windows-tips/download-google-android-emulator/">Windows上的Android</a></h3>
<p><img alt="image placeholder" >
<p>对于那些想测试驱动Android的开发者，可以使用这个Android模拟器，这个模拟器以单独的应用程序的形式独立运行在Windows PC之上，使用这个模拟器不用下载和完全安装复杂的Android开发包。你甚至可以在这个模拟器上安装和测试Android系统兼容的应用程序。<br>
<a href="https://developer.android.com/guide/developing/tools/emulator.html">Android Emulator on Windows →</a></p>
<h3><a href="https://developer.android.com/guide/developing/tools/emulator.html">来自应用程序开发入门的Android模拟器</a></h3>
<p><img alt="image placeholder" >
<p>Android的开发包中包含了一个移动设备模拟器。这个模拟器模仿了典型移动设备的硬件和软件特性(当然，不包含打电话)。这个模拟器提供各种个样的导航和控制按键，可以使用你的鼠标和键盘来“按”下这些按键为你的应用程序生成事件。这个模拟器也提供一个屏幕为你显示应用程序。同时，SDK中提供了很多能在模拟器上运行的应用程序。<br>
<a href="https://developer.android.com/guide/developing/tools/emulator.html">Android Emulator from The Developer’s Guide →</a></p>
<h3><a href="http://www.openintents.org/en/node/23">感应模拟器</a></h3>
<p><img alt="image placeholder" >
<p>感应模拟器是一个JAVA独立应用程序，感应模拟器模拟感应数据并把数据传给Android模拟器。这个感应模拟器可以让你模拟加速度仪器，指南针，和方向感应，这些数据可以用于Android应用程序，并通过感应器进行控制。<br>
<a href="http://www.openintents.org/en/node/23">SensorSimulator →</a></p>
<h3><a href="https://github.com/commonsguy/droidex">DroidEx:大（巨）屏上的Android项目</a></h3>
<p>DroidEx 可以让你附加的Android设备的显示屏内容复制一份到你的开发机屏幕。使用DroidEx来做演示是非常有用的。因为你可以把你的Android设备连接到你的笔记本电脑上或投影仪上，你的客户就可以通过这些设备来看你Android设备上的内容。DroidEx还可以用来演示那些用模拟器不方便演示的内容，比如说GPS或加速度仪器等内容。<br>
<a href="https://github.com/commonsguy/droidex">DroidEx: Projecting Android on the Big(ger) Screen →</a></p>
<h3><a href="http://appinventor.googlelabs.com/about/">Android的App Inventor</a></h3>
<p><img alt="image placeholder" >
Android 的App Inventor是来自Google为非开发人员准备的新工具，通过这个工具，非开发人员可以非常容易地在里面创建应用程序。可以通过网站的视屏来预览这个工具的功能特性。(你可以参看酷壳的<a href="https://coolshell.cn/articles/2608.html" target="_blank">这篇文章</a>)</p>
<p>(<strong>译者注：</strong>这里还有一个youtube视屏，可惜也墙掉了）<br>
<a href="https://developer.android.com/guide/appendix/faq/commontasks.html"></a></p>
<h3><a href="https://developer.android.com/guide/appendix/faq/commontasks.html">如何开发Android中的常用任务</a></h3>
<p><img alt="image placeholder" >
<p>这是一个关于Android开发可能遇到的常用任务列表集合，并提供了一个快速、 how-to方式的帮助，来帮助你完成这些任务。</p>
<p><a href="https://developer.android.com/guide/appendix/faq/commontasks.html">Common Tasks and How to Do Them in Android→</a></p>
<h3><a href="http://andblogs.net/fastboot/">快速启动小抄</a></h3>
<p><img alt="image placeholder" >
<p>快速启动小抄是一个非常实用和快速的列表，这个列表中罗列一些关于快速启动的相关任务。<br>
<a href="http://andblogs.net/fastboot/">Fastboot Cheat Sheet →</a></p>
<h3><a href="https://developer.android.com/guide/practices/ui_guidelines/index.html">UI指导原则</a></h3>
<p>在这里你可以找一些到官方文章的连接，这些连接来自于“The Developer’s Guide”。这些文章的内容描述了关于Android可视交互应用程序的UI设计开发的指导原则。</p>
<ul>
<li><a href="https://developer.android.com/guide/practices/ui_guidelines/icon_design.html">Icon Design Guidelines →</a></li>
<li>图标指导原则描述每类图标的细节，并做关于尺寸，颜色，阴影其他的细节的规范，根据这些规范你的设计的图标可以适用于Android系统。你也可以下载Android图标模板包，这个包里面是一些Photoshop和Illustrator模板和滤镜文件，通过这个模板包你可以更简单的创建满足规范的图标。</li>
<li><a href="https://developer.android.com/guide/practices/ui_guidelines/icon_design.html#templatespack">Download the Android Icon Templates Pack</a></li>
<li>控件设计指导描述了如何设计适合其他主页屏的控件。这个连接会连接到一些图形文件和模板，通过这些模板和文件可以使你设计更简单。</li>
<li><a href="https://developer.android.com/guide/practices/ui_guidelines/widget_design.html">Widget Design Guidelines →</a></li>
<li>Activity和Task设计指导描述了活动的工作方式，并用图解示例演示了Activity，并描述了其重要的底层机制和原理，如多任务系统，Activity重用，intents，Activity栈，和Task。以设计层面的角度覆盖了活动的所有内容。</li>
<li><a href="https://developer.android.com/guide/practices/ui_guidelines/activity_task_design.html">Activity and Task Design Guidelines →</a></li>
<li>菜单设计指导描述了上下文菜单和选项菜单的不同。如何放置菜单项，何时放置屏幕命令，和其他的一些菜单细节。</li>
<li><a href="https://developer.android.com/guide/practices/ui_guidelines/widget_design.html">Menu Design Guidelines →</a></li>
</ul>
<p><strong><a href="http://mobiforge.com/designing/story/understanding-user-interface-android-part-1-layouts">理解Android中的用户接口 来自于</a><a href="http://mobiforge.com/">mobiforge.com</a></strong></p>
<p>这4部分的文档来自于<a href="http://mobiforge.com/">mobiforge.com</a>,文档中包含了组成Android UI的各种要素。文档的第一部分讨论Android中各种各样的有效的的布局。</p>
<ol>
<li>
<ol>
<li><a href="http://mobiforge.com/designing/story/understanding-user-interface-android-part-1-layouts">Understanding User Interface in Android – Part 1 →</a></li>
<li><a href="http://mobiforge.com/designing/story/understanding-user-interface-android-part-2-views">Understanding User Interface in Android – Part 2 →</a></li>
<li><a href="http://mobiforge.com/designing/story/understanding-user-interface-android-part-3-more-views">Understanding User Interface in Android – Part 3 →</a></li>
<li><a href="http://mobiforge.com/designing/story/understanding-user-interface-android-part-4-even-more-views">Understanding User Interface in Android – Part 4 →</a></li>
</ol>
</li>
</ol>
<h3><a href="http://www.androidpatterns.com/">Android UI模式</a></h3>
<p><img alt="image placeholder" >
<p><a href="http://www.androidpatterns.com/">Android UI Patterns →</a></p>
<h3><a href="http://www.droiddraw.org/" target="_blank">DroidDraw:Android用户接口图形编辑器</a></h3>
<p style="text-align: left;"><a href="https://coolshell.cn/wp-content/uploads/2010/08/android_dev_19.jpg"><img alt="image placeholder" >
<p>DroidDraw是一个为Android创建图形用户界面的UI设计器。它是一个独立的可执行程序，可以运行在Mac OS X，Windows和Linux上。</p>
<p><a href="http://www.droiddraw.org/">DroidDraw : Graphical User Interface Editor for Android →</a></p>
<h3><a href="http://www.smashingmagazine.com/2009/08/18/android-gui-psd-vector-kit/">Android GUI PSD 向量包</a></h3>
<p><img alt="image placeholder" >
<p>Android GUI Starter Kit包里面包含了多个按钮元素和不同接口选项的AndroidGUI内容。这些元素是基于Android1.5 GUI的，并且这些包里面的被提供给开源社区的Android应用程序模型。大部分的GUI元素和手机图例都是使用向量路径制成，所以他们非常地容易被缩放。对于文本AndroidSans包被使用。<br>
<a href="http://www.smashingmagazine.com/2009/08/18/android-gui-psd-vector-kit/">Android GUI PSD Vector Kit →</a></p>
<h3><a href="http://unitid.nl/2009/11/fireworks-template-for-android/">Android的Firworks Template</a></h3>
<p><img alt="image placeholder" >
<p>在Fireworks模板中，Android的各种元素被以向量图形的方式被重绘。在目录中，这些元素的名称大多根据Android词汇表被命名。<br>
<a href="http://unitid.nl/2009/11/fireworks-template-for-android/">Fireworks Template for Android →</a></p>
<h3><a href="http://www.tomhume.org/2010/01/android-wireframe-templates.html">Android线框模板 </a></h3>
<p>线框PDF是信纸大小（8.5英寸 * 11英寸）并且各部件都被拉伸。因此你可以非常容易的以纸张原型或拉伸为真实尺寸的方式来使用。如果你没有信纸，你可以用A4纸来打印。<br>
<a href="http://www.tomhume.org/2010/01/android-wireframe-templates.html">Android Wireframe Templates →</a><br>
你也可以参考：</p>
<ul>
<li><a href="http://speckyboy.com/2010/05/10/android-app-developers-gui-kits-icons-fonts-and-tools/">Android App Developers GUI Kits, Icons, Fonts and Tools →</a></li>
<li><a href="http://speckyboy.com/2010/04/30/iphone-and-ipad-development-gui-kits-stencils-and-icons/">iPhone and iPad Development GUI Kits, Stencils and Icons →</a></li>
<li><a href="http://speckyboy.com/2010/04/12/mobile-web-and-app-development-testing-and-emulation-tools/">Mobile Web and App Development Testing and Emulation Tools →</a></li>
<li><a href="http://speckyboy.com/2010/03/08/14-free-mobile-app-development-icon-sets/">14 Free Mobile Application Development Icon Sets →</a></li>
<li><a href="http://speckyboy.com/2009/09/15/45-cool-google-android-apps-the-perfect-iphone-replacement/">45+ Cool Google Android Apps – The Perfect iPhone Replacement →</a></li>
</ul>
<p><strong>（全文完）</strong></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/4220.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2608.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17066.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12225.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12136.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4710.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2853" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="a81b21c9e8">
<img alt="image placeholder" >
<meta itemprop="headline" content="实用Android开发工具和资源精选">
<meta itemprop="description" content="出处：A Useful Selection of Android Developer Tools and Resources

在google、开源平台，和来自移动电话制造商HTC,Samsung和Sony Ericsson的支持下，Android平台在市场占有率上相比去年取得的886%增长！如果我只看增长率，IPhone据统计才有61%的增长。这些数据可以给你关于两个平台流行度的印像，但是事...">
<meta itemprop="datePublished" content="2010-08-26T08:43:01+08:00">
<meta itemprop="dateModified" content="2010-08-27T11:32:22+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2853.html">
<meta itemprop="author" content="Neo">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2853.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.38">
<meta itemprop="ratingCount" content="13">
</div>
</div>
<div id="post-ratings-2853-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-08-26T08:43:01+08:00</pubDate>
<guid>https://coolshell.cn/articles/2853.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 一些鲜为人知的编程事实 ]]></title>
<link>https://coolshell.cn/articles/2909.html</link>
<content><![CDATA[ 
<p>文章来源：<a href="http://dotmac.rationalmind.net/2010/08/some-lesser-known-truths-about-programming/" target="_blank">http://dotmac.rationalmind.net/2010/08/some-lesser-known-truths-about-programming/</a></p>
<p>我的程序员经历让我明白了一些关于软件开发的事情。下面是一些在编程中可能会让人感到诧异的事情：</p>
<ul>
<li>一个程序员用了大约只用了10%-20%的时间来编码，而且大多数程序员，无论他的水平如何，其<a href="https://stackoverflow.com/questions/966800/mythical-man-month-10-lines-per-developer-day-how-close-on-large-projects" target="_blank">平均每天只有10-12行的代码</a>最终会进入最终的软件产品中。这是因为，<a href="https://coolshell.cn/articles/222.html" target="_blank">优秀的程序员</a>会花费90%的时间来思考、调查、研究最佳的设计。而<a href="https://coolshell.cn/articles/1081.html" target="_blank">糟糕的程序员</a>则会花费90%的时间来调试代码，并随意地改动代码并尝试让代码工作起来。</li>
</ul>
<blockquote>
<p>“A great lathe operator commands several times the wage of an average lathe operator, but a great writer of software code is worth 10,000 times the price of an average software writer.” –Bill Gates</p>
<p>“一个优秀的车工其工资是一个普通车工的好几倍，但是一个优秀程序员写出来的代码比一个普通程序员要值钱一万倍。——比尔盖茨”</p>
</blockquote>
<ul>
<li>一个好的程序员比一个普通的程序员多十倍的生产率。而一个优秀的程序员的生产率则比普通程序员多20-100倍。<a href="http://www.devtopics.com/programmer-productivity-the-tenfinity-factor/" target="_blank">这并不是夸张</a>（自从上世纪60年代的研究一直表明这是一个事实）。一个糟糕的程序员并不只是没有产出的——他们并不仅是完成不不工作，而且还会制造出大量的让别人头痛并要去解决的麻烦。</li>
</ul>
<p><span id="more-2909"></span></p>
<ul>
<li>优秀的程序员花少量的时间写代码——那些代码都会出现在最终的产品中。那些花大量的时间写代码的程序员其实是很懒惰、很无知，或是很自大的，以至于不能使用已经存在了的解决方案来解决已有的问题。优秀的程序员精通于对通用的模式的识别和重用。好的程序员并不害怕持续地重构/重写自己的代码，直到达到最理想的方案。糟糕的程序员的代码基本上都缺少概念一致性，代码冗长，缺少层次和模式，所以，也就很难被重构。所以，重写他们的代码要比重构他们的代码要容易得多。</li>
</ul>
<ul>
<li>软件和其它一切事物一样，都遵循着一致性规则。持续得更改只会让软件变成一潭烂泥，其破坏了原始设计的概念一致性。软件产品变成泥沼是不可避免的事情，但是因为程序员不考虑软件概念一致性而导致软件产品更为快速地成为泥沼，这种速度快得可能 会在软件产品还没有完成时，软件产品已经变得没有价值。设计概念一致性的失败通常都会导致软件项目的失败（而第二大导致软件项目失败的原因则是发布的软件并不是用户想要的）。软件变成烂泥的速度正在呈指数级下降，太多的项目在被完结前都面临着激增的时间和成本。</li>
</ul>
<ul>
<li>一个 <a href="http://www.softwaremag.com/L.cfm?Doc=newsletter/2004-01-15/Standish" target="_blank">2004 研究报告</a> 指出，大多数的软件项目 (51%) 都会在关键环节出问题。而15%的项目则是完全失败，当然，这比1994年有了很大的进步，当时完全失败的项目是是31%。</li>
</ul>
<ul>
<li>虽然，几乎所有的软件产品都有些开发团队，但其并不是民主的。通常，只有一个人负责设计，而剩下的人去实现细节。</li>
</ul>
<ul>
<li>编程是一个辛苦的工作。其是一个巨烈的脑力劳动。好的程序员24×7地在思考他们的工作，他们一般都在在洗澡和梦中编写软件中最重要的代码。因为最重要的工作只能在键盘之外完成，软件项目不可能因为加班或是<a href="https://en.wikipedia.org/wiki/Brooks's_law" target="_blank">加人</a>来加快进度。</li>
</ul>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/21589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20977.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20765.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20276.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19612.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19464.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2909" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="87a2ed429e">
<img alt="image placeholder" >
<meta itemprop="headline" content="一些鲜为人知的编程事实">
<meta itemprop="description" content="文章来源：http://dotmac.rationalmind.net/2010/08/some-lesser-known-truths-about-programming/

我的程序员经历让我明白了一些关于软件开发的事情。下面是一些在编程中可能会让人感到诧异的事情：

	一个程序员用了大约只用了10%-20%的时间来编码，而且大多数程序员，无论他的水平如何，其平均每天只有10-12行的...">
<meta itemprop="datePublished" content="2010-09-03T08:55:37+08:00">
<meta itemprop="dateModified" content="2010-09-02T14:05:59+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2909.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2909.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.16">
<meta itemprop="ratingCount" content="19">
</div>
</div>
<div id="post-ratings-2909-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-03T08:55:37+08:00</pubDate>
<guid>https://coolshell.cn/articles/2909.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 消费者的消费观 ]]></title>
<link>https://coolshell.cn/articles/2913.html</link>
<content><![CDATA[ 
<div>
<p>原文：<a href="http://theoatmeal.com/blog/apps">http://theoatmeal.com/blog/apps</a></p>
<p style="text-align: center;"><img alt="image placeholder" >
<blockquote>
<p><strong>星巴克</strong>：这是你的venti-soy-whipped-frappa-lardy-lattechino，也就$7.15，你需要加点糖吗？只需要再加$1.95。</p>
<p><strong>消费者</strong>：绝对要加。让我们的血糖值高到月亮上！</p>
</blockquote>
<p><span id="more-2913"></span></p>
<p style="text-align: center;"><img alt="image placeholder" >
<blockquote>
<p><strong>票房</strong>：先生，想看“断背3D吗”？一张票只要$13！</p>
<p><strong>消费者</strong>：没问题！另外，有优惠吗？我想花$20再买点爆米花和碳酸饮料。</p>
</blockquote>
<p style="text-align: center;"><img alt="image placeholder" >
<blockquote>
<p><strong>Apple</strong>：新的iPhone 4G，加上税要$425.19</p>
<p><strong>消费者</strong>：只要$425？！这仅相当于我老婆把背上的毛给去掉价格的1/10！拿钱！花这点钱连想不用想。</p>
</blockquote>
<p style="text-align: center;"><img alt="image placeholder" >
<blockquote>
<p><strong>Apple</strong>：iPad 3GS 加一个保护盒，一共$875.24</p>
<p><strong>消费者</strong>：$875？这就些？啊，我要两个，一个给我，一个给我身边这个有毛的朋友。</p>
</blockquote>
<p style="text-align: center;"><a href="http://theoatmeal.com/"><img alt="image placeholder" >
<blockquote>
<p><strong>网站</strong>：下载应用：HorseHunter Extreme！点击OK确认你想花$0.99买这个应用。</p>
<p><strong>消费者</strong>：什么？什么？什么？！99美分？！靠，我不知道……这么多钱啊！我应该把我的会技师找来，或是明天再说吧。</p>
</blockquote>
<p>（完）</p>
</div>
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/5089.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2719.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3903.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2507.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2086.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2913" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="4a913099a1">
<img alt="image placeholder" >
<meta itemprop="headline" content="消费者的消费观">
<meta itemprop="description" content="

原文：http://theoatmeal.com/blog/apps


星巴克：这是你的venti-soy-whipped-frappa-lardy-lattechino，也就$7.15，你需要加点糖吗？只需要再加$1.95。

消费者：绝对要加。让我们的血糖值高到月亮上！



票房：先生，想看“断背3D吗”？一张票只要$13！

消费者：没问题！另外，有优惠吗？...">
<meta itemprop="datePublished" content="2010-09-03T17:13:43+08:00">
<meta itemprop="dateModified" content="2010-09-03T17:13:43+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2913.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2913.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.1">
<meta itemprop="ratingCount" content="10">
</div>
</div>
<div id="post-ratings-2913-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-03T17:13:43+08:00</pubDate>
<guid>https://coolshell.cn/articles/2913.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Did You Know? ]]></title>
<link>https://coolshell.cn/articles/2917.html</link>
<content><![CDATA[ 
<p>下面这个短片可能Too Old了，不过我今天才看到，很不错，转到这里，让更多的人都能看到。</p>
<p>这是个信息爆炸飞速发展的年代，逆水行舟，不进则退。在这一组组的数据中让我们这班新生代年轻人反思自身所要背负和面对的压力和挑战！极有深度的短片，整理出来的数据实在是叫人震惊，生活在这个科技高速发展的时代既是种荣幸，又很有压力，对“学校里教得知识很多就是过时的”深有体会！！</p>
<p><strong>Did You Know? 3.0版</strong></p>
<p style="text-align: center;"><object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="480" height="400" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="align" value="middle">
<param name="src" value="http://player.youku.com/player.php/sid/XMTExMjg0NzQw/v.swf">
<param name="quality" value="high">
<embed type="application/x-shockwave-flash" width="480" height="400" src="http://player.youku.com/player.php/sid/XMTExMjg0NzQw/v.swf" quality="high" align="middle"></embed></object></p>
<p><strong>Did You Know? 4.0版</strong></p>
<p><span id="more-2917"></span></p>
<p style="text-align: center;"><object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="480" height="400" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="align" value="middle">
<param name="src" value="http://player.youku.com/player.php/sid/XMTQxODYxMjMy/v.swf">
<param name="quality" value="high">
<embed type="application/x-shockwave-flash" width="480" height="400" src="http://player.youku.com/player.php/sid/XMTQxODYxMjMy/v.swf" quality="high" align="middle"></embed></object></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/428.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7657.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/21263.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3872.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4605.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1693.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2917" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="70b8b69637">
<img alt="image placeholder" >
<meta itemprop="headline" content="Did You Know?">
<meta itemprop="description" content="下面这个短片可能Too Old了，不过我今天才看到，很不错，转到这里，让更多的人都能看到。

这是个信息爆炸飞速发展的年代，逆水行舟，不进则退。在这一组组的数据中让我们这班新生代年轻人反思自身所要背负和面对的压力和挑战！极有深度的短片，整理出来的数据实在是叫人震惊，生活在这个科技高速发展的时代既是种荣幸，又很有压力，对“学校里教得知识很多就是过时的”深有体会！！

Did You Know...">
<meta itemprop="datePublished" content="2010-09-06T23:08:53+08:00">
<meta itemprop="dateModified" content="2010-09-07T11:02:08+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2917.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2917.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.2">
<meta itemprop="ratingCount" content="15">
</div>
</div>
<div id="post-ratings-2917-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-06T23:08:53+08:00</pubDate>
<guid>https://coolshell.cn/articles/2917.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 你准备使用 HTML 5 吗？ ]]></title>
<link>https://coolshell.cn/articles/2926.html</link>
<content><![CDATA[ 
<p>现在做Web上的效果，主要是有三种方法，Flash，Javascript 和 HTML5。Flash就不用多说了，Javascript的效果也<a href="https://coolshell.cn/articles/2785.html" target="_blank">越来越猛</a>了，如果配上HTML5，那就如虎添翼了。先看看下面的这个HTML5的演示。其使用了HTML5的Canvas元件，把鼠标移上去看看吧（最好在Chrome下浏览）。源链接在<a href="http://rawkes.com/experiments/google-bouncing-balls-canvas/" target="_blank">这里</a>（在这里展示有点小，还是在那边全屏的看好一点）</p>
<p align="center"><iframe loading="lazy" frameborder="0" style="background:#000;border:0" width="600" height="400" src="https://rawkes.com/experiments/google-bouncing-balls-canvas/"></iframe></p>
<p>下面是一个大图，来自<a href="http://www.focus.com/images/view/11905/" target="_blank">这里</a>（点击看大图）。其“抱怨”了为什么HTML怎么都要管？呵呵。其分成三块：</p>
<p><span id="more-2926"></span></p>
<ul>
<li>第一块是关于HTML5的功能，你可以查看本站的<a href="https://coolshell.cn/articles/2829.html" target="_blank">这篇文章</a>以查看相关的HTML5的细节。</li>
<li>第二块说明了各种浏览器对HTML5的支持，从图中我们可以看到Chrome是支持的最好的。</li>
<li>第三块从价格，功能，应用和效率上比较了HTML5和Flash，可参看本站的《<a title="HTML5 和 Flash 之争" href="https://coolshell.cn/articles/2735.html" target="_blank">HTML5 和 Flash 之争</a>》。</li>
</ul>
<figure id="attachment_2932" aria-describedby="caption-attachment-2932" style="width: 274px" class="wp-caption aligncenter"><a href="https://coolshell.cn/wp-content/uploads/2010/09/WTF_HTML51.jpg"><img alt="image placeholder" >
<p>比较方面，关于价格，虽然Flash Player是免费的，但是开发工具是收费的，最重要的是，HTML5不是公司的产品，不存在垄断。在功能方面，目前当然是Flash很强，因为其图形处理能力很强，这点HTML5不如。在通用性方面，Flash是以插件的方式，而HTML5是浏览器支持的。当然，在性能方面，Javascript的方式对于CPU消耗地太猛了，这点Flash优势就很大了。</p>
<p>HTML5还是Flash，你觉得哪个会更好呢？<br>
</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3013.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2735.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12206.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9666.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6840.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2926" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="64006ed021">
<img alt="image placeholder" >
<meta itemprop="headline" content="你准备使用 HTML 5 吗？">
<meta itemprop="description" content="现在做Web上的效果，主要是有三种方法，Flash，Javascript 和 HTML5。Flash就不用多说了，Javascript的效果也越来越猛了，如果配上HTML5，那就如虎添翼了。先看看下面的这个HTML5的演示。其使用了HTML5的Canvas元件，把鼠标移上去看看吧（最好在Chrome下浏览）。源链接在这里（在这里展示有点小，还是在那边全屏的看好一点）

 

下面是一个大图...">
<meta itemprop="datePublished" content="2010-09-09T14:27:06+08:00">
<meta itemprop="dateModified" content="2010-09-09T14:27:06+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2926.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2926.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.2">
<meta itemprop="ratingCount" content="5">
</div>
</div>
<div id="post-ratings-2926-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-09T14:27:06+08:00</pubDate>
<guid>https://coolshell.cn/articles/2926.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Mozilla的一个BUG ]]></title>
<link>https://coolshell.cn/articles/2936.html</link>
<content><![CDATA[ 
<p>以前，本站给大家介绍过一些BUG，如：《<a rel="bookmark" href="https://coolshell.cn/articles/2367.html" target="_blank">谷歌Chrome取消”http://”</a>》，《<a rel="bookmark" href="https://coolshell.cn/articles/1781.html" target="_blank">Go语言的Issue 9</a>》和《<a rel="bookmark" href="https://coolshell.cn/articles/2352.html" target="_blank">telnet的一个Bug</a>》。今天，和大家再说一个Mozilla的Bug，这个Bug的网址在这里：<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=579522" target="_blank">https://bugzilla.mozilla.org/show_bug.cgi?id=579522</a></p>
<p>这个Bug的标题是这样的：“Buy cots for the JS interns” （为JS实习生买一些轻便小床），并说明“This bug is not actually a joke.”，这个BUG估计是在抱怨在Mozilla工作的实习生太辛苦了。在后面的跟贴中，很多人都提到了V8，呵呵。看来，大家还是在嘲笑Mozilla更多一些，大家不妨前往一看。</p>
<p>Mozilla的firefox还是很让人失望的，作为一个Linux下默认的浏览器，其居然让Firefox的Windows版比Linux版更强大，在firefox 4.0 beta中居然出现了Windows Only的东东，着着实实地伤了很多firefox的粉丝的心，正因为这个，整个社区都开始BS并嘲笑Mozilla，并转投Chrome阵营。</p>
<p>当然，最后这个BUG被fix了，有图为证：</p>
<p><figure id="attachment_2937" aria-describedby="caption-attachment-2937" style="width: 560px" class="wp-caption aligncenter"><img alt="image placeholder" >
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/2667.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2069.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1714.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3363.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7617.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4787.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2936" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="9359b105ab">
<img alt="image placeholder" >
<meta itemprop="headline" content="Mozilla的一个BUG">
<meta itemprop="description" content="以前，本站给大家介绍过一些BUG，如：《谷歌Chrome取消”http://”》，《Go语言的Issue 9》和《telnet的一个Bug》。今天，和大家再说一个Mozilla的Bug，这个Bug的网址在这里：https://bugzilla.mozilla.org/show_bug.cgi?id=579522

这个Bug的标题是这样的：“Buy cots for the JS intern...">
<meta itemprop="datePublished" content="2010-09-14T07:57:12+08:00">
<meta itemprop="dateModified" content="2010-09-13T22:58:05+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2936.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2936.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.67">
<meta itemprop="ratingCount" content="6">
</div>
</div>
<div id="post-ratings-2936-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-14T07:57:12+08:00</pubDate>
<guid>https://coolshell.cn/articles/2936.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Waterfall 软件工程 ]]></title>
<link>https://coolshell.cn/articles/2941.html</link>
<content><![CDATA[ 
<p>《Royce, Winston (1970), <a rel="nofollow" href="http://www.cs.umd.edu/class/spring2003/cmsc838p/Process/waterfall.pdf" target="_blank">“Managing the Development of Large Software Systems”</a>, <em>Proceedings of IEEE WESCON</em> <strong>26</strong> (August): 1–9. 》，这篇文章向你说明了软件工程鼻祖“Waterfall”的工程模型，这是40年前的论文，其中的十张插图很有强大，抽出来，让我们来看看什么叫Waterfall软件工程。</p>
<p>首先，让我先看一下小的程序是怎么做的，呵呵，很简单，两步。</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/09/01.Small_.jpg"><img alt="image placeholder" >
<p>接下来，就是我们最经典的Waterfall软件工程模型了，用户需求，软件需求，需求分析，设计，编码，测试，运维。</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/09/02.Large_.jpg"><img alt="image placeholder" >
<p><span id="more-2941"></span>为了保证每个步骤都能正确实施，于是，每个步骤之间需要有一定的交互，这是我们所希望的样子。</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/09/02.Large_.jpg"><br>
</a> <a href="https://coolshell.cn/wp-content/uploads/2010/09/03.Iteraction.jpg"><img alt="image placeholder" >
<p>然后，不幸的是，我们总是在测试的时候发现了设计甚至需求的问题，因此，不得不让我们返工。</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/09/04.Design.jpg"><img alt="image placeholder" >
<p>为了解决上面的“返工”问题，我们可以使用下面的几步来解决。</p>
<p>第一步，叫Preliminary Design，程序设计先行，确定在进入需求分析之前，我们的概要设计要完整。</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/09/05.01.Preliminary.Design.jpg"><img alt="image placeholder" >
<p>第二步，我们叫Document Design，书写设计文档，确认我们的设计是完整的。看到了吧，总共6个文档，1）软件需求，2）概要设计，3）接口设计，4）各种最终设计，5）测试设计/计划，6）测试结果。流程开始变得复杂了。</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/09/05.02.Documentation.jpg"><img alt="image placeholder" >
<p>第三步，我们叫“Do it Twice”，双保险，把文档了的东西试着预先走一遍，看看能否成为最终产品。</p>
<p><a href="https://coolshell.cn/wp-content/uploads/2010/09/05.03.Double.Work_.jpg"><img alt="image placeholder" >
<p>第四步，计划，控制和监控测试。哇，流程很乱了。</p>
<p style="text-align: center;"><a href="https://coolshell.cn/wp-content/uploads/2010/09/05.04.Test_.jpg"><img alt="image placeholder" >
<p>第五步，用户介入，全程review各个环节。</p>
<p style="text-align: center;"><a href="https://coolshell.cn/wp-content/uploads/2010/09/05.05.Involve.Customer.jpg"><img alt="image placeholder" >
<p>好了，问题解决了，让我们看看最终的“无比强大的”——Waterfall软件工程模型！</p>
<p style="text-align: center;"><a href="https://coolshell.cn/wp-content/uploads/2010/09/06.Summary.jpg"><img alt="image placeholder" >
<p>现在，当你在使用waterfall开发软件的时候，知道为什么痛苦了吧，40年前就已经如此了。</p>
<p>下面是《<a href="http://confreaks.net/events/lsrc2010">Lone Star Ruby Conference 2010</a>》的一个演讲叫《<a href="http://confreaks.net/videos/282-lsrc2010-real-software-engineering" target="_blank">Real Software Engineer</a>》，没有字幕，但我个人感觉英文很容易听懂，英文好的同学不妨看看。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/1528.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1023.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3335.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/546.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/880.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8239.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2941" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="69930b84cb">
<img alt="image placeholder" >
<meta itemprop="headline" content="Waterfall 软件工程">
<meta itemprop="description" content='《Royce, Winston (1970), "Managing the Development of Large Software Systems", Proceedings of IEEE WESCON 26 (August): 1–9. 》，这篇文章向你说明了软件工程鼻祖“Waterfall”的工程模型，这是40年前的论文，其中的十张插图很有强大，抽出来，让我们来看看什么叫Waterfal...'>
<meta itemprop="datePublished" content="2010-09-15T08:42:42+08:00">
<meta itemprop="dateModified" content="2010-09-15T16:38:17+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2941.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2941.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.31">
<meta itemprop="ratingCount" content="13">
</div>
</div>
<div id="post-ratings-2941-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-15T08:42:42+08:00</pubDate>
<guid>https://coolshell.cn/articles/2941.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 25个jQuery的编程小抄 ]]></title>
<link>https://coolshell.cn/articles/2964.html</link>
<content><![CDATA[ 
<p>以前本站向大家介绍过“<a rel="bookmark" href="https://coolshell.cn/articles/1566.html" target="_blank">程序员小抄大全</a>”，这里是25个jQuery的小抄（有一些在墙外），有的还可以设置成你的电脑桌面。这些东西可以让你很快速地记得一些常用的东西，就好像软件的快捷键一样。希望它们对你会有帮助。</p>
<h3>
<a href="http://colorcharge.com/jquery/" target="_blank">1. jQuery 1.2 Cheat-sheet</a> [PNG]</h3>
<p><a href="http://colorcharge.com/jquery/"><img alt="image placeholder" >
<p><span id="more-2964"></span></p>
<h3>
<a href="http://www.gscottolson.com/weblog/2008/01/11/jquery-cheat-sheet/" target="_blank">2. jQuery 1.2 Cheat Sheet v1.0</a> [PDF]</h3>
<p><a href="http://www.gscottolson.com/weblog/2008/01/11/jquery-cheat-sheet/"><img alt="image placeholder" >
<h3>
<a href="http://blog.acodingfool.com/cheatsheets/jquery-1-3-cheatsheet/" target="_blank">3. jQuery 1.3 Cheatsheet</a> [PDF]</h3>
<p><a href="http://blog.acodingfool.com/cheatsheets/jquery-1-3-cheatsheet/"><img alt="image placeholder" >
<h3>
<a href="https://api.jquery.com/" target="_blank">4. jQuery API Browser</a> [Adobe AIR, HTML]</h3>
<p><a href="https://api.jquery.com/"><img alt="image placeholder" >
<h3>5. <a href="http://n-bp.com/jquery_cheat_sheet/v11/" target="_blank">jQuery1.1 Cheat Sheet</a> [HTML]</h3>
<p><a href="http://n-bp.com/jquery_cheat_sheet/v11/"><img alt="image placeholder" >
<h3>6. <a href="http://jtouch.colorcharge.com/" target="_blank">jTouch – jQuery Cheat Sheet for iPhone</a> [HTML]</h3>
<p><a href="http://jtouch.colorcharge.com/"><img alt="image placeholder" >
<h3>7.<a href="http://www.futurecolors.ru/jquery/" target="_blank"> jQuery 1.4 API Cheat Sheet</a> [HTML, PDF, PNG]</h3>
<p><a href="http://www.futurecolors.ru/jquery/"><img alt="image placeholder" >
<h3>8. <a href="http://refcardz.dzone.com/refcardz/jquery-selectors" target="_blank">jQuery Selectors</a> [PDF]</h3>
<p><a href="http://refcardz.dzone.com/refcardz/jquery-selectors"><img alt="image placeholder" >
<h3>9.<a href="http://oscarotero.com/jquery/" target="_blank"> jQuery 1.3 Quick API Reference</a> [ HTML]</h3>
<p><a href="http://oscarotero.com/jquery/"><img alt="image placeholder" >
<h3>10.<a href="http://oscarotero.com/jquery/ui.html"> </a><a href="http://oscarotero.com/jquery/ui.html" target="_blank">jQuery UI 1.7 Quick API Reference</a> [ HTML]</h3>
<p><a href="http://oscarotero.com/jquery/ui.html"><img alt="image placeholder" >
<h3>11. <a href="http://www.javascripttoolbox.com/jquery/cheatsheet/" target="_blank">jQuery 1.3.2 Cheat Sheet</a> [Microsoft Excel (XLS), PDF, PNG]</h3>
<p><a href="http://www.javascripttoolbox.com/jquery/cheatsheet/"><img alt="image placeholder" >
<h3>12. <a href="http://www.javascripttoolbox.com/jquery/cheatsheet/" target="_blank">jQuery 1.1.3 Cheat Sheet</a> [Microsoft Excel (XLS), PDF, PNG]</h3>
<p><a href="http://www.javascripttoolbox.com/jquery/cheatsheet/"><img alt="image placeholder" >
<h3>13. <a href="https://woork.blogspot.com/2009/09/jquery-visual-cheat-sheet.html" target="_blank">jQuery 1.3 Visual Cheat Sheet</a> [PDF]</h3>
<p><a href="https://woork.blogspot.com/2009/09/jquery-visual-cheat-sheet.html"><img alt="image placeholder" >
<h3>14.<a href="http://woorkup.com/2010/06/13/jquery-1-4-2-visual-cheat-sheet/" target="_blank"> jQuery 1.4.2 Visual Cheat Sheet</a> [JPEG, PDF]</h3>
<p><a href="http://woorkup.com/2010/06/13/jquery-1-4-2-visual-cheat-sheet/"><img alt="image placeholder" >
<h3>15. <a href="http://remysharp.com/jquery-api/" target="_blank">jQuery API</a> [HTML]</h3>
<p><a href="http://remysharp.com/jquery-api/"><img alt="image placeholder" >
<h3>16. <a href="http://labs.impulsestudios.ca/jquery-cheat-sheet" target="_blank">jQuery 1.4 Cheat Sheet</a> [PDF]</h3>
<p><a href="http://labs.impulsestudios.ca/jquery-cheat-sheet"><img alt="image placeholder" >
<h3>17.<a href="https://chris4403.blogspot.com/2008/01/jquery-cheatsheet-wallpaper.html" target="_blank"> jQuery cheatsheet Wallpaper</a>
</h3>
<p><a href="https://chris4403.blogspot.com/2008/01/jquery-cheatsheet-wallpaper.html"><img alt="image placeholder" >
<h3>18. <a href="http://carlos.bueno.org/jq-yui.html" target="_blank">jQuery – YUI3 Rosetta Stone</a> [HTML]</h3>
<p><a href="http://carlos.bueno.org/jq-yui.html"><img alt="image placeholder" >
<h3>19. <a href="http://www.cheat-sheets.org/#jQuery" target="_blank">jQuery 1.2 by Adrien Gibrat</a> [PDF]</h3>
<p><a href="http://www.cheat-sheets.org/#jQuery"><img alt="image placeholder" >
<h3>20. <a href="http://acodingfool.typepad.com/blog/2009/01/jquery-13-cheat-sheet.html" target="_blank">jQuery 1.3 Cheat Sheet</a>
</h3>
<p><a href="http://acodingfool.typepad.com/blog/2009/01/jquery-13-cheat-sheet.html"><img alt="image placeholder" >
<h3>21. <a href="http://www.gmtaz.com/index.php/jquery-13-cheatsheet-wallpaper/" target="_blank">jQuery 1.3 Cheatsheet Wallpaper </a>[1920×1200, 1680×1050 and 1440×900]</h3>
<p><a href="http://www.gmtaz.com/index.php/jquery-13-cheatsheet-wallpaper/"><img alt="image placeholder" >
<h3>
<a href="http://www.cheat-sheets.org/saved-copy/jQuery.1.3.Visual.Cheat.Sheet.by.WOORK.pdf" target="_blank">22. jQuery 1.3 Visual Cheat Sheet by Antonio Lupetti</a> [PDF]</h3>
<p><a href="http://www.cheat-sheets.org/saved-copy/jQuery.1.3.Visual.Cheat.Sheet.by.WOORK.pdf"><img alt="image placeholder" >
<h3>
<a href="http://codylindley.com/jqueryselectors/" target="_blank">23. jQuery Selectors Cheatsheet</a> [HTML]</h3>
<p><a href="http://codylindley.com/jqueryselectors/"><img alt="image placeholder" >
<h3>
<a href="http://jn.orz.hm/jquery/ui_effect.html" target="_blank">24. jQuery UI – Effects Cheatsheet</a> [HTML]</h3>
<p><a href="http://jn.orz.hm/jquery/ui_effect.html"><img alt="image placeholder" >
<h3>25. <a href="http://elegantcode.com/wp-content/uploads/2010/03/Jquery-Validator-Cheat-sheet.pdf" target="_blank">jQuery Validator Cheatsheet </a>– Elegant Code [PDF]</h3>
<p><a href="http://elegantcode.com/wp-content/uploads/2010/03/Jquery-Validator-Cheat-sheet.pdf"><img alt="image placeholder" >
<p>文章：<a href="http://technologytosoftware.com/most-useful-jquery-cheat-sheets.html" target="_blank">http://technologytosoftware.com/most-useful-jquery-cheat-sheets.html</a></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8170.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5479.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4795.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3877.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3480.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2964" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="4b087e2cdb">
<img alt="image placeholder" >
<meta itemprop="headline" content="25个jQuery的编程小抄">
<meta itemprop="description" content="以前本站向大家介绍过“程序员小抄大全”，这里是25个jQuery的小抄（有一些在墙外），有的还可以设置成你的电脑桌面。这些东西可以让你很快速地记得一些常用的东西，就好像软件的快捷键一样。希望它们对你会有帮助。
1. jQuery 1.2 Cheat-sheet [PNG]



2. jQuery 1.2 Cheat Sheet v1.0 [PDF]

3. jQuery 1.3 C...">
<meta itemprop="datePublished" content="2010-09-19T08:14:12+08:00">
<meta itemprop="dateModified" content="2010-09-18T23:27:05+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2964.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2964.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4">
<meta itemprop="ratingCount" content="8">
</div>
</div>
<div id="post-ratings-2964-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-19T08:14:12+08:00</pubDate>
<guid>https://coolshell.cn/articles/2964.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 代码优化概要 ]]></title>
<link>https://coolshell.cn/articles/2967.html</link>
<content><![CDATA[ 
<p>本文译自Dr. Dobb’s Blogger的Walter Bright写的《<a href="http://www.drdobbs.com/blog/archives/2010/09/overlooked_esse.html" target="_blank">Overlooked Essentials For Optimizing Code</a></p>
<p>》</p>
<hr>
<p>我编写程序至今有35年了，我做了很多关于程序执行速度方面优化的工(<a href="http://biolpc22.york.ac.uk/wx/wxhatch/wxMSW_Compiler_choice.html">一个示例</a>)，我也看过其它人做的优化。我发现有两个最基本的优化技术总是被人所忽略。 注意，这两个技术并不是避免时机不成熟的优化。并不是把冒泡排序变成快速排序（算法优化）。也不是语言或是编译器的优化。也不是把 i*4写成i&lt;&lt;2 的优化。 这两个技术是：</p>
<ol>
<li>使用 一个profiler。</li>
<li>查看程序执行时的汇编码。</li>
</ol>
<p>使用这两个技术的人将会成功地写出运行快的代码，不会使用这两个技术的人则不行。下面让我为你细细道来。</p>
<h4>使用一个 Profiler</h4>
<p>我们知道，程序运行时的90%的时间是用在了10%的代码上。我发现这并不准确。一次又一次地，我发现，几乎所有的程序会在1%的代码上花了99%的运行时间。但是，是哪个1%？一个好的Profiler可以告诉你这个答案。就算我们需要使用100个小时在这1%的代码上进行优化，也比使用100个小时在其它99%的代码上优化产生的效益要高得多得多。<span id="more-2967"></span> 问题是什么？人们不用profiler？不是。我工作过的一个地方使用了一个华丽而奢侈的Profiler，但是自从购买这个Profiler后，它的包装3年来还是那么的暂新。为什么人们不用？我真的不知道。有一次，我和我的同事去了一个负载过大的交易所，我同事坚持说他知道哪里是瓶颈，毕竟，他是一个很有经验的专家。最终，我把我的Profiler在他的项目上运行了一下，我们发现那个瓶颈完全在一个意想不到的地方。 就像是赛车一样。团队是赢在传感器和日志上，这些东西提供了所有的一切。你可以调整一下赛车手的裤子以让其在比赛过程中更舒服，但是这不会让你赢得比赛，也不会让你更有竞争力。如果你不知道你的速度上不去是因为引擎、排气装置、空体动力学、轮胎气压，或是赛车手，那么你将无法获胜。编程为什么会不同呢？只要没有测量，你就永远无法进步。 这个世界上有太多可以使用的Profiler了。随便找一个你就可以看到你的函数的调用层次，调用的次数，以前每条代码的时间分解表（甚至可以到汇编级）。我看过太多的程序员回避使用Profiler，而是把时间花在那些无用的，错误的方向上的“优化”，而被其竞争对手所羞辱。（<strong>译者陈皓注</strong>：使用Profiler时，重点需要关注：1）花时间多的函数以优化其算法，2）调用次数巨多的函数——如果一个函数每秒被调用300K次，你只需要优化出0.001毫秒，那也是相当大的优化。这就是作者所谓的1%的代码占用了99%的CPU时间）</p>
<h4>查看汇编代码</h4>
<p>几年前，我有一个同事，Mary Bailey，她在华盛顿大学教矫正代数（remedial algebra），有一次，她在黑板上写下： <code>x + 3 = 5</code> 然后问他的学生“求解x”，然后学生们不知道答案。于是她写下： <code>__ + 3 = 5</code> 然后，再问学生“填空”，所有的学生都可以回答了。未知数x就像是一个有魔法的字母让大家都在想“x意味着代数，而我没有学过代数，所以我就不知道这个怎么做”。 汇编程序就是编程世界的代数。如果某人问我“inline函数是否被编译器展开了？”或是问我“如果我写下i*4，编译器会把其优化为左移位操作吗？”。这个时候，我都会建议他们看看编译器的汇编码。这样的回答是不是很粗暴和无用？通常，在我这样回答了提问者后，提问都通常都会说，对不起，我不知道什么是汇编！甚至C++的专家都会这么回答。 汇编语言是最简单的编程语言了（就算是和C++相比也是这样的），如：</p>
<p style="padding-left: 30px;"><code>ADD ESI,x</code></p>
<p>就是（C风格的代码）</p>
<p style="padding-left: 30px;"><code>ESI += x;</code></p>
<p>而：</p>
<p style="padding-left: 30px;"><code>CALL foo</code></p>
<p>则是：</p>
<p style="padding-left: 30px;"><code>foo();</code></p>
<p>细节因为CPU的种类而不同，但这就是其如何工作的。有时候，我们甚至都不需要细节，只需要看看汇编码的长啥样，然后和源代码比一比，你就可以知道汇编代码很多很多了。 那么，这又如何帮助代码优化？举个例子，我几年前认识一个程序员认为他应该去发现一个新的更快的算法。他有一个benchmark来证明这个算法，并且其写了一篇非常漂亮的文章关于他的这个算法。但是，有人看了一下其原来算法以及新算法的汇编，发现了他的改进版本的算法允许其编译器把两个除法操作变成了一个。这和算法真的没有什么关系。我们知道除法操作是一个很昂贵的操作，并且在其算法中，这俩个除法操作还在一个内嵌循环中，所以，他的改进版的算法当然要快一些。但，只需要在原来的算法上做一点点小的改动——使用一个除法操作，那么其原来的算法将会和新的一样快。而他的新发现什么也不是。 下一个例子，一个D用户张贴了一个 benchmark 来显示 dmd (Digital Mars D 编译器)在整型算法上的很糟糕，而ldc (LLVM D 编译器) 就好很多了。对于这样的结果，其相当的有意见。我迅速地看了一下汇编，发现两个编译器编译出来相当的一致，并没有什么明显的东西要对2：1这么大的不同而负责。但是我们看到有一个对long型整数的除法，这个除法调用了运行库。而这个库成为消耗时间的杀手，其它所有的加减法都没有速度上的影响。出乎意料地，benchmark 和算法代码生成一点关系也没有，完全就是long型整数的除法的问题。这暴露了在dmd的运行库中的long型除法的实现很差。修正后就可以提高速度。所以，这和编译器没有什么关系，但是如果不看汇编，你将无法发现这一切。 查看汇编代码经常会给你一些意想不到的东西让你知道为什么程序的性能是那样。一些意想不到的函数调用，预料不到的自傲，以及不应该存在的东西，等等其实所有的一切。但也不需要成为一个汇编代码的黑客才能干的事。</p>
<h4>结论</h4>
<p>如果你觉得需要程序有更好的执行速度，那么，最基本的方法就是使用一个profiler和愿意去查看一下其汇编代码以找到程序的瓶颈。只有找到了程序的瓶颈，此时才是真正在思考如何去改进的时候，比如思考一个更好的算法，使用更快的语言优化，等等。 常规的做法是制胜法宝是挑选一个最佳的算法而不是进行微优化。虽然这种做法是无可异议的，但是有两件事情是学校没有教给你而需要你重点注意的。第一个也是最重要的，如果你优化的算法没没有参与到你程序性能中的算法，那么你优化他只是在浪费时间和精力，并且还转移了你的注意力让你错过了应该要去优化的部分。第二点，算法的性能总和处理的数据密切相关的，就算是冒泡排序有那么多的笑柄，但是如果其处理的数据基本是排好序的，只有其中几个数据是未排序的，那么冒泡排序也是所有排序算法里性能最好的。所以，担心没有使用好的算法而不去测量，只会浪费时间，无论是你的还是计算机的。 就好像赛车零件的订购速底是不会让你更靠进冠军（就算是你正确安装零件也不会），没有Profiler，你不会知道问题在哪里，不去看汇编，你可能知道问题所在，但你往往不知道为什么。 (全文完)</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8990.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8745.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7886.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5444.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5201.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2967" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="71c53d8cfe">
<img alt="image placeholder" >
<meta itemprop="headline" content="代码优化概要">
<meta itemprop="description" content="本文译自Dr. Dobb's Blogger的Walter Bright写的《Overlooked Essentials For Optimizing Code

》

我编写程序至今有35年了，我做了很多关于程序执行速度方面优化的工(一个示例)，我也看过其它人做的优化。我发现有两个最基本的优化技术总是被人所忽略。  注意，这两个技术并不是避免时机不成熟的优化。并不是把冒泡排序变成快速排序...">
<meta itemprop="datePublished" content="2010-09-20T08:22:31+08:00">
<meta itemprop="dateModified" content="2010-09-24T14:07:08+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2967.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2967.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.91">
<meta itemprop="ratingCount" content="11">
</div>
</div>
<div id="post-ratings-2967-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-20T08:22:31+08:00</pubDate>
<guid>https://coolshell.cn/articles/2967.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 用脚本实现哄宝宝睡觉(Demo) ]]></title>
<link>https://coolshell.cn/articles/2987.html</link>
<content><![CDATA[ 
<p>去年，本站发布了一篇文章《<a href="https://coolshell.cn/articles/1539.html" target="_blank">用脚本哄宝宝睡觉</a>》，具体想法是把摇篮和光驱连一起，然后用脚本把光驱弹出和收入以实现驱动摇篮。今天在网上看到一个具体实现，呵呵。看下面的视频：</p>
<p style="text-align: center;"><object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" width="480" height="400" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0"><param name="align" value="middle">
<param name="src" value="http://player.youku.com/player.php/sid/XMTE1MzgwNjI0/v.swf">
<param name="quality" value="high">
<embed type="application/x-shockwave-flash" width="480" height="400" src="http://player.youku.com/player.php/sid/XMTE1MzgwNjI0/v.swf" quality="high" align="middle"></embed></object></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/8883.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8619.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1539.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1379.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19219.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18654.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2987" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="de85ab0c08">
<img alt="image placeholder" >
<meta itemprop="headline" content="用脚本实现哄宝宝睡觉(Demo)">
<meta itemprop="description" content="去年，本站发布了一篇文章《用脚本哄宝宝睡觉》，具体想法是把摇篮和光驱连一起，然后用脚本把光驱弹出和收入以实现驱动摇篮。今天在网上看到一个具体实现，呵呵。看下面的视频：

">
<meta itemprop="datePublished" content="2010-09-20T17:03:27+08:00">
<meta itemprop="dateModified" content="2010-09-20T17:03:27+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2987.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2987.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.3">
<meta itemprop="ratingCount" content="20">
</div>
</div>
<div id="post-ratings-2987-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-20T17:03:27+08:00</pubDate>
<guid>https://coolshell.cn/articles/2987.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 编程时间分配图 ]]></title>
<link>https://coolshell.cn/articles/2990.html</link>
<content><![CDATA[ 
<p>下面是一个程序员coding的时间分配图，原图在<a href="https://graphjam.files.wordpress.com/2010/09/8463a94d-0945-43b6-9adf-db795bbc14b9.png" target="_blank">这里</a>。</p>
<figure id="attachment_2991" aria-describedby="caption-attachment-2991" style="width: 535px" class="wp-caption aligncenter"><img alt="image placeholder" >
<p>思考会是一个很重要的过程，当然耽搁拖沓也有可能也是因为没有想好，抽烟/喝咖啡应该也是一种思考，吃点东西是为了让脑子转得更快一点，上网搜索一下灵感可以借鉴一下其它人的想法，抱怨写注释只是一个例子，更多的应该是抱怨加班或是公司的老板。</p>
<p>如果需要加上点什么的话，我觉得应该加点“重构”，“编译”，“调试”，当然，他们都可以算在coding里。不过，我觉得更应该还有：“开会”，“争吵/解释”，“打断”，这些比重也是很大的。</p>
<p>所以，下面是我个人认为比较实际的版本：</p>
<p><span id="more-2990"></span></p>
<p style="text-align: center;"><img alt="image placeholder" >
<p style="text-align: center;">编程时间图（酷壳版）</p>
<p>你的编程时间分配图是怎么样的？</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5444.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5201.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4875.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4758.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3005.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2990" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="beca697eb9">
<img alt="image placeholder" >
<meta itemprop="headline" content="编程时间分配图">
<meta itemprop="description" content="下面是一个程序员coding的时间分配图，原图在这里。



思考会是一个很重要的过程，当然耽搁拖沓也有可能也是因为没有想好，抽烟/喝咖啡应该也是一种思考，吃点东西是为了让脑子转得更快一点，上网搜索一下灵感可以借鉴一下其它人的想法，抱怨写注释只是一个例子，更多的应该是抱怨加班或是公司的老板。

如果需要加上点什么的话，我觉得应该加点“重构”，“编译”，“调试”，当然，他们都可以算在co...">
<meta itemprop="datePublished" content="2010-09-21T08:19:49+08:00">
<meta itemprop="dateModified" content="2010-09-20T23:15:38+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2990.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2990.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.11">
<meta itemprop="ratingCount" content="18">
</div>
</div>
<div id="post-ratings-2990-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-21T08:19:49+08:00</pubDate>
<guid>https://coolshell.cn/articles/2990.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ HTML5 小游戏展示 ]]></title>
<link>https://coolshell.cn/articles/2998.html</link>
<content><![CDATA[ 
<p>使用 HTML5 的 Canvas可以搞出一些很有趣的东西，如2D图形，位图，动画等。而使用Javascript来操作这些东西，可以设计出很多的小游戏。 下面是一些用HTML5做出来的小游戏，让我想得了我小时候的那些游戏。</p>
<p>顺祝大家中秋节快乐！以及进入史上最混乱的长假调休。呵呵。</p>
<div id="ez-toc-container" class="ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-grey">
<div class="ez-toc-title-container">
<p class="ez-toc-title">目录</p>
<span class="ez-toc-title-toggle"></span>
</div>
<nav><ul class="ez-toc-list ez-toc-list-level-1">
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-1" href="#Sinuous" title="Sinuous">Sinuous</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-2" href="#%E8%B6%85%E7%BA%A7%E7%8E%9B%E4%B8%BD%E5%8D%A1%E4%B8%81%E8%BD%A6" title="超级玛丽卡丁车">超级玛丽卡丁车</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-3" href="#%E5%90%83%E8%B1%86" title="吃豆">吃豆</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-4" href="#%E5%9C%86%E7%8E%AF%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97" title="圆环俄罗斯方块">圆环俄罗斯方块</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-5" href="#Asteroids" title="Asteroids">Asteroids</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-6" href="#Berts_Breakdown" title="Bert’s Breakdown">Bert’s Breakdown</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-7" href="#TWITCH" title="TWITCH">TWITCH</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-8" href="#JS_Wars" title="JS Wars">JS Wars</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-9" href="#Chain_Reaction" title="Chain Reaction">Chain Reaction</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-10" href="#Same_Game" title="Same Game">Same Game</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-11" href="#Coverfire" title="Coverfire">Coverfire</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-12" href="#JQuery_Racing" title="JQuery Racing">JQuery Racing</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-13" href="#3D_%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97_-_Cubeout" title="3D 俄罗斯方块 – Cubeout">3D 俄罗斯方块 – Cubeout</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-14" href="#Galatic_Plunder" title="Galatic Plunder">Galatic Plunder</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-15" href="#Lines" title="Lines">Lines</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-16" href="#RGB_Invaders" title="RGB Invaders">RGB Invaders</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-17" href="#Agent_008_Ball" title="Agent 008 Ball">Agent 008 Ball</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-18" href="#JSLander" title="JSLander">JSLander</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-19" href="#Rainbow_Blocks" title="Rainbow Blocks">Rainbow Blocks</a></li>
</ul></nav>
</div>
<h4>
<span class="ez-toc-section" id="Sinuous"></span><a rel="nofollow" href="http://hakim.se/experiments/html5/sinuous/01/" target="_blank">Sinuous</a><span class="ez-toc-section-end"></span>
</h4>
<p>小心被红点撞上。</p>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="%E8%B6%85%E7%BA%A7%E7%8E%9B%E4%B8%BD%E5%8D%A1%E4%B8%81%E8%BD%A6"></span><a rel="nofollow" href="http://www.nihilogic.dk/labs/mariokart/" target="_blank">超级玛丽卡丁车</a><span class="ez-toc-section-end"></span>
</h4>
<p>A small but fun racing game built in html5 canvas and javascript.</p>
<p><img alt="image placeholder" >
<p><span id="more-2998"></span></p>
<h4>
<span class="ez-toc-section" id="%E5%90%83%E8%B1%86"></span><a rel="nofollow" href="http://arandomurl.com/2010/07/25/html5-pacman.html" target="_blank">吃豆</a><span class="ez-toc-section-end"></span>
</h4>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="%E5%9C%86%E7%8E%AF%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97"></span><a rel="nofollow" href="http://www.benjoffe.com/code/games/torus/" target="_blank">圆环俄罗斯方块</a><span class="ez-toc-section-end"></span>
</h4>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="Asteroids"></span><a rel="nofollow" href="http://www.kevs3d.co.uk/dev/asteroids/" target="_blank">Asteroids</a><span class="ez-toc-section-end"></span>
</h4>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="Berts_Breakdown"></span><a rel="nofollow" href="http://www.paulbrunt.co.uk/bert/" target="_blank">Bert’s Breakdown</a><span class="ez-toc-section-end"></span>
</h4>
<p>很不错的游戏，漂亮的界面以及不错的关卡设置。</p>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="TWITCH"></span><a rel="nofollow" href="http://reas.com/twitch/" target="_blank">TWITCH</a><span class="ez-toc-section-end"></span>
</h4>
<p>TWITCH是一个解题性质的游戏。试试看你有多快。</p>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="JS_Wars"></span><a rel="nofollow" href="http://29a.ch/jswars/" target="_blank">JS Wars</a><span class="ez-toc-section-end"></span>
</h4>
<p>一个经典的空战游戏。</p>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="Chain_Reaction"></span><a rel="nofollow" href="http://www.yvoschaap.com/chainrxn/" target="_blank">Chain Reaction</a><span class="ez-toc-section-end"></span>
</h4>
<p>一个简单又容易上瘾的游戏。</p>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="Same_Game"></span><a rel="nofollow" href="http://grenlibre.fr/demo/same/" target="_blank">Same Game</a><span class="ez-toc-section-end"></span>
</h4>
<p>这个游戏相信大家都会玩，把相同颜色的连在一起。</p>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="Coverfire"></span><a rel="nofollow" href="http://www.wiicade.com/playJSGame.aspx?gameID=1317&amp;gameName=Coverfire" target="_blank">Coverfire</a><span class="ez-toc-section-end"></span>
</h4>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="JQuery_Racing"></span><a rel="nofollow" href="http://www.mattpelham.com/racing/" target="_blank">JQuery Racing</a><span class="ez-toc-section-end"></span>
</h4>
<p>靠！这个游戏很耐完，我相信你一定会在上面花很多时间。 jQuery 做的。</p>
<p><img alt="image placeholder" >
<h3><a rel="nofollow" href="http://joncom.be/experiments/thrust/">Thrust</a></h3>
<p>经典的八位图游戏。让我想起了《<a title="史上最烂的超级玛丽" href="https://coolshell.cn/articles/2834.html" target="_blank">史上最烂的超级玛丽</a>》</p>
<p><img alt="image placeholder" >
<h3><a rel="nofollow" href="http://aduros.emufarmers.com/easel/">俄罗斯方块</a></h3>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="3D_%E4%BF%84%E7%BD%97%E6%96%AF%E6%96%B9%E5%9D%97_-_Cubeout"></span><a rel="nofollow" href="http://alteredqualia.com/cubeout/" target="_blank">3D 俄罗斯方块 – Cubeout</a><span class="ez-toc-section-end"></span>
</h4>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="Galatic_Plunder"></span><a rel="nofollow" href="http://dougx.net/plunder/plunder.html" target="_blank">Galatic Plunder</a><span class="ez-toc-section-end"></span>
</h4>
<p>这个游戏使用了Canvas 和 Audio，主要是为了证明，没有Flash，用HTML5一样行。</p>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="Lines"></span><a rel="nofollow" href="http://10k.aneventapart.com/Uploads/62/" target="_blank">Lines</a><span class="ez-toc-section-end"></span>
</h4>
<p>很简单的游戏，我老看到办公室里很多人在玩。</p>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="RGB_Invaders"></span><a rel="nofollow" href="http://10k.aneventapart.com/Uploads/392/" target="_blank">RGB Invaders</a><span class="ez-toc-section-end"></span>
</h4>
<p>小蜜蜂。</p>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="Agent_008_Ball"></span><a rel="nofollow" href="http://www.agent8ball.com/" target="_blank">Agent 008 Ball</a><span class="ez-toc-section-end"></span>
</h4>
<p>受不了了，还有台球。</p>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="JSLander"></span><a rel="nofollow" href="http://www.somethinghitme.com/projects/jslander/" target="_blank">JSLander</a><span class="ez-toc-section-end"></span>
</h4>
<p>一个飞船着陆游戏。速度不要起过去6，不然就坠毁了。</p>
<p><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="Rainbow_Blocks"></span><a rel="nofollow" href="http://10k.aneventapart.com/Uploads/27/" target="_blank">Rainbow Blocks</a><span class="ez-toc-section-end"></span>
</h4>
<p>SameGame 和JT的另一种变种。</p>
<p><img alt="image placeholder" >
<p><strong>文章</strong>：<a href="http://blog.insicdesigns.com/2010/09/showcase-of-games-developed-using-html5-canvas/">http://blog.insicdesigns.com/2010/09/showcase-of-games-developed-using-html5-canvas/</a></p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/5537.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4795.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3903.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3516.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3267.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-2998" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="d031a64a0a">
<img alt="image placeholder" >
<meta itemprop="headline" content="HTML5 小游戏展示">
<meta itemprop="description" content="使用 HTML5 的 Canvas可以搞出一些很有趣的东西，如2D图形，位图，动画等。而使用Javascript来操作这些东西，可以设计出很多的小游戏。 下面是一些用HTML5做出来的小游戏，让我想得了我小时候的那些游戏。

顺祝大家中秋节快乐！以及进入史上最混乱的长假调休。呵呵。
Sinuous
小心被红点撞上。


超级玛丽卡丁车
A small but fun racing ...">
<meta itemprop="datePublished" content="2010-09-21T18:48:51+08:00">
<meta itemprop="dateModified" content="2010-09-21T18:57:42+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/2998.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/2998.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.6">
<meta itemprop="ratingCount" content="10">
</div>
</div>
<div id="post-ratings-2998-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-21T18:48:51+08:00</pubDate>
<guid>https://coolshell.cn/articles/2998.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 代码重构的一个示例 ]]></title>
<link>https://coolshell.cn/articles/3005.html</link>
<content><![CDATA[ 
<p>还记得以前和大家提到过的《<a href="https://coolshell.cn/articles/2058.html" target="_blank">各种流行的编程风格</a>》吗？有一些人问我那些编程风格具体是什么样子的。下面是一个代码重构的实例，让我们看看那个流行的编程风格是实践是什么样的。下面的这个实践不是虚构，如有雷同，请对号入座。</p>
<p>首先，我们有一个表达式如下所示：</p>
<p><code data-enlighter-language="java" class="EnlighterJSRAW">s = 7;</code></p>
<p>很明显，这个表达式的变量名太没意义了，很不利于程序的可读性，所以，我们需要取一个有意义的变量名：</p>
<p><code data-enlighter-language="java" class="EnlighterJSRAW">slots = 7;</code></p>
<p>很好，不过，那个常量7是hard-code或是一个Magic number，而且，这常量没有名字也不利于代码的可读性啊。再改：</p>
<p><span id="more-3005"></span></p>
<p></p>
<pre data-enlighter-language="java" class="EnlighterJSRAW">SEVEN = 7;
...
slots = SEVEN;</pre>
<p>靠！上面，是这是哪门子的改法？（不过，我保证这是真实发生的），常量名也要有意义一点嘛，再改：</p>
<p></p>
<pre data-enlighter-language="java" class="EnlighterJSRAW">SLOTS_PER_WIDGET = 7;
...
slots = SLOTS_PER_WIDGET;</pre>
<p>这还差不多，不过，名字可能会重名啊，最好放到一个类中：</p>
<p></p>
<pre data-enlighter-language="java" class="EnlighterJSRAW">import widgetConstants;
...
slots = widgetConstants.SLOTS_PER_WIDGET;</pre>
<p>现在看起来好很多了，不过，即然面向对象了，我们当然要学会使用Design Pattern，比如Factory啊，或是Singleton啊什么的：</p>
<p></p>
<pre data-enlighter-language="java" class="EnlighterJSRAW">widgetModelFactory = WidgetModelFactory.getInstance();
widgetModel = widgetModelFactory.getWidgetModel() ;
slots = widgetModel.getSlotsPerWidget();</pre>
<p>当然，要是考虑到整体的类结构，上面的那些还不够，下面是我们最终的重构代码：（欢迎来到真实的Java世界）</p>
<p></p>
<pre data-enlighter-language="java" class="EnlighterJSRAW">context = Context.getCurrentContext();
serviceDirectoryFactory = ServiceDirectoryFactory.getServiceDirectory(context);
serviceDirectory = serviceDirectoryFactory.getServiceDirectory(context);
serviceDescriptor = ServiceDescriptorFactory.getDescriptor("widgetModelFactory");
widgetModelFactoryServiceLocator = serviceDirectory.getServiceLocator(serviceDescriptor,context);
widgetModelFactory = (WidgetModelFactory)widgetModelFactoryServiceLocator.findService(context);
widgetModel = widgetModelFactory.getWidgetModel(context);

slots = widgetModel.getSlotsPerWidget();</pre>
<p>这就是我们的面像对象的编程模式，记得N年前在面试那家著名的以鼓吹敏捷方法论的公司时，在用程序实现一个程序题的时候，他们对我的程序很不屑一顾，原因有两个，其一、我没有使用TDD写UT Case，其二、我的程序里没有设计模式。（我才知道，编程原来是为了测试和设计模式，而不是为了原来的需求），今天，仅以此文献给钟爱于<a href="https://coolshell.cn/articles/2058.html" target="_blank">那些流行编码风格</a>的程序员们。</p>
<p>其实，这段代码也是如下而已罢了。</p>
<p><code data-enlighter-language="java" class="EnlighterJSRAW">slots = thisWidget.getSlotCount();</code></p>
<p>(全文完)</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5444.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5292.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5201.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4875.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4758.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3005" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="f1ad3b7475">
<img alt="image placeholder" >
<meta itemprop="headline" content="代码重构的一个示例">
<meta itemprop="description" content="还记得以前和大家提到过的《各种流行的编程风格》吗？有一些人问我那些编程风格具体是什么样子的。下面是一个代码重构的实例，让我们看看那个流行的编程风格是实践是什么样的。下面的这个实践不是虚构，如有雷同，请对号入座。

首先，我们有一个表达式如下所示：

[java]s = 7;[/java]

很明显，这个表达式的变量名太没意义了，很不利于程序的可读性，所以，我们需要取一个有意义的变量名：...">
<meta itemprop="datePublished" content="2010-09-25T08:33:59+08:00">
<meta itemprop="dateModified" content="2010-09-25T22:57:45+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3005.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3005.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.17">
<meta itemprop="ratingCount" content="24">
</div>
</div>
<div id="post-ratings-3005-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-25T08:33:59+08:00</pubDate>
<guid>https://coolshell.cn/articles/3005.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Windows编程革命简史 ]]></title>
<link>https://coolshell.cn/articles/3008.html</link>
<content><![CDATA[ 
<p>源文：<a href="http://www.drdobbs.com/windows/225701475" target="_blank">A Brief History of Windows Programming Revolutions</a> （Ron Burk）</p>
<p>首先，是 Windows API 和 <a href="https://en.wikipedia.org/wiki/DLL_hell" target="_blank">DLL Hell</a>。（译注：DLL Hell——DLL灾难，就是微软的DLL升级时因为不同版本可能造成应用程序无法运行的灾难，首当其冲的是COM编程，相信大家都知道某些木马或是病毒更改了一些系统的DLL可以导致整个Windows不举，这就是DLL Hell） 于是，第一次革命是<a href="https://en.wikipedia.org/wiki/Dynamic_Data_Exchange" target="_blank">DDE</a>——我们可以创建一个状态条在上面显示Microsoft的股票价格（译注：Dynamic Data Exchange，工作原理是： 甲方申请一块全局内存，然后把内存指针postmessage到乙方，乙方根据收到的指针访问那块全局内存）。</p>
<p>在那个时候，Microsoft 创建了 VERSIONINFO 资源来管理版本信息，当然，是用来消除DLL Hell。但是，另一个微软内部的小组发现了DDE的致命缺陷：这不是他们做的！</p>
<p>为了解决这个问题，他们创造了OLE（很像DDE，只是名字不一样），而且，我还记得在一次 Microsoft 大会上，某个微软的演讲者正式宣布—— Windows API 马上就会被 OLE API 所重写并取代，我还盲目地相信了这一说法。而且，所有的在图形界面的控件都会是OCX，那是OLE引入的接口，同样，其目的是为了消除DLL Hell。相信大家都记得，那个时候，我们是怎么地梦想着有一天，我们的应用程序（当然是非常大的程序）可以完全地被嵌入到Word文档中。</p>
<p>然而，在Microsoft的某处，Microsoft有些人开始信仰 C++，其确信MFC的出现并可以解决所有的一切问题，但是，因为历史原因，OLE并没有出局，其改了一个名字，叫COM，此时，我们立马意识到OLE（以前的DDE？）真正意味着什么——其用精心的版本管理系统来消除DLL Hell。与此同时，Microsoft的一个变节小组发现了一个MFC的致命缺陷：这不是他们做的！</p>
<p><span id="more-3008"></span></p>
<p>当然，微软件的动作是很快的，他们立刻修正了问题——创造了ATL，有些像MFC，只是名字不同，他们想使用漂亮的ATL把那些晦涩难懂的COM的知识给隐藏住。这个动作刺激了COM团队（或是OLE团队？）改名为ActiveX，并发布了成千上万的新接口（甚至是很多版本化的接口，当然，主要目的是为了消除DLL Hell），当然，ActiveX可以让我们的程序可以从Web游览器上下载，并可以完美地和病毒一起嵌入浏览器中（哈，还不紧跟时代，感谢ATL吧）。此时，操作系统团队就像一个失宠的孩子一样，大声呼喊着“<a href="https://www.microsoft.com/middleeast/egypt/cmic/" target="_blank">Cairo操作系统</a>来了”引起大家注意，当然有一些怪异恶心的东西连他们自己也无法解释清楚，所以，别提发布了。为了声誉，操作系统团队的确引入了“系统文件保护”的理念，当然也是为了消除DLL Hell。</p>
<p>这个时候，Microsoft的某个团队发现了Java的致命缺陷：这不是他们做的！于是他们创造了一个叫J，或是Jole，或是ActiveJ的东西（对不起，我真的记不起叫什么了）来挽救Java（译者：应该是Visual J++）。看起来很像Java，只是名字不同罢了。这太让人兴奋了，但是Sun使用了一些相当古老的法律条款向Microsoft提起了法律诉讼，其在一年内限制了任何一个公司可以发布类似Java的产品。这明显是抑制微软复制别人产品的一次尝试，唯一不同的，其结果导致了微软流向国会议员裤兜的现金网络的建立（在这个网络可以得到时事新闻和价值$14.75的T恤衫）。还记得 J/Jole/ActiveJ 的项目经理用他的鞋桌在敲着桌子并信誓旦旦地坚持 Microsoft 将永远不会放弃他的产品。SB！所有的这些也就仅仅意味着一件事——没有人关心ActiveX团队（或者是COM？）。令人难以置信的是，微软把这些东东全部集成起来，成了COM+（难道不应该是ActiveX+?），还有MTS（我不知道为什么没有COM和Active或是X或是+的字眼，而直接叫MTS了——我为这个名词感到实实在在地震惊！）。他们总是那么NB地为那些流行词加上“+”号。在那段时间，还有人曾叫喊着“Windows DNA”以及“Windows Washboard”，但这两个东西最终在我搞清是什么玩意的之前就夭折了。</p>
<p>在这一点上，Microsoft已经很不安地窥视着Internet好几年了，他们终于意识到Internet上有一个致命缺陷：嗯，你应该知道这是什么（译注：Internet不是做他们做的！）。于是他们开始培养我们和.NET约会（.NET的发音很像“doughnut”圆环图，不过，这只是他们的唯一不同），这和Internet很相似，只不过.NET有更多的印刷品。其让我们清楚再清楚地了解一件事：.NET会消除DLL Hell。.NET包含了一个新的编程语言，叫C#（为了解决已经死翘翘的Active++ J++的缺陷）。.NET还包含一个虚拟机，所有的语言都运行在上面（这主要是为了解决依赖于Intel CPU的缺陷）。.NET还包含了一个单一的登录系统（这主要是为了解决“不把口令存放在Microsoft服务器上”的缺陷）。实际上，我们更容易做的是把.NET不包含的事给列出来。.NET绝对是一个划时代地Windows编程革命……当然，仅到明年。</p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/11235.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4102.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2672.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3008" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="3f5a35967d">
<img alt="image placeholder" >
<meta itemprop="headline" content="Windows编程革命简史">
<meta itemprop="description" content="源文：A Brief History of Windows Programming Revolutions （Ron Burk）

首先，是 Windows API 和 DLL Hell。（译注：DLL Hell——DLL灾难，就是微软的DLL升级时因为不同版本可能造成应用程序无法运行的灾难，首当其冲的是COM编程，相信大家都知道某些木马或是病毒更改了一些系统的DLL可以导致整个Windows...">
<meta itemprop="datePublished" content="2010-09-27T08:51:30+08:00">
<meta itemprop="dateModified" content="2010-09-27T19:09:16+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3008.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3008.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.31">
<meta itemprop="ratingCount" content="51">
</div>
</div>
<div id="post-ratings-3008-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-27T08:51:30+08:00</pubDate>
<guid>https://coolshell.cn/articles/3008.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 一些非常有意思的杂项资源 ]]></title>
<link>https://coolshell.cn/articles/3013.html</link>
<content><![CDATA[ 
<p>下面是一些最近在互联网上看到的一些各式各样的资源和文章，当然，都是英文社区的，本来想每一个写一篇文章，但是觉得一篇文章一句话真没劲，所以，把这些东西合并写成一篇文章，这样有利于减轻本站的负载，也有利于节省网络带宽，同样，也就节省了能力和电力，因此也就很环保，很低碳。呵呵。</p>
<ul>
<li>先是一个《Windows Internal》第五版的第五章的电子版（英文的），你可以在<a href="http://download.sysinternals.com/Files/WindowsInternals-Ch05.pdf" target="_blank"><strong>这里下载</strong></a>。关于其它一些电子书，你可以看看本站的这篇文章《<a rel="bookmark" href="https://coolshell.cn/articles/2775.html" target="_blank">免费电子书列表</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/240.html">非常不错的编程技术教程</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/336.html">超过100本的linux免费书籍</a>》和《<a rel="bookmark" href="https://coolshell.cn/articles/355.html">20本最好的Linux免费书籍</a>》</li>
</ul>
<p><span style="color: #ffffff;">→</span></p>
<ul>
<li>
<a href="http://www.3dtin.com/" target="_blank"><strong>http://www.3dtin.com/</strong></a>是一个用纯Javascript搞的一个3D作图的网站，Javascript是越来越强大了。这个演示可以让你看到以后Web应用的潜力。关于<a href="https://coolshell.cn/articles/tag/javascript" target="_blank">Javascript的一些东西</a>，你可以参看本站的这些文章《<a rel="bookmark" href="https://coolshell.cn/articles/2785.html" target="_blank">JS1K 演示</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/2276.html" target="_blank">又一个Javascript试验田</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/2065.html" target="_blank">一个Windows 3.1的Web网站</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/1932.html" target="_blank">哥是玩程序的</a>》。</li>
</ul>
<p><span style="color: #ffffff;">→</span></p>
<ul>
<li>说到这些很酷很炫的东西，大家一定会想到使用Flash，不过，目前的<a href="https://coolshell.cn/articles/2735.html" target="_blank">Flash正在受到HTML5的强力挑战</a>，目前，对于HTML5的展示网站很多，让我们看到了HTML5完全可以做出Flash的样子，比如前些天本站说到的<a href="https://coolshell.cn/articles/2926.html" target="_blank">这个演示</a>，还有给大家展示的<a href="https://coolshell.cn/articles/2998.html" target="_blank">纯HTML5的小游戏</a>，不过，那些都是一些演示和展示罢了。今天在网上看到一个更强大的HTML5游戏，相当有可玩性，大家不妨一去试玩：<strong><a href="http://www.phoboslab.org/biolab/" target="_blank">http://www.phoboslab.org/biolab/</a></strong>
</li>
</ul>
<p><a href="http://www.phoboslab.org/biolab/"><img alt="image placeholder" >
<p><span style="color: #ffffff;">→</span></p>
<ul>
<li>HTML5 可以应用的还不只是游戏，这不，<a href="http://thechangelog.com/post/1097381443/vexflow-html5-canvas-javascript-library-music-and-guitar" target="_blank">有文章指出</a>，用<a href="http://www.vexflow.com/" target="_blank"><strong>VexFlow</strong></a>还可以很轻松地在网页上发布乐谱。而<a href="http://stepheneisenhauer.com/demos/drummachine/" target="_blank"><strong>这个网页</strong></a>还可以让你制作Hi-PoP音乐。</li>
</ul>
<p style="text-align: center;"><a href="http://www.vexflow.com/"><img alt="image placeholder" >
<p><span style="color: #ffffff;">→</span></p>
<ul>
<li>说到Web开发，就得要提CSS了，这里有一个在线编辑CSS的网站，很不错，<a href="http://css3.mikeplate.com/" target="_blank"><strong>http://css3.mikeplate.com/</strong></a>。关于CSS和Web开发的一些文章，你可以查看本站的<a href="https://coolshell.cn/articles/tag/css" target="_blank">CSS的Tag</a>。现在，这种在线的东西是越来越多了，比如：《<a rel="bookmark" href="https://coolshell.cn/articles/2271.html" target="_blank">Emacs配色在线生成器</a><span style="font-weight: normal; font-size: 13px;">》、《</span><a rel="bookmark" href="https://coolshell.cn/articles/1883.html" target="_blank">Coderun.com 在线开发IDE</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/1830.html" target="_blank">正则表达式生成器</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/1611.html" target="_blank">Ajax开发利器UIzard</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/776.html" target="_blank">一个在线的画UML图的网站</a>》。</li>
</ul>
<p><span id="more-3013"></span></p>
<p><span style="color: #ffffff;">→</span></p>
<ul>
<li>说起在线服务，就不得不说说在线代码编译的服务，我觉得这种服务相当好，不需要你在本机安装编译器或IDE，想试试某个语言的语法，真接上网就OK，很方便。以前本站向大家介绍过《<a rel="bookmark" href="https://coolshell.cn/articles/1310.html" target="_blank">在线代码编译服务Codepad.org</a>》其支持：C，C++，D，Haskell，Lua，OCaml，PHP，Perl，Plain Text，Python，Ruby，Scheme，Tcl。当然，在这里，向你介绍一个可以运行Go语言的：<strong><a href="https://golang.org/doc/play/" target="_blank">http://golang.org/doc/play/</a></strong>
</li>
</ul>
<p><span style="color: #ffffff;">→</span></p>
<ul>
<li>说起Web开发，很自然的就能想到UI。下面是一个<a href="http://designingwebinterfaces.com/designing-web-interfaces-12-screen-patterns" target="_blank"><strong>UI的设计Patterns</strong></a>，这篇文章告诉了我们12个比较常用或是经典的图形UI Patterns。关于<a href="https://coolshell.cn/articles/tag/ui" target="_blank">UI方面的话题</a>，你可以参看酷壳的《<a rel="bookmark" href="https://coolshell.cn/articles/363.html" target="_blank">35个强大的UI设计教程</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/1907.html" target="_blank">UI的恶梦</a>》和《<a rel="bookmark" href="https://coolshell.cn/articles/2313.html" target="_blank">史上最糟糕的网站</a>》。</li>
</ul>
<p><a href="http://designingwebinterfaces.com/designing-web-interfaces-12-screen-patterns"><img alt="image placeholder" >
<p><span style="color: #ffffff;">→</span></p>
<ul>
<li>说起Web的界面，最让各位WEB开发者痛苦的就是网页兼容性问题，IE是一个恶梦，因为其自己和自己都不兼容，在MSDN上，有这样的一个网页说明了<a href="https://msdn.microsoft.com/en-us/library/cc351024" target="_blank"><strong>从IE5一直到IE9的CSS的兼容性问题</strong></a>，很多很多的表格，头都看大了。当然，以前本站的《<a rel="bookmark" href="https://coolshell.cn/articles/757.html" target="_blank">检查网页浏览器的兼容性</a>》的文章向你介绍过如何查看网站在不同浏览器中和操作系统下的效果（其也是一个在线服务）。</li>
</ul>
<p><span style="color: #ffffff;">→</span></p>
<ul>
<li>当然，Web上的开发，问题最大的还是安全问题，我们的Ruby on Rails给出了一个<a href="http://guides.rubyonrails.org/security.html" target="_blank"><strong>Web安全的开发教程</strong></a>，相当不错哦。谈到了几乎所有最有威胁和最常用的网上攻击，这个文档应该是所有Web开发者都需要注意的。</li>
</ul>
<p><span style="color: #ffffff;">→</span></p>
<ul>
<li>下面是一个给新手学习linux用的一个桌面（点击图片看大图），其列出了很多常用的命令，以及VI的常用命令。关于VI的一些东西，你可以查看<a href="https://coolshell.cn/articles/tag/vim" target="_blank">本站的这些文章</a>，如：<a rel="bookmark" href="https://coolshell.cn/articles/1651.html" target="_blank">VIM有趣的命令</a>、<a rel="bookmark" href="https://coolshell.cn/articles/894.html" target="_blank">如何在vim中得到你最喜爱的IDE特性</a>
</li>
</ul>
<p style="text-align: center;"><a href="https://i.imgur.com/CJkR9.png"><img alt="image placeholder" >
<p><span style="color: #ffffff;">→</span></p>
<ul>
<li>最后，给大家介绍一个关于文件格式方面东西，我们知道，很多文件的开头表明着这个文件的类型，所以，有这样的一个网站了维护了这么一个信息列表，其把几乎所有常见的文件头的那段和文件类型相关的Magic Number列了出来，而且还保持更新，非常不错哦，这个网站是：<strong><a href="http://www.garykessler.net/library/file_sigs.html">http://www.garykessler.net/library/file_sigs.html</a><span style="font-weight: normal;">，希望能对你有用哦。</span></strong>
</li>
</ul>
<p><span style="color: #ffffff;">→</span></p>
<ul>
<li><strong><span style="font-weight: normal;">最最后，给大家介绍一个开源项目，叫<a href="http://structuresynth.sourceforge.net/" target="_blank"><strong>Structure Synth</strong></a>，这个东西可以用来画出一些很酷的图，相当不错，使用起来非常简单，我试用了一下，的确很强大。用一些简单的脚本就可以作出很不错的3D图，下面是他的一个示例，只需要写那么不到10行的代码，很简单。</span></strong></li>
</ul>
<p><a href="http://structuresynth.sourceforge.net/index.php"><img alt="image placeholder" >
<p style="padding-left: 60px;">想看看，大家用这个东西做什么酷图了吗？上 <a href="https://www.flickr.com/groups/structuresynth/" target="_blank">http://www.flickr.com/groups/structuresynth/</a> 看看吧。</p>
<p id="pool_4652540301" style="text-align: center;"><a title="structure 作者 Supreet Kumar" href="https://www.flickr.com/photos/9857764@N02/4652540301/in/pool-structuresynth"><img alt="image placeholder" >
<a title="aircraft 作者 Supreet Kumar" href="https://www.flickr.com/photos/9857764@N02/4641055399/in/pool-structuresynth"><img alt="image placeholder" >
<p id="pool_4635820649">（全文完）</p>
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3903.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9666.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8170.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6840.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5224.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3013" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="cfaedc49a9">
<img alt="image placeholder" >
<meta itemprop="headline" content="一些非常有意思的杂项资源">
<meta itemprop="description" content="下面是一些最近在互联网上看到的一些各式各样的资源和文章，当然，都是英文社区的，本来想每一个写一篇文章，但是觉得一篇文章一句话真没劲，所以，把这些东西合并写成一篇文章，这样有利于减轻本站的负载，也有利于节省网络带宽，同样，也就节省了能力和电力，因此也就很环保，很低碳。呵呵。

	先是一个《Windows Internal》第五版的第五章的电子版（英文的），你可以在这里下载。关于其它一些电子书，你...">
<meta itemprop="datePublished" content="2010-09-28T08:38:34+08:00">
<meta itemprop="dateModified" content="2010-09-25T16:38:29+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3013.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3013.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3">
<meta itemprop="ratingCount" content="13">
</div>
</div>
<div id="post-ratings-3013-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-28T08:38:34+08:00</pubDate>
<guid>https://coolshell.cn/articles/3013.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 面向对象是个骗局？！ ]]></title>
<link>https://coolshell.cn/articles/3036.html</link>
<content><![CDATA[ 
<p>今天在网上看到网页叫“<a href="http://c2.com/cgi/wiki?ObjectOrientationIsaHoax" target="_blank">Object Orientation Isa Hoax</a>”——面向对象是一个骗局，标题很有煽动性（注：该网站上还有一个网页叫<a href="http://c2.com/cgi/wiki?ObjectOrientationIsDead" target="_blank">Object Orientation Is Dead</a>），好吧，打开看看上面有些 什么，发现这个网页是在收集一些关于“面向对象的反动言论”，没想到的是，很多言论出自很多大师之口。比如：Alexander Stepanov和Bjarne Stroustrup。这些言论挺有意思的，所以，我摘两段在下面：</p>
<p>第一段是Alexander Stepanov的（不要告诉我你不知道这个人，STL之父，关于他的故事，可以到<a href="http://www.techcn.com.cn/index.php?doc-view-131345.html" target="_blank">这里看看</a>）。他N年前作过一段采访，<a href="http://www.stlport.org/resources/StepanovUSA.html" target="_blank">原文在这里</a>（我非常建议大家去读一下这篇采访，相当过瘾），<a href="http://dev.csdn.net/htmls/11/11440.html" target="_blank">译文在这里</a>（不过有地方把原意都译反了，我重译了一下），其中有一个问答被上述的那个面向对象反动言论的网页收录了：</p>
<figure style="width: 225px" class="wp-caption alignright"><img alt="image placeholder" >
<blockquote>
<p><strong>Question</strong>:<br>
I think STL and Generic Programming mark a definite departure from the common C++ programming style, which I find is almost completely derived from SmallTalk. Do you agree?</p>
<p><strong>提问</strong>：<br>
我认为STL和泛型编程标志着非同一般的C++编程风格，而一般C++风格几乎完全是从SmallTalk派生过来的。你同意吗？</p>
<p><strong>Answer</strong>:<br>
Yes. STL is not object oriented. I think that object orientedness is almost as much of a hoax as Artificial Intelligence. I have yet to see an interesting piece of code that comes from these OO people. In a sense, I am unfair to AI: I learned a lot of stuff from the MIT AI Lab crowd, they have done some really fundamental work: Bill Gosper’s Hakmem is one of the best things for a programmer to read. AI might not have had a serious foundation, but it produced Gosper and Stallman (Emacs), Moses (Macsyma) and Sussman (Scheme, together with Guy Steele). I find OOP technically unsound. It attempts to decompose the world in terms of interfaces that vary on a single type. To deal with the real problems you need multisorted algebras – families of interfaces that span multiple types. I find OOP philosophically unsound. It claims that everything is an object. Even if it is true it is not very interesting – saying that everything is an object is saying nothing at all. I find OOP methodologically wrong. It starts with classes. It is as if mathematicians would start with axioms. You do not start with axioms – you start with proofs. Only when you have found a bunch of related proofs, can you come up with axioms. You end with axioms. The same thing is true in programming: you have to start with interesting algorithms. Only when you understand them well, can you come up with an interface that will let them work.</p>
<p><strong>回答：</strong><br>
是的。STL不是面向对象的。我认为面向对象和人工智能差不多，都是个骗局。我至今仍然没有从那些OO编程的人那里看到一丁点有意思的代码。从某种意义上来说，我这么说对人工智能（AI）并不公平：因为我听说过很多MIT（麻省理工大） AI实验室里一帮人搞出来的东西，而且他们的确直正干了一些基础性的工作：Bill Gosper的Hakmem是程序员最好的读物之一。AI或许没有一个实实在在的基础，但它造就了Gosper和Stallman（Emacs）， Moses（Macsyma）和Sussman（Scheme， 和Guy Steele一起）。</p>
<ul>
<li>我发现OOP在技术上是荒谬的，它企图把事物按照不同单个类型的接口来解构，为了处理实际问题，你需要多种代数方法——横跨多种类型的接口族；</li>
<li>我发现OOP在哲学上是荒谬的，它声称一切都是对象。即使这是真的也不是很有趣——因为说一切都是对象跟什么都没说一样；</li>
<li>我发现OOP的方法论是错误的，它从类开始，就好像数学应该从从公理开始一样。其实你不会是从公理开始的，而是从证明开始。直到你找到了一大堆相关证据后你才能归纳出公理，然后以公理结束。在程序设计方面存在着同样的事实：你要从有趣的算法开始。只有很好地理解了算法，你才有可能提炼出接口以让其工作。</li>
</ul>
</blockquote>
<p><span style="color: #ffffff;">&lt;———&gt;</span></p>
<p>下面，我们再来看C++的发明者Bjarne Stroustrup，在1998年IEEE采访时的一段话（<a href="http://www2.research.att.com/~bs/ieee_interview.html" target="_blank">全篇见这里</a>），下面是其中的几段话：（我的翻译如下）</p>
<p><span id="more-3036"></span></p>
<figure style="width: 200px" class="wp-caption alignright"><img alt="image placeholder" >
<blockquote>
<p>So what is OO? Certainly not every good program is object-oriented, and not every object-oriented program is good. If this were so, “object-oriented” would simply be a synonym for “good,” and the concept would be a vacuous buzzword of little help when you need to make practical decisions. I tend to equate OOP with heavy use of class hierarchies and virtual functions (called methods in some languages). This definition is historically accurate because class hierarchies and virtual functions together with their accompanying design philosophy were what distinguished Simula from the other languages of its time. In fact, it is this aspect of Simula’s legacy that Smalltalk has most heavily emphasized.</p>
<p>那么，什么是OO面向对象？当然，不会是所有的程序都是面向对象的，而且，也不是所有的面向对象程序就是好的。如果面向对象是好的，那么“Object-Oriented”应该成为“Good”的同义词，并且，OO概念只会成为一个假大空的口号，在你需要做出实际决定时只可能帮你那么一丁点。我倾向于把OOP等价于大量使用继承类和虚函数（某些语言的调用方法）。从历史上来说，这个定义是精确的，因为，在那个时候，只有类的继承和虚函数一起存在的设计哲学，才能把Simula和其它语言分别开来。事实上，Smalltalk相当地强调着这种Simula的遗留问题。</p>
<p>Defining OO as based on the use of class hierarchies and virtual functions is also practical in that it provides some guidance as to where OO is likely to be successful. You look for concepts that have a hierarchical ordering, for variants of a concept that can share an implementation, and for objects that can be manipulated through a common interface without being of exactly the same type. Given a few examples and a bit of experience, this can be the basis for a very powerful approach to design.</p>
<p>用继承类和虚函数来定义OO在实际上可以让很多OO指导性的东西更能成功一些。在解决问题时，寻找的那些有层级次序的对象，以应对不同对象也可以重用同一个实现，并且对象可以被某个共同的接口来操作而不需要完全相同的类型。在你了解了一些示例和拥有了一些经验后，OO可以成为Design的一个强有力的基础。</p>
<p>However, not every concept naturally and usefully fits into a hierarchy, not every relationship among concepts is hierarchical, and not every problem is best approached with a primary focus on objects. For example, some problems really are primarily algorithmic. Consequently, a general-purpose programming language should support a variety of ways of thinking and a variety of programming styles. This variety results from the diversity of problems to be solved and the many ways of solving them. C++ supports a variety of programming styles and is therefore more appropriately called a multiparadigm, rather than an object-oriented, language (assuming you need a fancy label).</p>
<p>然而，并不是每一个对象都自然地有效地适合继承，并不是每一个对象间的关系都是继承，也并不是每一个问题的最佳解决途径需要主要地通过对象。例如，很多问题主要是算法问题（译注：如业务逻辑，数据流等）。我们知道，一个一般性的编程语言都应该有能力支持不同的思路和不同的编程风格。这样，对于问题的多样性，我们可以使用许许多多不同的的方法去解决他们，这就产生了很多的不同解法。C++支持编程风格的多样性，因此，C++叫做“多范式  multi-paradigm”会更合适一些，而不是一个面向对象语言。</p>
</blockquote>
<p><span style="color: #ffffff;">&lt;———&gt;</span></p>
<p>我个人在看过这些言论后，我先不管“面向对象是不是一个骗局”，不过从某种角度上来看的确是有些问题的，C++、OO、XML、SOA、网格计算等等诸如此类的东西的确被挂上了神圣的光坏。这些东西出来的时候总是只有一种赞美的声音。无论好坏，只有一种声音总是令人恐怖的，无论好坏，有不同的声音总是好的，每当这个社会或是我们的IT界大张旗鼓地鼓吹或是信仰某些东西，却没有任何一点不同意见的时候，我就会感到一种莫名的恐慌。我知道，这是我们从小受到的那种“非黑即白”的价值观教育所致，事物要么全是好的，要么全是不好的。其实任何事物都是有好有不好的，C++，敏捷开发，CMMi，OO，设计模式，重构，等等等等，他们都有好的也有不好的，关键看你怎么来使用（如之前的《<a title="代码重构的一个示例" href="https://coolshell.cn/articles/3005.html" target="_blank">代码重构的一个示例</a>》）。这个世界只有适合不适合的东西，不会出现放之四海皆准的东西，也不可能出现一种可以解决所有问题的东西，如果有，那么这种东西必然是一种宗教性质的用来洗脑的东西。</p>
<p>所以，每当在我身边看到或听到那些只有一种声音有如“电视购物”或是“新闻联播”之类的宣传或是鼓动的时候，我就感到很一种莫名的反感…… 不多说了，还是交给大家来评价吧。我仅以此篇文章献给那些OO-Oriented，Design Pattern-Oriented，Agile-Oriented，Process-Oriented，等等有着宗教信仰一般的人和事。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/8745.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5202.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4535.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12199.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3036" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="979bb099f2">
<img alt="image placeholder" >
<meta itemprop="headline" content="面向对象是个骗局？！">
<meta itemprop="description" content="今天在网上看到网页叫“Object Orientation Isa Hoax”——面向对象是一个骗局，标题很有煽动性（注：该网站上还有一个网页叫Object Orientation Is Dead），好吧，打开看看上面有些 什么，发现这个网页是在收集一些关于“面向对象的反动言论”，没想到的是，很多言论出自很多大师之口。比如：Alexander Stepanov和Bjarne Stroustrup。...">
<meta itemprop="datePublished" content="2010-09-29T08:37:54+08:00">
<meta itemprop="dateModified" content="2010-09-29T14:00:03+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3036.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3036.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.31">
<meta itemprop="ratingCount" content="35">
</div>
</div>
<div id="post-ratings-3036-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-09-29T08:37:54+08:00</pubDate>
<guid>https://coolshell.cn/articles/3036.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 40个很不错的CSS技术 ]]></title>
<link>https://coolshell.cn/articles/3063.html</link>
<content><![CDATA[ 
<p>以前发布过《<a title="30种时尚的CSS网站导航条 " href="https://coolshell.cn/articles/562.html" target="_blank">30种时尚的CSS网站导航条</a>》，下面是40个CSS的技术，可以让你的网页有更好的用户体验。希望你喜欢</p>
<div id="ez-toc-container" class="ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-grey">
<div class="ez-toc-title-container">
<p class="ez-toc-title">目录</p>
<span class="ez-toc-title-toggle"></span>
</div>
<nav><ul class="ez-toc-list ez-toc-list-level-1">
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-1" href="#1_A_CSS_styled_table_version_2" title="1. A CSS styled table version 2">1. A CSS styled table version 2</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-2" href="#2_A_CSS-based_Form_Template" title="2. A CSS-based Form Template">2. A CSS-based Form Template</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-3" href="#3_A_Stripe_of_List_Style_Inspiration" title="3. A Stripe of List Style Inspiration">3. A Stripe of List Style Inspiration</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-4" href="#4_Accessible_expanding_and_collapsing_menu" title="4. Accessible expanding and collapsing menu">4. Accessible expanding and collapsing menu</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-5" href="#5_Advanced_CSS_Menu_Trick" title="5. Advanced CSS Menu Trick">5. Advanced CSS Menu Trick</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-6" href="#6_Animated_Rollover_Arrow" title="6. Animated Rollover Arrow">6. Animated Rollover Arrow</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-7" href="#7_Animations" title="7. Animations">7. Animations</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-8" href="#8_Background_Size" title="8. Background Size">8. Background Size</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-9" href="#9_Better_Ordered_Lists_Using_Simple_PHP_and_CSS" title="9. Better Ordered Lists (Using Simple PHP and CSS)">9. Better Ordered Lists (Using Simple PHP and CSS)</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-10" href="#10_Box_Shadow" title="10. Box Shadow">10. Box Shadow</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-11" href="#11_Creating_a_table_with_dynamically_highlighted_columns" title="11. Creating a table with dynamically highlighted columns">11. Creating a table with dynamically highlighted columns</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-12" href="#12_Creating_bulletproof_graphic_link_buttons_with_CSS_456_Berea_Street" title="12. Creating bulletproof graphic link buttons with CSS | 456 Berea Street">12. Creating bulletproof graphic link buttons with CSS | 456 Berea Street</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-13" href="#13_Creative_and_Cool_Uses_of_the_CSS_Border_Property" title="13. Creative and Cool Uses of the CSS Border Property">13. Creative and Cool Uses of the CSS Border Property</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-14" href="#14_Creative_Use_of_PNG_Transparency_in_Web_Design" title="14. Creative Use of PNG Transparency in Web Design">14. Creative Use of PNG Transparency in Web Design</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-15" href="#15_Cross_Browser_CSS_SlideShow" title="15. Cross Browser CSS SlideShow">15. Cross Browser CSS SlideShow</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-16" href="#16_Cross_Browser_Multi-Page_Photograph_Gallery" title="16. Cross Browser Multi-Page Photograph Gallery">16. Cross Browser Multi-Page Photograph Gallery</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-17" href="#17_CSS_Bar_Graphs_Examples" title="17. CSS Bar Graphs: Examples">17. CSS Bar Graphs: Examples</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-18" href="#18_CSS_Based_Navigation" title="18. CSS Based Navigation">18. CSS Based Navigation</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-19" href="#19_CSS_Curves" title="19. CSS Curves">19. CSS Curves</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-20" href="#20_CSS_Dock_Menu" title="20. CSS Dock Menu">20. CSS Dock Menu</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-21" href="#21_CSS_Double_Lists" title="21. CSS Double Lists">21. CSS Double Lists</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-22" href="#22_CSS-Based_Tables_Technique" title="22. CSS-Based Tables: Technique">22. CSS-Based Tables: Technique</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-23" href="#23_CSS_Gradient_Text_Effect" title="23. CSS Gradient Text Effect">23. CSS Gradient Text Effect</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-24" href="#24_CSS_List_Boxes" title="24. CSS List Boxes">24. CSS List Boxes</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-25" href="#25_CSS_Map_Pop" title="25. CSS Map Pop">25. CSS Map Pop</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-26" href="#26_CSS_Pricing_Matrix" title="26. CSS Pricing Matrix">26. CSS Pricing Matrix</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-27" href="#27_CSS_Production_Notes" title="27. CSS Production Notes">27. CSS Production Notes</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-28" href="#28_CSS_Pull_Quotes" title="28. CSS Pull Quotes">28. CSS Pull Quotes</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-29" href="#29_CSS_Rounded_Corners_Roundup_Nifty_Corners" title="29. CSS Rounded Corners Roundup (Nifty Corners)">29. CSS Rounded Corners Roundup (Nifty Corners)</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-30" href="#30_CSS_SiteMap" title="30. CSS SiteMap">30. CSS SiteMap</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-31" href="#31_CSS_Speech_Bubbles" title="31. CSS Speech Bubbles">31. CSS Speech Bubbles</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-32" href="#32_CSS_Stacked_Bar_Graphs" title="32. CSS Stacked Bar Graphs">32. CSS Stacked Bar Graphs</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-33" href="#33_CSS_Step_Menu" title="33. CSS Step Menu">33. CSS Step Menu</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-34" href="#34_CSS_Tabs" title="34. CSS Tabs">34. CSS Tabs</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-35" href="#35_CSS_Teaser_Box" title="35. CSS Teaser Box">35. CSS Teaser Box</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-36" href="#36_CSS_Zooming" title="36. CSS Zooming">36. CSS Zooming</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-37" href="#37_CSS_Menu_Descriptions" title="37. CSS: Menu Descriptions">37. CSS: Menu Descriptions</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-38" href="#38_CSS-Based_Forms_Techniques" title="38. CSS-Based Forms: Techniques">38. CSS-Based Forms: Techniques</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-39" href="#39_Date_Display_Technique_with_Sprites" title="39. Date Display Technique with Sprites">39. Date Display Technique with Sprites</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-40" href="#40_Displaying_Percentages_with_CSS" title="40. Displaying Percentages with CSS">40. Displaying Percentages with CSS</a></li>
</ul></nav>
</div>
<h4>
<span class="ez-toc-section" id="1_A_CSS_styled_table_version_2"></span>1. <a href="http://veerle.duoh.com/blog/comments/a_css_styled_table_version_2/">A CSS styled table version 2</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://veerle.duoh.com/blog/comments/a_css_styled_table_version_2/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="2_A_CSS-based_Form_Template"></span>2.<a href="http://nidahas.com/2006/12/06/forms-markup-and-css-revisited/"> A CSS-based Form Template</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://nidahas.com/2006/12/06/forms-markup-and-css-revisited/"><img alt="image placeholder" >
<p><span id="more-3063"></span></p>
<h4>
<span class="ez-toc-section" id="3_A_Stripe_of_List_Style_Inspiration"></span>3. <a href="http://www.wpdfd.com/issues/82/list_style_inspiration/">A Stripe of List Style Inspiration</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.wpdfd.com/issues/82/list_style_inspiration/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="4_Accessible_expanding_and_collapsing_menu"></span>4. <a href="http://www.456bereastreet.com/archive/200705/accessible_expanding_and_collapsing_menu/">Accessible expanding and collapsing menu</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.456bereastreet.com/archive/200705/accessible_expanding_and_collapsing_menu/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="5_Advanced_CSS_Menu_Trick"></span>5. <a href="http://www.3point7designs.com/blog/2007/12/22/advanced-css-menu-trick/">Advanced CSS Menu Trick</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.3point7designs.com/blog/2007/12/22/advanced-css-menu-trick/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="6_Animated_Rollover_Arrow"></span>6. <a href="http://www.pmob.co.uk/pob/animated.htm">Animated Rollover Arrow</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.pmob.co.uk/pob/animated.htm"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="7_Animations"></span>7. <a href="https://i.imgur.com/dYFBl.png">Animations</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="https://i.imgur.com/dYFBl.png"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="8_Background_Size"></span>8. <a href="https://i.imgur.com/OcbHO.png">Background Size</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="https://i.imgur.com/OcbHO.png"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="9_Better_Ordered_Lists_Using_Simple_PHP_and_CSS"></span>9. <a href="https://css-tricks.com/better-ordered-lists-using-simple-php-and-css/">Better Ordered Lists</a> (Using Simple PHP and CSS)<span class="ez-toc-section-end"></span>
</h4>
<p><a href="https://css-tricks.com/better-ordered-lists-using-simple-php-and-css/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="10_Box_Shadow"></span>10. <a href="https://i.imgur.com/e5VlA.png">Box Shadow</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="https://i.imgur.com/e5VlA.png"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="11_Creating_a_table_with_dynamically_highlighted_columns"></span>11. <a href="http://www.askthecssguy.com/2007/08/creating_a_table_with_dynamica.html">Creating a table with dynamically highlighted columns</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.askthecssguy.com/2007/08/creating_a_table_with_dynamica.html"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="12_Creating_bulletproof_graphic_link_buttons_with_CSS_456_Berea_Street"></span>12. <a href="http://www.456bereastreet.com/archive/200705/creating_bulletproof_graphic_link_buttons_with_css/">Creating bulletproof graphic link buttons with CSS | 456 Berea Street</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.456bereastreet.com/archive/200705/creating_bulletproof_graphic_link_buttons_with_css/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="13_Creative_and_Cool_Uses_of_the_CSS_Border_Property"></span>13. <a href="http://www.cssnewbie.com/12-creative-and-cool-uses-for-the-css-border-property/">Creative and Cool Uses of the CSS Border Property</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.cssnewbie.com/12-creative-and-cool-uses-for-the-css-border-property/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="14_Creative_Use_of_PNG_Transparency_in_Web_Design"></span>14. <a href="http://www.digital-web.com/articles/web_standards_creativity_png/">Creative Use of PNG Transparency in Web Design</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.digital-web.com/articles/web_standards_creativity_png/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="15_Cross_Browser_CSS_SlideShow"></span>15. <a href="http://www.cssplay.co.uk/menu/slide_show">Cross Browser CSS SlideShow</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.cssplay.co.uk/menu/slide_show"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="16_Cross_Browser_Multi-Page_Photograph_Gallery"></span>16. <a href="http://www.cssplay.co.uk/menu/lightbox.html#Portraits">Cross Browser Multi-Page Photograph Gallery</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.cssplay.co.uk/menu/lightbox.html#Portraits"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="17_CSS_Bar_Graphs_Examples"></span>17. <a href="http://applestooranges.com/blog/post/css-for-bar-graphs/?id=55">CSS Bar Graphs: Examples</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://applestooranges.com/blog/post/css-for-bar-graphs/?id=55"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="18_CSS_Based_Navigation"></span>18. <a href="http://www.nundroo.com/navigation/">CSS Based Navigation</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.nundroo.com/navigation/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="19_CSS_Curves"></span>19. <a href="http://storage.couchfort.net/cssCurves/">CSS Curves</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://storage.couchfort.net/cssCurves/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="20_CSS_Dock_Menu"></span>20. <a href="http://www.ndesign-studio.com/blog/mac/css-dock-menu">CSS Dock Menu</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.ndesign-studio.com/blog/mac/css-dock-menu"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="21_CSS_Double_Lists"></span>21. <a href="http://mikecherim.com/experiments/css_double_lists.php">CSS Double Lists</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://mikecherim.com/experiments/css_double_lists.php"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="22_CSS-Based_Tables_Technique"></span>22. <a href="http://www.smashingmagazine.com/2006/12/29/css-based-tables-modern-solutions/">CSS-Based Tables: Technique</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.smashingmagazine.com/2006/12/29/css-based-tables-modern-solutions/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="23_CSS_Gradient_Text_Effect"></span>23. <a href="http://www.webdesignerwall.com/tutorials/css-gradient-text-effect/">CSS Gradient Text Effect</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.webdesignerwall.com/tutorials/css-gradient-text-effect/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="24_CSS_List_Boxes"></span>24. <a href="http://mikecherim.com/gbcms_xml/news_page.php?id=24#n24">CSS List Boxes</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://mikecherim.com/gbcms_xml/news_page.php?id=24#n24"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="25_CSS_Map_Pop"></span>25. <a href="http://mikecherim.com/experiments/css_map_pop.php">CSS Map Pop</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://mikecherim.com/experiments/css_map_pop.php"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="26_CSS_Pricing_Matrix"></span>26. <a href="http://www.askthecssguy.com/2007/09/sangeeta_asks_the_css_guy_how_1.html">CSS Pricing Matrix</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.askthecssguy.com/2007/09/sangeeta_asks_the_css_guy_how_1.html"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="27_CSS_Production_Notes"></span>27. <a href="https://24ways.org/2006/css-production-notes">CSS Production Notes</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="https://24ways.org/2006/css-production-notes"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="28_CSS_Pull_Quotes"></span>28. <a href="http://www.designmeme.com/articles/csspullquotes/">CSS Pull Quotes</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.designmeme.com/articles/csspullquotes/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="29_CSS_Rounded_Corners_Roundup_Nifty_Corners"></span>29. <a href="http://www.smileycat.com/miaow/archives/000044.php#nojavascript">CSS Rounded Corners Roundup</a> (Nifty Corners)<span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.smileycat.com/miaow/archives/000044.php#nojavascript"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="30_CSS_SiteMap"></span>30. <a href="http://wordpress.betech.virginia.edu/index.php/2007/10/03/css-sitemap/">CSS SiteMap</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://wordpress.betech.virginia.edu/index.php/2007/10/03/css-sitemap/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="31_CSS_Speech_Bubbles"></span>31. <a href="http://www.willmayo.com/2007/02/10/css-speech-bubbles/">CSS Speech Bubbles</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.willmayo.com/2007/02/10/css-speech-bubbles/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="32_CSS_Stacked_Bar_Graphs"></span>32. <a href="http://www.thewojogroup.com/2008/12/css-stacked-bar-graphs/">CSS Stacked Bar Graphs</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.thewojogroup.com/2008/12/css-stacked-bar-graphs/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="33_CSS_Step_Menu"></span>33. <a href="http://codylindley.com/CSS/325/css-step-menu">CSS Step Menu</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://codylindley.com/CSS/325/css-step-menu"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="34_CSS_Tabs"></span>34. <a href="http://exploding-boy.com/images/cssmenus/menus.html">CSS Tabs</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://exploding-boy.com/images/cssmenus/menus.html"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="35_CSS_Teaser_Box"></span>35. <a href="http://www.456bereastreet.com/lab/teaser/">CSS Teaser Box</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.456bereastreet.com/lab/teaser/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="36_CSS_Zooming"></span>36. <a href="http://www.deltatangobravo.com/images/zoom/">CSS Zooming</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.deltatangobravo.com/images/zoom/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="37_CSS_Menu_Descriptions"></span>37. <a href="http://mikecherim.com/experiments/css_menu_descriptions.php#">CSS: Menu Descriptions</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://mikecherim.com/experiments/css_menu_descriptions.php#"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="38_CSS-Based_Forms_Techniques"></span>38. <a href="http://www.smashingmagazine.com/2006/11/11/css-based-forms-modern-solutions/">CSS-Based Forms: Techniques</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.smashingmagazine.com/2006/11/11/css-based-forms-modern-solutions/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="39_Date_Display_Technique_with_Sprites"></span>39. <a href="https://css-tricks.com/date-display-with-sprites/">Date Display Technique with Sprites</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="https://css-tricks.com/date-display-with-sprites/"><img alt="image placeholder" >
<h4>
<span class="ez-toc-section" id="40_Displaying_Percentages_with_CSS"></span>40. <a href="http://www.barenakedapp.com/the-design/displaying-percentages">Displaying Percentages with CSS</a><span class="ez-toc-section-end"></span>
</h4>
<p><a href="http://www.barenakedapp.com/the-design/displaying-percentages"><img alt="image placeholder" >
<p>文章来源：<a href="http://technologytosoftware.com/best-css-techniques-you-shouldt-miss-for-effective-coding.html" target="_blank">http://technologytosoftware.com/best-css-techniques-you-shouldt-miss-for-effective-coding.html</a></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9666.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6840.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3903.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3013.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3063" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="39b8ce95c2">
<img alt="image placeholder" >
<meta itemprop="headline" content="40个很不错的CSS技术">
<meta itemprop="description" content="以前发布过《30种时尚的CSS网站导航条》，下面是40个CSS的技术，可以让你的网页有更好的用户体验。希望你喜欢
1. A CSS styled table version 2

2. A CSS-based Form Template



3. A Stripe of List Style Inspiration

4. Accessible expanding and co...">
<meta itemprop="datePublished" content="2010-10-08T08:04:46+08:00">
<meta itemprop="dateModified" content="2010-09-29T14:12:36+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3063.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3063.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.29">
<meta itemprop="ratingCount" content="7">
</div>
</div>
<div id="post-ratings-3063-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-08T08:04:46+08:00</pubDate>
<guid>https://coolshell.cn/articles/3063.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Kick Ass小游戏 ]]></title>
<link>https://coolshell.cn/articles/3070.html</link>
<content><![CDATA[ 
<p>还记得以前那个在IE的已打开的网页上的网址里输入一段javascript的代码后，你会发现这个页面里所有的图片元素都动了起来：（只能在IE浏览器里，Chrome和Firefox无效）</p>
<blockquote><p>javascript:R=0; x1=.1; y1=.05; x2=.25; y2=.24; x3=1.6; y3=.24; x4=300; y4=200; x5=300; y5=200; DI=document.images; DIL=DI.length; function A(){for(i=0; i-DIL; i++){DIS=DI[ i ].style; DIS.position=’absolute’; DIS.left=Math.sin(R*x1+i*x2+x3)*x4+x5; DIS.top=Math.cos(R*y1+i*y2+y3)*y4+y5}R++}setInterval(‘A()’,5); void(0);</p></blockquote>
<p>很类似一个叫Erik Rothoff Andersson的人又搞了<a href="https://erkie.github.com/" target="_blank">Kick Ass的游戏</a>，代码如下：（用了一个js文件，所以就显得没有那么复杂了，但只能在Chrome和Firefox下有用）</p>
<blockquote><p>javascript:var s=document.createElement(‘script’); s.type=’text/javascript’;document.body.appendChild(s); s.src=’http://erkie.github.com/asteroids.min.js’;void(0);</p></blockquote>
<p>在已打开的网页上输入这段代码，你会发现网页的左上角上出现了一个三角形，然后，你可以开始使用</p>
<ul>
<li>“左右方向键控制方向”，</li>
<li>“上方向键控制前进”，</li>
<li>“空格射击”，</li>
<li>“B键查看有什么东西可以被射击”，</li>
<li>“Esc键退出”，</li>
</ul>
<p>于是就出现好玩的东西了。</p>
<p>为了方便你试验，你可以点击上面的这个链接，</p>
<p style="text-align: center;"><span style="font-size: large;"><a href="javascript:var%20s%20=%20document.createElement('script');s.type='text/javascript';document.body.appendChild(s);s.src='http://erkie.github.com/asteroids.min.js';void(0);"><strong>Kiss Ass</strong></a></span></p>
<p>你可以把这个链接加入收藏夹，当你需要删除某些网页上的广告或是很让你不爽的东西时，打开这个网址，就可以开始了。</p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17524.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10822.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10739.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10337.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3070" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="4fc1ecf719">
<img alt="image placeholder" >
<meta itemprop="headline" content="Kick Ass小游戏">
<meta itemprop="description" content="还记得以前那个在IE的已打开的网页上的网址里输入一段javascript的代码后，你会发现这个页面里所有的图片元素都动了起来：（只能在IE浏览器里，Chrome和Firefox无效）
javascript:R=0; x1=.1; y1=.05; x2=.25; y2=.24; x3=1.6; y3=.24; x4=300; y4=200; x5=300; y5=200; DI=document....">
<meta itemprop="datePublished" content="2010-10-08T14:06:08+08:00">
<meta itemprop="dateModified" content="2010-10-06T19:07:50+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3070.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3070.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.19">
<meta itemprop="ratingCount" content="16">
</div>
</div>
<div id="post-ratings-3070-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-08T14:06:08+08:00</pubDate>
<guid>https://coolshell.cn/articles/3070.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 三个教程 ]]></title>
<link>https://coolshell.cn/articles/3083.html</link>
<content><![CDATA[ 
<p>第一个是关于vim的，相当的全面。</p>
<p><a href="http://stevelosh.com/blog/2010/09/coming-home-to-vim/" target="_blank">http://stevelosh.com/blog/2010/09/coming-home-to-vim/</a></p>
<p>第二个是Mozilla的Javascript教程</p>
<p><a href="https://developer.mozilla.org/en/JavaScript/Guide" target="_blank">https://developer.mozilla.org/en/JavaScript/Guide</a></p>
<p>第三个是Kernighan 和Ritchie 的 “The C Programming Language”第二版的问答和练习。</p>
<p><a href="http://users.powernet.co.uk/eton/kandr2/" target="_blank">http://users.powernet.co.uk/eton/kandr2/</a></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10739.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10337.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10169.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7166.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5202.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3083" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="7646b070d6">
<img alt="image placeholder" >
<meta itemprop="headline" content="三个教程">
<meta itemprop="description" content='第一个是关于vim的，相当的全面。

http://stevelosh.com/blog/2010/09/coming-home-to-vim/

第二个是Mozilla的Javascript教程

https://developer.mozilla.org/en/JavaScript/Guide

第三个是Kernighan 和Ritchie 的 "The C Programmi...'>
<meta itemprop="datePublished" content="2010-10-09T14:06:21+08:00">
<meta itemprop="dateModified" content="2010-10-09T14:06:21+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3083.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3083.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.71">
<meta itemprop="ratingCount" content="7">
</div>
</div>
<div id="post-ratings-3083-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-09T14:06:21+08:00</pubDate>
<guid>https://coolshell.cn/articles/3083.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Google未公开API：转MAC地址为经纬度 ]]></title>
<link>https://coolshell.cn/articles/3089.html</link>
<content><![CDATA[ 
<p>这里有一个POC（Proof of Concept）可以通过你Web浏览器后面的路由器XSS攻击得到一个准确的GPS坐标。注意：路由器和Web浏览器以及IP地址并不包含任和地理信息。其方法是使用了一个Google未公开的API。大约方法如下：</p>
<ol>
<li>访问一个网页，这个网页隐藏了一个基于你WiFi路由器的XSS（ 参见： <a href="http://samy.pl/vzwfios/" target="_blank">XSS  Verizon FiOS router</a>）</li>
<li>通过这个XSS 可以获得路由器的MAC 地址。</li>
<li>然后通过 Google Location Services我们可以把这个MAC地址映射到GPS坐标。Googel的这个服务是基于HTTP的服务。这并不是一个Google正式发布的API，而是通过 <a href="https://www.mozilla.com/en-US/firefox/geolocation/" target="_blank">Firefox’s Location-Aware Browsing</a> 发现的。</li>
</ol>
<p>演示地点在这里：<a href="http://samy.pl/mapxss/" target="_blank">http://samy.pl/mapxss/</a></p>
<p>我试了一下，无论无线和有线都可以准确定位我的位置。很强大，你也试试看。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12136.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9508.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8711.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5815.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5701.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3089" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="0964a0e815">
<img alt="image placeholder" >
<meta itemprop="headline" content="Google未公开API：转MAC地址为经纬度">
<meta itemprop="description" content="这里有一个POC（Proof of Concept）可以通过你Web浏览器后面的路由器XSS攻击得到一个准确的GPS坐标。注意：路由器和Web浏览器以及IP地址并不包含任和地理信息。其方法是使用了一个Google未公开的API。大约方法如下：

	访问一个网页，这个网页隐藏了一个基于你WiFi路由器的XSS（ 参见： XSS  Verizon FiOS router）
	通过这个XSS 可以...">
<meta itemprop="datePublished" content="2010-10-09T15:28:13+08:00">
<meta itemprop="dateModified" content="2010-10-10T17:14:29+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3089.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3089.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.67">
<meta itemprop="ratingCount" content="6">
</div>
</div>
<div id="post-ratings-3089-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-09T15:28:13+08:00</pubDate>
<guid>https://coolshell.cn/articles/3089.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Windows的达尔文进化图 ]]></title>
<link>https://coolshell.cn/articles/3097.html</link>
<content><![CDATA[ 
<p>之前发布过《<a rel="bookmark" href="https://coolshell.cn/articles/105.html" target="_blank">操作系统图形界面发展史(1981-2009)</a>》，今天在网上看到一张自于<a href="http://testking.com/">Testking.com</a>的关于Windows的进化图，其从1985年的windows 1.0到2009年的windows 7的。挺有意思的。点击可以看大图。</p>
<p style="text-align: center;"><a href="http://www.testking.com/techking/infographics/the-darwinian-evolution-of-windows-infographic/"><img alt="image placeholder" >
<p>图片来源: <a href="http://www.testking.com/techking/infographics/the-darwinian-evolution-of-windows-infographic/" target="_blank">The Darwinian Evolution of Windows</a> by <a href="http://www.testking.com/techking/" target="_blank">Tech King</a></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/105.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7490.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5107.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4220.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4102.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4077.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3097" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="5d3ddaeaa0">
<img alt="image placeholder" >
<meta itemprop="headline" content="Windows的达尔文进化图">
<meta itemprop="description" content="之前发布过《操作系统图形界面发展史(1981-2009)》，今天在网上看到一张自于Testking.com的关于Windows的进化图，其从1985年的windows 1.0到2009年的windows 7的。挺有意思的。点击可以看大图。

图片来源: The Darwinian Evolution of Windows by Tech King">
<meta itemprop="datePublished" content="2010-10-11T08:56:40+08:00">
<meta itemprop="dateModified" content="2010-10-10T10:18:02+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3097.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3097.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3">
<meta itemprop="ratingCount" content="10">
</div>
</div>
<div id="post-ratings-3097-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-11T08:56:40+08:00</pubDate>
<guid>https://coolshell.cn/articles/3097.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 编程语言进化 ]]></title>
<link>https://coolshell.cn/articles/3100.html</link>
<content><![CDATA[ 
<p style="text-align: left;">以前本站发布过《<a rel="bookmark" href="https://coolshell.cn/articles/1863.html" target="_blank">编程语言时间地理图</a>》、《<a rel="bookmark" href="https://coolshell.cn/articles/2724.html" target="_blank">计算机编程简史图</a>》，下面是两张关于编程语言的进化图。</p>
<p style="text-align: left;">第一张是比较宏观的，<a href="http://techdistrict.kirkk.com/2009/06/17/the-new-era-of-programming-languages/" target="_blank">来源在这里</a>，虽然是去年的，但还是比较不错的，其把计算机编程语言分成了五个时代——</p>
<p style="text-align: center;"><a href="https://coolshell.cn/wp-content/uploads/2010/10/language-evolution.jpg"><img alt="image placeholder" >
<ul>
<li>
<strong>语言诞生</strong>。1940年代。第一个语言应该是：<a href="https://en.wikipedia.org/wiki/Ada_Lovelace" target="_blank">Ada Lovelace</a>,</li>
<li>
<strong>编译器时代</strong>。1950年代。这个时代的代表语言是：Fortran, LISP, 和 COBOL，编程语言开始引入编译器优化技术。</li>
<li>
<strong>模式时代</strong>。1960年代-1970年代。这个时代是编程语言最重大的变革。在这个时代，所有人都在思考如何让设计一个好的编程语言以让编程更简单。面向对象也因为Simula而出现，而Smalltalk成了第一个纯动态类型的语言，C/C++、Pascal和SQL也是这个时代出现的，而第一个功能性/函数式语言ML也是这个时代出现的。所以说，这个时代是一个百花齐放的时代。而1980年代并没有太多的创新的东西，而只是对70年代出现的那些语言优化和发展的时期，如：1979年发明的C++语言。</li>
<li>
<strong>生产力时代</strong>。1990年代以来主要是如何增进编程生产率的时代，这个时代出现了很多framework，代码库，以及快速开发的IDE，很多公司都在这个时期致力于这些增进生率的工作，如：delphi, power builder, MFC，boost等等。但最重要的还是因为引入了虚拟机——WORA（Write Once, Run Anywhere），JVM 是这方面的代表作。之后的.NET整出来的那些东西都是。今天的JPython, JRuby等都是为整合开发效率和维护效率。参看《<a rel="bookmark" href="https://coolshell.cn/articles/247.html">基于JVM的语言正在开始流行</a>》</li>
<li>
<strong>后现代</strong>。未来的编程语言要走向何方，我不太清楚，不过，大家可以看看本站的这几篇文章：《<a rel="bookmark" href="https://coolshell.cn/articles/2598.html">五个编程语言设计的失误</a>》、《<a href="https://coolshell.cn/articles/209.html" target="_blank">C++和JAVA传统中积极的一面</a>》</li>
</ul>
<p style="text-align: center;">
</p>
<p style="text-align: left;">下面是一张大图，让你看看整个编程语言的进代图。（点击看大图）</p>
<p style="text-align: left;"><span id="more-3100"></span></p>
<p style="text-align: center;"><a href="https://coolshell.cn/wp-content/uploads/2010/10/EvolutionOfComputerlanguages.png"><img alt="image placeholder" >
<p style="text-align: left;"><a href="https://coolshell.cn/wp-content/uploads/2010/10/language-evolution.jpg">（</a>全文完）</p>
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/6639.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4626.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3385.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2724.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2598.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2539.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3100" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="f7336bd0ec">
<img alt="image placeholder" >
<meta itemprop="headline" content="编程语言进化">
<meta itemprop="description" content="以前本站发布过《编程语言时间地理图》、《计算机编程简史图》，下面是两张关于编程语言的进化图。
第一张是比较宏观的，来源在这里，虽然是去年的，但还是比较不错的，其把计算机编程语言分成了五个时代——



	语言诞生。1940年代。第一个语言应该是：Ada Lovelace,
	编译器时代。1950年代。这个时代的代表语言是：Fortran, LISP, 和 COBOL，编程语言开始引入编...">
<meta itemprop="datePublished" content="2010-10-11T09:18:27+08:00">
<meta itemprop="dateModified" content="2010-10-11T13:58:13+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3100.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3100.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.88">
<meta itemprop="ratingCount" content="8">
</div>
</div>
<div id="post-ratings-3100-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-11T09:18:27+08:00</pubDate>
<guid>https://coolshell.cn/articles/3100.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Javascript向量图Lib–Raphaël ]]></title>
<link>https://coolshell.cn/articles/3107.html</link>
<content><![CDATA[ 
<p>我们知道很多的Javascript的lib库了，比如：jQuery，YUI，Ext JS等等。今天看到一个很牛X的lib叫<a href="http://raphaeljs.com/index.html" target="_blank">Raphaël </a>[ˈrafēəl]，这是一个很小的JavaScript library，可以让在你的Web上整一些向量图，并且可以完成一些动画和图形变化，很强大。</p>
<p><a href="http://raphaeljs.com/index.html" target="_blank">Raphaël</a>使用的是  <abbr title="World Wide Web Consortium">W3C</abbr> 推荐的 SVG和<abbr title="Vector Markup Language">VML</abbr> 来创建图片。这意味着所创建的图形对象一样可以是一个DOM对象，可以被你的Javascript的事件来操作。<a href="http://raphaeljs.com/index.html" target="_blank">Raphaël</a> 支持所有的主流浏览器：Firefox 3.0+, Safari 3.0+, Chrome 5.0+, Opera 9.5+ d 和 Internet Explorer 6.0+，最强大的是，这个js文件被压缩后也就60K。</p>
<p>下面，让我们来看几个示例：</p>
<p>下面是一个图形变化的示例，点击两个图形间的箭头。</p>
<p align="center"><iframe loading="lazy" frameborder="0" style="background:#000;border:0" width="660" height="420" src="https://raphaeljs.com/animation.html"></iframe></p>
<p><span id="more-3107"></span></p>
<p>下面是一个流程图，你用鼠标拖动一下其中的图形：</p>
<p align="center"><iframe loading="lazy" frameborder="0" style="background:#000;border:0" width="660" height="400" src="https://raphaeljs.com/graffle.html"></iframe></p>
<p>下面是一个时钟：</p>
<p align="center"><iframe loading="lazy" frameborder="0" style="background:#000;border:0" width="660" height="550" src="https://raphaeljs.com/polar-clock.html"></iframe></p>
<p>下面是一个3D迷宫（用方向键移动，空格键跳动，注意左上角的地图）：</p>
<p align="center"><iframe loading="lazy" frameborder="0" style="background:#000;border:0" width="660" height="500" src="https://raphaeljs.com/scape/"></iframe></p>
<p>更多的示例请到其网站上看看吧：<a href="http://raphaeljs.com/index.html" target="_blank">http://raphaeljs.com/index.html</a></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17524.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10822.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10739.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10337.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3107" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="4b415ca9e1">
<img alt="image placeholder" >
<meta itemprop="headline" content="Javascript向量图Lib–Raphaël">
<meta itemprop="description" content="我们知道很多的Javascript的lib库了，比如：jQuery，YUI，Ext JS等等。今天看到一个很牛X的lib叫Raphaël [ˈrafēəl]，这是一个很小的JavaScript library，可以让在你的Web上整一些向量图，并且可以完成一些动画和图形变化，很强大。

Raphaël使用的是  W3C 推荐的 SVG和VML 来创建图片。这意味着所创建的图形对象一样可以是一个...">
<meta itemprop="datePublished" content="2010-10-12T08:21:37+08:00">
<meta itemprop="dateModified" content="2010-10-10T15:24:35+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3107.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3107.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.25">
<meta itemprop="ratingCount" content="12">
</div>
</div>
<div id="post-ratings-3107-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-12T08:21:37+08:00</pubDate>
<guid>https://coolshell.cn/articles/3107.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 主流文本编辑器学习曲线 ]]></title>
<link>https://coolshell.cn/articles/3125.html</link>
<content><![CDATA[ 
<p>下图是几个经典的文本编辑器的学习曲线，不排除其中有调侃和幽默的味道。</p>
<figure id="attachment_3126" aria-describedby="caption-attachment-3126" style="width: 600px" class="wp-caption aligncenter"><img alt="image placeholder" >
<p><strong>注1</strong>：<strong>Pico</strong>(<strong>PI</strong>ne <strong>CO</strong>mposer)是Unix操作系统中最常见的三种文字处理软件之一，具有文字编辑、搜索、拼写检查、文件浏览和段对齐功能，适合高效地编辑短小的文件。Pico是由华盛顿大学开发的免费软件，随着<a title="Pine（尚未撰写）" href="https://www.washington.edu/pine/" target="_blank">pine</a>电子邮件处理软件发布。它是在Emacs的基础上以pine的邮件编辑为目标而开发的，所以其指令集是Emacs的子集，但是由于在界面上有提示快捷键，相对于vi和Emacs来说更加容易使用。由于Pico虽然是免费软件，但是它并不是开源软件，所以很多Linux版本并不包含Pico。这些版本通常提供一个界面类似的开源软件<a title="Nano" href="http://www.nano-editor.org/" target="_blank">nano</a>——Pico的克隆版。</p>
<p><strong>注2</strong>：图中的纵横坐标没有标明。我所理解的是——X轴是熟练程度，Y轴是技能。于是对于notepad 来说，技能和熟练程度呈正比。对于VS来说，熟练程度越大，所需要技能先是越来越多，而随着熟练程度的增长，你需要的技能也越少。而对于VI来说，一开始就需要相当大的技能，但一旦掌握这些技能，则你将会越来越熟练。而对于emacs来说，技能和熟练程度是呈旋涡状。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/7166.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3083.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3013.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/894.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11312.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8883.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3125" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="e8707307c6">
<img alt="image placeholder" >
<meta itemprop="headline" content="主流文本编辑器学习曲线">
<meta itemprop="description" content="下图是几个经典的文本编辑器的学习曲线，不排除其中有调侃和幽默的味道。



注1：Pico(PIne COmposer)是Unix操作系统中最常见的三种文字处理软件之一，具有文字编辑、搜索、拼写检查、文件浏览和段对齐功能，适合高效地编辑短小的文件。Pico是由华盛顿大学开发的免费软件，随着pine电子邮件处理软件发布。它是在Emacs的基础上以pine的邮件编辑为目标而开发的，所以其指令集...">
<meta itemprop="datePublished" content="2010-10-12T08:55:42+08:00">
<meta itemprop="dateModified" content="2010-10-12T13:56:55+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3125.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3125.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.2">
<meta itemprop="ratingCount" content="25">
</div>
</div>
<div id="post-ratings-3125-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-12T08:55:42+08:00</pubDate>
<guid>https://coolshell.cn/articles/3125.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Go语言的”Issue 9″ Closed! ]]></title>
<link>https://coolshell.cn/articles/3156.html</link>
<content><![CDATA[ 
<p>还记得Google发布Go语言没几天就要 <a href="https://coolshell.cn/articles/1781.html" target="_blank"><strong>更名Issue 9</strong></a> 的那个事吗？那是2009年11月的事了，差不多一年了，今天Google的Go语言团队终于正式回复这个bug了。</p>
<blockquote>
<p>Comment <a name="c1097" href="https://code.google.com/p/go/issues/detail?id=9#c1097" target="_blank">1097</a> by project member <a href="https://code.google.com/u/rsc@golang.org/"><span class="__cf_email__" data-cfemail="87f5f4e4c7e0e8ebe6e9e0a9e8f5e0">[email protected]</span></a>, Today (11 hours ago)</p>
<p>The naming similarity is unfortunate. However, there are many computing<br>
products and services named Go. In the 11 months since our release, there<br>
has been minimal confusion of the two languages, so we are closing this<br>
issue.</p>
</blockquote>
<blockquote><p>“名命类似是很不幸的。然而，那有很多的计算机产品和服务都叫Go。自从我们发布Go语言的这11个月里，这两个语言只有极少的混乱，所以，我们决定关闭这个问题。”</p></blockquote>
<p>目前，该bug的状态为Unfortunate，这个状态很有创造性啊，在我的这么多年软件开发过程中，我还没有在任何的bug管理系统中见过这种状态，嗯，要不我也给我们公司的Defect Tracking System加上一个这种状态？</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/1781.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1761.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1751.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/21615.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/21263.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/21228.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3156" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="67b5cf5ae7">
<img alt="image placeholder" >
<meta itemprop="headline" content="Go语言的”Issue 9″ Closed!">
<meta itemprop="description" content="还记得Google发布Go语言没几天就要 更名Issue 9 的那个事吗？那是2009年11月的事了，差不多一年了，今天Google的Go语言团队终于正式回复这个bug了。
Comment 1097 by project member rsc@golang.org, Today (11 hours ago)

The naming similarity is unfortunate. How...">
<meta itemprop="datePublished" content="2010-10-12T15:34:02+08:00">
<meta itemprop="dateModified" content="2010-10-12T15:34:02+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3156.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3156.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3">
<meta itemprop="ratingCount" content="4">
</div>
</div>
<div id="post-ratings-3156-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-12T15:34:02+08:00</pubDate>
<guid>https://coolshell.cn/articles/3156.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ chmod -x chmod的N种解法 ]]></title>
<link>https://coolshell.cn/articles/3136.html</link>
<content><![CDATA[ 
<p>在SlidesShare.net上有这么<a href="http://www.slideshare.net/cog/chmod-x-chmod" target="_blank">一个幻灯片</a>，其说了如下的一个面试题：</p>
<blockquote><p>如果某天你的Unix/Linux系统上的chomd命令被某人去掉了x属性（执行属性），<br>
那么，你如何恢复呢？</p></blockquote>
<p>下面是一些答案：</p>
<p><strong>1）重新安装</strong>。对于Debian的系统：</p>
<p><code data-enlighter-language="shell" class="EnlighterJSRAW">sudo apt-get install --reinstall coreutils</code></p>
<p><strong>2）使用语言级的chmod</strong>。</p>
<ul>
<li>Perl：perl-e ‘chmod 0755, “/bin/chmod”‘</li>
<li>Python：python -c “import os;os.chmod(‘/bin/chmod’, 0755)”</li>
<li>Node.js：require(“fs”).chmodSync(“/bin/chmod”, 0755);</li>
<li>C程序：</li>
</ul>
<p></p>
<pre data-enlighter-language="c" class="EnlighterJSRAW">#include &lt;sys/types.h&gt;
#include&lt;sys/stat.h&gt;
void main()
{
chmod("/bin/chmod", 0000755);
}</pre>
<br>
<span id="more-3136"></span>
<p><strong>3）使用已有的可执行文件。</strong></p>
<p></p>
<pre data-enlighter-language="shell" class="EnlighterJSRAW">$cat - &gt; chmod.c
void main(){}
^D

$cc chmod.c
$cat /bin/chmod &gt; a.out
$./a.out 0755 /bin/chmod
</pre>
<p></p>
<pre data-enlighter-language="shell" class="EnlighterJSRAW">$cp true &gt; new_chmod
$cat /bin/chmod &gt; new_chmod
$./new_chmod 0755 /bin/chmod
</pre>
<p><strong>4）使用GNU tar命令</strong></p>
<p></p>
<pre data-enlighter-language="shell" class="EnlighterJSRAW">$tar --mode 0755 -cf chmod.tar /bin/chmod
$tar xvf chmod.tar</pre>
<p><code data-enlighter-language="shell" class="EnlighterJSRAW">tar --mode 755 -cvf - chmod | tar -xvf -</code></p>
<p><strong>5）使用cpio</strong> （第19到24字节为file mode – <a href="http://4bxf.sl.pt" target="_blank">http://4bxf.sl.pt</a>）</p>
<p></p>
<pre data-enlighter-language="shell" class="EnlighterJSRAW">echo chmod |
cpio -o |
perl -pe 's/^(.{21}).../${1}755/' |
cpio -i -u</pre>
<p><strong>6）使用hardcore</strong></p>
<p><code data-enlighter-language="shell" class="EnlighterJSRAW">alias chmod='/lib/ld-2.11.1.so ./chmod'</code></p>
<p><strong>7）使用Emacs</strong></p>
<blockquote><p>Ctrl+x b &gt; * scratch*<br>
(set-file-modes “/bin/chmod” (string-to-number “0755” 8))<br>
Ctrl+j</p></blockquote>
<p>嗯，挺强大的，不过为什么不用install命令呢？</p>
<p></p>
<pre data-enlighter-language="shell" class="EnlighterJSRAW">install -m 755 /bin/chmod /tmp/chmod
mv /tmp/chmod /bin/chmod</pre>
<p>各位，你的方法呢？</p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3437.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3125.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2271.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1640.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7779.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/945.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3136" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="16040d93a5">
<img alt="image placeholder" >
<meta itemprop="headline" content="chmod -x chmod的N种解法">
<meta itemprop="description" content="在SlidesShare.net上有这么一个幻灯片，其说了如下的一个面试题：
如果某天你的Unix/Linux系统上的chomd命令被某人去掉了x属性（执行属性），
那么，你如何恢复呢？
下面是一些答案：

1）重新安装。对于Debian的系统：

[shell]sudo apt-get install --reinstall coreutils[/shell]

2）使用语言级...">
<meta itemprop="datePublished" content="2010-10-13T08:42:37+08:00">
<meta itemprop="dateModified" content="2010-10-13T09:17:53+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3136.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3136.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.56">
<meta itemprop="ratingCount" content="9">
</div>
</div>
<div id="post-ratings-3136-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-13T08:42:37+08:00</pubDate>
<guid>https://coolshell.cn/articles/3136.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 用户界面和用户体验的差别 ]]></title>
<link>https://coolshell.cn/articles/3142.html</link>
<content><![CDATA[ 
<p><strong>用户界面设计</strong></p>
<figure id="attachment_3144" aria-describedby="caption-attachment-3144" style="width: 300px" class="wp-caption aligncenter"><img alt="image placeholder" >
<p><strong>用户体验设计</strong></p>
<p><span id="more-3142"></span></p>
<p><figure id="attachment_3143" aria-describedby="caption-attachment-3143" style="width: 308px" class="wp-caption aligncenter"><a href="https://coolshell.cn/wp-content/uploads/2010/10/UX.jpg"><img alt="image placeholder" >
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/4220.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3877.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/363.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17737.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17680.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3142" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="66e1d8e617">
<img alt="image placeholder" >
<meta itemprop="headline" content="用户界面和用户体验的差别">
<meta itemprop="description" content="用户界面设计



用户体验设计



">
<meta itemprop="datePublished" content="2010-10-14T08:45:02+08:00">
<meta itemprop="dateModified" content="2010-10-14T11:43:38+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3142.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3142.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.6">
<meta itemprop="ratingCount" content="25">
</div>
</div>
<div id="post-ratings-3142-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-14T08:45:02+08:00</pubDate>
<guid>https://coolshell.cn/articles/3142.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ AES加密算法动画演示 ]]></title>
<link>https://coolshell.cn/articles/3161.html</link>
<content><![CDATA[ 
<p>波士顿大学的<a href="http://www.cs.bc.edu/~straubin/" target="_blank">Howard Straubing</a>做了这么一个动画来展示AES加密算法的演示，挺不错的。</p>
<p><embed type="application/x-shockwave-flash" width="680" height="400" src="https://coolshell.cn/wp-content/uploads/2010/10/rijndael_ingles2004.swf" quality="high" align="middle"></embed></p>
<p></p>
<center>
<br>
<a href="https://coolshell.cn/wp-content/uploads/2010/10/rijndael_ingles2004.swf" target="_blank">点击这里看全屏</a><br>
</center>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/19271.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3933.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1095.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1044.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1212.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7771.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3161" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="b3f1050d27">
<img alt="image placeholder" >
<meta itemprop="headline" content="AES加密算法动画演示">
<meta itemprop="description" content="波士顿大学的Howard Straubing做了这么一个动画来展示AES加密算法的演示，挺不错的。




点击这里看全屏
">
<meta itemprop="datePublished" content="2010-10-15T10:13:00+08:00">
<meta itemprop="dateModified" content="2010-10-12T19:07:56+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3161.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3161.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.58">
<meta itemprop="ratingCount" content="19">
</div>
</div>
<div id="post-ratings-3161-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-15T10:13:00+08:00</pubDate>
<guid>https://coolshell.cn/articles/3161.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Eclipse和Vim快捷键桌面 ]]></title>
<link>https://coolshell.cn/articles/3181.html</link>
<content><![CDATA[ 
<p>点击图片看大图</p>
<p><figure id="attachment_3185" aria-describedby="caption-attachment-3185" style="width: 581px" class="wp-caption aligncenter"><a href="https://coolshell.cn/wp-content/uploads/2010/10/EclipseCanoo1440x900.png"><img alt="image placeholder" >
<span id="more-3181"></span><br>
<figure id="attachment_3184" aria-describedby="caption-attachment-3184" style="width: 590px" class="wp-caption aligncenter"><a href="https://coolshell.cn/wp-content/uploads/2010/10/vim-shortcuts.png"><img alt="image placeholder" >
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/1837.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11312.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8883.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7829.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7166.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5224.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3181" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="8f08b1d3ea">
<img alt="image placeholder" >
<meta itemprop="headline" content="Eclipse和Vim快捷键桌面">
<meta itemprop="description" content="点击图片看大图



">
<meta itemprop="datePublished" content="2010-10-18T08:23:04+08:00">
<meta itemprop="dateModified" content="2010-10-16T11:04:29+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3181.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3181.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.55">
<meta itemprop="ratingCount" content="44">
</div>
</div>
<div id="post-ratings-3181-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-18T08:23:04+08:00</pubDate>
<guid>https://coolshell.cn/articles/3181.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 一些非常不错的资料 ]]></title>
<link>https://coolshell.cn/articles/3192.html</link>
<content><![CDATA[ 
<div id="ez-toc-container" class="ez-toc-v2_0_17 counter-hierarchy counter-decimal ez-toc-grey">
<div class="ez-toc-title-container">
<p class="ez-toc-title">目录</p>
<span class="ez-toc-title-toggle"></span>
</div>
<nav><ul class="ez-toc-list ez-toc-list-level-1">
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-1" href="#%E4%B8%80%E3%80%81Intel_%E7%BB%99%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E6%8E%A8%E8%8D%90%E7%9A%84%E8%B5%84%E6%96%99%E5%88%97%E8%A1%A8%EF%BC%882010%E5%B9%B4%E4%B8%8B%E5%8D%8A%E5%B9%B4%EF%BC%89" title="一、Intel 给开发人员推荐的资料列表（2010年下半年）">一、Intel 给开发人员推荐的资料列表（2010年下半年）</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-2" href="#%E4%BA%8C%E3%80%81jQuery_Fundamentals" title="二、jQuery Fundamentals">二、jQuery Fundamentals</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-3" href="#%E4%B8%89%E3%80%81How_to_Design_Programs" title="三、How to Design Programs">三、How to Design Programs</a></li>
<li class="ez-toc-page-1 ez-toc-heading-level-4"><a class="ez-toc-link ez-toc-heading-4" href="#%E5%9B%9B%E3%80%81Microsoft_All-In-One_Code_Framework" title="四、Microsoft All-In-One Code Framework">四、Microsoft All-In-One Code Framework</a></li>
</ul></nav>
</div>
<h4>
<span class="ez-toc-section" id="%E4%B8%80%E3%80%81Intel_%E7%BB%99%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E6%8E%A8%E8%8D%90%E7%9A%84%E8%B5%84%E6%96%99%E5%88%97%E8%A1%A8%EF%BC%882010%E5%B9%B4%E4%B8%8B%E5%8D%8A%E5%B9%B4%EF%BC%89"></span>一、<a href="https://www.intel.com/technology/rr/RRlist.pdf" target="_blank">Intel 给开发人员推荐的资料列表（2010年下半年）</a><span class="ez-toc-section-end"></span>
</h4>
<figure id="attachment_3197" aria-describedby="caption-attachment-3197" style="width: 500px" class="wp-caption aligncenter"><a href="https://www.intel.com/technology/rr/RRlist.pdf" target="_blank"><img alt="image placeholder" >
<p>其中包含了</p>
<ul>
<li>硬件：硬件，电源，存储，无线</li>
<li>软件：多线程和多核技术，高性能计算，图形游戏，用户关注</li>
<li>嵌入式：设计，软件，操作系统，安全，优化。</li>
<li>IT部门：策略和决策，服务器和数据中心，客户端</li>
</ul>
<p><span id="more-3192"></span></p>
<p style="padding-left: 30px;"><span style="color: #ffffff;">－－</span></p>
<h4>
<span class="ez-toc-section" id="%E4%BA%8C%E3%80%81jQuery_Fundamentals"></span>二、<a href="http://jqfundamentals.com/book/" target="_blank">jQuery Fundamentals</a><span class="ez-toc-section-end"></span>
</h4>
<figure id="attachment_3196" aria-describedby="caption-attachment-3196" style="width: 500px" class="wp-caption aligncenter"><a href="http://jqfundamentals.com/book/" target="_blank"><img alt="image placeholder" >
<p>这可能是我见过写得最好的jQuery教程了，大量的示例，只是没有时间和精力，不然一定全部翻译过来。</p>
<figure id="attachment_3195" aria-describedby="caption-attachment-3195" style="width: 500px" class="wp-caption aligncenter"><img alt="image placeholder" >
<p>还有其它关于jQuery的文章，你还可以查看《<a rel="bookmark" href="https://coolshell.cn/articles/2964.html" target="_blank">25个jQuery的编程小抄</a>》</p>
<p style="padding-left: 30px;"><span style="color: #ffffff;">－－</span></p>
<h4>
<span class="ez-toc-section" id="%E4%B8%89%E3%80%81How_to_Design_Programs"></span>三、<a href="http://www.htdp.org/2003-09-26/Book/" target="_blank">How to Design Programs</a><span class="ez-toc-section-end"></span>
</h4>
<figure id="attachment_3194" aria-describedby="caption-attachment-3194" style="width: 500px" class="wp-caption aligncenter"><a href="http://www.htdp.org/2003-09-26/Book/" target="_blank"><img alt="image placeholder" >
<p>想学学如何设计程序吗？英国剑桥大学写的，MIT出版的，希望你能看看，非常不错。</p>
<p style="padding-left: 30px;"><span style="color: #ffffff;">－－</span></p>
<h4>
<span class="ez-toc-section" id="%E5%9B%9B%E3%80%81Microsoft_All-In-One_Code_Framework"></span>四、<a href="https://1code.codeplex.com/" target="_blank">Microsoft All-In-One Code Framework</a><span class="ez-toc-section-end"></span>
</h4>
<figure id="attachment_3193" aria-describedby="caption-attachment-3193" style="width: 500px" class="wp-caption aligncenter"><a href="https://1code.codeplex.com/" target="_blank"><img alt="image placeholder" >
<p>C++/C#/VB.NET的一站式代码和资料，还有coding standard，也是很不错的。</p>
<p>——————————————————————</p>
<p>查看《<a rel="bookmark" href="https://coolshell.cn/articles/2775.html">免费电子书列表</a>》查看更多的电子书。</p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18024.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10169.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4220.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3270.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2775.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2672.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3192" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="f9ff560ede">
<img alt="image placeholder" >
<meta itemprop="headline" content="一些非常不错的资料">
<meta itemprop="description" content="一、Intel 给开发人员推荐的资料列表（2010年下半年）


其中包含了

	硬件：硬件，电源，存储，无线
	软件：多线程和多核技术，高性能计算，图形游戏，用户关注
	嵌入式：设计，软件，操作系统，安全，优化。
	IT部门：策略和决策，服务器和数据中心，客户端


－－

二、jQuery Fundamentals


这可能是我见过写得最好的jQuery教程了...">
<meta itemprop="datePublished" content="2010-10-18T09:38:51+08:00">
<meta itemprop="dateModified" content="2010-10-16T11:55:53+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3192.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3192.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.79">
<meta itemprop="ratingCount" content="14">
</div>
</div>
<div id="post-ratings-3192-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-18T09:38:51+08:00</pubDate>
<guid>https://coolshell.cn/articles/3192.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 30+ Web下拉菜单 ]]></title>
<link>https://coolshell.cn/articles/3207.html</link>
<content><![CDATA[ 
<p>以前给大家介绍过<a rel="bookmark" href="https://coolshell.cn/articles/1660.html" target="_blank">13个不错的Javascript和CSS的菜单</a>、<a rel="bookmark" href="https://coolshell.cn/articles/918.html" target="_blank">20个优秀的Javascript导航技术</a>、<a rel="bookmark" href="https://coolshell.cn/articles/562.html" target="_blank">30种时尚的CSS网站导航条</a>，今天在网上看到一篇文章其收集了30多个下拉菜单（分为两类，jQuery和CSS+Javascript的），转过来。</p>
<p>原文：<a href="http://smashinghub.com/3-useful-drop-down-menu-scripts-to-enhance-header-navigation.htm" target="_blank">http://smashinghub.com/3-useful-drop-down-menu-scripts-to-enhance-header-navigation.htm</a></p>
<h4>jQuery</h4>
<h3><strong><a href="http://www.dynamicdrive.com/dynamicindex1/ddsmoothmenu.htm"><strong>Smooth Navigation Menu</strong></a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-5.jpg"><img alt="image placeholder" >
</a></strong></p>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-5.jpg"></a></strong></p>
<p><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-5.jpg"></a></p>
<p><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-5.jpg"> </a></p>
<p><span id="more-3207"></span></p>
<p><strong><br>
</strong></p>
<h3>
<strong> </strong><strong><a href="http://javascript-array.com/scripts/jquery_simple_drop_down_menu/">Simple Drop Down Menu Plugin</a></strong>
</h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-6.jpg"><img alt="image placeholder" >
</strong></p>
<h3><strong><a href="http://www.filamentgroup.com/lab/jquery_ipod_style_and_flyout_menus/">Dropdown, iPod Drilldown, and Flyout styles </a></strong></h3>
<div><strong><br>
</strong></div>
<div><a href="http://smashinghub.com/wp-content/uploads/2010/10/drilldown.gif"><img alt="image placeholder" >
<h3><strong><a href="http://designreviver.com/tutorials/jquery-css-example-dropdown-menu/">jQuery and CSS Example</a><br>
</strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-7.jpg"><img alt="image placeholder" >
</strong></p>
<h3>
<strong> </strong><strong><a href="http://www.webdesigndev.com/web-development/create-the-fanciest-dropdown-menu-you-ever-saw">Create the Fanciest Drop Down Menu You Ever Saw</a></strong>
</h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-8.jpg"><img alt="image placeholder" >
</strong></p>
<h3><strong><a href="http://net.tutsplus.com/tutorials/javascript-ajax/a-different-top-navigation/">A Different Top Navigation</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-9.jpg"><img alt="image placeholder" >
</strong></p>
<h3>
<strong> </strong><strong><a href="https://css-tricks.com/simple-jquery-dropdowns/">Simple jQuery Dropdowns</a></strong>
</h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-15.jpg"><img alt="image placeholder" >
</strong></p>
<h3><strong><a href="http://www.noupe.com/tutorial/drop-down-menu-jquery-css.html"><strong>Sexy Drop Down Menu with jQuery and CSS</strong></a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-1.jpg"><img alt="image placeholder" >
</strong></p>
<h3><strong><a href="http://net.tutsplus.com/tutorials/html-css-techniques/how-to-create-a-drop-down-nav-menu-with-html5-css3-and-jquery/"><strong>How to Create a Drop Down Nav Menu with HTML5, CSS3, and jQuery</strong></a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-31.jpg"><img alt="image placeholder" >
</strong></p>
<h3><strong><a href="http://www.jankoatwarpspeed.com/post/2009/07/28/reinventing-drop-down-with-css-jquery.aspx">Reinventing a Drop Down with CSS and jQuery</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-14.jpg"><img alt="image placeholder" >
</strong></p>
<h3>
<strong> </strong><strong><a href="http://users.tpg.com.au/j_birch/plugins/superfish/">Superfish</a></strong>
</h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-13.jpg"><img alt="image placeholder" >
<h3><strong><a href="http://www.clarklab.net/blog/posts/animated-drop-down-menu-with-jquery/">Animated Drop Down Menu with jQuery</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-12.jpg"><img alt="image placeholder" >
</strong></p>
<h3><strong><a href="http://www.filamentgroup.com/lab/jquery_ipod_style_and_flyout_menus/">jQuery Menu: Dropdown, Drilldown, and iPod Flyout Styles</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-16.jpg"><img alt="image placeholder" >
</strong></p>
<h3><strong><a href="http://www.givainc.com/labs/mcdropdown_jquery_plugin.htm">McDropdown jQuery Plugin</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-17.jpg"><img alt="image placeholder" >
<h3><strong><a href="http://www.sohtanaka.com/web-design/mega-drop-downs-w-css-jquery/"><strong>Mega Drop Down Menus with CSS &amp; jQuery</strong></a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-3.jpg"><img alt="image placeholder" >
</strong></p>
<h3><strong><a href="http://www.hv-designs.co.uk/2009/02/17/sliding-jquery-menu/"><strong>Sliding jQuery Menu</strong></a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-4.jpg"><img alt="image placeholder" >
</strong></p>
<h3><strong><a href="http://jdsharp.us/jQuery/plugins/jdMenu/">jdMenu Hierarchical Menu Plugin</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-18.jpg"><img alt="image placeholder" >
</strong></p>
<h3>
<strong> </strong><strong><a href="http://apycom.com/menus/1-dim-gray.html">Dim Gray Drop Down Menu</a></strong>
</h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-19.jpg"><img alt="image placeholder" >
</strong></p>
<h3><strong><a href="http://www.kriesi.at/archives/create-a-multilevel-dropdown-menu-with-css-and-improve-it-via-jquery">Create a MultiLevel Dropdown Menu with CSS and Improve it with jQuery</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-20.jpg"><img alt="image placeholder" >
<h3>
<strong> </strong><strong><a href="http://www.queness.com/post/966/jquery-drop-down-menu-for-rss-subscription-tutorial">jQuery Drop Down Menu for RSS Subscription</a></strong>
</h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-11.jpg"><img alt="image placeholder" >
<h3><strong><a href="http://www.queness.com/preview/1047/easy-to-style-jquery-drop-down-menu-tutorial">Easy to Style jQuery Drop Down Menu</a></strong></h3>
<h2><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/Drop-Down-Menu-Scripts-10.jpg"><img alt="image placeholder" >
</strong></h2>
<h4><strong>CSS and Java Scripts<br>
</strong></h4>
<h3><strong><a rel="nofollow" href="http://lwis.net/free-css-drop-down-menu/">Lwis Dropdown Menu Framework</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/lwis_menu.png"><img alt="image placeholder" >
<h3><strong><a rel="nofollow" href="http://greengeckodesign.com/projects/menumatic.aspx">MenuMatic </a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/menumatic.jpg"><img alt="image placeholder" >
<h3><strong><a rel="nofollow" href="http://www.andrewsellick.com/35/sexy-sliding-javascript-side-bar-menu-using-mootools">Sexy Sliding Menu</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/sliding_menu.jpg"><img alt="image placeholder" >
<h3><strong><a rel="nofollow" href="http://www.cssplay.co.uk/menus/circular-sub.html">Circular Menu</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/circular_menu.jpg"><img alt="image placeholder" >
<h3><strong><a rel="nofollow" href="http://www.jankoatwarpspeed.com/post/2009/01/19/Create-Vimeo-like-top-navigation.aspx">Vimeo-like Top Navigation</a></strong></h3>
<p><a href="http://smashinghub.com/wp-content/uploads/2010/10/vimeo_menu.jpg"><img alt="image placeholder" >
<h3><strong><a rel="nofollow" href="http://www.filamentgroup.com/lab/jquery_ipod_style_and_flyout_menus/">FG jQuery Menu</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/fg_menu.png"><img alt="image placeholder" >
<h3><strong><a rel="nofollow" href="http://extjs.com/">Ext JS Tree Panel</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/dragdrop.jpg"><img alt="image placeholder" >
<h3><strong><a rel="nofollow" href="http://www.kriesi.at/archives/apple-menu-improved-with-jquery">Apple Style Menu</a></strong></h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/appele1.jpg"><img alt="image placeholder" >
<h3><strong><a rel="nofollow" href="http://www.designmeme.com/articles/hoverboxmenu/">Hover Box</a></strong></h3>
<h3>
<strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/hoverbox.jpg"><img alt="image placeholder" >
</h3>
<p><strong><a href="http://smashinghub.com/wp-content/uploads/2010/10/style.png"><img alt="image placeholder" >
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1660.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9666.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6043.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4795.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3207" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="02ed762029">
<img alt="image placeholder" >
<meta itemprop="headline" content="30+ Web下拉菜单">
<meta itemprop="description" content="以前给大家介绍过13个不错的Javascript和CSS的菜单、20个优秀的Javascript导航技术、30种时尚的CSS网站导航条，今天在网上看到一篇文章其收集了30多个下拉菜单（分为两类，jQuery和CSS+Javascript的），转过来。

原文：http://smashinghub.com/3-useful-drop-down-menu-scripts-to-enhance-he...">
<meta itemprop="datePublished" content="2010-10-20T14:06:43+08:00">
<meta itemprop="dateModified" content="2010-10-20T14:09:28+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3207.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3207.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3">
<meta itemprop="ratingCount" content="6">
</div>
</div>
<div id="post-ratings-3207-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-20T14:06:43+08:00</pubDate>
<guid>https://coolshell.cn/articles/3207.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 开发时间估计 ]]></title>
<link>https://coolshell.cn/articles/3218.html</link>
<content><![CDATA[ 
<p style="text-align: left;">项目管理中，项目任务时间估计是其中一个重要的环节。各种管理员人都觉得时间估计很重要，都希望时间估计能准确一些，但是，事实却并不如此。事实上，会下面这样的结果。</p>
<table style="text-align: left;">
<thead>
<tr>
<th>目前状态</th>
<th>完成进展</th>
<th>剩余任务估计</th>
</tr>
</thead>
<tbody>
<tr>
<td>任务刚被分配，还没有做调查</td>
<td>完成0%</td>
<td>大约2周</td>
</tr>
<tr>
<td>完成需求分析和调查，攻克了难点</td>
<td>完成50%</td>
<td>大约2周多一点</td>
</tr>
<tr>
<td>我几乎做完了。只有出了点我事先没有想到的岔子。<br>
不过，我已找到解决方法了。只是还需要一些时间</td>
<td>完成90%</td>
<td>大约2周多一点</td>
</tr>
<tr>
<td>我全部做完了，只是还要写文档，做Code Review，<br>
单元测试和错误处理</td>
<td>完成99%</td>
<td>还需要2周</td>
</tr>
</tbody>
</table>
<p style="text-align: left;">呵呵，这是怪我们的项目管理的方法论呢？还是怪我们太过草率的程序员呢？</p>
<p style="text-align: left;">
</p>
<p style="text-align: left;">
</p>
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/10217.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4951.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/21589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20977.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20765.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20276.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3218" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="08393fd522">
<img alt="image placeholder" >
<meta itemprop="headline" content="开发时间估计">
<meta itemprop="description" content="项目管理中，项目任务时间估计是其中一个重要的环节。各种管理员人都觉得时间估计很重要，都希望时间估计能准确一些，但是，事实却并不如此。事实上，会下面这样的结果。




目前状态
完成进展
剩余任务估计




任务刚被分配，还没有做调查
完成0%
大约2周


完成需求分析和调查，攻克了难点
完成50%
大约2周多一点


我几乎做完了。只有出了点我事先...">
<meta itemprop="datePublished" content="2010-10-25T09:49:27+08:00">
<meta itemprop="dateModified" content="2010-10-24T20:22:35+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3218.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3218.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.73">
<meta itemprop="ratingCount" content="11">
</div>
</div>
<div id="post-ratings-3218-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-25T09:49:27+08:00</pubDate>
<guid>https://coolshell.cn/articles/3218.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 在线作图编辑服务 ]]></title>
<link>https://coolshell.cn/articles/3244.html</link>
<content><![CDATA[ 
<p>以前向大家介绍过<a href="https://coolshell.cn/articles/1883.html" target="_blank">在线的IDE</a>，还有<a href="https://coolshell.cn/articles/1310.html" target="_blank">在线的编译器</a>，还有 <a rel="bookmark" href="https://coolshell.cn/articles/776.html" target="_blank">在线的画UML图的网站</a>，在<a href="https://coolshell.cn/articles/3013.html" target="_blank">这篇文章里</a>还介绍了一个<a href="http://css3.mikeplate.com/" target="_blank">在线的CSS制作服务</a>，今天给大家介绍两个在线的作图编辑服务。</p>
<p>一个看似就是Web版的Photoshop：<a href="http://pixlr.com/editor/" target="_blank">http://pixlr.com/editor/</a> （用Flash做的）</p>
<figure id="attachment_3245" aria-describedby="caption-attachment-3245" style="width: 585px" class="wp-caption aligncenter"><a href="http://pixlr.com/editor/"><img alt="image placeholder" >
<p><span style="color: #ffffff;">—–</span></p>
<p>一个是作矢量图的，叫SVG Editor：</p>
<p><a href="https://svg-edit.googlecode.com/svn-history/r1771/trunk/editor/svg-editor.html" target="_blank">http://svg-edit.googlecode.com/svn-history/r1771/trunk/editor/svg-editor.html</a></p>
<p><span id="more-3244"></span></p>
<figure id="attachment_3246" aria-describedby="caption-attachment-3246" style="width: 585px" class="wp-caption aligncenter"><a href="https://svg-edit.googlecode.com/svn-history/r1771/trunk/editor/svg-editor.html"><img alt="image placeholder" >
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17524.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10822.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10739.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10337.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3244" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="ca6a5528b6">
<img alt="image placeholder" >
<meta itemprop="headline" content="在线作图编辑服务">
<meta itemprop="description" content="以前向大家介绍过在线的IDE，还有在线的编译器，还有 在线的画UML图的网站，在这篇文章里还介绍了一个在线的CSS制作服务，今天给大家介绍两个在线的作图编辑服务。

一个看似就是Web版的Photoshop：http://pixlr.com/editor/ （用Flash做的）



-----

一个是作矢量图的，叫SVG Editor：

http://svg-edit.g...">
<meta itemprop="datePublished" content="2010-10-25T13:02:06+08:00">
<meta itemprop="dateModified" content="2010-10-25T10:30:55+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3244.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3244.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4">
<meta itemprop="ratingCount" content="8">
</div>
</div>
<div id="post-ratings-3244-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-25T13:02:06+08:00</pubDate>
<guid>https://coolshell.cn/articles/3244.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 你和你的工作 ]]></title>
<link>https://coolshell.cn/articles/3231.html</link>
<content><![CDATA[ 
<p>源文：<a href="http://youtheuser.com/2010/10/04/you-and-your-job/">http://youtheuser.com/2010/10/04/you-and-your-job/</a>，有人说下面的这个文章太过Crazy，有人说下面的这个文章是猎头的软文，你换工作换得越多，他们才能越挣钱。我的观点的，先别否定他的观点，试着去理解一下为什么他要这么说，你会发现还有一些道理的。然后，想一想，自己需要的是什么？一份工作？还是一份经历？还是不断的自我挑战？相信你会有知道该怎么去做的。当然，“离职”是最后一步棋，在此前，我更希望你能尝试地在你现在工作环境下去改变去影响。</p>
<blockquote><p>“The role of a manager should be to ensure that those that work for him/her eventually leave and go onto bigger and better things” —  Mark Plant</p></blockquote>
<p>如果你对你的工作不高兴——离开，如果每天早上你对你的工作没有激情——无论你在干什么你都要停下来。</p>
<p>因为这就是我们赖以生存的东西。</p>
<ol>
<li>如果你的工作没有挑战性 – leave.</li>
<li>如果你在混你的工作 – leave.</li>
<li>如果你觉得现在不辛苦而又感到压力大 – leave.</li>
<li>如果你完全知道你现在正在做的所有一切的事 – leave.</li>
<li>如果你没有得到足够多的失败– leave 并到找一个地方可以让你获得成功前的失败。而当你发现你天天都在成功 – leave again.</li>
<li>如果你觉得你很成功 – leave 然后去找某个事或某个地方你不会那么成功，而当你又觉得你又很成功了 – leave again.</li>
<li>如果所有的人都喜欢你并喜欢和你一起工作 – leave 然后去某个地方，那里的人并不喜欢你（然后你让他们喜欢你）。</li>
<li>如果你的工作就像是赢奖品一样，并且你总是能赢 – leave 然后找个地儿，那里的人总是赢不了什么。帮他们扭转局面。</li>
<li>如果你认为你知道产品的所有的内在的东西 – leave 然后找一个你不知道的产品。</li>
<p><span id="more-3231"></span></p>
<li>如果你认为你明白你所有影响力的价值所在，并觉得你已挑战过所有你可以找到的方面 – leave 然后找个地儿，在那里有不同的甚至你不了解的能影响你的人或事。</li>
<li>如果你的经理不能影响你最终去成就更大更好的事情 – leave.</li>
<li>如果有人妨碍你的进步（无论是内部的还是外部的） – leave.</li>
<li>如果有人正试图让你呆在你的工作里不要改变 – leave.</li>
<li>如果你的经理正试图让你留下，但他并不是一个好的经理 – leave.</li>
<li>如果日子过得很顺，并且那里有太多的时候可以闲扯（或是你身边都是有太多时间闲扯的人）– leave.</li>
<li>如果你没有和哪些和你一样在团队工作和协作方面投入相应的思考和精力的人一起工作 – leave 并去寻找这些人</li>
<li>如果那里有这样一种文化——靠加钱来说服别人留下 – leave. （<a href="http://Coolshell.cn" target="_blank">译注</a>：这样的Culture必然造就不公平）</li>
<li>如果那里有一种商业文化阻止人不能为竞争对手工作 – leave.（<a href="http://Coolshell.cn" target="_blank">译注</a>：《保密协议》里应该限制的是内容，而不是人身自由）</li>
<li>如果你工作的那个地方有一个商业文化试图让竞争对手失败 – leave. （<a href="http://Coolshell.cn" target="_blank">译注</a>：人个理解竞争不是让对手失败，而是比对手做得更好）</li>
<li>如果那里没有一种文化（或是一种理解），其可以帮助优秀的人和那些工作不是太好的人去创造好的工作关系，并让他们可以很好的工作在一起 – leave.</li>
<li>如果那里的文化并不理解，良好工作关系间的紧密程度能够造就更好的产出 – leave.</li>
</ol>
<p>我觉得作者所说的leave，应该是离开这个事，这个团队，而不完全是离开这个公司。我个人对上述的21条中的某些条觉得非常认同，比如：1，8，11，12，15，16，17。</p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/17583.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8790.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6142.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/21589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20977.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20765.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3231" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="ee5a3e142a">
<img alt="image placeholder" >
<meta itemprop="headline" content="你和你的工作">
<meta itemprop="description" content="源文：http://youtheuser.com/2010/10/04/you-and-your-job/，有人说下面的这个文章太过Crazy，有人说下面的这个文章是猎头的软文，你换工作换得越多，他们才能越挣钱。我的观点的，先别否定他的观点，试着去理解一下为什么他要这么说，你会发现还有一些道理的。然后，想一想，自己需要的是什么？一份工作？还是一份经历？还是不断的自我挑战？相信你会有知道该怎么去做的...">
<meta itemprop="datePublished" content="2010-10-26T08:54:25+08:00">
<meta itemprop="dateModified" content="2010-10-24T23:47:32+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3231.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3231.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.89">
<meta itemprop="ratingCount" content="9">
</div>
</div>
<div id="post-ratings-3231-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-26T08:54:25+08:00</pubDate>
<guid>https://coolshell.cn/articles/3231.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 给老婆普及计算机知识 ]]></title>
<link>https://coolshell.cn/articles/3236.html</link>
<content><![CDATA[ 
<p>我们知道计算机的计算数据需要从磁盘调度到内存，然后再调度到L2 Cache，再到L1 Cache，最后进CPU寄存器进行计算。</p>
<p>给老婆在电脑城买本本的时候向电脑推销人员问到这些参数，老婆听不懂，让我给她解释，解释完后，老婆说，“原来电脑内部这么麻烦，怪不得电脑总是那么慢，直接操作内存不就快啦”。我是那个汗啊。</p>
<p>我只得向她解释，这样做是为了更快速的处理，她不解，于是我打了下面这个比喻——这就像我们喂宝宝吃奶一样，</p>
<ul>
<li>CPU就像是已经在宝宝嘴里的奶一样，直接可以咽下去了。需要1秒钟</li>
</ul>
<ul>
<li>L1缓存就像是已冲好的放在奶瓶里的奶一样，只要把孩子抱起来才能喂到嘴里。需要5秒钟。</li>
</ul>
<ul>
<li>L2缓存就像是家里的奶粉一样，还需要先热水冲奶，然后把孩子抱起来喂进去。需要2分钟。</li>
</ul>
<ul>
<li>内存RAM就像是各个超市里的奶粉一样，这些超市在城市的各个角落，有的远，有的近，你先要寻址，然后还要去商店上门才能得到。需要1-2小时。</li>
</ul>
<ul>
<li>硬盘DISK就像是仓库，可能在很远的郊区甚至工厂仓库。需要大卡车走高速公路才能运到城市里。需要2-10天。</li>
</ul>
<p>所以，在这样的情况下——</p>
<p><span id="more-3236"></span></p>
<ul>
<li>我们不可能在家里不存放奶粉。试想如果得到孩子饿了，再去超市买，这不更慢吗？</li>
</ul>
<ul>
<li>我们不可以把所有的奶粉都冲好放在奶瓶里，因为奶瓶不够。也不可能把超市里的奶粉都放到家里，因为房价太贵，这么大的房子不可能买得起。</li>
</ul>
<ul>
<li>我们不可能把所有的仓库里的东西都放在超市里，因为这样干成本太大。而如果超市的货架上正好卖完了，就需要从库房甚至厂商工厂里调，这在计算里叫换页，相当的慢。</li>
</ul>
<p>我讲完后，老婆看似有些明白了，然后对我说，“明白了，我就说最近衣服有点跟不上，原来是L1（衣柜）里的衣服跟不上了，老公什么时候去买衣服啊……”。我晕！</p>
<p>（以上故事，完全是我的亲身经历）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5686.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11170.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2011.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6312.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5815.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3236" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="a78f4c82e6">
<img alt="image placeholder" >
<meta itemprop="headline" content="给老婆普及计算机知识">
<meta itemprop="description" content="我们知道计算机的计算数据需要从磁盘调度到内存，然后再调度到L2 Cache，再到L1 Cache，最后进CPU寄存器进行计算。

给老婆在电脑城买本本的时候向电脑推销人员问到这些参数，老婆听不懂，让我给她解释，解释完后，老婆说，“原来电脑内部这么麻烦，怪不得电脑总是那么慢，直接操作内存不就快啦”。我是那个汗啊。

我只得向她解释，这样做是为了更快速的处理，她不解，于是我打了下面这个比喻——...">
<meta itemprop="datePublished" content="2010-10-27T08:48:37+08:00">
<meta itemprop="dateModified" content="2010-10-27T09:47:31+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3236.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3236.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.79">
<meta itemprop="ratingCount" content="39">
</div>
</div>
<div id="post-ratings-3236-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-10-27T08:48:37+08:00</pubDate>
<guid>https://coolshell.cn/articles/3236.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 一个人脸识别的Javascript ]]></title>
<link>https://coolshell.cn/articles/3254.html</link>
<content><![CDATA[ 
<p>这里有一个<a href="http://liuliu.me/detect/detect.html" target="_blank">人脸识别的Javascript</a>，感觉挺酷的。识别的还是很不错的，网友们在做了很多的<a href="https://www.reddit.com/r/programming/comments/dy81y/my_notsoslow_face_detector_in_javascript/" target="_blank">测试</a>，对于动画片里的人员很不准，而且，照片质量要好一点的会准一点。下面是一些识别结果：</p>
<p style="text-align: center;"><img alt="image placeholder" >
<p>一个递归式的图</p>
<p><span id="more-3254"></span></p>
<p style="text-align: center;"><img alt="image placeholder" >
<p>不过，好像只能识别白人</p>
<p><img alt="image placeholder" >
<p style="text-align: left;">大家可以去试试。</p>
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17634.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17524.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10822.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10739.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/10337.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3254" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="c29a06ee57">
<img alt="image placeholder" >
<meta itemprop="headline" content="一个人脸识别的Javascript">
<meta itemprop="description" content="这里有一个人脸识别的Javascript，感觉挺酷的。识别的还是很不错的，网友们在做了很多的测试，对于动画片里的人员很不准，而且，照片质量要好一点的会准一点。下面是一些识别结果：

一个递归式的图



不过，好像只能识别白人


大家可以去试试。">
<meta itemprop="datePublished" content="2010-11-01T08:57:53+08:00">
<meta itemprop="dateModified" content="2010-10-31T20:58:45+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3254.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3254.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3">
<meta itemprop="ratingCount" content="7">
</div>
</div>
<div id="post-ratings-3254-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-11-01T08:57:53+08:00</pubDate>
<guid>https://coolshell.cn/articles/3254.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ C++的字符串格式化库 ]]></title>
<link>https://coolshell.cn/articles/3258.html</link>
<content><![CDATA[ 
<p>这里向大家介绍一个C++的字符串格式化库，叫cpptempl，这个库支持对字符串格式的条件，循环，变量插入。看上去很不错，只不过其是基于boost库的。</p>
<p>下面是一个例子：</p>
<p></p>
<pre data-enlighter-language="c" class="EnlighterJSRAW">// The text template
wstring text = L"I heart {$place}!" ;
// Data to feed the template engine
cpptempl::data_map data ;
// {$place} =&gt; Okinawa
data[L"place"] = cpptempl::make_data(L"Okinawa");
// parse the template with the supplied data dictionary
wstring result = cpptempl::parse(text, data) ;</pre>
<p>输出结果是：</p>
<blockquote><p>I heart Okinawa!</p></blockquote>
<p>是不是很方便？让我们看一个更复杂的例子：</p>
<p><span id="more-3258"></span></p>
<p></p>
<pre data-enlighter-language="cpp" class="EnlighterJSRAW">// You'd probably load this template from a file in real life.
wstring text = L"&lt;h3&gt;Locations&lt;/h3&gt;\n&lt;ul&gt;\n"
    L"{% for place in places %}"
    L"&lt;li&gt;{$place}&lt;/li&gt;\n"
    L"{% endfor %}"
    L"&lt;/ul&gt;" ;
// Create the list of items
cpptempl::data_list places;
places.push_back(cpptempl::make_data(L"Okinawa"));
places.push_back(cpptempl::make_data(L"San Francisco"));
// Now set this in the data map
cpptempl::data_map data ;
data[L"places"] = cpptempl::make_data(places);
// parse the template with the supplied data dictionary
wstring result = cpptempl::parse(text, data) ;</pre>
<p>输出结果是：</p>
<blockquote><p>&lt;h3&gt;Locations&lt;/h3&gt;<br>
&lt;ul&gt;<br>
&lt;li&gt;Okinawa&lt;/li&gt;<br>
&lt;li&gt;San Francisco&lt;/li&gt;<br>
&lt;/ul&gt;</p></blockquote>
<p>更为详细的说明请到这里：<a href="https://bitbucket.org/ginstrom/cpptemplate/wiki/Home" target="_blank">http://bitbucket.org/ginstrom/cpptemplate/wiki/Home</a>。</p>
<p>Google也有一个类似的库叫ctemplate：<a href="https://code.google.com/p/google-ctemplate/" target="_blank">http://code.google.com/p/google-ctemplate/</a> 提供相似的方法，你也可以试试看。与Google相对应的Java库叫Hapax：<a href="https://code.google.com/p/hapax/" target="_blank">http://code.google.com/p/hapax/</a>。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/20845.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8088.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/7992.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5576.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4990.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3258" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="4ea8621d30">
<img alt="image placeholder" >
<meta itemprop="headline" content="C++的字符串格式化库">
<meta itemprop="description" content='这里向大家介绍一个C++的字符串格式化库，叫cpptempl，这个库支持对字符串格式的条件，循环，变量插入。看上去很不错，只不过其是基于boost库的。

下面是一个例子：

[c]// The text template
wstring text = L"I heart {$place}!" ;
// Data to feed the template engine
cpptemp...'>
<meta itemprop="datePublished" content="2010-11-02T08:59:06+08:00">
<meta itemprop="dateModified" content="2010-11-02T10:29:37+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3258.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3258.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4">
<meta itemprop="ratingCount" content="9">
</div>
</div>
<div id="post-ratings-3258-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-11-02T08:59:06+08:00</pubDate>
<guid>https://coolshell.cn/articles/3258.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 游戏Flash vs HTML5 ]]></title>
<link>https://coolshell.cn/articles/3267.html</link>
<content><![CDATA[ 
<p>下面这个网页上做一个乒乓游戏，左边是Flash，右边是HTML5，很有趣。这也算是一个Flash和HTML5通讯的例子吧。</p>
<p style="text-align: center;"><a href="http://labs.codecomputerlove.com/FlashVsHtml5/" target="_blank">http://labs.codecomputerlove.com/FlashVsHtml5/</a></p>
<p style="text-align: center;">
</p>
<p style="text-align: left;"><a href="http://labs.codecomputerlove.com/FlashVsHtml5/"><img alt="image placeholder" >
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/5537.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3903.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3684.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3516.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3421.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3013.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3267" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="eefa4f9bb4">
<img alt="image placeholder" >
<meta itemprop="headline" content="游戏Flash vs HTML5">
<meta itemprop="description" content="下面这个网页上做一个乒乓游戏，左边是Flash，右边是HTML5，很有趣。这也算是一个Flash和HTML5通讯的例子吧。
http://labs.codecomputerlove.com/FlashVsHtml5/

">
<meta itemprop="datePublished" content="2010-11-05T11:16:25+08:00">
<meta itemprop="dateModified" content="2010-11-05T11:16:25+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3267.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3267.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.86">
<meta itemprop="ratingCount" content="7">
</div>
</div>
<div id="post-ratings-3267-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-11-05T11:16:25+08:00</pubDate>
<guid>https://coolshell.cn/articles/3267.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 两本电子书 ]]></title>
<link>https://coolshell.cn/articles/3270.html</link>
<content><![CDATA[ 
<p><a href="http://learnpythonthehardway.org/static/LearnPythonTheHardWay.pdf" target="_blank"><strong>Learn Python The Hard Way (pdf)</strong></a></p>
<p style="text-align: center;"><strong> </strong></p>
<figure id="attachment_3272" aria-describedby="caption-attachment-3272" style="width: 245px" class="wp-caption aligncenter"><a href="http://learnpythonthehardway.org/static/LearnPythonTheHardWay.pdf"><img alt="image placeholder" >
<p><a href="https://download.microsoft.com/download/5/0/A/50A39509-D015-410F-A8F2-A5511E5A988D/Microsoft_Press_ebook_Programming_Windows_Phone_7_PDF.pdf" target="_blank"><strong>Programming Windows Phone 7 (Charles Petzold)</strong></a></p>
<p><figure id="attachment_3271" aria-describedby="caption-attachment-3271" style="width: 245px" class="wp-caption aligncenter"><a href="https://download.microsoft.com/download/5/0/A/50A39509-D015-410F-A8F2-A5511E5A988D/Microsoft_Press_ebook_Programming_Windows_Phone_7_PDF.pdf"><img alt="image placeholder" >
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/4710.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4220.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3192.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2775.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1157.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3270" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="bc57ed775f">
<img alt="image placeholder" >
<meta itemprop="headline" content="两本电子书">
<meta itemprop="description" content="Learn Python The Hard Way (pdf)
 




Programming Windows Phone 7 (Charles Petzold)

">
<meta itemprop="datePublished" content="2010-11-08T11:47:09+08:00">
<meta itemprop="dateModified" content="2010-11-08T11:47:09+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3270.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3270.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.57">
<meta itemprop="ratingCount" content="7">
</div>
</div>
<div id="post-ratings-3270-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-11-08T11:47:09+08:00</pubDate>
<guid>https://coolshell.cn/articles/3270.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 超强的验证码 ]]></title>
<link>https://coolshell.cn/articles/3277.html</link>
<content><![CDATA[ 
<p>大家看看这个网站吧。最强的验证码——把看到的东西画出来。</p>
<p><a href="http://www.geee.net/contact.htm" target="_blank">http://www.geee.net/contact.htm</a></p>
<p style="text-align: center;"><a href="http://www.geee.net/contact.htm"><img alt="image placeholder" >
<p>某些网友们还是做了一些尝试：</p>
<p><span id="more-3277"></span></p>
<p style="text-align: center;"><img alt="image placeholder" >
<p style="text-align: center;"><img alt="image placeholder" >
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/7917.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3363.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/6731.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/9410.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/8031.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2086.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3277" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="46ac014a15">
<img alt="image placeholder" >
<meta itemprop="headline" content="超强的验证码">
<meta itemprop="description" content="大家看看这个网站吧。最强的验证码——把看到的东西画出来。

http://www.geee.net/contact.htm

某些网友们还是做了一些尝试：



">
<meta itemprop="datePublished" content="2010-11-08T18:36:50+08:00">
<meta itemprop="dateModified" content="2012-07-17T15:21:21+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3277.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3277.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.6">
<meta itemprop="ratingCount" content="10">
</div>
</div>
<div id="post-ratings-3277-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-11-08T18:36:50+08:00</pubDate>
<guid>https://coolshell.cn/articles/3277.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 架构师给程序员的一封信 ]]></title>
<link>https://coolshell.cn/articles/3281.html</link>
<content><![CDATA[ 
<p>下面的邮件是某Architect发给他的Engineering团队的（<a href="http://blog.kapilkaisare.info/from-an-architect-to-a-programmer?c=1" target="_blank">来源</a>），我觉得挺不错的，翻译过来，我相信我们所有的程序员都能从中学到很多东西。下面是这封邮件——</p>
<div>
<p style="padding-left: 30px;">每次当我开始做新的东西是我就会很兴奋。就算在软件圈里做了20年以后，每当开始新的旅程里，我都觉得我心中有一些东西不吐不快。这是我们大家一起的旅程。我强烈地相信我们详细规划的过程是很有乐趣的，富有挑战的和丰富多彩的。我想让这个旅程让你们难忘，并且能增添你们所有人的阅历。</p>
<p style="padding-left: 30px;">这看起来有些唯心主义，不过，我想制订我的工作日程，我们的技术策略，以及你们密切合作的进度。这样一来，当你们做了什么相当不错的事，我们所有人都可以受益。我相当的尊重第一个工程师和他们的代码。</p>
<p style="padding-left: 30px;">1. 代码是王。文档仅随其后 。所以，代码一定要和文档一致，并可以正确执行。</p>
<p style="padding-left: 30px;">2. 测试，测试，测试。</p>
<p style="padding-left: 30px;">3. 单元测试非常关键 。每一个在单元测试之后发现的bug需要开发人员双倍的开销。记住，我宁可增加你的薪水，也不愿意把这些钱发给另一个QA团队然后你再修正bug。因此，如果你的代码满是bug的话，我不得不把钱付给更多的人，而你也只能分得很小的一块饼。</p>
<p style="padding-left: 30px;">4. 写下有效率的代码，不但是让人读得有效率，而且也是让CPU执行 地有效率。对于坏代码永远不会善罢甘休。</p>
<p style="padding-left: 30px;">5. 多了解今天工作需要之外的事情。你不仅仅要知道今天干什么，还要知道明天需要什么。</p>
<p style="padding-left: 30px;"><span id="more-3281"></span></p>
<p style="padding-left: 30px;">6. 回家时不时做点菜，是的，真正的做菜。这会教会你菜谱和做饭的不同。菜谱告诉你这道菜需要什么样的食材，而你实际去做需要考虑的是你现在手上有什么……这就是其中的不同。（对于一个刚起步的公司，这是一个最大的教训）</p>
<p style="padding-left: 30px;">7. 创新和好点子（技术或是产品），请与大家共享。</p>
<p style="padding-left: 30px;">8. 我知道你不喜欢商人。我也知道为什么。他们销售那些你做不到的，他们承诺那些你完不成的。他们要求的比他们付出的更多。但是，没有他们，我们可能没有办法把商业转换成产品。这是一件很难的技能。把你的想法告诉我，我愿意成为你和他们间的缓冲。要建造一个好的团队，我们需要的所有的东西。</p>
<p style="padding-left: 30px;">9. 作为一个工程师，热爱你的专业。你能拥有一个可以挣钱、受人尊重、并拥有乐趣的程序员人生。</p>
<p>你觉得怎么样？</p>
</div>
<p></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/21589.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20977.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20765.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/20276.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19612.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/19464.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3281" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="6e72cce38e">
<img alt="image placeholder" >
<meta itemprop="headline" content="架构师给程序员的一封信">
<meta itemprop="description" content="下面的邮件是某Architect发给他的Engineering团队的（来源），我觉得挺不错的，翻译过来，我相信我们所有的程序员都能从中学到很多东西。下面是这封邮件——

每次当我开始做新的东西是我就会很兴奋。就算在软件圈里做了20年以后，每当开始新的旅程里，我都觉得我心中有一些东西不吐不快。这是我们大家一起的旅程。我强烈地相信我们详细规划的过程是很有乐趣的，富有挑战的和丰富多彩的。我想让这个旅...">
<meta itemprop="datePublished" content="2010-11-16T09:12:04+08:00">
<meta itemprop="dateModified" content="2010-11-15T14:27:06+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3281.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3281.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="4.12">
<meta itemprop="ratingCount" content="17">
</div>
</div>
<div id="post-ratings-3281-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-11-16T09:12:04+08:00</pubDate>
<guid>https://coolshell.cn/articles/3281.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 版本管理器的发展史 ]]></title>
<link>https://coolshell.cn/articles/3288.html</link>
<content><![CDATA[ 
<p>以前本站发布过<a rel="bookmark" href="https://coolshell.cn/articles/3100.html">编程语言进化</a>，<a rel="bookmark" href="https://coolshell.cn/articles/3097.html">Windows的达尔文进化图</a>，今天在网上看到版本管理器的进化图，转过来，源文链接如下：</p>
<p><a href="https://codicesoftware.blogspot.com/2010/11/version-control-timeline.html" target="_blank">http://codicesoftware.blogspot.com/2010/11/version-control-timeline.html</a> (墙)</p>
<p style="text-align: center;"><a href="https://coolshell.cn/wp-content/uploads/2010/11/scmhistory.png"><img alt="image placeholder" >
<p>这张图上分成了四个时期：</p>
<p><span id="more-3288"></span></p>
<p><strong>史前时期</strong>：1982年的RCS。现在你可能还能在Unix的发布包中找到它。</p>
<p><strong>古典时期</strong>：1990年的CVS（经典的SCM管理器，可惜不能track目录和文件名的改变，今天这个东西已经过时了），1985年的PVCS，1992年的clearcase（价格贵，功能复杂，当然，今天也有很多公司在用），微软的VSS（Welcome to Hell），90年代中期的Perforce(P4，这个工具今天都还在被广泛地使用，尤其是那些中等大小却有着大量开发团队的公司，现在是Google内部最大的代码管理器)。</p>
<p><strong>中世纪时期</strong>：SVN（Linus很不喜欢SVN，2006年引入了Git），AccuRev(强力支持branch和merge，其扮演了一个很重要角色帮助社区脱离clearcase和CVS)，</p>
<p><strong>文艺复兴时期</strong>：BitKeeper——Sun的内部管理工具，Linux的内核代码2002年也用这个工具，其实，很多开源工程都在用这个工具，2005年这个工具的东家BitMover对大家对BitKeeper逆向工程很不满，于是停止支持开源，于是出现了Git。</p>
<p>Git的第一个版本是Linux之父Linus Torvalds亲手操刀设计和实现的（据说只用了一个周末），Linus不仅仅给出一个原始设计（简单的、干净的、天才的），同时，他也用自己那独一无二的风格催生了这个项目（请参看： <a href="https://codicesoftware.blogspot.com/2007/05/linus-torvalds-on-git-and-scm.html" target="_blank">http://codicesoftware.blogspot.com/2007/05/linus-torvalds-on-git-and-scm.htm</a>l 还是被墙）。</p>
<p>在Linus介绍Git的著名的演讲中，他强烈地批评（好吧，应该算是侮辱）了CVS，SVN，和Perforce：“Subversion是史上最毫无意义的项目，从项目开始就是这样了”，“如果你喜欢CVS，那么你现在应该在某个精神病研究中心或是别的地方”，“别在用Preforce了，它是十分糟糕和可悲的，这绝对绝对是真的”。无论是反对还是喜欢，Linus的确是改变了历史——中世纪已经过去了，现在的世界由分布式系统主宰，以及消除branch和merge的恐惧。</p>
<p>Git 基于 DAG 结构 (Directed Acyclic Graph)，其运行起来相当的快。在Git发布后的来年，世界上所有的大型的开源项目全部从Subversion迁移到了Git上，<a href="https://www.github.com/" target="_blank">www.github.com</a>真是很大，这可能是这具星球上最强大最牛最酷的SCM系统了。Git可能并不是最简单的，但它一定会是未来十年的主流。（有空读读这本书——<a href="http://peepcode.com/products/git-internals-pdf" target="_blank">Git Internals</a>）</p>
<p>Mercurial (Hg) 第一次出现在2005年4月，也是因为BitKeeper不免费了。Hg可以和Git在一起使用，见：<a href="http://mercurial.selenic.com/wiki/HgGit" target="_blank">http://mercurial.selenic.com/wiki/HgGit</a>。但是Hg和Git在设计上不一样，他们对提交/变更的概念是一样的，只不过Git用tree来实现，而Hg则是用扁平的文件和目录来实现（revlog），设计细节可参看：<a href="http://mercurial.selenic.com/wiki/Design">http://mercurial.selenic.com/wiki/Design</a>和 <a href="http://mercurial.selenic.com/wiki/DeveloperInfo">http://mercurial.selenic.com/wiki/DeveloperInfo</a>。</p>
<p>Darcs (Darcs Advanced Revision Control System)是另一个让你摆脱Subversion和CVS的工具，2002年开始，今年是2.5版。它的优势是性能，以及他与众不同的历史版本管理——管理patches而不是snapshot（提交/修改），当然，这样一来，历史改变看上去很不好懂。</p>
<p>Bazaar (bzr) 是另一个开源的 DVCS，它试图给SCM的世界里带来一些新的东西。其由Canonical开发（Ubuntu的那个公司），在2008年成为GNU。</p>
<p>Plastic在2006年出现，强力地支持branch和merge，其还提供了强大的图示，包括3D的版本树，Plastic主要是为了让中等开发团队使用，介于大型的团队（ClearCase）和小型的团队（Subversion）之间。</p>
<p>Team Foundation Server (TFS)，微软的新一代SCM工具，主要是为了VSS的失败负责，但是他还不是版本管理上还是很强，只不过，他集成了一大堆各种各样的工具，比如：issue tracking，test management等。</p>
<p>（全文完）</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/7755.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/93.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/343.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/3463.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/194.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/732.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3288" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="3e5a0fcf8e">
<img alt="image placeholder" >
<meta itemprop="headline" content="版本管理器的发展史">
<meta itemprop="description" content="以前本站发布过编程语言进化，Windows的达尔文进化图，今天在网上看到版本管理器的进化图，转过来，源文链接如下：

http://codicesoftware.blogspot.com/2010/11/version-control-timeline.html (墙)

这张图上分成了四个时期：



史前时期：1982年的RCS。现在你可能还能在Unix的发布包中找到它。
...">
<meta itemprop="datePublished" content="2010-11-17T08:50:48+08:00">
<meta itemprop="dateModified" content="2010-11-17T11:52:22+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3288.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3288.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.56">
<meta itemprop="ratingCount" content="9">
</div>
</div>
<div id="post-ratings-3288-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-11-17T08:50:48+08:00</pubDate>
<guid>https://coolshell.cn/articles/3288.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ Jeff Dean的Stanford演讲 ]]></title>
<link>https://coolshell.cn/articles/3301.html</link>
<content><![CDATA[ 
<p><img alt="image placeholder" >
<ul>
<li>比较了从1999年到2010年十年来的搜索量的变化。搜索量增加了 1000 倍，而搜索速度快了5 倍。1999年，一个网页的更新最多需要一个月到两个月，而今天，只需要几秒钟，足足加快了5w倍。</li>
<li>一开始，这些大量的查询产生了大约30GB的I/O量。2004年，他们考虑过全部重写infrastructure。</li>
<li>讨论了一些关于变量长度字节对齐的东西。</li>
<li>今天的MapReduce 有400万个作业，处理将近1000PB的数据，130PB的中间数据，还有45PB的输出数据。（1PB =1024TB）关于 MapReduce （Google云计算的精髓） 的一些统计，见下图：</li>
<li><img alt="image placeholder" >
</ul>
<p><span id="more-3301"></span></p>
<ul>
<li>现在Jeff正在做一个叫Spanner的项目，这是一个跨多个数据中心的项目。在后来的Q&amp;A中，Jeff解释了现在的数据基本上都在各个数据中心中，数据在不同数据中心间的交换几乎不可能。所以，他们需要提供一些手动的方式或是一些工作或任务来达到数据共享。这其中还需要有一些策略配置，共同的namespace，事务处理，数据一致性等等工作。</li>
</ul>
<ul>
<li>最后一个段落应该是最精彩的，Jeff讲了很多很有意思的东西，绝对让你受用一生：
<ul>
<li>一个大型的系统需要分解成N多的小services.（这和Amazon的很相似，一个页面的调用可能要经过几百个后台的services）</li>
<li>代码的性能将会是想当的重要。Jeff给了一张叫“Numbers Everyone Should Know” 的slide，如下所示，我觉得太经典了，其中的东西，如果你看过我的那篇“<a href="https://coolshell.cn/articles/3236.html" target="_blank"><strong>给老婆普及计算机知识</strong></a>”，我想我不需要多解释了。（注：1 ns = 十亿分之一秒）</li>
<li><img alt="image placeholder" >
<li>把相同的东西抽出来去建立一个系统，而不是把所有的事情交给所有的人。他说： “最后的那个功能可能会导致你怎么个系统超出了原有的复杂度”。</li>
<li>不要无限制地设计可扩展性。5倍到50倍的扩展性设计足够了。如果你要达到100倍的，那应该是re-arch了。</li>
<li>Jeff很喜欢有中心主结点的架构体系，他并不喜欢分布式系统。当然，中心主结点主要是用来做控制的，而不是做数据或是计算服务的。</li>
<li>J在一些小机器上运行多个小服务，而不在一个大机器上运行一个mongo作业。越小的单元就越容易处理，修复，负载均衡和扩展。（化繁为简）</li>
<li>…… ……</li>
</ul>
</li>
</ul>
<p>这是一个非常不错的演讲，很让人开阔眼界。</p>
<p>最后，我想说说英文，很多程序员都很不喜欢英文，哎……怎么说呢？如果你今天对英文还很害怕的话，这只能怪我们的教育制度的失败。但如果你以此为借口的话，那只能怪你自己了。没有英文的能力，你的技术和认知仅限于中文圈中，而中文圈中基本上都是产商的文化。有人说，“功夫网”让我们的internet成为了局域网，而我想说，让我们成为局域网的不是那个墙，而是我们自己的世界观和英文能力。</p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/5224.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/21615.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/21164.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17381.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/12136.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/11454.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3301" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="8d0946385a">
<img alt="image placeholder" >
<meta itemprop="headline" content="Jeff Dean的Stanford演讲">
<meta itemprop="description" content="Google 公司的 Jeff Dean 在Stanford大学做了一个非常 精彩的演讲（视频未墙）。我觉得我们每一个人都应该去看一看这个视频，当然，没有字幕，需要不错的听力，当然，我不可能全部翻译出来，因为我也不是完全能听懂，下面是一些相关的Notes，供你参夸，并欢迎牛人指证。

	比较了从1999年到2010年十年来的搜索量的变化。搜索量增加了 1000 倍，而搜索速度快了5 倍。199...">
<meta itemprop="datePublished" content="2010-11-22T09:07:36+08:00">
<meta itemprop="dateModified" content="2010-11-21T19:52:46+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3301.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3301.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.88">
<meta itemprop="ratingCount" content="8">
</div>
</div>
<div id="post-ratings-3301-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-11-22T09:07:36+08:00</pubDate>
<guid>https://coolshell.cn/articles/3301.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 几篇技术文章 ]]></title>
<link>https://coolshell.cn/articles/3311.html</link>
<content><![CDATA[ 
<p><strong>The Art of Unix</strong></p>
<p><a href="http://www.faqs.org/docs/artu/" target="_blank">http://www.faqs.org/docs/artu/</a></p>
<p><strong>Perl for Impatient Developer</strong></p>
<p><a href="https://blob.perl.org/books/impatient-perl/iperl.pdf" target="_blank">http://blob.perl.org/books/impatient-perl/iperl.pdf</a></p>
<p><strong>Game Development with Javascript</strong></p>
<p><a href="http://www.brighthub.com/hubfolio/matthew-casperson/blog/archive/2009/06/29/game-development-with-javascript-and-the-canvas-element.aspx" target="_blank">http://www.brighthub.com/hubfolio/matthew-casperson/blog/archive/2009/06/29/game-development-with-javascript-and-the-canvas-element.aspx</a></p>
<p><strong>Introduction to x64 Assembly</strong></p>
<p><a href="https://software.intel.com/en-us/articles/introduction-to-x64-assembly/" target="_blank">http://software.intel.com/en-us/articles/introduction-to-x64-assembly/</a></p>
<p><strong>Database Fundamental</strong></p>
<p><a href="https://www.ibm.com/developerworks/wikis/display/db2oncampus/FREE+ebook+-+Database+fundamentals">https://www.ibm.com/developerworks/wikis/display/db2oncampus/FREE+ebook+-+Database+fundamentals</a></p>
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/18360.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/4795.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/2053.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1850.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1532.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/1042.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3311" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="11fe25206b">
<img alt="image placeholder" >
<meta itemprop="headline" content="几篇技术文章">
<meta itemprop="description" content="The Art of Unix

http://www.faqs.org/docs/artu/

Perl for Impatient Developer

http://blob.perl.org/books/impatient-perl/iperl.pdf

Game Development with Javascript

http://www.brighthub.com...">
<meta itemprop="datePublished" content="2010-11-25T09:04:54+08:00">
<meta itemprop="dateModified" content="2010-11-24T18:53:26+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3311.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3311.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.73">
<meta itemprop="ratingCount" content="11">
</div>
</div>
<div id="post-ratings-3311-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-11-25T09:04:54+08:00</pubDate>
<guid>https://coolshell.cn/articles/3311.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
<item>
<title><![CDATA[ 几个在线颜色选择器 ]]></title>
<link>https://coolshell.cn/articles/3314.html</link>
<content><![CDATA[ 
<p>下面是一些在线的颜色配色方案，也许可以为你的Web配色方面提供一些参考。还有<a rel="bookmark" href="https://coolshell.cn/articles/3013.html" target="_blank">一些非常有意思的杂项资源</a>你也可以去看看。</p>
<ul>
<li><a href="http://colorschemedesigner.com/" target="_blank">http://colorschemedesigner.com/</a></li>
<li><a rel="nofollow" href="http://www.colourlovers.com/" target="_blank">http://www.colourlovers.com/</a></li>
<li><a rel="nofollow" href="https://kuler.adobe.com/" target="_blank">http://kuler.adobe.com</a></li>
<li><a rel="nofollow" href="http://opencodeproject.com/colorchooser/#" target="_blank">http://opencodeproject.com/colorchooser/</a></li>
<li><a rel="nofollow" href="http://www.yafla.com/yaflaColor/ColorRGBHSL.aspx" target="_blank">http://www.yafla.com/yaflaColor/ColorRGBHSL.aspx</a></li>
<li><a rel="nofollow" href="http://www.colorjack.com/sphere/" target="_blank">http://www.colorjack.com/sphere/</a></li>
<li><a rel="nofollow" href="http://easyrgb.com/" target="_blank">http://easyrgb.com</a></li>
</ul>
<p><img alt="image placeholder" >
<p align="center"><img alt="image placeholder" >
<div style="margin-top: 15px; font-size: 11px;color: #cc0000;">
<p align="center"><strong>（转载本站文章请注明作者和出处 <a href="https://coolshell.cn/">酷 壳 – CoolShell</a> ，请勿用于任何商业用途）</strong></p>
</div>
<div style="text-align:center;padding:0px;font-size: 14px;margin-bottom: 50px;">——=== <b>访问 <a href="https://coolshell.cn/404/" target="_blank">酷壳404页面</a> 寻找遗失儿童。</b> ===——</div>
<div class="wp_rp_wrap  wp_rp_vertical_m" id="wp_rp_first"><div class="wp_rp_content">
<h3 class="related_post_title">相关文章</h3>
<ul class="related_post wp_rp">
<li>
<a href="https://coolshell.cn/articles/3820.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/671.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/189.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/17737.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/5537.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
<li>
<a href="https://coolshell.cn/articles/194.html" class="wp_rp_thumbnail"><img alt="image placeholder" >
</li>
</ul>
</div></div>
<div id="post-ratings-3314" class="post-ratings" itemscope itemtype="http://schema.org/Article" data-nonce="313f369d8b">
<img alt="image placeholder" >
<meta itemprop="headline" content="几个在线颜色选择器">
<meta itemprop="description" content="下面是一些在线的颜色配色方案，也许可以为你的Web配色方面提供一些参考。还有一些非常有意思的杂项资源你也可以去看看。

	http://colorschemedesigner.com/
	http://www.colourlovers.com/
	http://kuler.adobe.com
	http://opencodeproject.com/colorchooser/
	http...">
<meta itemprop="datePublished" content="2010-11-25T10:44:56+08:00">
<meta itemprop="dateModified" content="2010-11-22T20:12:16+08:00">
<meta itemprop="url" content="https://coolshell.cn/articles/3314.html">
<meta itemprop="author" content="陈皓">
<meta itemprop="mainEntityOfPage" content="https://coolshell.cn/articles/3314.html">
<div style="display: none;" itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="酷 壳 - CoolShell">
<meta itemprop="url" content="https://coolshell.cn">
<div itemprop="logo" itemscope itemtype="https://schema.org/ImageObject"><meta itemprop="url" content=""></div>
</div>
<div style="display: none;" itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
<meta itemprop="bestRating" content="5">
<meta itemprop="worstRating" content="1">
<meta itemprop="ratingValue" content="3.5">
<meta itemprop="ratingCount" content="8">
</div>
</div>
<div id="post-ratings-3314-loading" class="post-ratings-loading">
<img alt="image placeholder" >
 ]]></content>
<pubDate>2010-11-25T10:44:56+08:00</pubDate>
<guid>https://coolshell.cn/articles/3314.html</guid>
<author><![CDATA[ 陈皓 ]]></author>
</item>
</channel>
</rss>
