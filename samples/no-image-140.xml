<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
<channel>
<title>Coding Horror</title>
<description>programming and human factors</description>
<link>https://blog.codinghorror.com/</link>
<pubDate>Sun, 19 Apr 2020 00:00:01 GMT</pubDate>
<!-- other elements omitted from this example -->
<item>
    <title>Building a PC, Part IX: Downsizing</title>
    <link>https://blog.codinghorror.com/building-a-pc-part-ix-downsizing/</link>
    <content>
                    <p>Hard to believe that I've had the same PC case since 2011, and my last serious upgrade was in 2015. I guess that's yet another sign that <a href="https://blog.codinghorror.com/the-pc-is-over/">the PC is over</a>, because PC upgrades have gotten <em>really boring</em>. It took 5 years for me to muster up the initiative to get my system fully upgraded! 🥱</p>
    <p>I've been slogging away at this for quite some time now. My PC build blog entry series spans 13 glorious years:</p>
    <ul>
    <li>
    <a href="https://blog.codinghorror.com/building-a-pc-part-viii-iterating/">Building a PC, Part VIII: Iterating</a> (2015)</li>
    <li>
    <a href="https://blog.codinghorror.com/building-a-pc-part-vii-rebooting/">Building a PC, Part VII: Rebooting</a> (2011)</li>
    <li>
    <a href="http://www.codinghorror.com/blog/2009/12/building-a-pc-part-vi-rebuilding.html">Building a PC, Part VI: Rebuilding</a> (2009)</li>
    <li>
    <a href="http://www.codinghorror.com/blog/2008/04/building-a-pc-part-v-upgrading.html">Building a PC, Part V: Upgrading</a> (2008)</li>
    <li>
    <a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-iv-now-its-your-turn.html">Building a PC, Part IV: Now It's Your Turn</a> (2007)</li>
    <li>
    <a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-iii-overclocking.html">Building a PC, Part III: Overclocking</a> (2007)</li>
    <li>
    <a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-ii.html">Building a PC, Part II: Burn in</a> (2007)</li>
    <li>
    <a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-i.html">Building a PC, Part I: Minimal boot</a> (2007)</li>
    </ul>
    <p>The future of PCs may not necessarily be <strong>more speed</strong> (though there is some of that, if you read on), but in <strong>smaller builds</strong>. For this iteration, my go-to cases are the <a href="https://www.dan-cases.com/dana4.php">Dan A4 SFX</a> ...</p>
    <figure class="kg-card kg-image-card"><img alt="https://blog.codinghorror.com/content/images/2020/04/dan-a4-sfx-v2-build-pc-side.jpg" class="kg-image"></figure><figure class="kg-card kg-image-card"><img alt="https://blog.codinghorror.com/content/images/2020/04/dan-a4-sfx-v2-build-gpu-side.jpg" class="kg-image"></figure><p>And the <a href="https://streacom.com/products/da2-chassis/">Streacom DA2</a> ...</p>
    <figure class="kg-card kg-image-card"><img alt="https://blog.codinghorror.com/content/images/2020/04/IMG_0545.jpg" class="kg-image"></figure><figure class="kg-card kg-image-card"><img alt="https://blog.codinghorror.com/content/images/2020/04/IMG_0532.jpg" class="kg-image"></figure><p>The attraction here is <strong>maximum power in minimum size</strong>. Note that <a href="http://i.imgur.com/odoYjle.jpg">each of these cases are <em>just </em>large enough</a> to fit ...</p>
    <ul>
    <li>a standard mini-ITX system</li>
    <li>SFX power supply</li>
    <li>full sized GPU</li>
    <li>reasonable CPU cooler</li>
    </ul>
    <p>... though the DA2 offers substantially more room for cooling the CPU and adding fans.</p>
    <figure class="kg-card kg-image-card kg-card-hascaption"><img alt="https://blog.codinghorror.com/content/images/2020/04/mini-itx-case-sizes-compared.png" class="kg-image"><figcaption><a href="http://i.imgur.com/odoYjle.jpg">http://i.imgur.com/odoYjle.jpg</a></figcaption></figure><p>I'm not sure you can physically build a smaller standard mini-ITX system than the DAN A4 SFX, at least not without custom parts!</p>
    <blockquote>
    <a href="https://www.dan-cases.com/dana4.php">DAN A4-SFX</a><br>200mm × 115mm × 317mm = 7.3 liters<br><br><a href="https://www.silverstonetek.com/raven/product-rv.php?pid=606">Silverstone RVZ02</a> / ML08<br>380mm × 87mm × 370mm = 12.2 liters<br><br><a href="https://ncases.com/products/m1">nCase M1</a><br>240mm × 160mm × 328 mm = 12.6 liters<br><br>Streacom DA2<br>180mm × 286mm × 340mm = 17.5 liters</blockquote>
    <p>(For comparison with <a href="https://blog.codinghorror.com/the-golden-age-of-x86-gaming/">The Golden Age of x86 Gaming Consoles</a>, a PS4 Pro occupies 5.3 liters and an Xbox One S 4.3 liters. About 50% more volume for considerably more than 2× the power isn't a bad deal!)</p>
    <p>I chose the Streacom DA2 as my personal build, because after experimenting heavily with the DAN A4 SFX, I realized you need more room to deal with extremely powerful CPUs and GPUs in this form factor, and I wanted a truly powerful system:</p>
    <ul>
    <li>Intel <a href="https://www.intel.com/content/www/us/en/products/processors/core/i9-processors/i9-9900ks.html">i9-9900KS</a> (8 core, 16 thread, 5.0 GHz) CPU </li>
    <li>Samsung 970 PRO 1TB / Samsung 970 EVO 2TB / Samsung 860 QVO 4TB SATA</li>
    <li>64GB DDR4-3000</li>
    <li>
    <a href="http://www.cryorig.com/h7.php">Cryorig H7</a> cooler (exact fit)</li>
    <li>NVIDIA GeForce RTX 2080 Ti GPU</li>
    </ul>
    <p>Compared to my old 2015-2017 system, a slightly overclocked i7-7700k, that at least gives me 2× the cores (and faster cores, both in clock rate and IPC), 2× the memory, and 2× the M.2 slots (two versus one).</p>
    <figure class="kg-card kg-image-card"><img alt="https://blog.codinghorror.com/content/images/2020/04/streacom-da2-9900ks-stats.png" class="kg-image"></figure><p>The DA2 is a clever case though less perfect than the A4-SFX. What's neat about it is the hybrid open-air design (on the top and bottom) plus the versatile horizontal and vertical bracket system interior. Per <a href="https://streacom.com/downloads/ug/da2-user-guide-180901.pdf">the manual (pdf)</a>:</p>
    <figure class="kg-card kg-image-card"><img alt="https://blog.codinghorror.com/content/images/2020/04/streacom-da2-overview.png" class="kg-image"></figure><p>Check out all the bracket mounting options. Incredibly versatile, and easy to manipulate with the captured nut and bolt design:</p>
    <figure class="kg-card kg-image-card"><img alt="https://blog.codinghorror.com/content/images/2020/04/streacom-da2-bracket-options.png" class="kg-image"></figure><p>Note that you can (and really <em>should</em>) pop out the top and bottom acrylic pieces with the mesh dust net.</p>
    <figure class="kg-card kg-image-card"><img alt="https://blog.codinghorror.com/content/images/2020/04/streacom-da2-dust-nets.png" class="kg-image"></figure><p>I had <strong>dramatically better temperatures</strong> after I did this, and it also made the build easier since the case can fully "breathe" through the top and bottom. You'll note that the front of the DA2 is totally solid, no air holes, so you do need that extra airflow.</p>
    <p>I only have a few criticisms of this Streacom DA2 case:</p>
    <ul>
    <li>The side panels are tool free, which is excellent, but the pressure fit makes them fairly difficult to remove. Feels like this could be tweaked?</li>
    <li>(Don't even think about using a full sized ATX power supply. In theory it is supported, but the build becomes so much more difficult. Use a SFX power supply, which you'd expect to do for a mini-ITX build anyway.)</li>
    <li>My primary complaint is that the <strong>power extension cable gets in the way</strong>. I had to remove it and re-attach it during my build. They should custom route the power cable upwards so it blocks less stuff.</li>
    <li>Less of a criticism and more of an observation: if your build uses a powerful GPU and CPU, you'll need two case fans. There's mounting points for a 92mm fan in the rear, and the bracket system makes it easy to mount a 140mm fan blowing inward. You will definitely need both fans!</li>
    </ul>
    <p>Here's the configuration I recommend, open on both the top and bottom for maximum airflow, with three fans total:</p>
    <figure class="kg-card kg-image-card"><img alt="https://blog.codinghorror.com/content/images/2020/04/streacom-da2-fan-config.jpg" class="kg-image"></figure><p>If you are a water cooling kind of person – I am definitely not, I experienced one too many traumatic cooling fluid leaks in the early 2000s – then you will use that 140mm space for the radiator.</p>
    <p>I have definitely <a href="https://blog.codinghorror.com/is-your-computer-stable/">burn-in tested this machine</a>, as I do all systems I build, and it passed with flying colors. But to be honest, if you expect to be under full CPU and GPU loads for extended periods of time you <em>might</em> need to switch to water cooling due to the space constraints. (Or pick slightly less powerful components.)</p>
    <p>If you haven't built a PC system recently, it's easier than it has ever been. Heck by the time you install the M.2 drives, memory, CPU, and cooler on the motherboard you're <a href="https://www.reddit.com/r/sffpc/comments/drvb47/your_scientists_were_so_preoccupied_with_whether/">almost done</a>, these days!</p>
    <figure class="kg-card kg-image-card"><img alt="https://blog.codinghorror.com/content/images/2020/04/open-air-mini-itx-build.jpg" class="kg-image"></figure><p>There are a lot of <a href="https://yuel-beast-designs.myshopify.com/products/motif-monument">interesting compact mini-itx builds</a> out there. Perhaps that's the primary innovation in PC building for 2020 and beyond – <strong>packing all that power into less than 20 liters of space! </strong></p>
                </content>
    <pubDate>2020-04-19T23:56:03.000Z</pubDate>
    <guid>https://blog.codinghorror.com/building-a-pc-part-ix-downsizing/</guid>
    </item>
    <item>
    <title>The Rise of the Electric Scooter</title>
    <link>https://blog.codinghorror.com/the-rise-of-the-electric-scooter/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>In an electric car, the (enormous) battery is <a href="https://www.bloomberg.com/opinion/articles/2019-04-12/electric-vehicle-battery-shrinks-and-so-does-the-total-cost">a major part of the price</a>.  If electric car prices are decreasing, battery costs <em>must</em> be decreasing, because it's not like the cost of fabricating rubber, aluminum, glass, and steel into car shapes can decline that much, right?</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/09/ev-battery-costs.png" alt="ev-battery-costs"></p>
    <p>On an <em>electric scooter</em>, though, the effect of battery price has to be even more dramatic because scooters are such <a href="https://blog.codinghorror.com/geek-transportation-systems/">lightweight, compact, and simple machines</a>. They aren't much more than a battery and an electric motor to begin with. Remember the <a href="https://www.sfgate.com/business/article/Sebastopol-s-Zap-Power-Systems-is-banking-on-3067718.php">the Zappy electric scooter</a> from twenty years ago?</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/09/zappy-electric-scooter-year-2000.jpg" alt="zappy-electric-scooter-year-2000"></p>
    <p>What killed the electric scooter back then is the same thing that <a href="https://blog.codinghorror.com/electric-geek-transportation-systems/">killed the electric car</a> of year 2000: terrible lead-acid battery technology. It's too heavy, it lacks power, it doesn't have enough range, it takes too long to charge. These are all different ways of saying the same thing: <em>the battery sucks</em>. It wasn't until Lithium Ion batteries matured that both the electric car and the electric scooter — and pretty much electric <em>everything</em>, if you think about it — became viable.</p>
    <p>Thus, one way to see if Lithium Ion battery prices are indeed generally dropping independent of all other manufacturing concerns is to examine the cost of electric scooters over the last few years. Let's consider one of the most popular models, the Xiaomi Mi M365:</p>
    <p><a href="https://camelcamelcamel.com/Xiaomi-Electric-Long-range-Fold-n-Carry-Ultra-Lightweight/product/B076KKX4BC"><img alt="https://blog.codinghorror.com/content/images/2019/09/xiaomi-mi-m365-price-history-2018-2019.png" alt="xiaomi-mi-m365-price-history-2018-2019"></a></p>
    <p>This graph only shows roughly two years, from January 2018 to now; it looks like the original price for the Xiaomi M365 when it hit the US market in early 2017 was around $800. So <strong>the price of a popular, common electric scooter has <em>halved</em> in three years.</strong> Very good news indeed for electric vehicles of all types!</p>
    <p>This dramatic drop in electric scooter price from 2016 to 2019 may not be surprising versus the parallel rise of the quasi-legal electric scooter smartphone app rental industry over roughly the same time period, in the form of Bird, Lime, Skip, Spin, Scoot, etc.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/09/electric-scooter-rentals-bird-lime.jpg" alt="electric-scooter-rentals-bird-lime"></p>
    <p>Early versions of Bird scooters were <em>actual Xiaomi M365s</em>, slightly modified for rental. Only by late 2018 had they <a href="https://en.wikipedia.org/wiki/Bird_(company)#Vehicles">migrated to</a> custom built, ruggedized scooters optimized for the rental market. The rental industries <a href="https://www.latimes.com/business/technology/la-fi-tn-bird-scooters-money-profit-strategy-20190505-story.html">have their own challenges</a>, and ironically have started to pivot to monthly rentals rather than the classic 15 cents per minute.</p>
    <blockquote>
    <p>Bird has experimented with its business model in recent months. In early March, the company altered its repair program in Los Angeles, which had relied on gig workers to fix broken scooters. It moved repairs in-house (though scooters are still charged each night by an army of gig workers). Later that month, the company introduced scooters with locks in some markets, in a bid to prevent theft and vandalism.</p>
    <p>In April, it announced the launch of a more traditional rental program in San Francisco and Barcelona, in which users could pay $25 per month to rent a Xiaomi m365 from the company rather than paying per ride.</p>
    </blockquote>
    <p>But this isn't meant to be a blog entry about the viability of scooter rental company business models.</p>
    <p>I want to tackle a more fundamental question: <strong>are electric scooters the future of transportation?</strong></p>
    <p>Even Uber, as screwed up of a company as they still are, knows cars are overkill for a lot of basic transportation needs:</p>
    <blockquote class="twitter-tweet">
    <p lang="en" dir="ltr">Uber believes their current micro fleet of ebikes and scooters can displace trips under 3 miles.<br><br>46% of Uber's rides are under 3 miles 👀 <a href="https://t.co/OFmb8arZ3j">pic.twitter.com/OFmb8arZ3j</a></p>— Micromobility Industries (@MicromobilityCo) <a href="https://twitter.com/MicromobilityCo/status/1116703423108227072?ref_src=twsrc%5Etfw">April 12, 2019</a>
    </blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>We have plenty of scooters here at my house, and the family and I enjoy them greatly, but I have never actually ridden or owned an electric scooter. So I bought one. It is of course the popular, inexpensive, and well reviewed <a href="https://www.amazon.com/dp/B076KKX4BC/?tag=codihorr-20">Xiaomi Mi M365</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/08/m365-scooter.jpg" alt="m365-scooter"></p>
    <p>Here's a picture of my electric scooter inside <a href="https://blog.codinghorror.com/electric-geek-transportation-systems/">my electric car</a>. (I apologize that I didn't have an electric bicycle to park next to it for maximum smugness, but you can <em>bet your sweet electrons</em> I'll work on that next!)</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/09/electric-scooter-in-electric-car.jpg" alt="electric-scooter-in-electric-car"></p>
    <p>The short version of my review is <strong>this electric scooter is incredibly fun, works great, and if you can get it for a price around $300, practically a no-brainer.</strong> I love it, my kids love it, and as long as you're <a href="https://www.vox.com/technology/2018/11/2/18053650/elon-musk-electric-scooters-dignity-recode-swisher">conceptually OK with the look, unlike Elon Musk</a> 🛴💨 then you'll probably love it too.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/0JgCn8-aETA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    <p>I found a neat video covering the "one year later" experience of owning the scooter, and what you might eventually run into or want to tweak.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/LyzdSktRfVI" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    <p>(The main thing to take away from this video is that flats <em>super suck</em> on tires this small, so be warned. I put Slime in my Mi's tires out of an abundance of caution, but you could also go with solid tubeless tires – at the cost of some ride comfort – if you're really worried.)</p>
    <p>That's not to say that the electric scooter experience is perfect. There are some challenges with electric scooters, starting with the biggest one: <a href="https://www.techradar.com/news/are-electric-scooters-legal-know-the-law-where-you-live">your local government has no idea how to regulate the darn things</a>.</p>
    <ul>
    <li>Is this regulated like a bicycle? If not, why not?</li>
    <li>Are they allowed on the sidewalk?</li>
    <li>Do you have to ride them in the road, with cars … uh, depending on the speed limit?</li>
    <li>Do you need a driver's license?</li>
    <li>Do you need a helmet?</li>
    <li>Are you even <em>allowed</em> to legally ride them in public at all outside of private property?</li>
    </ul>
    <p>The answers also vary wildly depending on where you live, and with no consistency or apparent logic. Here are <a href="https://bayareabicyclelaw.com/new-e-scooter-laws-2019/">the current electric scooter laws in California</a>, for what it's worth, which <em>require the rider to have a valid driver's license</em> (unlike electric bicycles) and also disallow them from sidewalks, both of which I feel are onerous and unnecessary restrictions.</p>
    <p>One aspect of those laws I <em>definitely</em> agree with, however, is the <strong>15 mile per hour speed restriction</strong>. That's a plenty brisk top speed for a standing adult with no special safety equipment. Anything faster starts to get decidedly … uncomfortable. Consider <a href="https://www.ewheels.com/product/new-turbowheel-lightning-957wh-battery-2x-1000w-3600w-motors/">this monster of a 1165KWh electric scooter</a>, with dual motors and dual suspension that goes up to <em>forty freakin' miles per hour</em>.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/z6O7KmJQbJE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    <p>That … is … terrifying. Even the reviewer, in full motorcycle safety gear, wasn't willing to push it all the way to 40 MPH. And I don't blame him! But now that I've shown you the undisputed Honda Civic everyman budget model of electric scooter in the M365, hopefully this gives you a taste of the wider emerging diversity in these kinds of minimalistic electric vehicles. If you want a <a href="https://www.unagiscooters.com/products/the-scooter?variant=15012683448435">luxury</a> electric scooter, an <a href="https://fluidfreeride.com/products/mosquito-lightweight-foldable-electric-scooter">ultralight</a> electric scooter, a <a href="https://electrek.co/2019/06/10/widewheel-electric-scooter-off-road-test/">rugged offroad</a> electric scooter … all things are possible, for a price.</p>
    <p>Another reason the M365 is available for so cheap is that is successor, the <a href="https://www.mi.com/global/mi-electric-scooter-pro/">Xiaomi M365 Pro</a>, was recently released, although it is not quite possible to obtain in the US at the moment.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/1i6g-la23HE" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    <p>Having ridden my M365 a fair bit, I can confirm all the Pro improvements are welcome, if incremental: bigger battery and disc brake, more power, better display, improved latch mechanism, etc.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/09/xiaomi-mi-m365-vs-pro.jpg" alt="xiaomi-mi-m365-vs-pro"></p>
    <p>None of those Pro improvements, however, are worth a 2× increase in price so I'd recommend sticking with the M365 for now because its value proposition is off the charts. Did I mention there's a bluetooth connection, and an app, and it is possible to <a href="https://www.gearbest.com/blog/how-to/how-to-install-xiaomi-m365-electric-scooter-firmware-mod-6635">hack the M365 firmware</a>? Pretty cool how electric vehicles are inherently digital, isn't it?</p>
    <p>Here are a few other observations after riding my M365 around a fair bit:</p>
    <ul>
    <li>
    <p><strong>Please be respectful around pedestrians.</strong> Most of the sidewalks around here are not busy at all, but the pedestrians I encountered on the electric scooter were definitely more freaked out than I’ve seen before when using regular kick scooters (or skateboards) on the sidewalk, which did surprise me. An electric scooter has more heft to it, both physically at 26 pounds, and in the 15 mile per hour speed it can reach – but also mentally in terms of how it looks and how people approach it. I recommend slowing down to just above walking speed when encountering pedestrians, and if there is a bike lane available, I'd definitely recommend using that.</p>
    </li>
    <li>
    <p><strong>Hills work great.</strong> The kryptonite of traditional kick scooters is hills, and I'm pleased to report that even with a <small>cough</small> sizable adult such as myself riding, I was able to sustain a respectable above-walking speed on most <em>reasonable</em> hills. Where I looked at a hill and thought "this probably should work", it did. That's impressive, considering this <em>isn't</em> the upgraded Pro model with bigger battery and more powerful motor. On flats and downhills the performance is superb, as you'd expect. That said, if you are a really big or tall adult, or live in a particularly hilly area, wait for the Pro model or an equivalent.</p>
    </li>
    <li>
    <p><strong>Portability is good, but borderline.</strong> At ~26 pounds, the electric scooter is reasonably portable, but it's not something you a) could really get away with taking inside a restaurant / store with you to prevent theft or b) want to be carrying around on your person for any significant length of time. It's not nearly as nimble or portable as a kick scooter, but that's a high bar. You'll need to carry a bike lock and think about how to lock your scooter on bike racks, which turned out to be … more geometrically challenging than I anticipated due to the small tires, disc brakes, and the engine in the front wheel. They need more obvious locking points on the chassis.</p>
    </li>
    </ul>
    <p>To be honest with you I'm still bitter about the whole <a href="https://en.wikipedia.org/wiki/Segway_Inc.">Segway</a> debacle. There was so much hype back in the day. That ridiculous thing was <a href="https://www.wired.com/2009/12/1203segway-unveiled/">supposed to change the world</a>. Instead, we got … <em>Paul Blart Mall Cop</em>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/09/paul-blart-segway.jpeg" alt="paul-blart-segway"></p>
    <p>A Segway was $5,000 at launch in 2001, which is a whopping $7,248 in inflation adjusted dollars. Here in 2019, cheap $200 to $300 electric scooters are basically the transformational technology the Segway was <em>supposed</em> to be, aren't they? Are electric scooters the future of (most) transportation? I'm not sure, but I do like where we're headed, even if it took us twenty years to get there.</p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2019-09-12T07:24:32.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-rise-of-the-electric-scooter/</guid>
    </item>
    <item>
    <title>Electric Geek Transportation Systems</title>
    <link>https://blog.codinghorror.com/electric-geek-transportation-systems/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I've never thought of myself as a "car person". The last new car I bought (and in fact, now that I think about it, the <em>first</em> new car I ever bought) was the <a href="https://www.hagerty.com/articles-videos/articles/2018/04/12/cult-of-the-ford-svt-contour">quirky 1998 Ford Contour SVT</a>. Since then we bought a VW station wagon in 2011 and a Honda minivan in 2012 for family transportation duties. That's it. Not exactly the stuff <a href="https://en.wikipedia.org/wiki/The_Stig">The Stig's</a> dreams are made of.</p>
    <p>The station wagon made sense for a family of three, but became something of a disappointment because it was purchased before — surprise! — <a href="https://blog.codinghorror.com/on-parenthood/">we had twins</a>. As <a href="http://www.online-literature.com/twain/3274/">Mark Twain once said</a>:</p>
    <blockquote>
    <p>Sufficient unto the day is one baby. As long as you are in your right mind don't you ever pray for twins. Twins amount to a permanent riot. And there ain't any real difference between triplets and an insurrection.</p>
    </blockquote>
    <p>I'm here to tell you that a station wagon doesn't <em>quite</em> cut it as a permanent riot abatement tool. For that you need a full sized minivan.</p>
    <p>I'm <a href="https://philip.greenspun.com/materialism/cars/sienna">with Philip Greenspun</a>. Like black socks and sandals, minivans are actually … <em>kind of awesome?</em> Don't believe all the SUV propaganda. Minivans are flat out superior vehicle command centers. <a href="https://www.youtube.com/watch?v=pUG3Z8Hxa5I">Swagger wagons</a>, really.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/08/a-team-van.jpg" alt="a-team-van"></p>
    <p>The A-Team <a href="https://starcars.fandom.com/wiki/The_A-Team_Van">drove a <em>van</em></a>, not a freakin' SUV. I rest my case.</p>
    <p>After 7 years, the station wagon had to go. We initially looked at hybrids because, well, <a href="https://www.sfgate.com/opinion/article/Oh-so-pious-Prius-drivers-Smugness-drifts-2581016.php">isn't that required in California at this point?</a> But if you know me at all, you know I'm a boil the sea kinda guy at heart. I figure if you're going to flirt with partially electric cars, why not put aside these half measures and go all the way?</p>
    <p>Do you remember that <a href="https://theoatmeal.com/comics/tesla_model_s">rapturous 2014 Oatmeal comic about the Tesla Model S</a>? Even for a person who has basically zero interest in automobiles, it did sound <em>really cool</em>.</p>
    <p><a href="https://theoatmeal.com/comics/tesla_model_s"><img alt="https://blog.codinghorror.com/content/images/2019/08/oatmeal-tesla-s-spaceboat.jpg" alt="oatmeal-tesla-s-spaceboat"></a></p>
    <p>It's been 5 years, but from time to time I'd see some electric vehicle on the road and I'd think about that <strong>Intergalactic SpaceBoat of Light and Wonder</strong>. Maybe it's time for our family to jump on the electric car trend, too, and just late enough that we can avoid the bleeding edge and end up merely on the … <em>leading</em> edge?</p>
    <p>That's why we're now the proud owners of a <a href="https://www.caranddriver.com/reviews/a26144426/2019-kia-niro-ev-driven/">fully electric 2019 Kia Niro</a>.</p>
    <p><a href="https://www.caranddriver.com/reviews/a26144426/2019-kia-niro-ev-driven/"><img alt="https://blog.codinghorror.com/content/images/2019/08/kia-niro-2019.jpg" alt="kia-niro-2019"></a></p>
    <p>I've somehow gone from being a person who basically doesn't care about cars at all … to being <strong>one of those insufferable electric car people who won't shut up about them</strong>.  I apologize in advance. If you suddenly feel an overwhelming urge to close this browser tab, I don't blame you.</p>
    <p>I was expecting another car, like the three we bought before. What I got, instead, was a transformation:</p>
    <ul>
    <li>
    <p>Yes, yes, electric cars are clean, but it's a revelation how clean <em>everything</em> is in an electric. You take for granted how dirty and noisy gas based cars are in daily operation – the engine noise, the exhaust fumes, the brake dust on the rims, the oily residues and thin black film that descends on everything, the way you have to wash your hands every time you use the gas station pumps. You don't fully appreciate how oppressive those little dirty details were until they're gone.</p>
    </li>
    <li>
    <p>Electric cars are (almost) completely silent. I guess technically in 2019 electric cars require artificial soundmakers at low speed for safety, and this car has one. But The Oatmeal was right. Electric cars <em>feel</em> like spacecraft because they move so effortlessly. There's virtually no delay from action to reaction, near immediate acceleration and deceleration … with almost no sound or vibration at all, like you're in freakin' space! It's so immensely satisfying!</p>
    </li>
    <li>
    <p>Electric cars aren't just <em>electric</em>, they're utterly digital to their very core. Gas cars always felt like the classic 1950s Pixar Cars world of grease monkeys and machine shop guys, maybe with a few digital bobbins added here and there as an afterthought. This electric car, on the other hand, is squarely in the post-iPhone world of everyday digital gadgets. It feels more like a giant smartphone than a car. I am a programmer, I'm a digital guy, I love digital stuff. And electric cars are part of <em>my</em> world, rather than the other way around. It feels good.</p>
    </li>
    <li>
    <p>Electric cars are mechanically much simpler than gasoline cars, which means they are inherently more reliable and cheaper to maintain. An internal combustion engine has hundreds of moving parts, many of which require regular maintenance, fluids, filters, and tune ups. It also has a complex transmission to translate the narrow power band of a gas powered engine. None of this is necessary on an electric vehicle, whose electric motor is basically one moving part with simple 100% direct drive from the motor to the wheels. This newfound simplicity is deeply appealing to a guy who always saw cars as incredibly complicated (but computers, not so much).</p>
    </li>
    <li>
    <p>Being able to charge at home overnight is perhaps the most radical transformation of all. Your house is now a "gas station". Our Kia Niro has a range of about <strong>250 miles</strong> on a full battery. With any modern electric car, provided you drive less than 200 miles a day round trip (who even drives this much?), it's very unlikely you'll ever need to "fill the tank" anywhere but at home. Ever. It's so strange to think that in 50 years, gas stations <a href="https://www.houstonchronicle.com/business/energy/article/As-EVs-threaten-gas-stations-owners-turn-to-14291843.php">may eventually be as odd to see in public as telephone booths now are</a>. Our charger is, conveniently enough, right next to the driveway since that's where the power breaker box was. With the level 2 charger installed, it literally <em>looks</em> like a gas pump on the side of the house, except this one "pumps" … electrons.</p>
    </li>
    </ul>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/08/level-2-ev-charger.jpg" alt="level-2-ev-charger"></p>
    <p>This electric car is such a great experience. It's so much better than our gas powered station wagon that I swear, if there was a fully electric minivan (there isn't) I would literally sell our Honda minivan <em>tomorrow</em> and switch over. Without question. And believe me, I had no plans to sell that vehicle two months ago. The electric car is <em>that much better</em>.</p>
    <p>I was expecting "yet another car", but what I got instead was a new, radical worldview. Driving a car powered by barely controlled liquid fuel detonations used to be normal. But in an world of more and more viable electric vehicles this status quo increasingly starts to feel … deeply unnatural. Electric is so much better of an overall experience that you begin to wonder: why did we <em>ever</em> do it that way?</p>
    <p>Gas cars seem, for lack of a better word, <a href="https://www.bloomberg.com/features/2016-ev-oil-crisis/"><em>obsolete</em>.</a></p>
    <p><a href="https://www.bloomberg.com/features/2016-ev-oil-crisis/"><img alt="https://blog.codinghorror.com/content/images/2019/08/ev-sales.jpg" alt="ev-sales"></a></p>
    <p>How did this transformation happen, from my perspective, so suddenly? When exactly did electric cars go from "expensive, experimental thing for crazy people" to "By God, I'll never buy another old fashioned gasoline based car if I can help it"?</p>
    <p>I was vaguely aware of the early electric cars. I even remember one coworker circa 2001 who owned a bright neon green Honda Insight. I ignored it all because, like I said, <em>I'm not a car guy</em>. I needed to do the research to understand the history, and I started with the often recommended documentary <a href="https://en.wikipedia.org/wiki/Who_Killed_the_Electric_Car%3F">Who Killed the Electric Car?</a></p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/-sc-NxP6mmI" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    <p>This is mostly about the original highly experimental <a href="https://en.wikipedia.org/wiki/General_Motors_EV1">General Motors EV1</a> from 1996 to 1999. It's so early the first models had lead-acid batteries! 😱 There's a number of conspiracy theories floated in the video, but I think the simple answer to the implied question in the title is straight up <em>price</em>. The battery tech was nowhere near ready, and per the Wikipedia article the estimated actual cost of the car was somewhere between $100,000 and $250,000 though I suspect it was much closer to the latter. It is interesting to note how much the owners (well, leasers) loved their EV1s. Having gone through that same conversion myself, I empathize!</p>
    <p>I then watched the sequel, <a href="https://en.wikipedia.org/wiki/Revenge_of_the_Electric_Car">Revenge of the Electric Car</a>. This one is essential, because it covers the dawn of the modern electric car we have today.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/jkRIu5a6Sb0" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    <p>This chronicles the creation of three very influential early electric cars — the <a href="https://en.wikipedia.org/wiki/Nissan_Leaf">Nissan Leaf</a>, the <a href="https://en.wikipedia.org/wiki/Chevrolet_Volt">Chevy Volt</a>, and of course the <a href="https://en.wikipedia.org/wiki/Tesla_Roadster_(2008)">Tesla Roadster</a> from 2005 - 2008. The precise moment that Lithium-Ion batteries were in play – that's when electric cars started to become viable. Every one of these three electric cars was well conceived and made it to market in volume, though not without significant challenges, both internal and external. None of them were perfect electric vehicles by any means: the Roadster was $100k, the Leaf had limited range, and the Volt was still technically a hybrid, albeit only using the gasoline engine to charge the battery.</p>
    <p>Ten years later, Tesla has the model 3 at $38,000 and we bought our Kia Niro for about the same price. After national and state tax incentives and rebates, that puts the price at around $30,000. It's not as cheap as it needs to be … yet. But it's getting there. And it's <a href="https://www.corporateknights.com/channels/clean-technology/faceoff-electric-vs-gas-cars-on-cost-15555966/">already competitive with gasoline vehicles in 2019</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/08/2019-civic-vs-leaf-1.jpg" alt="2019-civic-vs-leaf-1"></p>
    <p>It's still early, but the trend lines are clear. And I'm here to tell you that right now, today, I'd buy <em>any</em> modern electric car over a gasoline powered car.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/kk7ZTn9g7bY" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    <p>If you too are intrigued by the idea of owning an electric car, <em>you should be</em>. It's freaking awesome! Bring your skepticism, as always; I highly recommend the above Matt Ferrell explainer video on electric vehicle myths.</p>
    <p>As for me, I have seen the future, and it is absolutely, inexorably, and unavoidably … electric. ⚡</p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2019-08-20T11:35:16.000Z</pubDate>
    <guid>https://blog.codinghorror.com/electric-geek-transportation-systems/</guid>
    </item>
    <item>
    <title>An Exercise Program for the Fat Web</title>
    <link>https://blog.codinghorror.com/an-exercise-program-for-the-fat-web/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>When I wrote about <a href="https://blog.codinghorror.com/app-pocalypse-now/">App-pocalypse Now</a> in 2014, I implied the future still belonged to the web. And it does. But it's also true that the web has changed a lot in the last 10 years, much less the last 20 or 30.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/05/fat-city-apple-ii.png" alt="fat city"></p>
    <p>Websites have gotten a lot … <em>fatter</em>.</p>
    <p>While I think it's irrational to pine for the bad old days of <a href="http://info.cern.ch/">HTML 1.0 websites</a>, there are some legitimate concerns here. The best summary is Maciej Cegłowski's <a href="http://idlewords.com/talks/website_obesity.htm">The Website Obesity Crisis</a>.</p>
    <blockquote>
    <p>To channel a famous motivational speaker, I could go out there tonight, with the materials you’ve got, and rewrite the sites I showed you at the start of this talk to make them load in under a second. In two hours.</p>
    <p>Can you? Can you?</p>
    <p>Of course you can! It’s not hard! We knew how to make small websites in 2002. It’s not like the secret has been lost to history, like Greek fire or Damascus steel.</p>
    <p>But we face pressure to make these sites bloated.</p>
    <p>I bet if you went to a client and presented a 200 kilobyte site template, you’d be fired. Even if it looked great and somehow included all the tracking and ads and social media crap they insisted on putting in. It’s just so far out of the realm of the imaginable at this point.</p>
    </blockquote>
    <p>The <a href="http://idlewords.com/talks/website_obesity.htm">whole article is essential</a>; you should stop what you're doing and read it now if you haven't already. But if you don't have time, here's the key point:</p>
    <blockquote>
    <p>This is a screenshot from an NPR article discussing the rising use of ad blockers. The page is 12 megabytes in size in a stock web browser. <strong>The same article with basic ad blocking turned on is 1 megabyte.</strong></p>
    </blockquote>
    <p>That's right, through the simple act of running an ad blocker, you've reduced that website's payload by twelve times. Twelve! That's like the most effective exercise program <em>ever!</em></p>
    <p>Even the traditional advice to <a href="https://hackernoon.com/10-things-i-learned-making-the-fastest-site-in-the-world-18a0e1cdf4a7">keep websites lean and mean for mobile</a> no longer applies because new mobile devices, at least on the Apple side, are <em>faster than most existing desktops and laptops.</em></p>
    <blockquote class="twitter-tweet" data-lang="en">
    <p lang="en" dir="ltr">The iPhone XS is faster than an iMac Pro on the Speedometer 2.0 JavaScript benchmark. It's the fastest device I've ever tested. Insane 45% jump over the iPhone 8/X chip. How does Apple do it?! ✨ <a href="https://t.co/5nCKZUCAYK">pic.twitter.com/5nCKZUCAYK</a></p>— DHH (@dhh) <a href="https://twitter.com/dhh/status/1043277162676072449?ref_src=twsrc%5Etfw">September 21, 2018</a>
    </blockquote>
    <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>Despite <a href="https://danluu.com/web-bloat/">claims to the contrary</a>, the bad guy isn't web bloat, per se. <strong>The bad guy is <em>advertising</em></strong>. Unlimited, unfettered ad "tech" has creeped into everything and subsumed the web.</p>
    <p>Personally I don't even want to run ad blockers, and I didn't for a long time – but it's increasingly difficult to avoid running an ad blocker unless you want a clunky, substandard web experience. There's a <em>reason</em> the most popular browser plugins are inevitably ad blockers, isn't there? Just ask Google:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/05/chrome-best-extensions-google-search.png" alt="chrome-best-extensions-google-search"></p>
    <p>So it's all the more surprising to learn that Google is <a href="https://9to5google.com/2019/05/29/chrome-ad-blocking-enterprise-manifest-v3/">suddenly clamping down hard on adblockers in Chrome</a>.  Here's what the author of uBlock Origin, an ad blocking plugin for Chrome, <a href="https://github.com/uBlockOrigin/uBlock-issues/issues/338#issuecomment-496009417">has to say</a> about today's announcement:</p>
    <blockquote>
    <p>In order for Google Chrome to reach its current user base, it had to support content blockers — these are the top most popular extensions for any browser. Google strategy has been to find the optimal point between the two goals of growing the user base of Google Chrome and preventing content blockers from harming its business.</p>
    <p>The blocking ability of the webRequest API caused Google to yield control of content blocking to content blockers. Now that Google Chrome is the dominant browser, it is in a better position to shift the optimal point between the two goals which benefits Google's primary business.</p>
    <p>The deprecation of the blocking ability of the webRequest API is to gain back this control, and to further instrument and report how web pages are filtered, since the exact filters which are applied to web pages are useful information which will be collectable by Google Chrome.</p>
    </blockquote>
    <p>The ad blockers themselves are arguably just as complicit. Eye/o GmbH owns <a href="https://adblockplus.org/">AdBlock</a> and <a href="https://www.ublock.org/">uBlock</a>, employs 150 people, and in 2016 they had 50 million euros in revenue, of which about 50% was profit. Google's <a href="https://help.getadblock.com/support/solutions/articles/6000092027-why-does-adblock-allow-non-intrusive-ads-">paid "Acceptable Ads" program</a> is a way to funnel money into adblockers to, uh, <em>encourage</em> them to display certain ads. With money. Lots … and lots … of money. 🤑</p>
    <p>We simultaneously have a very real web obesity crisis, and a looming crackdown on ad blockers, seemingly the only viable weight loss program for websites. What's a poor web citizen to do? Well, there is one thing you can do to escape the need for browser-based adblockers, at least on your home network. Install and configure <a href="https://pi-hole.net/">Pi-Hole</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/05/pi-hole-screenshot.png" alt="pi-hole-screenshot"></p>
    <p>I've talked about the amazing Raspberry Pi before <a href="https://blog.codinghorror.com/the-raspberry-pi-has-revolutionized-emulation/">in the context of classic game emulation</a>, but this is another brilliant use for a Pi.</p>
    <p>Here's why it's so cool. If you disable the DHCP server on your router, and let the Pi-Hole become your primary DHCP server, <strong>you get automatic DNS based blocking of ads for every single device on your network</strong>. It's kind of scary how powerful DNS can be, isn't it?</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/05/pi-hole-action-shot.jpg" alt="pi-hole-action-shot"></p>
    <p>My Pi-Hole took me about 1 hour to set up, start to finish. All you need is</p>
    <ul>
    <li>a <a href="https://www.amazon.com/dp/B07BC7BMHY/?tag=codihorr-20">Raspberry Pi 3b+ kit</a> $59</li>
    <li>a quality <a href="https://www.amazon.com/dp/B00WR4IJBE/?tag=codihorr-20">32GB SD card</a> $9</li>
    <li>an ethernet cable</li>
    </ul>
    <p>I do recommend the 3b+ because it has <a href="https://www.pidramble.com/wiki/benchmarks/networking">native gigabit ethernet</a> and a bit more muscle. But <a href="https://discourse.pi-hole.net/t/what-model-raspberry-pi-should-i-use-for-pi-hole/9635">literally any Raspberry Pi</a> you can find laying around will work, though I'd <em>strongly</em> advise you to pick one with a wired ethernet port since it'll be your DNS server.</p>
    <p>I'm not going to write a whole Pi-Hole installation guide, because there are <a href="https://www.smarthomebeginner.com/pi-hole-tutorial-whole-home-ad-blocking/">lots of great ones</a> out there already. It's not difficult, and there's a slick web GUI waiting for you once you complete initial setup. For your initial testing, pick any IP address you like on your network that won't conflict with anything active. Once you're happy with the basic setup and web interface:</p>
    <ul>
    <li>Turn OFF your router's DHCP server – existing leases will continue to work, so nothing will be immediately broken.</li>
    <li>Turn ON the pi-hole DHCP server, in the web GUI.</li>
    </ul>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/05/pi-hole-dhcp-server.png" alt="pi-hole-dhcp-server"></p>
    <p>Once you do this, all your network devices will start to grab their DHCP leases from your Pi-Hole, which will <em>also</em> tell them to route all their DNS requests through the Pi-Hole, and that's when the ✨ magic ✨ happens!</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/05/pi-hole-blacklists.png" alt="pi-hole-blacklists"></p>
    <p>All those DNS requests from all the devices on your network will be checked against the ad blacklists; anything matching is quickly and silently discarded <strong>before it ever reaches your browser.</strong></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/05/pi-hole-dashboard-stats.png" alt="pi-hole-dashboard-stats"></p>
    <p>(The Pi-Hole also acts as a <a href="https://discourse.pi-hole.net/t/will-pi-hole-slow-down-my-network/2048">caching DNS server</a>, so repeated DNS requests will be serviced rapidly from your local network, too.)</p>
    <p>If you're worried about stability or reliability, you can easily add a cheap battery backed USB plug, or even a second backup Pi-Hole as your secondary DNS provider if you prefer belt and suspenders protection. Switching back to plain boring old vanilla DNS is as easy as unplugging the Pi and flicking the DHCP server setting in your router back on.</p>
    <p>At this point if you're interested (and you should be!), just give it a try. If you're looking for more information, the project has an <a href="https://discourse.pi-hole.net">excellent forum</a> full of FAQs and roadmaps.</p>
    <p><a href="https://discourse.pi-hole.net"><img alt="https://blog.codinghorror.com/content/images/2019/05/pi-hole-forums.png" alt="pi-hole-forums"></a></p>
    <p>You can even <a href="https://discourse.pi-hole.net/c/feature-requests?order=votes">vote for your favorite upcoming features!</a></p>
    <p>I avoided the Pi-Hole project for a while because I didn't need it, and I'd honestly rather jump in later when things are more mature.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/05/pi-hole-pin.jpg" alt="pi-hole-pin"></p>
    <p>With the latest Chrome crackdown on ad blockers, now is the time, and I'm impressed how simple and easy <a href="https://pi-hole.net/">Pi-Hole</a> is to run. Just find a quiet place to plug it in, spend an hour configuring it, and promptly proceed to forget about it forever as you enjoy a lifetime subscription to <em>a glorious web ad instant weight loss program across every single device on your network with (almost) zero effort!</em></p>
    <p>Finally, an exercise program I can believe in.</p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2019-05-30T11:04:52.000Z</pubDate>
    <guid>https://blog.codinghorror.com/an-exercise-program-for-the-fat-web/</guid>
    </item>
    <item>
    <title>The Cloud Is Just Someone Else's Computer</title>
    <link>https://blog.codinghorror.com/the-cloud-is-just-someone-elses-computer/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>When we started <a href="https://discourse.org">Discourse</a> in 2013, our server requirements were high:</p>
    <ul>
    <li>1GB RAM</li>
    <li>modern, fast dual core CPU</li>
    <li>speedy solid state drive with 20+ GB</li>
    </ul>
    <p>I'm not talking about a cheapo shared cpanel server, either, I mean a <em>dedicated</em> virtual private server with those specifications.</p>
    <p>We were OK with that, because we were <a href="https://blog.codinghorror.com/why-ruby/">building in Ruby</a> for the next decade of the Internet. I predicted early on that the cost of renting a suitable VPS would drop to $5 per month, and courtesy of Digital Ocean that indeed <a href="https://meta.discourse.org/t/new-digital-ocean-pricing-spoiler-5-for-a-1gb-droplet/78230">happened in January 2018</a>.</p>
    <p>The cloud got cheaper, and faster. Not really a surprise, since <a href="https://blog.codinghorror.com/when-hardware-is-free-power-is-expensive/">the price of hardware trends to zero over time</a>. But it's still the cloud, and that means it isn't exactly <em>cheap</em>. It is, after all, someone else's computer that you pay for the privilege of renting.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/02/there-is-no-cloud.png" alt="there-is-no-cloud"></p>
    <p>But wait … <strong>what if you could put your <em>own</em> computer "in the cloud"?</strong></p>
    <p>Wouldn't that be the best of both worlds? Reliable connectivity,  plus a nice low monthly price for extremely fast hardware? If this sounds crazy, it shouldn't – Mac users have been doing this <a href="https://www.macstadium.com/pricing/colo">for years now</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/02/mac-colocation-2019-1.png" alt="mac-colocation-2019-1"></p>
    <p>I suppose it's understandable that Mac users would be on the cutting edge here since Apple <a href="https://en.wikipedia.org/wiki/Xserve#Intel_Xserve">barely makes server hardware</a>, whereas the PC world has always been <a href="https://blog.codinghorror.com/building-a-computer-the-google-way/">the literal de-facto standard for server hardware</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/02/mac-stadium-colocation.jpg" alt="mac-stadium-colocation"></p>
    <p>Given the prevalence and maturity of cloud providers, it's even a <em>little</em> controversial these days to <a href="https://blog.codinghorror.com/building-servers-for-fun-and-prof-ok-maybe-just-for-fun/">colocate actual servers</a>. We've also experimented with <a href="https://blog.codinghorror.com/the-scooter-computer/">colocating mini-pcs</a> in various hosting roles. I'm still curious why there isn't more of a cottage industry for colocating mini PCs. Because … <em>I think there should be</em>.</p>
    <p>I originally wrote about <a href="https://blog.codinghorror.com/the-scooter-computer/">the scooter computers</a> we added to our Discourse infrastructure in 2016, plus my own colocation experiment that ran concurrently. <strong>Over the last three years of both experiments, I've concluded that these little boxes are plenty reliable</strong>, with one role specific caveat that I'll explain in the comments. I remain an unabashed fan of mini-PC colocation. I like it so much I put together a new 2019 iteration:</p>
    <table style="border-spacing:8px">
        <tr>
    <td><b>2017 — $670</b></td>
    <td><b>2019 — $820</b></td>
    </tr>
        <tr>
    <td>
    <a href="https://ark.intel.com/products/95451/Intel-Core-i7-7500U-Processor-4M-Cache-up-to-3_50-GHz-">i7-7500u</a><br>2.7-3.5 Ghz, 2c / 4t</td>
    <td>
    <a href="https://ark.intel.com/products/134906/Intel-Core-i7-8750H-Processor-9M-Cache-up-to-4-10-GHz-">i7-8750h</a><br>2.2-4.1 Ghz, 6c / 12t</td>
    </tr>
        <tr>
    <td>16GB DDR3 RAM</td>
    <td>32GB DDR4 RAM</td>
    </tr>
        <tr>
    <td>500GB SATA SSD</td>
    <td>500GB NVMe SSD</td>
    </tr>
    </table>
    <p>This year's scooter computer offers <strong>3× the cores, 2× the memory, and 3× faster drive</strong>. It is, as the kids say … an <em>absolute unit</em>. 😱</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/02/2019-scooter-computer-top-interior-1.jpeg" alt="2019-scooter-computer-top-interior-1"></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/02/2019-scooter-computer-bottom-interior.jpeg" alt="2019-scooter-computer-bottom-interior"></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/02/2019-scooter-computer-front-and-back.jpg" alt="2019-scooter-computer-front-and-back"></p>
    <p>It also has a rather elegant dual-sided internal layout. There is a slot for an old-school 2.5" drive, plus built in wi-fi, but you won't see it in my pictures because I physically removed both.</p>
    <p>I vetted each box via my <a href="https://blog.codinghorror.com/is-your-computer-stable/">recommended burn in and stability testing</a> and they all passed with flying colors, though I did have to RMA one set of bodgy RAM sticks in the process. The benchmarks tell the story, as compared to the average Digital Ocean droplet:</p>
    <p><strong>Per-core performance</strong><br>
    <code>sysbench cpu --cpu-max-prime=20000 run</code></p>
    <table style="border-spacing:8px">
        <tr>
    <td>DO Droplet</td>
    <td style="text-align:right">2,988</td>
    </tr>
        <tr>
    <td>2017 Mini-PC</td>
    <td style="text-align:right">4,800</td>
    </tr>
        <tr>
    <td>2019 Mini-PC</td>
    <td style="text-align:right">5,671</td>
    </tr>
    </table>        
    <p><strong>Multi-core performance</strong><br>
    <code>sysbench cpu --cpu-max-prime=40000 --num-threads=8 run</code></p>
    <table style="border-spacing:8px">
        <tr>
    <td>DO Droplet</td>
    <td style="text-align:right">2,200</td>
    </tr>
        <tr>
    <td>2017 Mini-PC</td>
    <td style="text-align:right">5,588</td>
    </tr>
        <tr>
    <td>2019 Mini-PC</td>
    <td style="text-align:right">14,604</td>
    </tr>
    </table>   
    <p><strong>Disk performance</strong><br>
    <code>dd bs=1M count=512 if=/dev/zero of=test conv=fdatasync</code><br>
    <code>hdparm -Tt /dev/sda</code></p>
    <table style="border-spacing:8px">
        <tr>
    <td>DO Droplet</td>
    <td style="text-align:right">701 / 8818 / 471 MB/sec</td>
    </tr>
        <tr>
    <td>2017 Mini-PC</td>
    <td style="text-align:right">444 / 12564 / 505 MB/sec</td>
    </tr>
        <tr>
    <td>2019 Mini-PC</td>
    <td style="text-align:right">1200 / 17919 / 3115 MB/sec</td>
    </tr>
    </table> 
    <p><strong>Discourse rebuild</strong><br>
    <code>time ./launcher rebuild app</code></p>
    <table style="border-spacing:8px">
        <tr>
    <td>DO Droplet</td>
    <td style="text-align:right">6:59</td>
    </tr>
        <tr>
    <td>2017 Mini-PC</td>
    <td style="text-align:right">3:41</td>
    </tr>
        <tr>
    <td>2019 Mini-PC</td>
    <td style="text-align:right">3:24</td>
    </tr>
    </table> 
    <p>Power consumption could be a concern, as the 2017 version had a much lower 15 watt TDP, compared to the 45 watts of this version. That 3× increase in core count ain't free! So I tested that, too, with a combination of <code>i7z</code>, <code>stress</code>,  and my handy dandy <a href="https://blog.codinghorror.com/why-estimate-when-you-can-measure/">watt meter</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/02/2019-mini-pc-i7z-testing.png" alt="2019-mini-pc-i7z-testing"></p>
    <table style="border-spacing:4px">
        <tr>
    <td>(idle login)</td>
    <td>800 Mhz</td>
    <td style="text-align:right">10w</td>
    </tr>
        <tr>
    <td><code>stress --cpu 1</code></td>
    <td>4.1 GHz</td>
    <td style="text-align:right">30w</td>
    </tr>
        <tr>
    <td><code>stress --cpu 2</code></td>
    <td>4.1 GHz</td>
    <td style="text-align:right">42w</td>
    </tr>
        <tr>
    <td><code>stress --cpu 3</code></td>
    <td>4.0 GHz</td>
    <td style="text-align:right">53w</td>
    </tr>
        <tr>
    <td><code>stress --cpu 4</code></td>
    <td>3.9 GHz</td>
    <td style="text-align:right">65w</td>
    </tr>
        <tr>
    <td><code>stress --cpu 5</code></td>
    <td>3.7 GHz</td>
    <td style="text-align:right">65w</td>
    </tr>
        <tr>
    <td><code>stress --cpu 6</code></td>
    <td>3.5 GHz</td>
    <td style="text-align:right">65w</td>
    </tr>
        <tr>
    <td><code>stress --cpu 12</code></td>
    <td>3.3 Ghz</td>
    <td style="text-align:right">65w</td>
    </tr>    
    </table>
    <p>I'd expect around 10 - 20 watts doing typical low-load stuff that isn't super CPU intensive. Note that running current-ish versions of <code>mprime</code> jacks power consumption up to 75w 🔥 and the overall clock scales down to 3.1 Ghz … let me tell you, I've learned to be <a href="https://blog.cloudflare.com/on-the-dangers-of-intels-frequency-scaling/">very, <em>very</em> afraid of AVX2 extensions</a>.</p>
    <p>(If you're worried about noise, don't be. This active cooling solution is clearly overkill for a 65w load, because it barely spun up at all even under full core load. It was <em>extremely</em> quiet.)</p>
    <p>So we're happy that this machine is a slammin' deal for $820, it's super fast, and plenty reliable. But how about colocation costs? My colocation provider is <a href="https://endoffice.com/">EndOffice</a> out of Boston, and they offer very competitive rates to colocate a Mini-PC: $29/month.</p>
    <p><a href="https://endoffice.com/minicolo.html"><img alt="https://blog.codinghorror.com/content/images/2019/02/endoffice-mini-pc-colocation.png" alt="endoffice-mini-pc-colocation"></a></p>
    <p>I personally colocate three Mini-PCs for redundancy and just-in-case; there are discounts for colocating more than one. Here they are racked up and in action. Of course I labelled the front and rear before shipping because that's how I roll.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/02/endoffice-colocated-2019-mini-pcs.jpg" alt="endoffice-colocated-2019-mini-pcs"></p>
    <p>Let's break this down and see what the actual costs of colocating a Mini-PC are versus the cloud. Given the plateauing of CPU speeds, I think five years of useful life for these boxes is realistic, but let's assume a conservative three year lifespan to be safe.</p>
    <ul>
    <li>$880 mini-pc 32GB RAM, 6 CPUs, 500GB SSD</li>
    <li>$120 taxes / shipping / misc</li>
    <li>$29 × 12 × 3 = $1,044</li>
    </ul>
    <p>That's <strong>$2,044 for three years of hosting</strong>. How can we do on Digital Ocean? Per <a href="https://www.digitalocean.com/pricing/">their current pricing page</a>:</p>
    <ul>
    <li>32GB RAM, 8 vCPUs, 640GB SSD</li>
    <li>$160/month</li>
    <li>$160 × 12 × 3 = <strong>$5,760</strong>
    </li>
    </ul>
    <p>This isn't <em>quite</em> apples to apples, as we are getting an extra 140GB of disk and 2 bonus CPUs, but those CPUs are both slower and partially consumed by multi-tenancy compared to our brand new dedicated, isolated CPUs. (I was curious about this, so I just spun up a new $160/month DO instance for a quick test. The <code>sysbench</code> results are 4086 and 11760 respectively, considerably below the 2019 Mini-PC results, above.) As you can see, <strong>you pay almost three times as much for a cloud server.</strong> 🤑</p>
    <p>I'm not saying this is for everyone. If you just need to spin up a quick server or two for testing and experimentation, there's absolutely no way you need to go to the trouble and up-front cost of building and then racking colocated mini-pcs. There's no denying that spinning servers up in the cloud offers unparalleled flexibility and redundancy. But if you do have need for <strong>dedicated computing resources over a period of years</strong>, then building your own small personal cloud, with machines <em>you actually own</em>, is not only one third the cost but also … kinda cool?</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2019/02/your-own-personal-cloud.jpg" alt="your-own-personal-cloud"></p>
    <p>If you'd also like to embark upon this project, you can get <a href="https://www.amazon.com/Partaker-Coffee-Graphics-Barebone-System/dp/B07L4KJXWL?tag=codihorr-20">the same Partaker B18 box I did for $490 from Amazon</a>, or <a href="https://www.aliexpress.com/item/Partaker-B18-DDR4-Coffee-Lake-8th-Gen-Mini-PC-Intel-Core-i7-8750H-32GB-RAM-Intel/32948461273.html">$460 direct from China via AliExpress</a>. Add memory and drive to taste, build it up, then check out <a href="https://endoffice.com/">endoffice.com</a> who I can enthusiastically recommend for colocation, or the colocation provider of your choice.</p>
    <p>Get something cool hosted out there; let's do our part to keep the internet <a href="https://jarredsumner.com/codeblog/">fun and weird!</a></p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2019-02-17T02:15:26.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-cloud-is-just-someone-elses-computer/</guid>
    </item>
    <item>
    <title>What does Stack Overflow want to be when it grows up?</title>
    <link>https://blog.codinghorror.com/what-does-stack-overflow-want-to-be-when-it-grows-up/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I sometimes get asked by regular people in the actual real world what it is that I do for a living, and here's my 15 second answer:</p>
    <blockquote>
    <p>We built a sort of Wikipedia website for computer programmers to post questions and answers. It's called <a href="https://stackoverflow.com">Stack Overflow</a>.</p>
    </blockquote>
    <p>As of last month, it's been 10 years since Joel Spolsky and I <a href="https://blog.codinghorror.com/stack-overflow-none-of-us-is-as-dumb-as-all-of-us/">started Stack Overflow</a>. I currently do <a href="https://blog.codinghorror.com/civilized-discourse-construction-kit/">other stuff now</a>, and I have since 2012, but if I will be known for anything when I'm dead, clearly it is going to be good old Stack Overflow.</p>
    <p>Here's where I'd normally segue into a bunch of rah-rah stuff about how great Stack Overflow is, and thus how implicitly great I am by association for being a founder, and all.</p>
    <p><a href="http://www.poorlydrawnlines.com/comic/bragging/"><img alt="https://blog.codinghorror.com/content/images/2018/10/bragging.png" alt="bragging"></a></p>
    <p>I do not care about any of that.</p>
    <p>What I do care about, though, is <em>whether Stack Overflow is useful to working programmers</em>. Let's check in with <a href="https://blog.codinghorror.com/you-dont-need-millions-of-dollars/">one of my idols</a>, John Carmack. How useful is Stack Overflow, from the perspective of what I consider to be one of the greatest living programmers?</p>
    <blockquote class="twitter-tweet" data-conversation="none" data-lang="en">
    <p lang="en" dir="ltr"><a href="https://twitter.com/StackExchange?ref_src=twsrc%5Etfw">@StackExchange</a> <a href="https://twitter.com/codinghorror?ref_src=twsrc%5Etfw">@codinghorror</a> SO has probably added billions of dollars of value to the world in increased programmer productivity.</p>— John Carmack (@ID_AA_Carmack) <a href="https://twitter.com/ID_AA_Carmack/status/380018564792455168?ref_src=twsrc%5Etfw">September 17, 2013</a>
    </blockquote>
    <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>I won't lie, September 17th, 2013 was a <a href="https://www.youtube.com/watch?v=O_05qJTeNNI">pretty good day</a>. I literally got chills when I read that, and not just because I always read the word "billions" in Carl Sagan's voice. It was also pleasantly the opposite of pretty much every <em>other</em> day I'm on Twitter, scrolling through an oppressive, endless litany of shared human suffering and people screaming at each other. Which reminds me, I should <a href="https://twitter.com/codinghorror">check my Twitter</a> and see who else is wrong on the Internet today.</p>
    <p>I am honored and humbled by the public utility that Stack Overflow has unlocked for a whole generation of programmers. But <em>I didn't do that</em>.</p>
    <ul>
    <li>
    <em>You</em> did, when you contributed a well researched question to Stack Overflow.</li>
    <li>
    <em>You</em> did, when you contributed a succinct and clear answer to Stack Overflow.</li>
    <li>
    <em>You</em> did, when you edited a question or answer on Stack Overflow to make it better.</li>
    </ul>
    <p>All those "fun size" units of Q&amp;A collectively contributed by working programmers from all around the world ended up building a <a href="https://wiki.creativecommons.org/wiki/Case_Studies/StackOverflow.com">Creative Commons resource</a> that truly rivals Wikipedia within our field. That's ... incredible, actually.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/10/stack-overflow-homepage-oct-2018.png" alt="stack-overflow-homepage-oct-2018"></p>
    <p>But success stories are boring. The world is filled with people that <a href="https://blogs.scientificamerican.com/beautiful-minds/the-role-of-luck-in-life-success-is-far-greater-than-we-realized/">basically got lucky</a>, and subsequently can't stop telling people how it was all of their hard work and moxie that made it happen. I find failure much more instructive, and when building a business and planning for the future, I take on the role of Abyss Domain Expert™ and begin a staring contest. It's just a little something I like to do, you know ... <em>for me</em>.</p>
    <p><a href="https://www.reddit.com/r/comics/comments/8a4c2h/abyss_oc/"><img alt="https://blog.codinghorror.com/content/images/2018/10/abyss-oc.jpg" alt="abyss-oc"></a></p>
    <p>Thus, what I'd like to do right now is peer into that glorious abyss for a bit and introspect about <strong>the challenges I see facing Stack Overflow for the next 10 years.</strong> Before I begin, I do want to be absolutely crystal clear about a few things:</p>
    <ol>
    <li>
    <p>I have not worked at Stack Overflow in any capacity whatsoever <a href="https://blog.codinghorror.com/farewell-stack-exchange/">since February 2012</a> and I've had zero day to day operational input since that date, more or less by choice. Do I have opinions about how things should be done? Uh, have you <em>met me?</em> Do I email people every now and then about said opinions? I might, but I honestly do try to keep it to an absolute minimum, and I think my email archive track record here is reasonable.</p>
    </li>
    <li>
    <p>The people working at Stack are amazing and most of them (including much of the Stack Overflow community, while I'm at it) could articulate the mission better — and perhaps a tad less crankily — than I could by the time I left. Would I trust them with my life? No. But I'd trust them with Joel's life!</p>
    </li>
    <li>
    <p>The whole point of the Stack Overflow exercise is that it's not beholden to me, or Joel, or <a href="https://en.wikipedia.org/wiki/Great_man_theory">any other Great Person</a>. Stack Overflow works because it empowers regular everyday programmers all over the world, just like you, just like me. I guess in my mind it's akin to being a parent. The goal is for your children to eventually grow up to be sane, practicing adults who don't need (or, really, <em>want</em>) you to hang around any more.</p>
    </li>
    <li>
    <p>Understand that you're reading <s>the weak opinions strongly held</s> <a href="https://blog.codinghorror.com/strong-opinions-weakly-held/">the strong opinions weakly held</a> of a co-founder who spent prodigious amounts of time working with the community in the first four years of Stack Overflow's life to shape the rules and norms of the site to fit their needs. These are merely my opinions. I like to think they are <em>informed</em> opinions, but that doesn't necessarily mean I can predict the future, or that I am even qualified to try. But I've never let being "qualified" stop me from doing anything, and I ain't about to start tonight.</p>
    </li>
    </ol>
    <h3 id="stackoverflowisawikifirst">Stack Overflow is a wiki first</h3>
    <p>Stack Overflow ultimately has <em>much</em> more in common with Wikipedia than a discussion forum. By this I mean questions and answers on Stack Overflow are not primarily judged by their usefulness to a specific individual, but by <strong>how many <em>other</em> programmers that question or answer can potentially help over time</strong>. I tried as hard as I could to emphasize this relationship from <a href="https://blog.codinghorror.com/stack-overflow-none-of-us-is-as-dumb-as-all-of-us/">launch day in 2008</a>. Note who has top billing in this venn diagram.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/10/stack-overflow-venn-diagram.png" alt="stack-overflow-venn-diagram"></p>
    <p>Stack Overflow later added a super neat feature to highlight this core value in user profiles, where it shows how many other people you have potentially helped with your contributed questions and answers so far.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/10/stackoverflow-people-reached-profile-stat-1.png" alt="stackoverflow-people-reached-profile-stat-1"></p>
    <p>The most common complaints I see about Stack Overflow are usually the result of this fundamental misunderstanding about who the questions and answers on the site are ultimately <em>for</em>, and why there's so much strictness involved in the whole process.</p>
    <blockquote class="twitter-tweet" data-lang="en">
    <p lang="en" dir="ltr">I wish more people understood that the goal of Stack Overflow is not "answer my question" but "let's collaboratively build an artifact that will benefit future coders". Perhaps SO could be doing more to educate people about this.</p>— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/status/991082088689381376?ref_src=twsrc%5Etfw">April 30, 2018</a>
    </blockquote>
    <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>I'm continually amazed at the number of people, even on Hacker News today, who don't realize that every single question and answer is editable on Stack Overflow, even as a completely anonymous user who isn't logged in. Which makes sense, right, <em>because Stack Overflow is a wiki</em>, and that's how wikis work. Anyone can edit them. Go ahead, try it right now if you don't believe me — press the "improve this answer" or "improve this question" button on anything that can be improved, and make it so.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/10/stack-overflow-edit-question.png" alt="stack-overflow-edit-question"></p>
    <p>The responsibility for this misunderstanding is all on Stack Overflow (and by that I also mean myself, at least up until 2012). I guess the logic is that "every programmer has surely seen, used, and understands Stack Overflow by now, 10 years in" but ... I think that's a risky assumption. New programmers are minted every second of every day. Complicating matters further, there are three tiers of usage at Stack Overflow, from biggest to smallest, in inverted pyramid style:</p>
    <ol>
    <li>
    <p><strong>I passively search for programming answers.</strong></p>
    <p>Passively searching and reading highly ranked Stack Overflow answers as they appear in web search results is arguably the <em>primary goal of Stack Overflow</em>. If Stack Overflow is working like it's supposed to, 98% of programmers should get all the answers they need from reading search result pages and wouldn't need to ask or answer a single question in their entire careers. This is a good thing! Great, even!</p>
    </li>
    <li>
    <p><strong>I participate on Stack Overflow when I get stuck on a really hairy problem and searching isn't helping.</strong></p>
    <p>Participating only at those times when you are extra stuck is completely valid. However, I feel this level is where most people tend to run into difficulty on Stack Overflow, because it involves someone who may not be new to Stack Overflow per se, but is new to asking questions, and also at the precise time of stress and tension for them where they <em>must</em> get an answer due to a problem they're facing … and they don't have the time or inclination to deal with Stack Overflow's strict wiki type requirements for research effort, formatting, showing previous work, and referencing what they found in prior searches.</p>
    </li>
    <li>
    <p><strong>I participate on Stack Overflow for professional development.</strong></p>
    <p>At this level you're talking about experienced Stack Overflow users who have contributed many answers and thus have a pretty good idea of what makes a great question, the kind they'd want to answer themselves. As a result, they don't tend to ask many questions because they self-medicate through exhaustive searching and research, but when they do ask one, their questions are exemplary.</p>
    </li>
    </ol>
    <p>(There's technically a fourth tier here, for people who want to selflessly contribute creative commons questions and answers to move the entire field of software development forward for the next generation of software developers. But who has time for saints 😇, y'all make the rest of us look bad, so knock it off already Skeet.)</p>
    <p>It wouldn't shock me at all if people spent <em>years</em> happily at tier 1 and then got a big unpleasant surprise when reaching tier 2. The primary place to deal with this, in my opinion, is a <strong>massively revamped and improved ask page</strong>. It's also fair to note that maybe people don't understand that they're signing up for a sizable chunk of work by implicitly committing to the wiki standard of "try to make sure it's useful to more people than just yourself" when asking a question on Stack Overflow, and are then  put off by the negative reaction to what others view as an insufficiently researched question.</p>
    <p>Stack Overflow absorbs so much tension from its adoption of wiki standards for content. Even if you know about that requirement up front, it is not always clear what "useful" means, in the same way it's not always clear what topics, people, and places are deserving of a Wikipedia page. <a href="https://en.wikipedia.org/wiki/Henrietta_Lacks">Henrietta Lacks</a>, absolutely, but what about your cousin Dave in Omaha with his weirdo PHP 5.6 issue?</p>
    <h3 id="overtimeduplicatesbecomevastlandminefields">Over time, duplicates become vast landmine fields</h3>
    <p>Here's one thing <a href="https://stackoverflow.blog/2009/04/29/handling-duplicate-questions/">I really, really saw coming</a> and to be honest with you I was kinda glad I left in 2012 before I had to deal with it because of the incredible technical difficulty involved: <strong>duplicates</strong>. Of all the complaints I hear about Stack Overflow, this is the one I am most sympathetic to by far.</p>
    <p>If you accept that Stack Overflow is a wiki type system, then for the same reasons that you obviously can't have five different articles about Italy on Wikipedia, <strong>Stack Overflow can't allow duplicate questions on the exact same programming problem</strong>. While there is a fair amount of code to do pre-emptive searches as people type in questions, plus <em>many</em> exhortations to search before you ask, with an inviting search field and button right there on the mandatory page you see before asking your first question ...</p>
    <p><a href="https://stackoverflow.com/questions/ask/advice"><img alt="https://blog.codinghorror.com/content/images/2018/10/stack-overflow-how-to-ask.jpg" alt="stack-overflow-how-to-ask"></a></p>
    <p>... locating and identifying duplicate content is an insanely difficult problem even for a company like Google that's done nothing but specialize in this exact problem for, what, 20 years now, with a veritable army of the world's most talented engineers.</p>
    <p>When you're asking a question on a site that doesn't allow duplicate questions, the problem space of a site with 1 million existing questions is rather different from a site with 10 million existing questions ... or 100 million. Asking a single unique question goes from mildly difficult to mission almost impossible, because your question needs to thread a narrow path through this vast, enormous field of prior art questions without stepping on any of the vaguely similar looking landmines in the process.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/10/stackoverflow-asking-duplicate-question.png" alt="stackoverflow-asking-duplicate-question"></p>
    <p>But wait! <em>It gets harder!</em></p>
    <ul>
    <li>
    <p><a href="https://stackoverflow.blog/2010/11/16/dr-strangedupe-or-how-i-learned-to-stop-worrying-and-love-duplication/">Some variance in similar-ish questions is OK</a>, because 10 different people will ask a nearly identical question using 10 different sets of completely unrelated words with no overlap. I know, it sounds crazy, but trust me: humans are amazing at this. We want all those duplicates to exist so they can <em>point to</em> the primary question they are a duplicate of, while still being valid search targets for people who ask questions with unusual or rare word choices.</p>
    </li>
    <li>
    <p>It can be legitimately difficult to determine if your question is a true duplicate. How much overlap is enough before one programming question is a duplicate of another? And by whose definition? Opinions vary. This is subject to human interpretation, and humans are.. unreliable. Nobody will ever be completely happy with this system, pretty much by design. That tension is baked in permanently and forever.</p>
    </li>
    </ul>
    <p>I don't have any real answers on the duplicate problem, which only gets worse over time. But I will point out that there is plenty of precedent <a href="https://stackexchange.com/sites#traffic">on the Stack Exchange network</a> for splitting sites into "expert" and "beginner" areas with slightly different rulesets. We've seen this for Math vs. MathOverflow, English vs. English Learners, Unix vs. Ubuntu... <strong>perhaps it's time for a more beginner focused Stack Overflow</strong> where duplicates are less frowned upon, and conversational rules are a bit more lenient?</p>
    <h3 id="stackoverflowisacompetitivesystemofpeerreview">Stack Overflow is a competitive system of peer review</h3>
    <p>Stack Overflow was indeed built to be a fairly explicitly competitive system, with the caveat that <a href="http://wiki.c2.com/?ThereIsMoreThanOneWayToDoIt">"there's always more than one way to do it."</a> This design choice was based on my perennial observation that the best way to motivate any programmer .. is to subtly insinuate that <em>another</em> programmer could have maybe done it better.</p>
    <p><a href="http://www.geekherocomic.com/2008/11/14/the-best-way-to-improve-code-performance/"><img alt="https://blog.codinghorror.com/content/images/2018/10/geek-hero-motivating-programmers.png" alt="geek-hero-motivating-programmers"></a></p>
    <p>This is manifested in the public reputation system on Stack Overflow, the <a href="https://blog.codinghorror.com/for-a-bit-of-colored-ribbon/">incredible power of a number printed next to someone's name</a>, writ large. All reputation in Stack Overflow comes from the recognition of your peers, never the "system".</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/10/stack-overflow-top-rep-by-year.png" alt="stack-overflow-top-rep-by-year"></p>
    <p>Once your question is asked, or your answer is posted, it can then be poked, prodded, edited, flagged, closed, opened, upvoted, downvoted, <a href="http://www.cs.mun.ca/~harold/Courses/Old/CS1400.W15/Diary/Lubar1992.pdf">folded and spindled</a> by your peers. The <em>intent</em> is for Stack Overflow to be a system of peer review and friendly competition, like a code review from a coworker you've never met at a different division of the company. It's also completely fair for a fellow programmer to question the premise of your question, as long as it's done in a nice way. For example, <a href="https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags">do you <em>really</em> want to use that regular expression to match HTML?</a></p>
    <p>I fully acknowledge that <strong>competitive peer review systems aren't for everyone</strong>, and thus the overall process of having peers review your question may not always feel great, depending on your circumstances and background in the field — <em>particularly</em> when combined with the substantial tensions around utility and duplicates Stack Overflow already absorbed from its wiki elements. Kind of a double whammy there.</p>
    <p>I've heard people describe the process of asking a question on Stack Overflow as anxiety inducing. To me, posting on Stack Overflow is <em>supposed</em> to involve a healthy kind of minor "let me be sure to show off my best work" anxiety:</p>
    <ul>
    <li>the anxiety of giving a presentation to your fellow peers</li>
    <li>the anxiety of doing well on a test</li>
    <li>the anxiety of showing up to a new job with talented coworkers you admire</li>
    <li>the anxiety of attending your first day at school with other students at your level</li>
    </ul>
    <p>I imagine systems where there is zero anxiety involved and I can only think of jobs where I had long since stopped caring about the work and thus had no anxiety about whether I even showed for work on any given day. How can that be good? Let's just say I'm not a fan of zero-anxiety systems.</p>
    <p>Maybe competition just isn't your jam. Could there be a less competitive Q&amp;A system, a system without downvotes, a system without close votes, where there was never any anxiety about posting anything, just a network of super supportive folks who believe in you and want you to succeed no matter what? Absolutely! I think many alternative sites <em>should</em> exist on the internet so people can choose an experience that matches their personal preferences and goals. Should Stack build that alternative? Has it already been built? It's an open question; feel free to point out examples in the comments.</p>
    <h3 id="stackoverflowisdesignedforpracticingprogrammers">Stack Overflow is designed for practicing programmers</h3>
    <p>Another point of confusion that comes up a fair bit is who the intended audience for Stack Overflow actually is. That one is straightforward, and it's  been the same from day one:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/10/stackoverflow-for-business-description.png" alt="stackoverflow-for-business-description"></p>
    <p>Q&amp;A for <strong>professional and enthusiast programmers</strong>. By that we mean</p>
    <blockquote>
    <p>People who either already have a job as a programmer, or could potentially be hired as a programmer today if they wanted to be.</p>
    </blockquote>
    <p>Yes, in case you're wondering, part of this was an overt business decision. To make money you must have an audience of people already on a programmer's salary, or in the job hunt to be a programmer. The entire Stack Overflow network may be Creative Commons licensed, but it was never a non-profit play. It was planned as a sustainable business from the outset, and that's why <a href="https://blog.codinghorror.com/stack-overflow-careers-amplifying-your-awesome/">we launched Stack Overflow Careers</a> only one year after Stack Overflow itself ... to be honest far sooner than we should have, in retrospect. Careers has since been smartly subsumed into Stack Overflow proper at <a href="https://stackoverflow.com/jobs">stackoverflow.com/jobs</a> for a more integrated and most assuredly way-better-than-2009 experience.</p>
    <p>The choice of audience wasn't meant to be an exclusionary decision in any way, but Stack Overflow was definitely designed as a fairly strict system of peer review, which is great (IMNSHO, obviously) for already practicing professionals, but <strong>pretty much everything you would <em>not</em> want as a student or beginner</strong>. This is why I cringe so hard I practically turn myself inside out when people on Twitter mention that they have pointed their students at Stack Overflow. What you'd want for a beginner or a student in the field of programming is almost <em>the exact opposite</em> of what Stack Overflow does at every turn:</p>
    <ul>
    <li>one on one mentoring</li>
    <li>real time collaborative screen sharing</li>
    <li>live chat</li>
    <li>theory and background courses</li>
    <li>starter tasks and exercises</li>
    <li>playgrounds to experiment in</li>
    </ul>
    <p>These are all very fine and good things, but Stack Overflow does <em>NONE</em> of them, by design.</p>
    <p><em>Can</em> you use Stack Overflow to learn how to program from first principles? Well, technically you can do anything with any software. You could try to have actual conversations on Reddit, if you're a masochist. But the answer is yes. You could learn how to program on Stack Overflow, in theory, if you are a prodigy who is comfortable with the light competitive aspects (reputation, closing, downvoting) and also perfectly willing to define all your contributions to the site in terms of utility to others, not just yourself as a student attempting to learn things. But I <em>suuuuuuper</em> would not recommend it. There are <a href="https://blog.codinghorror.com/heres-the-programming-game-you-never-asked-for/">far better websites and systems out there for learning to be a programmer</a>. <em>Could</em> Stack Overflow build beginner and student friendly systems like this? I don't know, and it's certainly not my call to make. 🤔</p>
    <p>And that's it. We can now resume our normal non-abyss gazing. Or whatever it is that passes for normal in these times.</p>
    <p>I hope all of this doesn't come across as negative. Overall I'd say the state of the Stack is strong. But does it even matter what I think? <a href="https://stackoverflow.blog/2008/11/25/stack-overflow-is-you/">As it was in 2008</a>, so it is in 2018.</p>
    <blockquote>
    <p><strong>Stack Overflow is <em>you</em>.</strong></p>
    <p>This is the scary part, the great leap of faith that Stack Overflow is predicated on: trusting your fellow programmers. The programmers who choose to participate in Stack Overflow are the “secret sauce” that makes it work. You are the reason I continue to believe in developer community as the greatest source of learning and growth. You are the reason I continue to get so many positive emails and testimonials about Stack Overflow. I can’t take credit for that. But you can.</p>
    <p>I learned the collective power of my fellow programmers long ago writing on Coding Horror. The community is far, far smarter than I will ever be. All I can ask — all any of us can ask — is to help each other along the path.</p>
    <p>And if your fellow programmers decide to recognize you for that, then I say you’ve well and truly earned it.</p>
    </blockquote>
    <p>The strength of Stack Overflow begins, and ends, with the <a href="https://meta.stackoverflow.com/">community of programmers that power the site</a>. What should Stack Overflow be when it grows up? <strong>Whatever we make it, together.</strong></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/10/stackoverflow-none-of-us-is-as-dumb-as-all-of-us.jpg" alt="stackoverflow-none-of-us-is-as-dumb-as-all-of-us"></p>
    <p>p.s. Happy 10th anniversary Stack Overflow!</p>
    <hr>
    <p><small>Also see Joel's take on 10 years of Stack Overflow with <a href="https://www.joelonsoftware.com/2018/04/06/the-stack-overflow-age/">The Stack Overflow Age</a>, <a href="https://www.joelonsoftware.com/2018/04/13/gamification/">A Dusting of Gamification</a>, and <a href="https://www.joelonsoftware.com/2018/04/23/strange-and-maddening-rules/">Strange and Maddening Rules</a>.</small></p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2018-10-22T10:52:32.000Z</pubDate>
    <guid>https://blog.codinghorror.com/what-does-stack-overflow-want-to-be-when-it-grows-up/</guid>
    </item>
    <item>
    <title>There is no longer any such thing as Computer Security</title>
    <link>https://blog.codinghorror.com/there-is-no-longer-any-such-thing-as-computer-security/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Remember "cybersecurity"?</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/09/its-cybersecurity-yay.jpg" alt="its-cybersecurity-yay"></p>
    <p>Mysterious hooded computer guys doing mysterious hooded computer guy .. things! Who knows what kind of naughty digital mischief they might be up to?</p>
    <p>Unfortunately, we now live in a world where this kind of digital mischief is literally rewriting the world's history. For proof of that, you need look no further than this single email that was sent March 19th, 2016.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/09/podesta-hack-email-text.png" alt="podesta-hack-email-text"></p>
    <p>If you don't recognize what this is, it is a <a href="https://blog.codinghorror.com/phishing-the-forever-hack/">phishing email</a>.</p>
    <p><a href="https://blog.codinghorror.com/phishing-the-forever-hack/"><img alt="https://blog.codinghorror.com/content/images/2018/09/phishing-guy.jpg" alt="phishing-guy"></a></p>
    <p>This is by now a very, very famous phishing email, arguably the most famous of all time. But let's consider <a href="https://www.apnews.com/dea73efc01594839957c3c9a6c962b8a">how this email even got sent to its target in the first place</a>:</p>
    <ul>
    <li>
    <p>An attacker slurped up lists of any public emails of 2008 political campaign staffers.</p>
    </li>
    <li>
    <p>One 2008 staffer was <em>also</em> hired for the 2016 political campaign</p>
    </li>
    <li>
    <p>That particular staffer had non-public campaign emails in their address book, and one of them was a powerful key campaign member with an extensive email history.</p>
    </li>
    </ul>
    <p>On successful phish leads to an even wider address book attack net down the line. Once they gain access to a person's inbox, they use it to prepare to their next attack. They'll harvest existing email addresses, subject lines, content, and attachments to construct plausible looking boobytrapped emails and mail them to all of <em>their</em> contacts. How sophisticated and targeted to a particular person this effort is determines whether it's so-called "spear" phishing or not.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/09/phishing-vs-spear-phishing.png" alt="phishing-vs-spear-phishing"></p>
    <p>In this case is it was not at all targeted. This is a remarkably unsophisticated, absolutely generic routine phishing attack. There is zero focused attack effort on display here. But note the target did <em>not</em> immediately click the link in the email!</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/09/podesta-hack-email-link-1.png" alt="podesta-hack-email-link-1"></p>
    <p>Instead, he did exactly what you'd want a person to do in this scenario: <strong>he emailed IT support and asked if this email was valid.</strong> But IT made <a href="https://www.nytimes.com/2016/12/13/us/politics/russia-hack-election-dnc.html">a fatal mistake in their response</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/09/podesta-it-support-response.png" alt="podesta-it-support-response"></p>
    <p>Do you see it? Here's the kicker:</p>
    <blockquote>
    <p>Mr. Delavan, in an interview, said that his bad advice was a result of a typo: He knew this was a phishing attack, as the campaign was getting dozens of them. He said <strong>he had meant to type that it was an “illegitimate” email, an error that he said has plagued him ever since.</strong></p>
    </blockquote>
    <p>One word. He got <em>one</em> word wrong. But what a word to get wrong, and in the first sentence! The email did provide the proper Google address to reset your password. But the lede was already buried since the first sentence said "legitimate"; the phishing link in that email was then clicked. And the rest is literally history.</p>
    <p>What's even funnier (well, in the way of gallows humor, I guess) is that public stats were left enabled for that bit.ly tracking link, so you can see exactly what crazy domain that "Google login page" resolved to, and that it was clicked exactly twice, on the same day it was mailed.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/09/bitly-podesta-tracking-link.png" alt="bitly-podesta-tracking-link"></p>
    <p>As I said, these were not exactly sophisticated attackers. So yeah, in <em>theory</em> an attentive user could pay attention to the browser's address bar and notice that after clicking the link, they arrived at</p>
    <p><code>http://myaccount.google.com-securitysettingpage.tk/security/signinoptions/password</code></p>
    <p>instead of</p>
    <p><code>https://myaccount.google.com/security</code></p>
    <p>Note that the phishing URL is carefully constructed so the most "correct" part is at the front, and weirdness is sandwiched in the middle. Unless you're paying very close attention and your address bar is long enough to expose the full URL, it's … tricky. See this 10 second video for a dramatic example.</p>
    <blockquote class="twitter-tweet" data-lang="en">
    <p lang="en" dir="ltr">Quick phishing demo. Would you fall for something like this? <a href="https://t.co/phONMKHBle">pic.twitter.com/phONMKHBle</a></p>— Mustafa Al-Bassam (@musalbas) <a href="https://twitter.com/musalbas/status/1038919152826757122?ref_src=twsrc%5Etfw">September 9, 2018</a>
    </blockquote>
    <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>(And if you think that one's good, check out <a href="https://twitter.com/tomscott/status/812265182646927361">this one</a>. Don't forget all the unicode look-alike trickery you can pull, too.)</p>
    <p>I originally wrote this post as a presentation for the Berkeley Computer Science Club back in March, and at that time I gathered a list of public phishing pages I found on the web.</p>
    <p><code>nightlifesofl.com</code><br>
    <code>ehizaza-limited.com</code><br>
    <code>tcgoogle.com</code><br>
    <code>appsgoogie.com</code><br>
    <code>security-facabook.com</code></p>
    <p>Of those five examples from 6 months ago, one is completely gone, one loads just fine, and three present an appropriately scary red interstitial warning page that strongly advises you not to visit the page you're trying to visit, courtesy of Google's <a href="https://developers.google.com/safe-browsing/">safe browsing API</a>. But of course this kind of shared blacklist domain name protection will be completely useless on any fresh phishing site. (Don't even get me started on how <a href="https://blog.codinghorror.com/blacklists-dont-work/">blacklists have never really worked</a> anyway.)</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/09/google-login-phishing-page.png" alt="google-login-phishing-page"></p>
    <p>It doesn't exactly require a PhD degree in computer science to phish someone:</p>
    <ul>
    <li>Buy a crazy long, realistic looking domain name.</li>
    <li>Point it to a cloud server somewhere.</li>
    <li>Get a free HTTPS certificate courtesy of <a href="https://blog.codinghorror.com/lets-encrypt-everything/">our friends at Let's Encrypt</a>.</li>
    <li>Build a realistic copy of a login page that silently transmits everything you type in those login fields to you – perhaps even in real time, as the target types.</li>
    <li>Harvest email addresses and mass mail a plausible looking phishing email with your URL.</li>
    </ul>
    <p>I want to emphasize that although clearly mistakes were made in this specific situation, none of the people involved here were amateurs. They had training and experience. They were working with IT and security professionals. Furthermore, they <a href="https://www.apnews.com/dea73efc01594839957c3c9a6c962b8a">knew digital attacks were incoming</a>.</p>
    <blockquote>
    <p>The … campaign was no easy target; several former employees said the organization put particular stress on digital safety.</p>
    <p>Work emails were protected by two-factor authentication, a technique that uses a second passcode to keep accounts secure. Most messages were deleted after 30 days and staff went through phishing drills. Security awareness even followed the campaigners into the bathroom, where someone put a picture of a toothbrush under the words: “You shouldn’t share your passwords either.”</p>
    </blockquote>
    <p>The campaign itself used two factor auth extensively, which is why personal gmail accounts were targeted, because they were less protected.</p>
    <p>The key takeaway here is that <strong>it's basically impossible, statistically speaking, to prevent your organization from being phished.</strong></p>
    <p>Or is it?</p>
    <p><a href="https://techsolidarity.org"><img alt="https://blog.codinghorror.com/content/images/2018/09/techsolidarity-logo.png" alt="techsolidarity-logo"></a></p>
    <p>Nobody is doing better work in this space right now than Maciej Ceglowski and Tech Solidarity. Their list of <a href="https://techsolidarity.org/resources/basic_security.htm">basic security precautions for non-profits and journalists</a> is pure gold and has been vetted by many industry professionals with security credentials that are actually impressive, unlike mine. Everyone should read this list very closely, point by point.</p>
    <p>Everyone?</p>
    <p>Computers, courtesy of smartphones, are <a href="https://blog.codinghorror.com/can-software-make-you-less-racist/">now such a pervasive part of average life for average people</a> that <strong>there is no longer any such thing as "computer security". There is only <em>security</em>.</strong> In other words, these are normal security practices <em>everyone</em> should be familiar with. Not just computer geeks. Not just political activists and politicians. Not just journalists and nonprofits.</p>
    <video poster="/content/images/2018/09/gary-oldman-everyone-poster.jpg" preload="none" controls style="max-width:100%">
    <source src="http://discourse-cdn.codinghorror.com/uploads/default/original/3X/2/4/2483fdc1eb5585ebd550bba1614d229da2f2987c.mp4">
    </source></video>
    <p><em>Everyone.</em></p>
    <p>It is a fair bit of reading, so because I know you are just as lazy as I am, and I am <em>epically</em> lazy, let me summarize what I view as the three important takeaways from the hard work Tech Solidarity put into <a href="https://techsolidarity.org/resources.html">these resources</a>. These three short sentences are the 60 second summary of what you want to do, and what you want to share with others so <em>they</em> do, too.</p>
    <p><strong>1) Enable Two Factor authentication through an app, and <em>not SMS</em>, everywhere you can.</strong></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/09/google-2fa-1.png" alt="google-2fa-1"></p>
    <p>Logging in with only a password, now matter how long and unique you attempt to make that password, will never be enough. A password is what you know; you need to add the second factor of something you <em>have</em> (or something you <em>are</em>) to achieve significant additional security. SMS can famously <a href="https://www.wired.com/story/phone-numbers-indentification-authentication/">be intercepted, social engineered, or sim-jacked all too easily</a>. If it's SMS, it's not secure, <em>period</em>. So install an authenticator app, and use it, at least for your most important credentials such as your email account and your bank.</p>
    <p>Have I mentioned that Discourse <a href="https://blog.discourse.org/2018/05/discourse-2-0-released/">added two factor authentication support in version 2.0</a>, and our just released 2.1 adds printed backup codes, too? There are two paths forward: you can <em>talk</em> about the solution, or you can <em>build</em> the solution. I'm trying to do both to the best of my ability. Look for the 2FA auth option in your user preferences on your favorite Discourse instance. It's there for you.</p>
    <p>(This is also a company policy at Discourse; if you work here, <em>you 2FA everything all the time</em>. No other login option exists.)</p>
    <p><strong>2) Make all your passwords 11 characters or more.</strong></p>
    <p>It's a <a href="https://blog.codinghorror.com/hacker-hack-thyself/">long story</a>, but anything under 11 characters <a href="https://blog.codinghorror.com/your-password-is-too-damn-short/">is basically the same as having no password at all</a> these days. I personally recommend at least 14 characters, maybe even 16. But this won't be a problem for you, because...</p>
    <p><strong>3) Use a password manager.</strong></p>
    <p>If you use a password manager, you can simultaneously avoid the pernicious danger of password re-use and <a href="https://blog.codinghorror.com/password-rules-are-bullshit/">the difficulty of coming up with unique and random passwords</a> all the time. It is my hope in the long run that cloud based password management gets deeply built into Android, iOS, OSX, and Windows so that people don't need to run a weird melange of third party apps to achieve this essential task. Password management is foundational and should not be the province of third parties on principle, because you never outsource a core competency.</p>
    <p><strong>Bonus rule! For the particularly at-risk, get and use a U2F key.</strong></p>
    <p>In the long term, two factor through an app isn't quite secure enough due to the very real (and growing) specter of real-time phishing. Authentication apps offer timed keys that expire after a minute or two, but if the attacker can get you to type an authentication key and relay it to the target site fast enough, they can still log in as you. If you need ultimate protection, <a href="https://en.wikipedia.org/wiki/Universal_2nd_Factor">look into U2F keys</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2018/09/u2f-keys.jpg" alt="u2f-keys"></p>
    <p>I believe U2F support is still too immature at the moment, particularly on mobile, for this to be practical for the average person right now. But if you do happen to fall into those groups that will be under attack, you <em>absolutely</em> want to set up U2F keys where you can today. They're cheap, and the good news is that  they <em>literally make phishing impossible</em> at last. Given that Google had <a href="https://krebsonsecurity.com/2018/07/google-security-keys-neutralized-employee-phishing/">100% company wide success against phishing with U2F</a>, we know this works.</p>
    <p>In today's world, computers are now so omnipresent that there is no longer any such thing as cybersecurity, online security, or computer security – there's only <em>security</em>. You either have it, or you don't. If you follow and share these three rules, hopefully you too can have a modicum of security today.</p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2018-09-21T09:50:53.000Z</pubDate>
    <guid>https://blog.codinghorror.com/there-is-no-longer-any-such-thing-as-computer-security/</guid>
    </item>
    <item>
    <title>To Serve Man, with Software</title>
    <link>https://blog.codinghorror.com/to-serve-man-with-software/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I didn't choose to be a programmer. Somehow, it seemed, <a href="https://blog.codinghorror.com/if-loving-computers-is-wrong-i-dont-want-to-be-right/">the computers chose me</a>. For a long time, that was fine, that was enough; that was all I needed. But along the way I never felt that being a programmer was this <a href="https://blog.codinghorror.com/please-dont-learn-to-code/">unambiguously great-for-everyone</a> career field with zero downsides. There are absolutely occupational hazards of being a programmer, and <a href="https://blog.codinghorror.com/your-favorite-programming-quote/">one of my favorite programming quotes</a> is an allusion to one of them:</p>
    <blockquote>
    <p>It should be noted that no ethically-trained software engineer would ever consent to write a <code>DestroyBaghdad</code> procedure. Basic professional ethics would instead require him to write a <code>DestroyCity</code> procedure, to which Baghdad could be given as a parameter.</p>
    </blockquote>
    <p>Which reminds me of <a href="https://waxy.org/2015/12/tracking_the_trump_is_a_comment_section_running_for_president_joke/">another joke that people were telling in 2015</a>:</p>
    <blockquote>
    <p>Donald Trump is basically a comment section running for president</p>
    </blockquote>
    <p>Which is troubling because technically, <em>technically</em>, I run a company that <a href="https://discourse.org">builds comment sections</a>.</p>
    <p>Here at the tail end of 2017, from where I sit neither of these jokes seem particularly funny to me any more. Perhaps I have lost the capacity to feel joy as a human being? <em>Haha just kidding!</em> <em>... kinda.</em></p>
    <p>Remember <a href="https://www.wsj.com/articles/SB10001424053111903480904576512250915629460">in 2011</a> when Marc Andreeseen said that "Software is eating the world?"</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/12/software-is-eating-the-world-marc-andreessen.jpg" alt="software is eating the world, Marc Andreessen"></p>
    <p>That used to sound all hip and cool and inspirational, like "Wow! We software developers really <em>are</em> making a difference in the world!" and now for the life of me I can't read it as anything other than an ominous warning that we just weren't smart enough to translate properly at the time. But <a href="https://en.wikipedia.org/wiki/To_Serve_Man_(The_Twilight_Zone)">maybe now we are</a>.</p>
    <p><a href="https://en.wikipedia.org/wiki/To_Serve_Man_(The_Twilight_Zone)"><img alt="https://blog.codinghorror.com/content/images/2017/12/to-serve-man.jpg" alt="to-serve-man"></a></p>
    <p>I've said many, many times that the key to becoming an experienced software developer is to understand that you are, at all times, <a href="https://blog.codinghorror.com/on-the-meaning-of-coding-horror/">your own worst enemy</a>. I don't mean this in a negative way – you have to constantly plan for and design around your inevitable human mistakes and fallibility. It's fundamental to good software engineering because, well, we're all human. The good-slash-bad news is that you're only <a href="https://blog.codinghorror.com/the-trap-you-set-for-yourself/"><em>accidentally</em> out to get yourself</a>. But what happens when we're infinitely connected and software is suddenly <em>everywhere</em>, in everyone's pockets every moment of the day, starting to approximate a natural extension of our bodies? All of a sudden those little collective social software accidents become <a href="https://www.wired.com/story/the-other-tech-bubble/">considerably more dangerous</a>:</p>
    <blockquote>
    <p>The issue is bigger than any single scandal, I told him. As headlines have exposed the troubling inner workings of company after company, startup culture no longer feels like fodder for gentle parodies about ping pong and hoodies. It feels ugly and rotten. Facebook, the greatest startup success story of this era, isn’t a merry band of hackers building cutesy tools that allow you to digitally Poke your friends. It’s a powerful and potentially sinister collector of personal data, a propaganda partner to government censors, and an enabler of discriminatory advertising.</p>
    </blockquote>
    <p>I'm reminded of a particular Mitchell and Webb skit: <em>"Are we the baddies?"</em></p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/qv2XGQBcvxQ" frameborder="0" gesture="media" allow="encrypted-media" allowfullscreen></iframe>
    <p>On the topic of unanticipated downsides to technology, there is no show more essential than <a href="https://www.netflix.com/title/70264888">Black Mirror</a>. If you haven't watched Black Mirror yet, do not pass go, do not collect $200, go immediately to Netflix and watch it. Go on! Go ahead!</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/jDiYGjp5iFg" frameborder="0" gesture="media" allow="encrypted-media" allowfullscreen></iframe>
    <blockquote>
    <p>⚠ Fair warning: please DO NOT start with season 1 episode 1 of Black Mirror! Start with season 3, and go forward. If you like those, dip into season 2 and the just-released season 4, then the rest. But humor me and please at least watch the first episode of season 3.</p>
    </blockquote>
    <p>The technology described in Black Mirror can be fanciful at times, but several episodes portray disturbingly plausible scenarios with <em>today's</em> science and tech, much less what we'll have 20 to 50 years from now. These are very real cautionary tales, and some of this stuff is well on its way toward being realized.</p>
    <p>Programmers don't think of themselves as people with the power to change the world. Most programmers I know, including myself, grew up as nerds, geeks, social outcasts. Did I ever tell you about the time I wrote a self-destructing Apple // boot disk program to let a girl in middle school know that I liked her? I was (and still am) a terrible programmer, but oh man did I ever test the heck out of <em>that</em> code before copying on to her school floppy disc. But I digress. What do you do when you wake up one day and software <em>has</em> kind of eaten the world, and <strong>it is no longer clear if software is in fact an unambiguously good thing, like we thought, like everyone told us … like we <em>wanted it to be?</em></strong></p>
    <p>Months ago I submitted a brief interview for a <a href="https://www.amazon.com/dp/1465462333/?tag=codihorr-20">children's book about coding</a>.</p>
    <p><a href="https://www.amazon.com/dp/1465462333/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2017/12/9780241285060.jpg" width="400"></a></p>
    <p>I recently recieved a complimentary copy of the book in the mail. I paged to <a href="https://blog.codinghorror.com/content/images/2017/12/dk-findout-coding-page-50.jpg">my short interview</a>, alongside the very cool <a href="http://www.prottsman.com/">Kiki Prottsman</a>. I had no real recollection of the interview questions after the months of lead time it takes to print a physical book, but reading the printed page, I suddenly hit myself over the head with the very answer I had been searching my soul for these past 6 months:</p>
    <p><a href="https://blog.codinghorror.com/content/images/2017/12/dk-findout-coding-page-50.jpg"><img alt="https://blog.codinghorror.com/content/images/2017/12/dk-findout-coding-page-50-quote.jpg" alt="Jeff Atwood quote: what do you love most about coding?"></a></p>
    <p>In attempting to simplify my answers for an audience of kids, I had concisely articulated the one thing that keeps me coming back to software: <strong>to serve man</strong>. Not on a platter, for bullshit monetization – but software that <a href="https://blog.codinghorror.com/the-just-in-time-theory/">helps people</a> be the best version of themselves.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/cNi_HC839Wo?start=118" frameborder="0" gesture="media" allow="encrypted-media" allowfullscreen></iframe>
    <p>And you know why I do it? I need that help, too. I get tired, angry, upset, emotional, cranky, irritable, frustrated and I need to be reminded from time to time to choose to be the better version of myself. I don't always succeed. But <em>I want to</em>. And I believe everyone else – for some reasonable statistical value of everyone else – fundamentally does, too.</p>
    <p>That was the not-so-secret design philosophy behind Stack Overflow, that <strong>by helping others become better programmers, you too would become a better programmer</strong>. It's unavoidable. And, even better, if we leave enough helpful breadcrumbs behind for those that follow us, <em>we collectively advance the whole of programming for everyone</em>.</p>
    <p>I apologize for not blogging much in 2017.  I've certainly been busy with Discourse which is actually going great; we grew to 21 people and <a href="https://blog.discourse.org/2017/12/discourse-gives-back-2017/">gave $55,000 back</a> this year to the open source ecosystem we build on. But that's no excuse. The truth is that it's been hard to write because this has been a deeply troubling year in so many dimensions — for men, for tech, for American democracy. I'm ashamed of much that happened, and I think one of the first and most important steps we can take is to <a href="https://blog.codinghorror.com/the-hugging-will-continue-until-morale-improves/">embrace explicit codes of conduct</a> throughout our industry. I also continue to believe, if we start to think more holistically about what our software can do to <strong>serve all people</strong>, not just ourselves personally (or, even worse, the company we work for) — that software can and should be part of the solution.</p>
    <p>I tried to amplify on these thoughts in recent podcasts:</p>
    <table>
        <tr>
            <td><img alt="https://blog.codinghorror.com/content/images/2017/12/kim-crayton.jpg" width="100" height="100"></td>
            <td> <a href="http://www.kimcrayton.com/commengreport-jeff-atwood/">Community Engineering Report</a> with Kim Crayton</td>
        </tr>
        <tr>
            <td><img alt="https://blog.codinghorror.com/content/images/2017/12/dave-rael.jpg" width="100" height="100"></td>
            <td> <a href="http://developeronfire.com/podcast/episode-258-jeff-atwood-sharing-the-house">Developer on Fire</a> with Dave Rael</td>
        </tr>
        <tr>
            <td><img alt="https://blog.codinghorror.com/content/images/2017/12/william-channer.jpg" width="100" height="100"></td>
            <td> <a href="https://drt.fm/jeff-atwood">Dorm Room Tycoon</a> with William Channer</td>
        </tr>
    </table>
    <p>Software is easy to change, but people ... aren't. So in the new year, as software developers, let's make a resolution to focus on the part we <em>can</em> change, and keep asking ourselves one very important question: <strong>how can our software help people become the best version of themselves?</strong></p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2017-12-31T02:01:52.000Z</pubDate>
    <guid>https://blog.codinghorror.com/to-serve-man-with-software/</guid>
    </item>
    <item>
    <title>The Existential Terror of Battle Royale</title>
    <link>https://blog.codinghorror.com/the-existential-terror-of-battle-royale/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>It's been a while since I wrote a blog post, I guess in general, but also a blog post about video games. Video games are probably <a href="https://www.google.com/search?q=site%3Ablog.codinghorror.com+%22video+games%22">the single thing most attributable to my career as a programmer</a>, and everything else I've done professionally after that. I still feel video games are one of the best ways to learn and teach programming, <a href="https://blog.codinghorror.com/heres-the-programming-game-you-never-asked-for/">if properly scoped</a>, and furthermore I take <a href="https://blog.codinghorror.com/level-one-the-intro-stage/">many cues from video games in building software</a>.</p>
    <p>I would characterize my state of mind for the last six to eight months as … <em>poor</em>. Not only because of <a href="https://blog.codinghorror.com/im-loyal-to-nothing-except-the-dream/">current events in the United States</a>, though the neverending barrage of bad news weighs heavily on me, and I continue to be profoundly disturbed by the erosion of core values that I thought most of us stood for as Americans. Didn't we used to look out for each other, care about each other, and fight to protect those that can't protect themselves?</p>
    <p>In times like these, I sometimes turn to video games for escapist entertainment. One game in particular caught my attention because of its meteoric rise in player count over the last year.</p>
    <p><a href="http://steamcharts.com/app/578080"><img alt="https://blog.codinghorror.com/content/images/2017/11/pubg-steam-stats-nov-2017.png" alt="pubg-steam-stats-nov-2017"></a></p>
    <p>That game is <a href="http://store.steampowered.com/app/578080/PLAYERUNKNOWNS_BATTLEGROUNDS/">Player Unknown's Battlegrounds</a>. I was increasingly curious why it was so popular, and kept getting more popular every month. Calling it a mere phenomenon seems like underselling it; something truly unprecedented is happening here. I finally broke down and bought a copy for $30 in September.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/11/player-unknown-battleground.jpg" alt="player-unknown-battleground"></p>
    <p>After a few hours in, I had major flashbacks to <a href="https://blog.codinghorror.com/the-gamification/">the first time I played Counter-Strike in 1998</a>. I realized that <strong>we are witnessing the birth of an entirely new genre of game: the Battle Royale</strong>. I absolutely believe that huge numbers of people will still be playing some form of this game 20 years from now, too.</p>
    <p><a href="http://store.steampowered.com/stats/"><img alt="https://blog.codinghorror.com/content/images/2017/11/steam-top-games-by-player-count-nov-2017.png" alt="steam-top-games-by-player-count-nov-2017"></a></p>
    <p>I've seen <a href="https://en.wikipedia.org/wiki/Battle_Royale_(film)">the Japanese movie</a>, and it's true that there were <a href="https://en.wikipedia.org/wiki/Battle_royale_game">a few Battle Royale games</a> before PUBG, but this is clearly the defining moment and game for the genre, the one that sets a precedent for everyone else to follow.</p>
    <p>It's hard to explain why Battlegrounds is so compelling, but let's start with the loneliness.</p>
    <p>Although you can play in squads (and I recommend it), the purest original form of the game is 100 players, last man standing. You begin with nothing but the clothes on your back, in a cargo aircraft, flying over an unknown island in a random trajectory.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/11/battlegrounds-cargo-plane.jpg" alt="battlegrounds-cargo-plane"></p>
    <p>It's up to you to decide when to drop, and where to land on this huge island, full of incredibly detailed cities, buildings and houses – but strangely devoid of all life.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/11/playerunknown-battleground-drop.jpg" alt="playerunknown-battleground-drop"></p>
    <p>What happened to everyone? Where did they go? The sense of apocalypse is overwhelming. It's you versus the world, but where did the rest of the world go? You'll wander this vast deserted island, scavenging for weapons and armor in near complete silence. You'll hear nothing but the wind blowing and the occasional buzzing of flies. But then, suddenly the jarring pak-pak-pak of gunfire off in the distance, reminding you that other people are here. And they aren't your friends.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/11/battle-royale-vista.jpg" alt="battle-royale-vista"></p>
    <p>the dread of never knowing when another of the 100 players on this enormous island is going to suddenly appear around a corner or over a hill is <em>intense</em>. You'll find yourself wearing headphones, cranking the volume, constantly on edge listening for the implied threat of footfalls. Wait, did I hear someone just now, or was that me? You clench, and wait. I've had so many visceral panic moments playing this game, to the point that I had to stop playing just to calm down.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/11/pubg-combat.jpg" alt="pubg-combat"></p>
    <p>PUBG is, in its way, the scariest zombie movie I've ever seen, though it lacks a single zombie. It dispenses with the pretense of a story, so you can realize much sooner that the zombies, as terrible as they may be, are nowhere as dangerous to you as your fellow man.</p>
    <p>Meanwile, that huge cargo airplane still roars overhead every so often, impassive, indifferent, occasionally dropping supply crates with high powered items to fight over. Airstrikes randomly target areas circled in red on the map, masking footfalls, and forcing movement while raining arbitrary death and terror.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/11/pubg-map.jpg" alt="pubg-map"></p>
    <p>Although the island is huge and you can land anywhere, after a few minutes a random circle is overlaid on the map, and a slowly moving wall of deadly energy starts closing in on that circle. Stay outside that circle at your peril; if you find yourself far on the opposite side of the map from a circle, you better start hunting for a vehicle or boat (they're present, but rare) quickly. These terrordome areas are always shrinking, always impending, in an ever narrowing cone, forcing the remaining survivors closer and closer together. The circles get tighter and deadlier and quicker as the game progresses, ratcheting up the tension and conflict.</p>
    <p>Eventually the circle becomes so small that it's impossible for the handful of remaining survivors to avoid contact, and one person, <em>one</em> out of the hundred that originally dropped out of the cargo plane, emerges as the winner. I've never won solo, but I have won squad, and even finishing first out of 25 squads is an unreal, euphoric experience. The odds are so incredibly against you from the outset, plus you quickly discover that 85% of the game is straight up chance: someone happens to roll up behind you, a sniper gets the drop on you, or you get caught in the open with few options. Wrong place, wrong time, game over. Sucks to be you.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/11/pubg-vehicle-shooting.jpg" alt="pubg-vehicle-shooting"></p>
    <p>You definitely learn to be careful, but there's only so careful you can be. Death comes quickly, without warning, and often at random. What else can you expect from a game mode where there are 100 players but only 1 eventual winner?</p>
    <p>There haven't been many Battle Royale games, so this game mode is a relatively new phenomenon. If you'd like to give it a try for free, <strong>I highly recommend <a href="https://www.epicgames.com/fortnite/">Fortnite's Battle Royale mode</a> which is 100% free, a near-clone of PUBG, and quite good in its own right.</strong> They added their Battle Royale mode well after the fact; the core single player "save the world" gameplay of building stuff and fighting zombie hordes is quite fun too, though a bit shallow. It also has what is, in my opinion, some of the most outstanding visual style I've ever seen in a game – a cool, hyperbolic cartoon mix of Chuck Jones, Sam &amp; Max, and Cloudy with a Chance of Meatballs. It's also delightfully diverse in its character models.</p>
    <p><a href="https://www.epicgames.com/fortnite/"><img alt="https://blog.codinghorror.com/content/images/2017/11/fortnite-battle-royale.jpg" alt="fortnite-battle-royale"></a></p>
    <p>(The only things you'll give up over PUBG are the realistic art style, vehicles, and going prone. But the superb structure building system in Fortnite <em>almost</em> makes up for that. If nothing else it is a demonstration of how incredibly compelling the Battle Royale game mode is, because that part of the game is <a href="https://www.pcgamesn.com/fortnite/fortnite-battle-royale-player-numbers">wildly successful</a> in a a way that the core game, uh, wasn't. Also it's free!)</p>
    <p>I didn't intend for this to happen, but to me, <strong>the Battle Royale game mode perfectly captures the zeitgeist of the current moment</strong>, and matches my current state of mind to a disturbing degree. It's an absolutely terrifying experience of every human for themselves, winner takes all, with impossible odds. There are moments it can be thrilling, even inspiring, but mostly it's brutal and unforgiving. To succeed you need to be exceedingly cautious, highly skilled, and just plain <em>lucky</em>. Roll the dice again, but know that everyone will run towards the sound of gunfire in hopes of picking off survivors and looting their corpses. Including you.</p>
    <p>Battle Royale is not the game mode we wanted, it's not the game mode we needed, it's the game mode we all <em>deserve</em>. And the best part is, when we're done playing, we can turn it off.</p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2017-11-05T10:02:53.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-existential-terror-of-battle-royale/</guid>
    </item>
    <item>
    <title>Hacker, Hack Thyself</title>
    <link>https://blog.codinghorror.com/hacker-hack-thyself/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>We've read so many sad stories about communities that were fatally compromised or destroyed due to security exploits. We took that lesson to heart when we founded the <a href="https://discourse.org">Discourse</a> project; we endeavor to build open source software that is secure and safe for communities by default, even if there are thousands, or millions, of them out there.</p>
    <p>However, we also value <em>portability</em>, the ability to get your data into and out of Discourse at will. This is why Discourse, unlike other forum software, defaults to a Creative Commons license. As a basic user on any Discourse you can easily export and download all your posts right from your user page.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/06/discourse-download-all.png" alt="Discourse Download All Posts"></p>
    <p>As a site owner, you can easily back up and restore your entire site database from the admin panel, right in your web browser. Automated weekly backups are set up for you out of the box, too. I'm not <a href="https://blog.codinghorror.com/international-backup-awareness-day/">the world's foremost expert on backups</a> for nothing, man!</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/06/discourse-backups.png" alt="Discourse database backup download"></p>
    <p>Over the years, we've learned that balancing security and data portability can be tricky.  You bet your sweet ASCII a <strong>full database download</strong> is what hackers start working toward the minute they gain any kind of foothold in your system. It's the ultimate prize.</p>
    <p>To mitigate this threat, we've slowly tightened restrictions around Discourse backups in various ways:</p>
    <ul>
    <li>
    <p>Administrators have a minimum password length of 15 characters.</p>
    </li>
    <li>
    <p>Both backup creation and backup download administrator actions are formally logged.</p>
    </li>
    <li>
    <p>Backup download tokens are single use and emailed to the address of the administrator, to confirm that user has full control over the email address.</p>
    </li>
    </ul>
    <p>The name of the security game is defense in depth, so all these hardening steps help … but we still need to <strong>assume that Internet Bad Guys will somehow get a copy of your database</strong>. And then what? Well, what's in the database?</p>
    <ul>
    <li>
    <p>Identity cookies</p>
    <p>Cookies are, of course, how the browser can tell who you are. Cookies are usually stored as hashes, rather than the actual cookie value, so having the hash doesn't let you impersonate the target user. Furthermore, most modern web frameworks rapidly cycle cookies, so they are only valid for a brief 10 to 15 minute window anyway.</p>
    </li>
    <li>
    <p>Email addresses</p>
    <p>Although users have reason to be concerned about their emails being exposed, very few people treat their email address as anything particularly precious these days.</p>
    </li>
    <li>
    <p>All posts and topic content</p>
    <p>Let's assume for the sake of argument that this is a fully public site and nobody was posting anything particularly sensitive there. So we're not worried, at least for now, about trade secrets or other privileged information being revealed, since they were all public posts anyway. If we were, that's a whole other blog post I can write at a later date.</p>
    </li>
    <li>
    <p>Password hashes</p>
    <p>What's left is <strong>the password hashes</strong>. And that's … <a href="https://blog.codinghorror.com/speed-hashing/">a serious problem indeed</a>.</p>
    </li>
    </ul>
    <p>Now that the attacker has your database, they can crack your password hashes with <a href="https://blog.codinghorror.com/your-password-is-too-damn-short/">large scale offline attacks</a>, using the full resources of any cloud they can afford. And once they've cracked a particular password hash, <strong>they can log in as that user … forever</strong>. Or at least until that user changes their password.</p>
    <blockquote>
    <p>⚠️ That's why, if you know (or even suspect!) your database was exposed, the very first thing you should do is reset everyone's password.</p>
    </blockquote>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/06/discourse-db-password-hashes.png" alt="Discourse database password hashes"></p>
    <p>But what if you <em>don't</em> know? Should you preemptively reset everyone's password every 30 days, like the world's worst bigco IT departments? That's downright user hostile, and leads to serious pathologies of its own. The reality is that you probably <em>won't</em> know when your database has been exposed, at least not until it's too late to do anything about it. So it's crucial to slow the attackers down, to give yourself time to deal with it and respond.</p>
    <p>Thus, the only real protection you can offer your users is just how resistant to attack your stored password hashes are. There are two factors that go into password hash strength:</p>
    <ol>
    <li>
    <p><strong>The hashing algorithm</strong>. As slow as possible, and ideally designed to be <em>especially</em> slow on GPUs for reasons that will become painfully obvious about 5 paragraphs from now.</p>
    </li>
    <li>
    <p><strong>The work factor</strong> or <strong>number of iterations</strong>. Set this as high as possible, without opening yourself up to a possible denial of service attack.</p>
    </li>
    </ol>
    <p>I've seen guidance that said you should set the overall work factor high enough that hashing a password takes at least 8ms on the target platform. It turns out <a href="https://samsaffron.com/">Sam Saffron</a>, one of my Discourse co-founders, made a good call back in 2013 when he selected the NIST recommendation of <strong>PBKDF2-HMAC-SHA256</strong> and <strong>64k iterations</strong>. We measured, and that indeed takes roughly 8ms using our existing Ruby login code on our current (fairly high end, Skylake 4.0 Ghz) servers.</p>
    <p>But that was 4 years ago. Exactly how secure are our password hashes in the database today? Or 4 years from now, or 10 years from now? We're building open source software for the long haul, and we need to be sure we are making reasonable decisions that protect everyone. So in the spirit of <a href="https://blog.codinghorror.com/designing-for-evil/">designing for evil</a>, it's time to put on our Darth Helmet and play the bad guy – <strong>let's crack our own hashes!</strong></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/06/dark-helmet.jpg" alt=""></p>
    <p>We're gonna use the biggest, baddest single GPU out there at the moment, <a href="https://gist.github.com/epixoip/a83d38f412b4737e99bbef804a270c40#gistcomment-2060753">the GTX 1080 Ti</a>. As a point of reference, for PBKDF2-HMAC-SHA256 the 1080 achieves 1180 kH/s, whereas the 1080 Ti achieves 1640 kH/s. In a <em>single</em> video card generation the attack hash rate has increased nearly 40 percent. Ponder that.</p>
    <p>First, a tiny hello world test to see if things are working. I downloaded <a href="https://hashcat.net/hashcat/">hashcat</a>. I logged into our demo at try.discourse.org and created a new account with the password <code>0234567890</code>; I checked the database, and this generated the following values in the hash and salt database columns for that new user:</p>
    <blockquote>
    <p>hash<br>
    <code>93LlpbKZKficWfV9jjQNOSp39MT0pDPtYx7/gBLl5jw=</code><br>
    salt<br>
    <code>ZWVhZWQ4YjZmODU4Mzc0M2E2ZDRlNjBkNjY3YzE2ODA=</code></p>
    </blockquote>
    <p>Hashcat requires the following input file format: one line per hash, with the hash type, number of iterations, salt and hash (base64 encoded) separated by colons:</p>
    <pre><code>type   iter  salt                                         hash
    sha256:64000:ZWVhZWQ4YjZmODU4Mzc0M2E2ZDRlNjBkNjY3YzE2ODA=:93LlpbKZKficWfV9jjQNOSp39MT0pDPtYx7/gBLl5jw=
    </code></pre>
    <p>Let's hashcat it up and see if it works:</p>
    <p><code>./h64 -a 3 -m 10900 .\one-hash.txt 0234567?d?d?d</code></p>
    <p>Note that this is an intentionally tiny amount of work, it's only guessing three digits. And sure enough, we cracked it fast! See the password there on the end? We got it.</p>
    <p><code>sha256:64000:ZWVhZWQ4YjZmODU4Mzc0M2E2ZDRlNjBkNjY3YzE2ODA=:93LlpbKZKficWfV9jjQNOSp39MT0pDPtYx7/gBLl5jw=:0234567890</code></p>
    <p>Now that we know it works, let's get down to business. But we'll start easy. How long does it take to brute force attack <strong>the easiest possible Discourse password, 8 numbers</strong> – that's "only" 10<sup>8</sup> combinations, a little over one hundred million.</p>
    <pre><code>Hash.Type........: PBKDF2-HMAC-SHA256
    Time.Estimated...: Fri Jun 02 00:15:37 2017 (1 hour, 0 mins)
    Guess.Mask.......: ?d?d?d?d?d?d?d?d [8]
    </code></pre>
    <p>Even with a top of the line GPU that's … OK, I guess. Remember this is just one hash we're testing against, so you'd need one hour per row (user) in the table. And I have more bad news for you: Discourse hasn't allowed 8 character passwords for <a href="https://blog.codinghorror.com/your-password-is-too-damn-short/">quite some time now</a>. How long does it take if we try longer numeric passwords?</p>
    <pre><code>?d?d?d?d?d?d?d?d?d [9]
    Fri Jun 02 10:34:42 2017 (11 hours, 18 mins)
    
    ?d?d?d?d?d?d?d?d?d?d [10]
    Tue Jun 06 17:25:19 2017 (4 days, 18 hours)
    
    ?d?d?d?d?d?d?d?d?d?d?d [11]
    Mon Jul 17 23:26:06 2017 (46 days, 0 hours)
    
    ?d?d?d?d?d?d?d?d?d?d?d?d [12]
    Tue Jul 31 23:58:30 2018 (1 year, 60 days)
    </code></pre>
    <p>But all digit passwords are easy mode, for babies! How about some <em>real</em> passwords that use at least lowercase letters, or lowercase + uppercase + digits?</p>
    <pre><code>Guess.Mask.......: ?l?l?l?l?l?l?l?l [8]
    Time.Estimated...: Mon Sep 04 10:06:00 2017 (94 days, 10 hours)
    
    Guess.Mask.......: ?1?1?1?1?1?1?1?1 [8] (-1 = ?l?u?d)
    Time.Estimated...: Sun Aug 02 09:29:48 2020 (3 years, 61 days)
    </code></pre>
    <p>A brute force try-every-single-letter-and-number attack is not looking so hot for us at this point, even with a high end GPU. But what if we divided the number by <strong>eight</strong> … <a href="https://gist.github.com/epixoip/a83d38f412b4737e99bbef804a270c40">by putting eight video cards in a single machine?</a> That's well within the reach of a small business budget or a wealthy individual. Unfortunately, dividing 38 months by 8 isn't such a dramatic reduction in the time to attack. Instead, let's talk about nation state attacks where they have the budget to throw <em>thousands</em> of these GPUs at the problem (1.1 days), maybe even <em>tens of thousands</em> (2.7 hours), then … yes. Even allowing for 10 character password minimums, you are in serious trouble at that point.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/06/8-gpu-cracking-rig.jpg" alt=""></p>
    <p>If we want Discourse to be nation state attack resistant, clearly we'll need to do better. Hashcat has a handy benchmark mode, and <a href="https://docs.google.com/spreadsheets/d/1iwoMR5TBYAZ5eiSphkIQfIEfbrVvWW_tKwS4L1cYlaI/pubhtml?gid=0&amp;single=true">here's a sorted list of the strongest (slowest) hashes that Hashcat knows about</a> benchmarked on a rig with 8 Nvidia GTX 1080 GPUs. Of the things I recognize on that list, <strong>bcrypt</strong>, <strong>scrypt</strong> and <strong>PBKDF2-HMAC-SHA512</strong> stand out.</p>
    <p>My quick hashcat results gave me some confidence that we weren't doing anything terribly wrong with the Discourse password hashes stored in the database. But I wanted to be <em>completely sure</em>, so I hired someone with a background in security and penetration testing to, under a signed NDA, try cracking the password hashes of two live and very popular Discourse sites <a href="https://discourse.org/customers">we currently host</a>.</p>
    <blockquote>
    <p>I was provided two sets of password hashes from two different Discourse communities, containing 5,909 and 6,088 hashes respectively. Both used the PBKDF2-HMAC-SHA256 algorithm with a work factor of 64k. Using hashcat, my Nvidia GTX 1080 Ti GPU generated these hashes at a rate of ~27,000/sec.</p>
    <p>Common to all discourse communities are various password requirements:</p>
    <ul>
    <li>All users must have a minimum password length of 10 characters.</li>
    <li>All administrators must have a minimum password length of 15 characters.</li>
    <li>Users cannot use any password matching a blacklist of the 10,000 most commonly used passwords.</li>
    <li>Users can choose to create a username and password or use various third party authentication mechanisms (Google, Facebook, Twitter, etc). If this option is selected, a secure random 32 character password is autogenerated. It is not possible to know whether any given password is human entered, or autogenerated.</li>
    </ul>
    <p>Using common password lists and masks, I cracked 39 of the 11,997 hashes in about three weeks, 25 from the ████████ community and 14 from the ████████ community.</p>
    </blockquote>
    <p>This is a security researcher who commonly runs these kinds of audits, so all of the attacks used <strong>wordlists</strong>, along with known effective patterns and <a href="https://hashcat.net/wiki/doku.php?id=mask_attack">masks</a> derived from the researcher's previous password cracking experience, instead of raw brute force. That recovered the following passwords (and one duplicate):</p>
    <table>
    <tr>
    <td>
    <code>007007bond</code><br>
    <code>123password</code><br>
    <code>1qaz2wsx3e</code><br>
    <code>A3eilm2s2y</code><br>
    <code>Alexander12</code><br>
    <code>alexander18</code><br>
    <code>belladonna2</code><br>
    <code>Charlie123</code><br>
    <code>Chocolate1</code><br>
    <code>christopher8</code><br>
    <code>Elizabeth1</code><br>
    <code>Enterprise01</code><br>
    <code>Freedom123</code><br>
    <code>greengrass123</code><br>
    <code>hellothere01</code><br>
    <code>I123456789</code><br>
    <code>Iamawesome</code><br>
    <code>khristopher</code><br>
    <code>l1ghthouse</code><br>
    </td>
    <td>
    <code>l3tm3innow</code><br>
    <code>Neversaynever</code><br>
    <code>password1235</code><br>
    <code>pittsburgh1</code><br>
    <code>Playstation2</code><br>
    <code>Playstation3</code><br>
    <code>Qwerty1234</code><br>
    <code>Qwertyuiop1</code><br>
    <code>qwertyuiop1234567890</code><br>
    <code>Spartan117</code><br>
    <code>springfield0</code><br>
    <code>Starcraft2</code><br>
    <code>strawberry1</code><br>
    <code>Summertime</code><br>
    <code>Testing123</code><br>
    <code>testing1234</code><br>
    <code>thecakeisalie02</code><br>
    <code>Thirteen13</code><br>
    <code>Welcome123</code><br>
    </td>
    </tr>
    </table>
    <p>If we multiply this effort by 8, and double the amount of time allowed, it's conceivable that a <em>very</em> motivated attacker, or <a href="https://arstechnica.com/security/2013/10/how-the-bible-and-youtube-are-fueling-the-next-frontier-of-password-cracking/">one with a sophisticated set of wordlists and masks</a>, could eventually recover 39 × 16 = 624 passwords, or about <strong>five percent</strong> of the total users. That's reasonable, but higher than I would like. We absolutely plan to add a hash type table in future versions of Discourse, so we can switch to an even more secure (read: <a href="http://www.pxdojo.net/2015/08/what-i-learned-from-cracking-4000.html">much slower</a>) password hashing scheme in the next year or two.</p>
    <pre><code>bcrypt $2*$, Blowfish (Unix)
      20273 H/s
    
    scrypt
      886.5 kH/s
    
    PBKDF2-HMAC-SHA512
      542.6 kH/s 
    
    PBKDF2-HMAC-SHA256
     1646.7 kH/s 
    </code></pre>
    <p>After this exercise, I now have a much deeper understanding of our worst case security scenario, a database compromise combined with a professional offline password hashing attack. I can also more confidently recommend and stand behind our engineering work in making Discourse secure for everyone. So if, like me, you're not entirely sure you are doing things securely, it's time to put those assumptions to the test. Don't wait around for hackers to attack you — <strong>hacker, hack thyself!</strong></p>
    <table>  
    <tr><td class="welovecodinghorror">[advertisement] At Stack Overflow, we put developers first. We already help you find answers to your tough coding questions; now let us help you <a href="http://careers.stackoverflow.com" rel="nofollow">find your next job</a>.</td></tr>  
    </table>  <!--kg-card-end: markdown-->
                </content>
    <pubDate>2017-06-02T08:11:16.000Z</pubDate>
    <guid>https://blog.codinghorror.com/hacker-hack-thyself/</guid>
    </item>
    <item>
    <title>Thunderbolting Your Video Card</title>
    <link>https://blog.codinghorror.com/thunderbolting-your-video-card/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>When I wrote about <a href="https://blog.codinghorror.com/the-golden-age-of-x86-gaming/">The Golden Age of x86 Gaming</a>, I <em>implied</em> that, in the future, it might be an interesting, albeit expensive, idea to upgrade your video card via an external Thunderbolt 3 enclosure.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/03/skull-canyon-nuc-with-razer-core.jpg" alt=""></p>
    <p>I'm here to report that <strong>the future is now</strong>.</p>
    <p>Yes, that's right, I paid $500 for <a href="https://www.razerzone.com/store/razer-core">an external Thunderbolt 3 enclosure</a> to fit a $600 video card, all to enable a plug-in upgrade of a GPU on a <a href="https://blog.codinghorror.com/the-golden-age-of-x86-gaming/">Skull Canyon NUC</a> that itself cost around $1000 fully built. I know, it sounds crazy, and … OK fine, I won't argue with you. It's crazy.</p>
    <p>This matters mostly because of 4k, aka 2160p, aka 3840 × 2160, aka <strong>Ultra HD</strong>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/common-hd-resolutions-compared.png" alt="4k compared to 1080p"></p>
    <p>Plain old regular HD, aka 1080p, aka 1920 × 1080, is one quarter the size of 4k, and ¼ the work. By today's GPU standards HD is pretty much <em>easy mode</em> these days. It's not even interesting. No offense to console fans, or anything.</p>
    <p>Late in 2016, I got a <a href="https://www.amazon.com/gp/product/B01CDD4J58/?tag=codihorr-20">4k OLED display</a> and it … kind of blew my mind. I have never seen blacks so black, colors so vivid, on a display so thin. It made my previous 2008 era Panasonic plasma set look lame. It's so good that I'm now a little angry that every display that my eyes touch isn't OLED already. I even got into nerd fights over it, and to be honest, I'd still throw down for OLED. It is legitimately <em>that good</em>. Come at me, bro.</p>
    <p>Don't believe me? Well, guess which display in the below picture is OLED? Go on, guess:</p>
    <p><a href="http://www.consumerreports.org/lcd-led-oled-tvs/2016-LG-4K-oled-tvs/"><img alt="https://blog.codinghorror.com/content/images/2017/03/CptX7RCVYAAKNOP.jpg" alt="Guess which screen is OLED?"></a></p>
    <blockquote class="twitter-tweet" data-lang="en">
    <p lang="en" dir="ltr"><a href="https://twitter.com/andrewbstiles">@andrewbstiles</a> if it was physically possible to have sex with this TV I.. uh.. I'd take it on long, romantic walks</p>— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/status/764304493483663361">August 13, 2016</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>There's a reason every site that reviews TVs had to recalibrate their results when <a href="http://thewirecutter.com/reviews/best-tv/">they reviewed the 2016 OLED sets</a>.</p>
    <blockquote>
    <p>In my extended review at Reference Home Theater, I call it “the best looking TV I’ve ever reviewed.” But we aren’t alone in loving the E6. Vincent Teoh at HDTVtest writes, “We’re not even going to qualify the following endorsement: if you can afford it, this is the TV to buy.” Rtings.com gave <a href="https://www.amazon.com/gp/product/B01CDD4J58/?tag=codihorr-20">the E6 OLED</a> the highest score of any TV the site has ever tested. Reviewed.com awarded it a 9.9 out of 10, with only the LG G6 OLED (which offers the same image but better styling and sound for $2,000 more) coming out ahead.</p>
    </blockquote>
    <p>But I digress.</p>
    <p>Playing games at 1080p in my living room was already possible. But now that I have an incredible 4k display in the living room, it's a whole other level of difficulty. Not just twice as hard – and remember current consoles <em>barely</em> manage to eke out 1080p at 30fps in most games – but <strong>four times as hard</strong>. That's where external GPU power comes in.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/03/razer-core-with-gpu.jpg" alt=""></p>
    <p>The cool technology underpinning all of this is <strong>Thunderbolt 3</strong>. The thunderbolt cable bundled with the Razer Core is rather … diminutive. There's <a href="https://blog.startech.com/post/thunderbolt-3-the-basics/">a reason for this</a>.</p>
    <blockquote>
    <p><strong>Is there a maximum cable length for Thunderbolt 3 technology?</strong></p>
    <p>Thunderbolt 3 passive cables have maximum lengths.</p>
    <ul>
    <li>0.5m TB 3 (40Gbps)</li>
    <li>1.0m TB 3 (20Gbps)</li>
    <li>2.0m TB 3 (20Gbps)</li>
    </ul>
    <p>In the future we will offer active cables which will provide 40Gbps of bandwidth at longer lengths.</p>
    </blockquote>
    <p>40Gbps is, for the record, an <em>insane</em> amount of bandwidth. Let's use our rule of thumb based on ultra common gigabit ethernet, that 1 gigabit = 120 megabytes/second, and we arrive at <strong>4.8 gigabytes/second</strong>. Zow.</p>
    <p>That's more than enough bandwidth to run even the highest of high end video cards, but it is not without overhead. There's <a href="http://www.ultrabookreview.com/10761-razer-core-review/">a mild performance hit</a> for running the card externally, on the order of <strong>15%</strong>. There's also a further performance hit of 10% if you are in "loopback" mode on a laptop where you don't <em>have</em> an external display, so the video frames have to be shuttled back from the GPU to the internal laptop display.</p>
    <p>This may look like a gamer-only thing, but surprisingly, it isn't. What you get is the general purpose ability to attach <strong>any PCI express card</strong> to any computer with a <strong>Thunderbolt 3</strong> port and, for the most part, it just works!</p>
    <p>Linus breaks it down and answers all your most difficult questions:</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/2D79GsrEqe4" frameborder="0" allowfullscreen></iframe>
    <p>Please watch the above video closely if you're actually interested in this stuff; it is essential. I'll add some caveats of my own after working with the Razer Core for a while:</p>
    <ul>
    <li>
    <p>Make sure the video card you plan to put into the Razer Core is not too tall, or too wide. You can tell if a card is going to be too tall by looking at pictures of the mounting rear bracket. If the card extends significantly above the standard rear mounting bracket, it won't fit. If the card takes more than 2 slots in width, it also won't fit, but this is more rare. Depth (length) is rarely an issue.</p>
    </li>
    <li>
    <p>There are four fans in the Razer Core and although it is <em>reasonably</em> quiet, it's not super silent or anything. You may want to <a href="http://forum.notebookreview.com/threads/razer-core-disassembly-fan-location-guide.802000/">mod the fans</a>. The Razer Core is a remarkably simple device, internally, it's really just a power supply, some Thunderbolt 3 bridge logic, and a PCI express slot. I agree with Linus that the #1 area Razer could improve in the future, beyond generally getting the price down, is to use fewer and larger fans that run quieter.</p>
    </li>
    <li>
    <p>If you're putting a heavy hitter GPU in the Razer Core, I'd try to avoid blower style cards (the ones that exhaust heat from the rear) in favor of those that cool with large fans blowing down and around the card. Dissipating 150w+ is no mean feat and you'll definitely need to keep the enclosure in open air … and of course within 0.5 meters of the computer it's connected to.</p>
    </li>
    <li>
    <p>There is no visible external power switch on the Razer Core. It doesn't power on until you connect a TB3 cable to it. I was totally not expecting that. But once connected, it powers up and the Windows 10 Thunderbolt 3 drivers kick in and ask you to authorize the device, which I did (always authorize). Then it spun a bit, detected the new GPU, and suddenly I had multiple graphics card active on the same computer. I also installed the latest Nvidia drivers just to make sure everything was ship shape.</p>
    </li>
    <li>
    <p>It's kinda ... <em>weird</em> having multiple GPUs simultaneously active. I wanted to make the Razer Core display the only display, but you can't really turn off the built in GPU – you can select "only use display 2", that's all. I got into several weird states where windows were opening on the other display and I had to mess around a fair bit to get things locked down to just one display. You may want to consider whether you have both "displays" connected for troubleshooting, or not.</p>
    </li>
    </ul>
    <p>And then, there I am, playing Lego Marvel in splitscreen co-op at glorious 3840 × 2160 UltraHD resolution on an amazing OLED display with my son. It is <em>incredible</em>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/03/lego-marvel-4k.jpg" alt=""></p>
    <p>Beyond the technical "because I could", I am <strong>wildly optimistic about the future of external Thunderbolt 3 expansion boxes</strong>, and here's why:</p>
    <ul>
    <li>
    <p>The main expense and bottleneck in any stonking gaming rig is, by <em>far</em>, the GPU. It's also the item you are most likely to need to replace a year or two from now.</p>
    </li>
    <li>
    <p>The CPU and memory speeds available today are so comically fast that any device with a low-end i3-7100 for $120 will make zero difference in real world gaming at 1080p or higher … if you're OK with 30fps minimum. If you bump up to $200, you can get a quad-core i5-7500 that guarantees you 60fps minimum everywhere.</p>
    </li>
    <li>
    <p>If you prefer a small system or a laptop, an external GPU makes it so much more flexible. Because CPU and memory speeds are already so fast, 99.9% of the time your bottleneck is the GPU, and almost <strong>any small device you can buy with a Thunderbolt 3 port can now magically transform into a potent gaming rig with a single plug</strong>. Thunderbolt 3 may be a bit cutting edge today, but more and more devices are shipping with Thunderbolt 3. Within a few years, I predict TB3 ports will be as common as USB3 ports.</p>
    </li>
    <li>
    <p>A general purpose external PCI express enclosure will be usable for a very long time. My last <em>seven</em> video card upgrades were plug and play PCI Express cards that would have worked fine in any computer I've built in the last ten years.</p>
    </li>
    <li>
    <p>External GPUs are not meaningfully bottlenecked by Thunderbolt 3 bandwidth; the impact is 15%  to 25%, and perhaps even less over time as drivers and implementations mature. While Thunderbolt 3 has "only" PCI Express x4 bandwidth, many benchmarkers have noted that GPUs moving from PCI Express x16 to x8 has <a href="https://www.pugetsystems.com/labs/articles/Impact-of-PCI-E-Speed-on-Gaming-Performance-518/">almost no effect on performance</a>. And there's always Thunderbolt 4 on the horizon.</p>
    </li>
    </ul>
    <p>The future, as they say, is already here – it's just not evenly distributed.</p>
    <p>I am painfully aware that <strong>costs need to come down</strong>. Way, <em>way</em> down. The <a href="https://www.razerzone.com/store/razer-core">$499 Razer Core</a> is well made, on the vanguard of what's possible, a harbinger of the future, and fantastically enough, it does <em>even more</em> than what it says on the tin. But it's not exactly <em>affordable</em>.</p>
    <p>I would absolutely love to see a modest, dedicated $200 external Thunderbolt 3 box that included an inexpensive current-gen GPU. This would <em>clobber</em> any onboard GPU on the planet. Let's compare my Skull Canyon NUC, which has Intel's <a href="http://www.notebookcheck.net/Intel-Iris-Pro-Graphics-580.160664.0.html">fastest ever, PS4 class embedded GPU</a>, with the modest $150 <a href="http://www.notebookcheck.com/NVIDIA-GeForce-GTX-1050-Ti-Desktop.181030.0.html">GeForce GTX 1050 Ti</a>:</p>
    <table width="300px">
    <tr>
    <td colspan="2"><b>1920 × 1080 high detail</b></td>
    </tr>
    <tr>
    <td>Bioshock Infinite</td>
    <td>15 → 79 fps</td>
    </tr>
    <tr>
    <td>Rise of the Tomb Raider</td>
    <td>12 → 49 fps</td>
    </tr>
    <tr>
    <td>Overwatch</td>
    <td>43 → 114 fps</td>
    </tr>
    </table>
    <p>As predicted, that's a 3x-5x stompdown. Mac users lamenting their general lack of upgradeability, hear me: <em>this sort of box is exactly what you want and need</em>. Imagine if Apple was to embrace upgrading their laptops and all-in-one systems via Thunderbolt 3.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/03/razer-core-and-razer-laptop.jpg" alt=""></p>
    <p>I know, I know. It's a stretch. But a man can dream … of externally upgradeable GPUs. That are too expensive, sure, but they are here, right now, today. They'll only get cheaper over time.</p>
    <table>  
    <tr><td class="welovecodinghorror">  
    [advertisement] <a href="http://careers.stackoverflow.com" rel="nofollow">Find a better job the Stack Overflow way</a> - what you need when you need it, no spam, and no scams.
    </td></tr>  
    </table>  <!--kg-card-end: markdown-->
                </content>
    <pubDate>2017-03-24T09:08:37.000Z</pubDate>
    <guid>https://blog.codinghorror.com/thunderbolting-your-video-card/</guid>
    </item>
    <item>
    <title>Password Rules Are Bullshit</title>
    <link>https://blog.codinghorror.com/password-rules-are-bullshit/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Of the many, many, <em>many</em> <a href="https://blog.codinghorror.com/the-dirty-truth-about-web-passwords/">bad things about passwords</a>, you know what the worst is? Password rules.</p>
    <blockquote class="twitter-tweet" data-lang="en">
    <p lang="en" dir="ltr">If we don't solve the password problem for users in my lifetime I am gonna haunt you from beyond the grave as a ghost <a href="http://t.co/Tf9EnwgoZv">pic.twitter.com/Tf9EnwgoZv</a></p>— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/status/631238409269309440">August 11, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>Let this pledge be duly noted on the permanent record of the Internet. I don't know if there's an afterlife, but I'll be finding out soon enough, and I plan to go out <em>mad as hell</em>.</p>
    <p>The world is absolutely awash in terrible password rules:</p>
    <ul>
    <li><a href="https://github.com/duffn/dumb-password-rules">Dumb Password Rules</a></li>
    <li><a href="http://badpasswordpolicies.tumblr.com/">Bad Password Policies</a></li>
    <li><a href="http://password-shaming.tumblr.com/">Password Requirements Shaming</a></li>
    </ul>
    <p>But I don't need to tell you this. The more likely you are to use a truly random password generation tool, like us über-geeks are supposed to, the more likely you have suffered mightily – and daily – under this regime.</p>
    <p>Have you seen the classic XKCD <a href="https://xkcd.com/936/">about passwords</a>?</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/03/password_strength.png" alt="To anyone who understands information theory and security and is in an infuriating argument with someone who does not (possibly involving mixed case), I sincerely apologize."></p>
    <p>We <a href="https://security.stackexchange.com/questions/6095/xkcd-936-short-complex-password-or-long-dictionary-passphrase">can certainly debate</a> whether "correct horse battery staple" is a viable password strategy or not, but the argument here is mostly that <em>length matters</em>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/03/twss.jpg" alt="That's What She Said"></p>
    <p>No, seriously, it does. I'll go so far as to say <a href="https://blog.codinghorror.com/your-password-is-too-damn-short/">your password is too damn short</a>. These days, given the state of cloud computing and GPU password hash cracking, any password of 8 characters or less is perilously close to <em>no password at all</em>.</p>
    <p>So then perhaps we have one rule, that <strong>passwords must not be short</strong>. A long password is much more likely to be secure than a short one … right?</p>
    <p>What about this four character password?</p>
    <h1 id="">✅🐎🔋🖇️</h1>
    <p>What about this eight character password?</p>
    <h1 id="">正确马电池订书钉</h1>
    <p>Or this (hypothetical, but all too real) seven character password?</p>
    <h1>ش导พิ한<img alt="https://blog.codinghorror.com/content/images/2017/06/klingon-char.png" width="35" height="42" alt="" style="display:inline; vertical-align:middle">✌︎🚖</h1>
    <blockquote class="twitter-tweet" data-conversation="none" data-lang="en">
    <p lang="en" dir="ltr"><a href="https://twitter.com/codinghorror">@codinghorror</a> I'm sorry but your password must contain 1 char each from: Arabic, Chinese, Thai, Korean, Klingon, Wingdings and an emoji</p>— Finley Creative (@FinleyCreative) <a href="https://twitter.com/FinleyCreative/status/705349059217784833">March 3, 2016</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>You may also be surprised, if you paste the above four Unicode emojis into your favorite login dialog (go ahead – try it), to discover that it … <em>isn't</em> in fact four characters.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/03/discourse-login-emoji-password.png" alt=""></p>
    <p>Oh dear.</p>
    <pre><code>"💩".length === 2
    </code></pre>
    <p>Our old pal Unicode <a href="http://blog.jonnew.com/posts/poo-dot-length-equals-two">strikes again</a>.</p>
    <p>As it turns out, even the simple rule that "your password must be of reasonable length" … ain't necessarily so. Particularly if we stop thinking like <a href="https://blog.codinghorror.com/the-ugly-american-programmer/">Ugly ASCII Americans</a>.</p>
    <p>And what of those nice, long passwords? Are they <em>always</em> secure?</p>
    <pre><code>aaaaaaaaaaaaaaaaaaa
    0123456789012345689
    passwordpassword
    usernamepassword
    </code></pre>
    <p>Of course not, because <em>have you met any users lately?</em></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/03/incorrect-password.jpg" alt='I changed all my passwords to "incorrect"'></p>
    <p>They consistently ruin every piece of software I've ever written. Yes, yes, I know you, Mr. or Ms. über-geek, know <em>all</em> about the concept of entropy. But expressing your love of entropy as terrible, idiosyncratic password rules …</p>
    <ul>
    <li>must contain uppercase</li>
    <li>must contain lowercase</li>
    <li>must contain a number</li>
    <li>must contain a special character</li>
    </ul>
    <p>… is a spectacular failure of imagination in a world of Unicode and Emoji.</p>
    <p>As we built <a href="https://discourse.org">Discourse</a>, I discovered that <a href="https://blog.codinghorror.com/the-god-login/">the login dialog was a remarkably complex piece of software</a>, despite its surface simplicity. The primary password rule we used was also the simplest one: <strong>length</strong>. Since I wrote that, we've already increased our minimum password default length from 8 to 10 characters. And if you happen to be an admin or moderator, we decided the minimum has to be even more, <strong>15</strong> characters.</p>
    <p>I also advocated <strong>checking passwords against the 100,000 most common passwords</strong>. If you look at <a href="https://blog.keepersecurity.com/2017/01/13/most-common-passwords-of-2016-research-study/">10 million passwords from data breaches in 2016</a>, you'll find the top 25 most used passwords are:</p>
    <table width="320px">
    <tr>
    <td style="vertical-align:top">
    <code>123456</code><br>
    <code>123456789</code><br>
    <code>qwerty</code><br>
    <code>12345678</code><br>
    <code>111111</code><br>
    <code>1234567890</code><br>
    <code>1234567</code><br>
    <code>password</code><br>
    <code>123123</code><br>
    <code>987654321</code><br>
    <code>qwertyuiop</code><br>
    <code>mynoob</code><br>
    </td>
    <td style="vertical-align:top">
    <code>123321</code><br>
    <code>666666</code><br>
    <code>18atcskd2w</code><br>
    <code>7777777</code><br>
    <code>1q2w3e4r</code><br>
    <code>654321</code><br>
    <code>555555</code><br>
    <code>3rjs1la7qe</code><br>
    <code>google</code><br>
    <code>1q2w3e4r5t</code><br>
    <code>123qwe</code><br>
    <code>zxcvbnm</code><br>
    <code>1q2w3e</code><br>
    </td>
    </tr>
    </table>
    <p>Even this data betrays some ASCII-centrism. The numbers are the same in any culture I suppose, but I find it hard to believe the average Chinese person will ever choose the passwords "password", "quertyuiop", or "mynoob". So this list <em>has</em> to be customizable, localizable.</p>
    <p>(One interesting idea is to search for common shorter password matches inside longer passwords, but I think this would cause too many false positives.)</p>
    <p>If you examine the data, this also turns into an argument in favor of password length. Note that only 5 of the top 25 passwords are 10 characters, so if we require 10 character passwords, we've already reduced our exposure to the most common passwords by 80%. I saw this originally when I <a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords">gathered millions and millions of leaked passwords for Discourse research</a>, then filtered the list down to just those passwords reflecting our new minimum requirement of 10 characters or more.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/03/top-million-common-passwords-by-length.png" alt=""></p>
    <p>It suddenly became a <em>tiny</em> list. (If you've done similar common password research, please do share your results in the comments.)</p>
    <p>I'd like to offer the following common sense advice to my fellow developers:</p>
    <h4 id="1passwordrulesarebullshit">1. Password rules are bullshit</h4>
    <ul>
    <li>They don't work.</li>
    <li>They heavily penalize your ideal audience, people that use real random password generators. Hey guess what, that password randomly <em>didn't</em> have a number or symbol in it. I just double checked my math textbook, and yep, it's possible. I'm pretty sure.</li>
    <li>They frustrate average users, who then become uncooperative and use "creative" workarounds that make their passwords <em>less</em> secure.</li>
    <li>They are often wrong, in the sense that the rules chosen are grossly incomplete and/or insane, per the many shaming links I've shared above.</li>
    <li>Seriously, for the <em>love of God</em>, stop with this arbitrary password rule nonsense already. If you won't take my word for it, read <a href="https://nakedsecurity.sophos.com/2016/08/18/nists-new-password-rules-what-you-need-to-know/">this 2016 NIST password rules recommendation</a>. It's right there, "no composition rules". However, I do see one error, it should have said "no <em>bullshit</em> composition rules".</li>
    </ul>
    <h4 id="2enforceaminimumunicodepasswordlength">2. Enforce a minimum <em>Unicode</em> password length</h4>
    <p>One rule is at least easy to remember, understand, and enforce. This is the proverbial one rule to bring them all, and in the darkness bind them.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/03/one-donut-to-bind-them-all.jpg" alt=""></p>
    <ul>
    <li>It's simple. Users can count. Most of them, anyway.</li>
    <li>It works. The data <em>shows us</em> it works; just download any common password list of your choice and group by password length.</li>
    <li>The math doesn't lie. All other things being equal, a longer password <em>will</em> be more random – and thus more secure – than a short password.</li>
    <li>Accept that even this one rule isn't inviolate. A minimum password length of 6 on a Chinese site <em>might</em> be perfectly reasonable. A 20 character password <em>can</em> be ridiculously insecure.</li>
    <li>If you don't allow (almost) every single unicode character in the password input field, you are probably doing it wrong.</li>
    <li>It's a bit of an implementation detail, but make sure <em>maximum</em> password length is reasonable as well.</li>
    </ul>
    <h4 id="3checkforcommonpasswords">3. Check for common passwords</h4>
    <p>As I've already noted, the definition of "common" depends on your audience, and language, but it is a terrible disservice to users when you let them choose passwords that exist in the list of 10k, 100k, or million most common known passwords from data breaches. There's <em>no question</em> that a hacker will submit these common passwords in a hack attempt – and it's shocking how far you can get, even with aggressive password attempt rate limiting, using <a href="https://xato.net/10-000-top-passwords-6d6380716fe0">just the 1,000 most common passwords</a>.</p>
    <ul>
    <li>1.6% have a password from the top 10 passwords</li>
    <li>4.4% have a password from the top 100 passwords</li>
    <li>9.7% have a password from the top 500 passwords</li>
    <li>13.2% have a password from the top 1,000 passwords</li>
    <li>30% have a password from the top 10,000 passwords</li>
    </ul>
    <p>Lucky you, there are millions and millions of real breached password lists out there to sift through. It is sort of fun to do data forensics, because these aren't hypothetical synthetic Jack the Ripper password rules some bored programmer dreamed up, these are <em>real</em> passwords used by <em>real</em> users.</p>
    <p>Do the research. Collect the data. Protect your users from themselves.</p>
    <h4 id="4checkforbasicentropy">4. Check for basic entropy</h4>
    <p>No need to get fancy here; pick the measure of entropy that satisfies you deep in the truthiness of your gut. But remember you have to be able to <em>explain</em> it to users when they fail the check, too.</p>
    <p><a href="http://www.digifail.com/software/spectra.shtml"><img alt="https://blog.codinghorror.com/content/images/2017/03/entropy2.png" alt="entropy visualized"></a></p>
    <p>I had a bit of a sad when I realized that we  were perfectly fine with users selecting a 10 character password that was literally "aaaaaaaaaa". In my opinion, the simplest way to do this is to ensure that there are at least (x) unique characters out of (y) total characters. And that's what we do as of the current beta version of Discourse. But I'd love your ideas in the comments, too. The simpler and clearer the better!</p>
    <h4 id="5checkforspecialcasepasswords">5. Check for special case passwords</h4>
    <p>I'm embarrassed to admit that when building the Discourse login, <a href="https://blog.codinghorror.com/the-god-login/">as I discussed in The God Login</a>, we missed two common cases that you really <em>have</em> to block:</p>
    <ul>
    <li>password equal to username</li>
    <li>password equal to email address</li>
    </ul>
    <p>🤦 If you are using Discourse versions earlier than 1.4, I'm so sorry and <em>please upgrade immediately</em>.</p>
    <p>Similarly, you might also want to block other special cases like</p>
    <ul>
    <li>password equal to URL or domain of website</li>
    <li>password equal to app name</li>
    </ul>
    <p>In short, try to think outside the password input box, like a user would.</p>
    <blockquote>
    <p>🔔 <strong>Clarification</strong></p>
    <p>A few people have interpreted this post as "all the <em>other</em> password rules are bullshit, except these four I will now list." That's not what I'm trying to say here.</p>
    <p>The idea is to focus on the one understandable, simple, practical, works-in-real-life-in-every-situation rule: <strong>length</strong>. Users can enter (almost) anything, in proper Unicode, <em>provided it's long enough</em>. That's the <strong>one rule to bind them all</strong> that we need to teach users: length!</p>
    <p>Items #3 through #5 are more like genie-special-exception checks, a <a href="https://www.youtube.com/watch?v=Bwic3hJ4q1A">you can't wish for infinite wishes</a> kind of thing. It doesn't need to be discussed up front because it <em>should</em> be really rare. Yes, you must stop users from having comically bad passwords that equal their username, or <code>aaaaaaaaaaa</code> or <code>0123456789</code>, but only as post-entry checks, not as rules that need to be explained in advance.</p>
    <p>So TL;DR: one rule. Length. Enter whatever you want, just make sure it's long enough to be a reasonable password.</p>
    </blockquote>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Building out your tech team? <a href="http://careers.stackoverflow.com/products" rel="nofollow">Stack Overflow Careers</a> helps you hire from the largest community for programmers on the planet. We built our site with developers like you in mind.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2017-03-10T11:16:26.000Z</pubDate>
    <guid>https://blog.codinghorror.com/password-rules-are-bullshit/</guid>
    </item>
    <item>
    <title>I'm Loyal to Nothing Except the Dream</title>
    <link>https://blog.codinghorror.com/im-loyal-to-nothing-except-the-dream/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>There is much I take for granted in my life, and the normal functioning of American government is one of those things. In my 46 years, I've lived under nine different presidents. The first I remember is Carter. I've voted in every presidential election since 1992, but I do not consider myself a Democrat, or a Republican. I vote based on leadership – above all, leadership – and issues.</p>
    <p>In my 14 years of blogging, I've never written a political blog post. I haven't needed to.</p>
    <p>Until now.</p>
    <p>It is quite clear <strong>something has become deeply unglued in the state of American politics.</strong></p>
    <ul>
    <li>
    <p>The nuclear doomsday clock was <a href="http://www.reuters.com/article/us-science-doomsdayclock-idUSKBN15A2JJ">just moved as close to midnight</a> as it has been in 64 years.</p>
    </li>
    <li>
    <p>America was downgraded from a <a href="http://www.cnbc.com/2017/01/25/us-is-no-longer-a-full-democracy-eiu-warns.html">Democracy to a Flawed Democracy</a>.</p>
    </li>
    </ul>
    <p>As of 2017, the United States, through a sequence of highly improbable events, managed to elect an extremely controversial president.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/01/voting-in-2016-presidential-election.png" alt=""></p>
    <p>A president with <a href="http://fortune.com/2017/01/29/donald-trump-approval-rating-gallup/">historically low approval ratings</a>, elected on a platform many considered <a href="https://www.theguardian.com/technology/2016/oct/31/peter-thiel-defends-donald-trump-muslim-ban-mexico-wall">too extreme to even be taken literally</a>:</p>
    <blockquote>
    <p>Asked about Trump’s statements proposing the construction of a wall on the US-Mexico border and a ban on all Muslims entering the country, Thiel suggested that Trump supporters do not actually endorse those policies.</p>
    <p>“I don’t support a religious test. I certainly don’t support the specific language that Trump has used in every instance,” he said. “But I think one thing that should be distinguished here is that the media is always taking Trump literally. It never takes him seriously, but it always takes him literally.”</p>
    <p>The billionaire went on to define how he believes the average Trump supporter interprets the candidate’s statements. “I think a lot of voters who vote for Trump take Trump seriously but not literally, so when they hear things like the Muslim comment or the wall comment their question is not, ‘Are you going to build a wall like the Great Wall of China?’ or, you know, ‘How exactly are you going to enforce these tests?’ What they hear is we’re going to have a saner, more sensible immigration policy.”</p>
    </blockquote>
    <p>A little over a week into the new presidency, it is obvious that <strong>Trump meant every word of what he said.</strong> He will <a href="https://www.nytimes.com/2017/01/26/world/mexicos-president-cancels-meeting-with-trump-over-wall.html">build a US-Mexico wall</a>. And he signed an executive order that <em>literally</em>, not figuratively, <a href="http://www.cnn.com/2017/01/28/politics/donald-trump-executive-order-immigration-reaction/">banned Muslims from entering the US</a> — even if they held valid green cards.</p>
    <p>As I said, I vote on policies, and <strong>as an American, I reject these two policies.</strong> Our Mexican neighbors are not an evil to be kept out with a wall, but an ally to be cherished. One of my <a href="https://en.wikipedia.org/wiki/Miguel_de_Icaza">favorite people</a> is a Mexican immigrant. Mexican culture is ingrained deeply into America and we are all better for it. The history of America is the history of immigrants seeking religious freedom from persecution, finding a new life in the land of opportunity. Imagine the bravery it takes to leave everything behind, your relatives, your home, your <em>whole life as you know it</em>, to take your entire family on a five thousand mile journey to another country on nothing more than the promise of a dream. I've never done that, though my great-great grandparents did. Muslim immigrants are <a href="https://www.buzzfeed.com/sarahmathews/how-to-get-your-green-card-in-america?utm_term=.lsbOAjkpl#.vjXYP1qbQ">more American than I will ever be</a>, and I am incredibly proud to have them here, as fellow Americans.</p>
    <p><a href="http://www.snopes.com/superman-1950-poster-diversity/"><img alt="https://blog.codinghorror.com/content/images/2017/01/help-keep-your-school-all-american.jpg" alt="Help Keep Your School All American!"></a></p>
    <p>Trump is the first president in 40 years to <a href="http://money.cnn.com/2017/01/23/news/economy/donald-trump-tax-returns/">refuse to release</a> his tax returns in office. He has also refused to <a href="http://www.npr.org/sections/thetwo-way/2017/01/12/509421108/u-s-ethics-official-trumps-divestiture-is-hard-pricy-and-essential">divest himself</a> from his dizzying array of businesses across the globe, which present financial conflicts of interest. All of this, plus the hasty way he is ramrodding his campaign plans through on executive orders, with little or no forethought to how it would work – or if it would work at all – speaks to <strong>how negligent and dangerous Trump is as the leader of the free world.</strong> I want to reiterate that I don't care about party; I'd be absolutely over the moon with President Romney or President McCain, or any other rational form of leadership at this point.</p>
    <p>It is unclear to me how we got where we are today. But echoes of this appeal to nationalism <a href="https://www.washingtonpost.com/world/europe/in-poland-a-window-on-what-happens-when-populists-come-to-power/2016/12/18/083577e8-c203-11e6-92e8-c07f4f671da4_story.html?utm_term=.31b3ca7bd3e6">in Poland</a>, and <a href="https://www.washingtonpost.com/posteverything/wp/2017/01/27/in-venezuela-we-couldnt-stop-chavez-dont-make-the-same-mistakes-we-did/?utm_term=.b8a94d3760b2">in Venezula</a>, offer clues. We brought <a href="https://bbs.boingboing.net/t/when-youre-accustomed-to-privilege-equality-feels-like-oppression/81995">fact checkers to a culture war</a> … and we lost. During the election campaign, I was strongly reminded of Frank Miller's 1986 Nuke story arc, which I read in Daredevil as a teenager — the seductive appeal of unbridled nationalism bleeding across the page in stark primary colors.</p>
    <p><a href="https://www.amazon.com/dp/0785134816/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2017/01/daredevil-233-page.png" alt="Daredevil issue 233, page excerpt"></a></p>
    <p>Nuke is a self-destructive form of <a href="https://library.ucsd.edu/dc/search?f%5Bcollection_sim%5D%5B%5D=Dr.+Seuss+Political+Cartoons&amp;f%5Bobject_type_sim%5D%5B%5D=image&amp;f%5Bsubject_topic_sim%5D%5B%5D=War+and+domestic+issues--America+first">America First nationalism</a> that, for whatever reasons, won the presidency through dark subvocalized whispers, and is now playing out in horrifying policy form. But we are not now a different country; we remain <em>the very same country that elected Reagan and Obama.</em> We lead the free world. And we do it by taking the higher moral ground, choosing to do what is <em>right</em> before doing what is expedient.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/mUkv_jPgTeg" frameborder="0" allowfullscreen></iframe>
    <p>I exercised my rights as a American citizen and I voted, yes. But <strong>I mostly ignored government beyond voting</strong>. I assumed that the wheels of American government would turn, and reasonable decisions would be made by reasonable people. Some I would agree with, others I would not agree with, but I could generally trust that the arc of American history inexorably bends toward justice, towards freedom, toward equality. Towards the things that make up the underlying American dream that this country is based on.</p>
    <p>This is no longer the case.</p>
    <p>I truly believe we are at an unprecedented time in American history, in uncharted territory. I have benefited from democracy passively, without trying at all, for 46 years. I now understand that the next four years is perhaps <a href="http://fusion.net/story/379938/comic-trump-election-protest-civil-rights-movement-memphis/">the most important time to be an activist in the United States since the civil rights movement</a>. <strong>I am ready to do the work.</strong></p>
    <ul>
    <li>
    <p>I have never once in my life called my representatives in congress. That will change. I will be calling and writing my representatives regularly, using <a href="https://5calls.org/"><strong>tools like 5 Calls</strong></a> to do so.</p>
    </li>
    <li>
    <p>I will strongly support, advocate for, and advertise any technical tools on web or smartphone that help Americans have their voices heard by their representatives, even if it takes faxing to do so. Build these tools. <em>Make them amazing</em>.</p>
    </li>
    <li>
    <p>I am subscribing to support essential investigative journalism such as the <a href="https://www.nytimes.com/subscriptions/Multiproduct/lp8HYKU.html">New York Times</a>, <a href="https://myaccount2.latimes.com/dsssubscribe.aspx">Los Angeles Times</a>, and <a href="https://subscribe.washingtonpost.com/">Washington Post</a>.</p>
    </li>
    <li>
    <p>I have set up large monthly donations to the <a href="https://www.aclu.org/">ACLU</a> which is doing critical work in fighting governmental abuse under the current regime.</p>
    </li>
    <li>
    <p>I have set up monthly donations to independent journalism such as <a href="https://www.propublica.org/donate/">ProPublica</a> and <a href="http://www.npr.org/stations/">NPR</a>.</p>
    </li>
    <li>
    <p>I have set up monthly donations to agencies that fight for vulnerable groups, such as <a href="https://www.plannedparenthood.org/">Planned Parenthood</a>, <a href="https://www.reproductiverights.org/">Center for Reproductive Rights</a>, <a href="https://refugeerights.org/">Refugee Rights</a>, <a href="http://www.naacp.org/">NAACP</a>, <a href="http://www.maldef.org/">MALDEF</a>, <a href="http://www.thetrevorproject.org/">the Trevor Project</a>, and so on.</p>
    </li>
    <li>
    <p>I wish to see the formation of a third political party in the United States, led by those who are willing to speak truth to power like <a href="https://www.evanmcmullin.com/">Evan McMullin</a>. It is shameful how many elected representatives will not speak out. Those who do: trust me, we're watching and taking notes. And we will be bringing all our friends and audiences to bear to help you win.</p>
    </li>
    <li>
    <p>I will be watching closely to see which representatives rubber-stamp harmful policies and appointees, and I will vote against them across the ticket, on every single ticket I can vote on.</p>
    </li>
    <li>
    <p>I will actively support all efforts to make the <a href="https://en.wikipedia.org/wiki/National_Popular_Vote_Interstate_Compact">National Popular Vote Interstate Compact</a> happen, to reform the electoral college.</p>
    </li>
    <li>
    <p>To the extent that my schedule allows, I will participate in protests to combat policies that I believe are harmful to Americans.</p>
    </li>
    <li>
    <p>I am not quite at a place in my life where I'd consider running for office, but I will be, eventually. To the extent that <a href="https://stackoverflow.blog/2010/12/stack-exchange-moderator-elections-begin/">any Stack Overflow user can be elected a moderator</a>, I could be elected into office, locally, in the house, even the senate. Has anyone asked Joel Spolsky if he'd be willing to run for office? Because I'd be hard pressed to come up with someone I trust more than my old business partner Joel to do the right thing. I would vote for him so hard I'd break the damn voting machine.</p>
    </li>
    </ul>
    <p>I want to pay back this great country for everything it has done for me in my life, and carry the dream forward, not just selfishly for myself and my children, but for everyone's children, and our children's children. I do not mean <a href="http://progressive.org/dispatches/howard-zinn-s-july-4-wisdom-stands-test-time/">the hollow promises of American nationalism</a> …</p>
    <blockquote>
    <p>We would do well to renounce nationalism and all its symbols: its flags, its pledges of allegiance, its anthems, its insistence in song that God must single out America to be blessed.</p>
    <p>Is not nationalism—that devotion to a flag, an anthem, a boundary so fierce it engenders mass murder—one of the great evils of our time, along with racism, along with religious hatred?</p>
    <p>These ways of thinking—cultivated, nurtured, indoctrinated from childhood on— have been useful to those in power, and deadly for those out of power.</p>
    </blockquote>
    <p>… but the enduring values of freedom, justice, and equality that this nation was founded on. <strong>I pledge my allegiance to the American dream, and the American people</strong> – not to the nation, <em>never</em> to the nation.</p>
    <p><a href="https://www.amazon.com/dp/0785134816/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2017/01/daredevil-233-page-loyal-to-nothing-except-the-dream.png" alt="Daredevil issue 233, page excerpt"></a></p>
    <p>I apologize that it's taken me 46 years to wake up and realize that some things, like the American dream, aren't guaranteed. There will come a time where you <em>have</em> to stand up and fight for them, for democracy to work. I will.</p>
    <p>Will you?</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] At Stack Overflow, we help developers learn, share, and grow. Whether you’re looking for your next dream job or looking to build out your team, <a href="http://careers.stackoverflow.com" rel="nofollow">we've got your back</a>.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2017-01-30T09:19:56.000Z</pubDate>
    <guid>https://blog.codinghorror.com/im-loyal-to-nothing-except-the-dream/</guid>
    </item>
    <item>
    <title>An Inferno on the Head of a Pin</title>
    <link>https://blog.codinghorror.com/an-inferno-on-the-head-of-a-pin/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Today's processors contain <a href="https://blog.codinghorror.com/moores-law-in-practical-terms/">billions of</a> heat-generating transistors in an ever shrinking space. The power budget might go from:</p>
    <ul>
    <li>1000 watts on a specialized server</li>
    <li>100 watts on desktops</li>
    <li>30 watts on laptops</li>
    <li>5 watts on tablets</li>
    <li>1 or 2 watts on a phone</li>
    <li>100 milliwatts on an <a href="http://www.anandtech.com/show/8702/ingenic-launches-newton2-mips-based-iot-and-wearables-solution">embedded system</a>
    </li>
    </ul>
    <p>That's <s>three</s> four orders of magnitude. Modern CPU design is <strong>the delicate art of placing an inferno on the head of a pin.</strong></p>
    <p>Look at the original 1993 Pentium compared to the 20th anniversary Pentium:</p>
    <table cellpadding="4" cellspacing="4" class="reformat-mobile">
    <tr>
    <td style="vertical-align:top">
    <img alt="https://blog.codinghorror.com/content/images/2017/01/intel-pentium-66.jpg" width="260px" alt="Intel Pentium 66">
    </td>
    <td style="vertical-align:top">
    1993<br>
    Pentium<br>
    66 Mhz<br>
    16kb L1<br>
    <b>3.2 million</b> transistors<br>
    </td>
    </tr>
    <tr>
    <td style="vertical-align:top">
    <img alt="https://blog.codinghorror.com/content/images/2017/01/intel-pentium-g2358-20th-anniversary.jpg" width="260px" alt="Intel Pentium G3258 20th Anniversary Edition">
    </td>
    <td style="vertical-align:top">
    2014<br>
    Pentium G3258<br>
    3.2 Ghz × 2 cores<br>
    128kb L1, 512kb L2, 3MB L3<br>
    <b>1.4 billion</b> transistors
    </td>
    </tr>
    </table>
    <p>I remember cooling the early CPUs with simple heatsinks; no fan. Those days are long gone.</p>
    <p>A roomy desktop computer affords cooling opportunities (and thus a watt budget) that a laptop or tablet could only dream of. How often will you be at peak load? For most computers, the answer is "rarely". The smaller the space, the higher the required performance, the more … challenging your situation gets.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/01/challenge-accepted-barney.gif" alt=""></p>
    <p>Sometimes, <a href="https://blog.codinghorror.com/to-ecc-or-not-to-ecc/">I build servers</a>.</p>
    <blockquote>
    <p>Inspired by Google and their use of cheap, commodity x86 hardware to scale on top of the open source Linux OS, I also <a href="http://blog.codinghorror.com/building-servers-for-fun-and-prof-ok-maybe-just-for-fun/">built our own servers</a>. When I get stressed out, when I feel the world weighing heavy on my shoulders and I don't know where to turn … <em>I build servers</em>. It's therapeutic. 
    </p>
    </blockquote>
    <p>Servers are one of those situations where you <em>may</em> be at full CPU load more often than not. I prefer to build <a href="http://www.computerhope.com/jargon/num/1u.htm">1U servers</a> which is the smallest rack mountable unit, at 1.75" total height.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/01/1u-servers.jpg" alt=""></p>
    <p>You get plenty of cores on a die these days,  so I build single CPU servers. One reason is price; the other reason is that clock speed declines proportionally to the number of cores on a die (this is for the Broadwell Xeon V4 series):</p>
    <table style="width:300px">
    <tr>
    <td></td>
    <td>cores</td>
    <td>GHz</td>
    <td></td>
    </tr>
    <tr>
    <td>E5-1630</td>
    <td>4</td>
    <td>3.7</td>
    <td>$406</td>
    </tr>
    <tr>
    <td>E5-1650</td>
    <td>6</td>
    <td>3.6</td>
    <td>$617</td>
    </tr>
    <tr>
    <td>E5-1680</td>
    <td>8</td>
    <td>3.4</td>
    <td>$1723</td>
    </tr>
    <tr>
    <td>E5-2680</td>
    <td>12</td>
    <td>2.4</td>
    <td>$1745</td>
    </tr>
    <tr>
    <td>E5-2690</td>
    <td>14</td>
    <td>2.6</td>
    <td>$2090</td>
    </tr>
    <tr>
    <td>E5-2697</td>
    <td>18</td>
    <td>2.3</td>
    <td>$2702</td>
    </tr>
    </table>
    <p>Yes, there are server CPUs with even more cores, but if you have to ask how much they cost, you <em>definitely</em> can't afford them … and they're clocked even slower. <a href="https://discourse.org">What we do</a> is serviced better by a smaller number of super fast cores than a larger number of slow cores, anyway.</p>
    <p>With that in mind, consider these two Intel Xeon server CPUs:</p>
    <ul>
    <li>
    <a href="http://ark.intel.com/products/82764/Intel-Xeon-Processor-E5-1630-v3-10M-Cache-3_70-GHz">E5-1630 V3</a> (4 core, 3.7 - 3.8 Ghz)</li>
    <li>
    <a href="http://ark.intel.com/products/82765/Intel-Xeon-Processor-E5-1650-v3-15M-Cache-3_50-GHz">E5-1650 V3</a> (6 core, 3.5 - 3.8 Ghz)</li>
    </ul>
    <p>As you can see from the official Intel product pages for each processor, they both have a TDP heat budget of <strong>140 watts</strong>. I'm scanning the specs, thinking maybe this is an OK tradeoff.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/01/thought-bubble-more-cores.png" alt=""></p>
    <p>Unfortunately, here's what I actually measured with <a href="https://blog.codinghorror.com/why-estimate-when-you-can-measure/">my trusty Kill-a-Watt</a> for each server build as I performed <a href="https://blog.codinghorror.com/is-your-computer-stable/">my standard stability testing</a>, with completely identical parts except for the CPU:</p>
    <ul>
    <li>E5-1630: 40w idle, 170w mprime</li>
    <li>E5-1650: 55w idle, <strong>250w</strong> mprime</li>
    </ul>
    <p>I am here to tell you that Intel's TDP figure of 140 watts for the 6 core version of this CPU is a <em>terrible, scurrilous lie!</em></p>
    <p>This caused a bit of a problem for me as our standard 1U server build now <strong>overheats, alarms, and throttles with the 6 core CPU</strong> — whereas the 4 core CPU was just fine. Hey Intel! From my home in California, <a href="https://www.penny-arcade.com/comic/2002/07/22">I stab at thee!</a></p>
    <p>But, you know..</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/01/challenge-accepted.gif" alt=""></p>
    <h4 id="betterheatsink">Better Heatsink</h4>
    <p>The 1.75" maximum height of the 1U server form factor doesn't leave a lot of room for creative cooling of a CPU. But you <em>can</em> switch from an Aluminum cooler to a Copper one.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/01/1u-heatsink-copper-vs-alu.jpg" alt=""></p>
    <p>Copper is significantly more expensive, plus heavier and harder to work with, so it's generally easier to throw an ever-larger mass of aluminum at the cooling problem when you can. But when space is a constraint, as it is with a 1U server, copper dissipates more heat <a href="http://www.ecnmag.com/article/2010/04/comparing-impact-different-heat-sink-materials-cooling-performance">in the same form factor</a>.</p>
    <p>The famous "Ninja" CPU cooler <a href="http://www.silentpcreview.com/article805-page2.html">came in identical copper and aluminum versions</a> so we can compare apples to apples:</p>
    <ul>
    <li>Aluminum Ninja — 24C rise over ambient</li>
    <li>Copper Ninja — 17C rise over ambient</li>
    </ul>
    <p>You can scale the load and the resulting watts of heat by spinning up MPrime threads for the exact number of cores you want to "activate", so that's how I tested:</p>
    <ul>
    <li>Aluminum heatsink — stable at 170w (mprime threads=4), but heat warnings with 190w (mprime threads=5)</li>
    <li>Copper heatsink — stable at 190w (mprime threads=5) but heat warnings with 230w (mprime threads=6)</li>
    </ul>
    <p>Each run has to be overnight to be considered successful.  This helped, noticeably. But we need more.</p>
    <h4 id="betterthermalinterface">Better Thermal Interface</h4>
    <p>When it comes to server builds, I stick with the pre-applied grey thermal interface pad that comes on the heatsinks. But out of boredom and a desire to experiment, I …</p>
    <ul>
    <li>Removed the copper heatsink.</li>
    <li>Used isopropyl alcohol to clean both CPU and heatsink.</li>
    <li>Applied fancy "Ceramique" thermal compound I have on hand, <a href="https://www.pugetsystems.com/labs/articles/Thermal-Paste-Application-Techniques-170/">using an X shape pattern</a>.</li>
    </ul>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/01/applying-thermal-paste.jpg" alt=""></p>
    <p>I wasn't expecting any change at all, but to my surprise with the new TIM applied <strong>it took 5x longer to reach throttle temps</strong> with mprime threads=6. Before, it would thermally throttle within a minute of launching the test, and after it took ~10 minutes to reach that same throttle temp. The difference was noticeable.</p>
    <p>That's a surprisingly good outcome, and it tells us the default grey goop that comes pre-installed on heatsinks is ... not great. Per <a href="http://skinneelabs.com/2011-thermal-paste-review-comparison/3/">this 2011 test</a>, the difference between worst and best thermal compounds is 4.3°C.</p>
    <p>But as Dan once bravely noted <a href="http://www.dansdata.com/goop.htm">while testing Vegemite as a thermal interface material</a>:</p>
    <blockquote>
    <p>If your PC's so marginal that a CPU running three or four degrees Celsius warmer will crash it [or, for modern CPUs, cause the processor to auto-throttle itself and substantially reduce system performance], the solution is not to try to edge away from the precipice with better thermal compound. It's to make a big change to the cooling system, or just lower the darn clock speed.</p>
    </blockquote>
    <p>An improved thermal interface just gets you there <em>faster</em> (or slower); it doesn't address the underlying problem. So we're not done here.</p>
    <h4 id="ductedairflow">Ducted Airflow</h4>
    <p>Most, but not all, of the SuperMicro cases I've used have included a basic fan duct / shroud that lays across the central fans and the system. Given that the case fans are pretty much directly in front of the CPU anyway, I've included the shroud in the builds out of a sense of completeness more than any conviction that it was doing anything for the cooling performance.</p>
    <p>This particular server case, though, did <em>not</em> include a fan duct. I didn't think much about it at the time, but considering the heat stress this 6-core CPU and its 250 watt heat generation was putting on our 1U build, I decided I should build a quick duct out of card stock and test it out.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/01/server-duct-testing.jpg" alt=""></p>
    <p>(I know, I know, it's a super janky duct! But I was prototyping!)</p>
    <p>Sure enough, this duct, combined with the previous heatsink and TIM changes, enabled the server to <strong>remain stable overnight with a full MPrime run of 12 threads.</strong></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2017/01/chuck_norris_approves.gif" alt=""></p>
    <p>I think we've certainly demonstrated the surprising (to me, at least) value of fan shrouds. But before we get too excited, let's consider one last thing.</p>
    <h4 id="definecpuload">Define "CPU Load"</h4>
    <p>Sometimes you get so involved with solving the problem at hand that you forget to consider whether you are, in fact, solving the <em>right</em> problem.</p>
    <p>In these tests, we defined 100% CPU load using MPrime. Some people claim MPrime is more of a <a href="https://en.wikipedia.org/wiki/Power_virus">power virus</a> than a real load test, because it exerts so much heat pressure on the CPUs. I initially dismissed these claims since I've used MPrime (and its Windows cousin, Prime95) for almost 20 years to test CPU stability, and it's never let me down.</p>
    <p>But I <a href="http://www.overclock.net/t/1510388/haswell-e-overclock-leaderboard-owners-club/2390#post_22900116">did more research</a> and I found that MPrime, since 2011, uses <strong>AVX2</strong> instructions extensively on newer Intel CPUs:</p>
    <blockquote>
    <p>The newer versions of Prime load in a way that they are only safe to run at near stock settings. The server processors actually downclock when AVX2 is detected to retain their TDP rating. On the desktop we're free to play and the thing most people don't know is how much current these routines can generate. It can be lethal for a CPU to see that level of current for prolonged periods.</p>
    <p>…</p>
    <p>That's why most stress test programs alternate between different data pattern types. Depending on how effective the rotation is, and how well that pattern causes issues for the system timing margin, it will, or will not, catch potential for instability. So it's wise not to hang one's hat on a single test type.</p>
    </blockquote>
    <p>This explains why I saw such a large discrepancy between other CPU load programs like BurnP6 and MPrime.</p>
    <p>MPrime does an amazing job of generating the type of CPU load that causes maximum heat pressure. But unless your servers regularly chew through <a href="http://superuser.com/questions/981466/in-prime95-why-do-small-ffts-generate-the-most-heat-despite-cpu-at-100-for-al/981477#981477">zillions of especially power-hungry AVX2 instructions</a> this may be completely unrepresentative of any real world load your server would <em>actually see</em>.</p>
    <h4 id="yourownpersonalinferno">Your Own Personal Inferno</h4>
    <p>Was this overkill? Probably. Even with the aluminum heatsink, no change to thermal interface material, and zero ducting, we'd probably see no throttling under normal use in our server rack. But I wanted to be <em>sure</em>. Completely sure.</p>
    <p>Is this extreme? Putting 140 TDP of CPU heat in a 1U server? Not really. Nick at Stack Overflow told me they just put two 22 core, 145W TDP Xeon 2699v4 CPUs <em>and</em> four 300W TDP GPUs in a single Dell C4130 1U server. I'd sure hate to be in the room when those fans spin up. I'm also a little afraid to find out what happens if you run MPrime plus full GPU load on that box.</p>
    <p>Servers are an admittedly rare example of big CPU performance heat and size tradeoffs, one of the few left. It is fun to play at the extremes, but the SoC inside your phone makes the same tradeoffs on a smaller scale. <strong>Tiny infernos in our pockets</strong>, each and every one.</p>
    <table>
    <tr><td class="welovecodinghorror">[advertisement] At Stack Overflow, we put developers first. We already help you find answers to your tough coding questions; now let us help you <a href="http://careers.stackoverflow.com" rel="nofollow">find your next job</a>.</td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2017-01-17T11:37:18.000Z</pubDate>
    <guid>https://blog.codinghorror.com/an-inferno-on-the-head-of-a-pin/</guid>
    </item>
    <item>
    <title>Let's Encrypt Everything</title>
    <link>https://blog.codinghorror.com/lets-encrypt-everything/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I'll admit <a href="https://blog.codinghorror.com/should-all-web-traffic-be-encrypted/">I was late</a> to the HTTPS party.</p>
    <p><a href="https://letsencrypt.org"><img alt="https://blog.codinghorror.com/content/images/2016/11/lets-encrypt-security-details.png" alt=""></a></p>
    <p>But post Snowden, and particularly after the result of the last election here in the US, it's clear that <strong>everything on the web should be encrypted by default</strong>.</p>
    <p>Why?</p>
    <ol start="0">
    <li>
    <p>You have <a href="https://blog.codinghorror.com/an-inalienable-right-to-privacy/">an unalienable right to privacy</a>, both in the real world and online. And <strong>without HTTPS you have zero online privacy</strong> – from anyone else on your WiFi, from your network provider, from website operators, from large companies, from the government.</p>
    </li>
    <li>
    <p><strong>The performance penalty of HTTPS is gone</strong>, in fact, HTTPS arguably <a href="http://blog.httpwatch.com/2015/01/16/a-simple-performance-comparison-of-https-spdy-and-http2/">performs <em>better</em> than HTTP on modern devices</a>.</p>
    </li>
    <li>
    <p><strong>Using HTTPS means nobody can tamper with the content in your web browser.</strong> This was a bit of an abstract concern five years ago, but these days, there are more and more instances of upstream providers actively mucking with the data that passes through their pipes. For example, if Comcast detects you have a copyright strike, they'll <a href="http://arstechnica.com/tech-policy/2013/02/heres-what-an-actual-six-strikes-copyright-alert-looks-like/">insert banners into your web content</a> … <em>all</em> your web content! And that's what the good guy scenario looks like – or at least a corporation trying to follow the rules. Imagine what it looks like when someone, or some large company, decides the rules don't apply to them?</p>
    </li>
    </ol>
    <p>So, how do you as an end user "use" encryption on the web? Mostly, you lobby for the websites you use regularly to adopt it. And it's working. In the last year, the use of HTTPS by default on websites <a href="https://snyk.io/blog/https-breaking-through/">has doubled</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/https-share-top-500k-sites.png" alt=""></p>
    <p>Browsers can help, too. By January 2017, Google Chrome will show this alert in the UI when a login or credit card form is displayed on an unencrypted connection:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/chrome-insecure.jpg" alt=""></p>
    <p>Additionally, Google is throwing their considerable weight behind this effort by <a href="https://webmasters.googleblog.com/2014/08/https-as-ranking-signal.html">ranking non-encrypted websites lower in search results</a>.</p>
    <p>But there's another essential part required for encryption to work on <em>any</em> websites – <strong>the HTTPS certificate</strong>. Historically these certificates have been <a href="https://blog.codinghorror.com/digital-certificates-do-they-work/">issued by certificate authorities</a>, and they were at least $30 per year per website, sometimes hundreds of dollars per year. Without that required cash each year, without the SSL certificate that you must re-purchase every year in perpetuity – you can't encrypt <em>anything</em>.</p>
    <p>That is, until <a href="https://letsencrypt.org/">Let's Encrypt</a> arrived on the scene.</p>
    <p><a href="https://letsencrypt.org/"><img alt="https://blog.codinghorror.com/content/images/2016/11/lets-encrypt-banner.jpg" alt=""></a></p>
    <p>Let's Encrypt is a 501.3(c)(3) non-profit organization supported by the Linux Foundation. They've been in beta for about a year now, and to my knowledge they are the only reliable, official free source of SSL certificates that has ever existed.</p>
    <p>However, <strong>because Let's Encrypt is a non-profit organization</strong>, not owned by any company that must make a profit from each SSL certificate they issue, they <a href="https://www.generosity.com/community-fundraising/make-a-more-secure-web-with-let-s-encrypt">need our support</a>:</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/SmOWzKLTODA" frameborder="0" allowfullscreen></iframe>
    <p>As a company, we've donated a <a href="https://community.letsencrypt.org/">Discourse hosted support community</a>, and a cash amount that represents how much we would have paid in a year to one of the existing for-profit certificate authorities to set up HTTPS for all the <a href="https://discourse.org">Discourse</a> websites we host.</p>
    <p>I urge you to do the same:</p>
    <ul>
    <li>
    <p>Estimate how much you would have paid for any free SSL certificates you obtained from Let's Encrypt, and <a href="https://letsencrypt.org/donate/">please donate that amount</a> to Let's Encrypt.</p>
    </li>
    <li>
    <p>If you work for a large company, urge them to <a href="https://letsencrypt.org/become-a-sponsor/">sponsor Let's Encrypt</a> as a fundamental cornerstone of a safe web.</p>
    </li>
    </ul>
    <p>If you believe in an unalienable right to privacy on the Internet for every citizen in every nation, <em>please</em> support Let's Encrypt.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com" rel="nofollow">Find a better job the Stack Overflow way</a> - what you need when you need it, no spam, and no scams.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-11-23T00:03:31.000Z</pubDate>
    <guid>https://blog.codinghorror.com/lets-encrypt-everything/</guid>
    </item>
    <item>
    <title>Your Digital Pinball Machine</title>
    <link>https://blog.codinghorror.com/your-digital-pinball-machine/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I've had something of an obsession with digital pinball for <a href="https://blog.codinghorror.com/pc-pinball-sims/">years</a> now. That recently culminated in me buying <a href="http://virtuapin.net/index.php?main_page=product_info&amp;products_id=92">a Virtuapin Mini</a>.</p>
    <p><a href="http://virtuapin.net/index.php?main_page=product_info&amp;products_id=92"><img alt="https://blog.codinghorror.com/content/images/2016/11/virtuapin-mini-screens.jpg" alt=""></a></p>
    <p>OK, yes, it's an extravagance. There's no question. But in my defense, it is a minor extravagance relative to a real pinball machine.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/virtuapin-mini-vs-real-pinball.jpg" alt=""></p>
    <p>The mini is much smaller than a normal pinball machine, so it's easier to move around, takes up less space, and is less expensive. Plus <strong>you can emulate every pinball machine, ever!</strong> The <a href="http://virtuapin.net/index.php?main_page=product_info&amp;products_id=92">Virtuapin Mini</a> is a custom $3k build centered around three screens:</p>
    <ul>
    <li>27" main playfield (HDMI)</li>
    <li>23" backglass (DVI)</li>
    <li>8" digital matrix (USB LCD)</li>
    </ul>
    <p>Most of the magic is in those screens, and whether the pinball sim in question allows you to arrange the three screens in its advanced settings, usually by enabling a "cabinet" mode.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/virtuapin-three-monitors-size-and-position.png" alt=""></p>
    <p>Let me give you an internal tour. Open the front coin door and detach the two internal nuts for the front bolts, which are finger tight. Then remove the metal lockdown bar and slide the tempered glass out.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/virtuapin-mini-lockdown-bar.jpg" alt=""></p>
    <p>The most uniquely pinball item in the case is right at the front. This <a href="http://virtuapin.net/index.php?main_page=product_info&amp;cPath=8&amp;products_id=105">Digital Plunger Kit</a> connects the 8 buttons (2 on each side, 3 on the front, 1 on the bottom) and includes an <strong>analog tilt sensor</strong> and <strong>analog plunger sensor</strong>. All of which shows up as a standard game controller in Windows.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/virtuapin-mini-control-board-1.jpg" alt=""></p>
    <p>On the left front side, the audio amplifier and left buttons.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/virtuapin-mini-left-front.jpg" alt=""></p>
    <p>On the right front side, the digital plunger and right buttons.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/virtuapin-mini-right-front.jpg" alt=""></p>
    <p>The 27" playfield monitor is mounted using a clever rod assembly to the standard VESA mount on the back, so we can easily rotate it up to work on the inside as needed.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/virtuapin-mini-monitor-raised.jpg" alt=""></p>
    <p>To remove the playfield, disconnect the power cord and the HDMI connector. Then lift it up and out, and you now have complete access to the interior.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/virtuapin-mini-interior.jpg" alt=""></p>
    <p>Notice the large down-firing subwoofer mounted in the middle of the body, as well as the ventilation holes. The PC "case" is just a back panel, and the power strip is <a href="https://www.amazon.com/dp/B000P1QJXQ/?tag=codihorr-20">the Smart Strip kind</a> where it auto-powers everything based on the PC being powered on or off. The actual power switch is on the bottom front right of the case.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/virtuapin-mini-backglass-speakers.jpg" alt=""></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/virtuapin-mini-playfield.jpg" alt=""></p>
    <p>Powering it up and getting all three screens configured in the pinball sim of your choice results in … <em>magic</em>.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/7TpqHAU9oxk" frameborder="0" allowfullscreen></iframe>
    <p>It is a <strong>thoroughly professional build</strong>, as you'd expect from a company that has been building these pinball rigs for the last decade. It uses real wood (not MDF), tempered glass, and authentic metal pinball parts throughout.</p>
    <p>I was truly impressed by the build quality of this machine. Paul of Virtuapin said they're on roughly version four of the machine and it shows. It's over 100 pounds fully assembled and arrives on a shipping pallet. I can only imagine how heavy the full size version would be!</p>
    <p>That said, I do have some tweaks I recommend:</p>
    <ul>
    <li>
    <p><strong>Make <em>absolutely sure</em> you get <a href="https://blog.codinghorror.com/the-ips-lcd-revolution/">an IPS panel</a> as your 27" playfield monitor</strong>. As arrived, mine had a TN panel and while it was playable if you stood directly in front of the machine, playfield visibility was pretty dire outside that narrow range. I dropped in the <a href="https://www.amazon.com/dp/B00KYCSRSG/?tag=codihorr-20">BenQ GW2765HT</a> to replace the GL2760H that was in there, and I was golden. If you plan to order, I would definitely talk to Paul at VirtuaPin and specify that you want this IPS display even if it costs a little more. The 23" backglass monitor is also TN but the viewing angles are reasonable-ish in that orientation and the backglass is mostly for decoration anyway.</p>
    </li>
    <li>
    <p>The improved display has a 1440p resolution compared to the 1080p originally shipped, so you might want to upgrade from the GeForce 750 Ti video card to the <a href="https://www.amazon.com/dp/B01MF7EQJZ/?tag=codihorr-20">just-released 1050 Ti</a>. This is not strictly required, as I found the 750 Ti an excellent performer even at the higher resolution, but I plan to play only fully 3D pinball sims and the 1050 Ti <a href="http://www.pcworld.com/article/3134528/components-graphics/nvidia-geforce-gtx-1050-and-gtx-1050-ti-review-the-new-budget-gaming-champions.html">gets excellent reviews</a> for $140, so I went for it.</p>
    </li>
    <li>
    <p>Internally everything is exceptionally well laid out, the only very minor improvement I'd recommend is connecting the rear exhaust fan to the motherboard header so its fan speed can be dynamically controlled by the computer rather than being at full power all the time.</p>
    </li>
    <li>
    <p>On the <a href="http://virtuapin.net/index.php?main_page=product_info&amp;products_id=92">Virtuapin website order form</a> the PC they provide sounds quite outdated, but don't sweat it: I picked the lowest options thinking I would have to replace it all, and they shipped me a Haswell based quad-core PC with 8GB RAM and a 256GB SSD, even though those options weren't even on the order form.</p>
    </li>
    </ul>
    <p>I realize $3k (plus palletized shipping) is a lot of money, but I estimate it would cost you at <em>least</em> $1500 in parts to build this machine, plus a month of personal labor. Provided you get the IPS playfield monitor, this is a solidly constructed "real" pinball machine, and if you're into digital pinball like I am, it's an absolute <em>joy</em> to play and a good deal for what you actually get. As Ferris Bueller once said:</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/0wALArd2rvo" frameborder="0" allowfullscreen></iframe>
    <p>If you'd like to experiment with this and don't have three grand burning a hole in your pocket, 90% of digital pinball simulation is <strong>a widescreen display in portrait mode</strong>. Rotate one of your monitors, add another monitor if you're feeling extra fancy, and give it a go.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/pinball-with-rotated-monitor.jpg" alt=""></p>
    <p>As for software, most people talk about <a href="https://en.wikipedia.org/wiki/Visual_Pinball">Visual Pinball</a> for these machines, and it works. But the combination of janky hacked-together 2D bitmap technology used in the gameplay, and the fact that all those designs are ripoffs that pay nothing in licensing back to the original pinball manufacturers really bothers me.</p>
    <p>I prefer <a href="http://store.steampowered.com/app/238260/">Pinball Arcade</a> in DirectX 11 mode, which is <a href="https://imgur.com/a/vPQvh">downright beautiful</a>, easily (and legally!) obtainable via Steam and offers a stable of 60+ incredible officially licensed classic pinball tables to choose from, all meticulously recreated in high resolution 3D with excellent physics.</p>
    <p><a href="https://imgur.com/a/vPQvh"><img alt="https://blog.codinghorror.com/content/images/2016/11/visual-pinball-dx9-vs-dx11.jpg" alt=""></a></p>
    <p>As for getting pinball simulations running on your three monitor setup, if you're lucky the game will have a <strong>cabinet mode</strong> you can turn on. Unfortunately, this can be weird due to … licensing issues. Apparently building a pinball sim on the computer requires entirely different licensing than placing it inside a full-blown pinball cabinet.</p>
    <p><a href="http://store.steampowered.com/app/238260/"><strong>Pinball Arcade</strong></a> has a <a href="http://pinballarcadefans.com/showthread.php/10199-DOWNLOAD-Pinball-Arcade-Free-Camera-Mod">nifty camera hack</a> someone built that lets you position three cameras as needed to get the three displays. You will also need the excellent <a href="http://www.x360ce.com/">x360ce program</a> to dynamically map joystick events and buttons to a simulated Xbox 360 controller.</p>
    <p><a href="http://store.steampowered.com/app/226980/"><strong>Pinball FX2</strong></a> added a cabinet mode about a year ago, but turning it on requires a special code and you have to send them a picture of your cabinet (!) to get that code. I did, and the cabinet mode works great; just enter your code, specify the coordinates of each screen in the settings and you are good to go. While these tables definitely have arcadey physics, I find them great fun and there are a ton to choose from.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/virtapin-mini-portal-2.JPG" alt=""></p>
    <p><a href="http://store.steampowered.com/app/287900/"><strong>Pro Pinball Timeshock Ultra</strong></a> is unique because it's originally from 1997 and was one of the first "simulation" level pinball games. The current rebooted version is still pre-rendered graphics rather than 3D, but the client downloads the necessary gigabytes of pre-rendered content at your exact screen resolution and it looks amazing.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/pro-pinball-timeshock-ultra-4k-1.jpg" alt=""></p>
    <p>Timeshock has explicit cabinet support in the settings and via command line tweaks. Also, in cabinet mode, when choosing table view, you want the bottom left one. Trust me on this! It supports maximum height for portrait cabinet mode.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/11/pro-pinball-timeshock-best-cabinet-view.jpg" alt=""></p>
    <p>Position each window as necessary, then enable fullscreen for each one and it'll snap to the monitor you placed it on. It's "only" one table, but arguably the most classic of all pinball sims. I sincerely hope they continue to reboot the rest of the Pro Pinball series, including Big Race USA which is my favorite.</p>
    <p>I've always loved pinball machines, even though they struggled to keep up with digital arcade games. In some ways I view my current project, <a href="https://discourse.org">Discourse</a>, as a similarly analog experience attempting to bridge the gap to the modern digital world:</p>
    <blockquote>
    <p>The fantastic 60 minute documentary <a href="http://www.tilt-movie.com/">Tilt: The Battle to Save Pinball</a> has so many parallels with what we're trying to do for forum software.</p>
    </blockquote>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/JIolBJwH9p0" frameborder="0" allowfullscreen></iframe>
    <blockquote>
    <p>Pinball is threatened by Video Games, in the same way that Forums are threatened by Facebook and Twitter and Tumblr and Snapchat. They're considered old and archaic technology. They've stopped being sexy and interesting relative to what else is available.</p>
    <p>Pinball was forced to reinvent itself several times throughout the years, from mechanical, to solid state, to computerized. And the defining characteristic of each "era" of pinball is that the new tables, once you played them, made all the previous pinball games seem immediately obsolete because of all the new technology.</p>
    <p>The <a href="https://en.wikipedia.org/wiki/Pinball_2000">Pinball 2000</a> project was an attempt to invent the next generation of pinball machines:</p>
    </blockquote>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/Vt0OARfqeks" frameborder="0" allowfullscreen></iframe>
    <blockquote>
    <blockquote>
    <p>It wasn't a new feature, a new hardware set, it was everything new. We have to get everything right. We thought that we had reinvented the wheel. And in many respects, we had.</p>
    </blockquote>
    <p>This is exactly what we want to do with <a href="https://discourse.org">Discourse</a> – build a forum experience so advanced that playing will make all previous forum software seem immediately obsolete.</p>
    <p>Discourse aims to save forums and make them relevant and useful to a whole new generation.</p>
    </blockquote>
    <p>So if I seem a little more nostalgic than most about pinball, perhaps a little <em>too</em> nostalgic at times, <a href="https://blog.codinghorror.com/the-only-truly-failed-project/">maybe that's why</a>.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Building out your tech team? <a href="http://careers.stackoverflow.com/products" rel="nofollow">Stack Overflow Careers</a> helps you hire from the largest community for programmers on the planet. We built our site with developers like you in mind.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-11-02T20:01:47.000Z</pubDate>
    <guid>https://blog.codinghorror.com/your-digital-pinball-machine/</guid>
    </item>
    <item>
    <title>Can Software Make You Less Racist?</title>
    <link>https://blog.codinghorror.com/can-software-make-you-less-racist/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I don't think we computer geeks appreciate how profoundly the rise of the smartphone, and Facebook, has changed the Internet audience. It's something that really only happened in <strong>the last five years</strong>, as smartphones and data plans dropped radically in price and became accessible – and addictive – to huge segments of the population.</p>
    <p>People may have regularly <em>used</em> computers in 2007, sure, but that is a very different thing than having your computer in your pocket, 24/7, with you every step of every day, fully integrated into your life. As Jerry Seinfeld noted in 2014:</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/xR1ckgXN8G0" frameborder="0" allowfullscreen></iframe>
    <blockquote>
    <p>But I know you got your phone. Everybody here's got their phone. There's not one person here who doesn't have it. You better have it … you gotta have it. Because there is no <em>safety</em>, there is no <em>comfort</em>, there is no <em>security</em> for you in this life any more … unless when you're walking down the street you can feel a <em>hard rectangle in your pants</em>.</p>
    </blockquote>
    <p>It's an addiction that is new to millions – but eerily familiar to us.</p>
    <blockquote class="twitter-tweet" data-lang="en">
    <p lang="en" dir="ltr">From "only nerds will use the Internet" to "everyone stares at their smartphones all day long!" in 20 years. Not bad, team :-).</p>— Marc Andreessen (@pmarca) <a href="https://twitter.com/pmarca/status/556161530455023617">January 16, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>The good news is that, at this moment, every human being is far more connected to their fellow humans than any human has ever been in the entirety of recorded history.</p>
    <p>Spoiler alert: that's also the bad news.</p>
    <p><a href="https://nextdoor.com/">Nextdoor</a> is a Facebook-alike focused on specific neighborhoods. The idea is that you and everyone else on your block would join, and you can privately discuss local events, block parties, and generally hang out like neighbors do. It's a good idea, and my wife started using it a fair amount in the last few years. We feel more connected to our neighbors through the service. But one unfortunate thing you'll find out when using Nextdoor is that <strong>your neighbors are probably a <em>little bit racist</em>.</strong></p>
    <p>I don't use Nextdoor myself, but I remember Betsy specifically complaining about the casual racism she saw there, and I've also seen it mentioned several times on Twitter by people I follow. They're <a href="http://www.eastbayexpress.com/oakland/racial-profiling-via-nextdoorcom/Content?oid=4526919">not the only ones</a>. It became so epidemic that Nextdoor got a reputation for being a <a href="http://fusion.net/story/106341/nextdoor-the-social-network-for-neighbors-is-becoming-a-home-for-racial-profiling/">racial profiling hub</a>. Which is obviously not good.</p>
    <p>Social networking historically trends young, with the early adopters. Facebook launched as a site for college students. But as those networks grow, they inevitably age. They begin to include older people. And those older people will, statistically speaking, be more racist. I apologize if this sounds ageist, but let me ask you something: do you consider your parents a little racist? I will personally admit that <strong>one of my parents is definitely someone I would label a little bit racist</strong>. It's … not awesome.</p>
    <p><a href="http://theoatmeal.com/comics/gay_marriage"><img alt="https://blog.codinghorror.com/content/images/2016/08/gay_marriage.png" alt=""></a></p>
    <p>The older the person, the more likely they are to have these "old fashioned" notions that the mere presence of differently-colored people on your block is inherently suspicious, and marriage should <a href="http://en.wikipedia.org/wiki/Public_opinion_of_same-sex_marriage_in_the_United_States#By_age">probably be defined as between a man and a woman</a>.</p>
    <blockquote>
    <p>In one meta-analysis by Jeffrey Lax and Justin Phillips of Columbia University, a majority of 18–29 year old Americans in 38 states support same sex marriage while in only 6 states do less than 45% of 18–29 year olds support same-sex marriage. At the same time not a single state shows support for same-sex marriage greater than 35% amongst those 64 and older</p>
    </blockquote>
    <p>The idea that regressive social opinions correlate with age isn't an opinion; it's <a href="http://en.wikipedia.org/wiki/Public_opinion_of_same-sex_marriage_in_the_United_States#By_age">a statistical fact</a>.</p>
    <blockquote>
    <p>Support for same-sex marriage in the U.S.</p>
    <pre><code>18 - 29 years old    65%
    30 - 49 years old    54%
    50 - 64 years old    45%
    65+ years old        39%
    </code></pre>
    </blockquote>
    <p>Are there progressive septuagenarians? Sure there are. But not many.</p>
    <p>To me, failure to support same-sex marriage is as inconceivable as failing to support interracial marriage. Which was <em>not</em> that long ago, to the tune of the late 60s and early 70s. If you want some truly hair-raising reading, <a href="http://en.wikipedia.org/wiki/Loving_v._Virginia">try Loving v. Virginia on for size</a>. Because Virginia <a href="http://www.virginia.org/virginiaisforlovers/">is for lovers</a>. Just not those kind of lovers, 49 years ago. In the interests of full disclosure, I am 45 years old, and I graduated from the University of Virginia.</p>
    <p>With Nextdoor, you're more connected with your neighbors than ever before. But through that connection you may also find out some regressive things about your neighbors that you'd never have discovered in years of the traditional daily routine of polite waves, hellos from the driveway, and casual sidewalk conversations.</p>
    <p>To their immense credit, rather than accepting this status quo, Nextdoor did what any self-respecting computer geek would do: they <strong>changed their software</strong>. Now, when you attempt to post about a crime or suspicious activity …</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/08/nextdoor-race-1.png" alt=""></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/08/nextdoor-race-2.png" alt=""></p>
    <p>… you get <a href="https://blog.codinghorror.com/the-just-in-time-theory/">smart, just in time nudges</a> to think less about race, and more about <em>behavior</em>.</p>
    <p>The results were <a href="https://www.buzzfeed.com/carolineodonovan/nextdoor-rolls-out-product-fix-it-hopes-will-stem-racial-pro">striking</a>:</p>
    <blockquote>
    <p>Nextdoor claims this new multi-step system has, so far, reduced instances of racial profiling by 75%. It’s also decreased considerably the number of notes about crime and safety. During testing, the number of crime and safety issue reports abandoned before being published rose by 50%. “It’s a fairly significant dropoff,” said Tolia, “but we believe that, for Nextdoor, quality is more important than quantity.”</p>
    </blockquote>
    <p>I'm a huge fan of designing software to help nudge people, at <em>exactly the right time</em>, to <a href="https://blog.codinghorror.com/what-if-we-could-weaponize-empathy/">be their better selves</a>. And this is a textbook example of doing it right.</p>
    <p>Would using Nextdoor and encountering these dialogs make my aforementioned parent a little bit less racist? Probably not. But I like to think they would stop for at least a moment and <strong>consider the importance of focusing on the <em>behavior</em> that is problematic, rather than the individual person</strong>. This is a philosophy I promoted on Stack Overflow, I continue to promote with Discourse, and I reinforce daily with our three kids. You never, ever judge someone by what they look like. Consider <em>what they do</em> instead.</p>
    <p>If you were getting excited about the prospect of validating <a href="https://en.wikipedia.org/wiki/Betteridge%27s_law_of_headlines">Betteridge's Law</a> yet again, I'm sorry to disappoint you. I truly do believe software, properly designed software, can not only help us <a href="https://blog.codinghorror.com/civilized-discourse-construction-kit/">be more civil to each other</a>, but can also help people – maybe even people you love – <em>behave</em> a bit less like racists online.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] At Stack Overflow, we help developers learn, share, and grow. Whether you’re looking for your next dream job or looking to build out your team, <a href="http://careers.stackoverflow.com" rel="nofollow">we've got your back</a>.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-08-25T07:52:37.000Z</pubDate>
    <guid>https://blog.codinghorror.com/can-software-make-you-less-racist/</guid>
    </item>
    <item>
    <title>The Raspberry Pi Has Revolutionized Emulation</title>
    <link>https://blog.codinghorror.com/the-raspberry-pi-has-revolutionized-emulation/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Every geek goes through a phase where they discover emulation. It's practically a <a href="https://blog.codinghorror.com/rediscovering-arcade-nostalgia/">rite of passage</a>.</p>
    <blockquote>
    <p>I think I spent most of my childhood – and a large part of my life as a young adult – <b>desperately wishing I was in a video game arcade.</b> When I finally obtained my driver's license, my first thought wasn't about the girls I would take on dates, or the road trips I'd take with my friends. Sadly, no. I was thrilled that I could drive myself to the arcade any time I wanted.</p>
    </blockquote>
    <p>My two arcade emulator builds in 2005 satisfied my itch thoroughly. I recently took my son Henry to the <a href="http://www.caextreme.org/">California Extreme expo</a>, which features almost every significant pinball and arcade game ever made, live and in person and real. He enjoyed it so much that I found myself again yearning to share that part of our history with my kids – in a suitably emulated, arcade form factor.</p>
    <p>Down, down the rabbit hole I went again:</p>
    <p><a href="http://www.hybridarcades.com/"><img alt="https://blog.codinghorror.com/content/images/2016/08/bartop-ebay.jpg" alt=""></a></p>
    <p><a href="https://www.arcademinis.com/sunshop/index.php?l=product_detail&amp;p=60"><img alt="https://blog.codinghorror.com/content/images/2016/07/bartop-vertical-jamma.jpg" alt=""></a></p>
    <p><a href="https://shop.pimoroni.com/collections/picade-and-arcade/products/picade"><img alt="https://blog.codinghorror.com/content/images/2016/07/picade.jpg" alt=""></a></p>
    <p><a href="http://forum.arcadecontrols.com/index.php?topic=122366.0"><img alt="https://blog.codinghorror.com/content/images/2016/07/bartop-bubble-bobble.jpg" alt=""></a></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/07/bartop-cocktail.jpg" alt=""></p>
    <p>I discovered that emulation builds are so much <em>cheaper and easier</em> now than they were when I last attempted this a decade ago. Here's why:</p>
    <ol>
    <li>
    <p><strong>The ascendance of <a href="https://www.raspberrypi.org/">Raspberry Pi</a> has single-handedly revolutionized the emulation scene.</strong> The Pi is now on <a href="https://www.raspberrypi.org/products/raspberry-pi-3-model-b/">version 3</a>, which adds critical WiFi and Bluetooth functionality on top of additional speed. It's fast enough to emulate N64 and PSX and Dreamcast reasonably, all for a whopping $35. Just download the <a href="https://retropie.org.uk/">RetroPie bootable OS</a> on a $10 32GB SD card, slot it into your Pi, and … well, basically you're done. The distribution comes with some free games on it. Add additional ROMs and game images to taste.</p>
    </li>
    <li>
    <p><strong>Chinese all-in-one JAMMA cards</strong> are available everywhere for about $90. <a href="https://www.youtube.com/watch?v=ctN60cYTRdI">Pandora's Box is one "brand"</a>. These things are are an entire 60-in-1 to 600-in-1 arcade on a board, with an ARM CPU and built-in ROMs and everything … probably completely illegal and unlicensed, of course. You could buy some old broken down husk of an arcade game cabinet, anything at all as long as it's a <a href="https://en.wikipedia.org/wiki/Japan_Amusement_Machine_and_Marketing_Association#Connector_standards">JAMMA compatible arcade game</a> – a standard introduced in 1985 – with working monitor and controls. Plug this replacement JAMMA box in, and bam: you now have your own virtual arcade. Or you could build or buy a new JAMMA compatible cabinet; there are hundreds out there to choose from.</p>
    </li>
    <li>
    <p><strong>Cheap, quality IPS arcade size LCDs</strong>. The CRTs I used in 2005 may have been truer to old arcade games, but they were a giant pain to work with. They're enormous, heavy, and require a lot of power. Viewing angle and speed of refresh are rather critical for arcade machines, and both are largely solved problems for LCDs at this point, which are light, easy to work with, and sip power for $100 or less.</p>
    </li>
    </ol>
    <p>Add all that up – it's not like the price of MDF or arcade buttons and joysticks has changed substantially in the last decade – and what we have today is a console and arcade emulation wonderland! If you'd like to go down this rabbit hole with me, bear in mind that I've just started, but I do have some specific recommendations.</p>
    <p><strong>Get a Raspberry Pi starter kit.</strong> I recommend <a href="http://www.amazon.com/dp/B01D92SSX6/?tag=codihorr-20">this particular starter kit</a>, which includes the essentials: a clear case, heatsinks – you definitely want small heatsinks on your 3, as it dissipate <a href="http://www.pidramble.com/wiki/benchmarks/power-consumption">almost 4 watts</a> under full load – and a suitable power adapter. That's $50.</p>
    <p><a href="http://www.amazon.com/dp/B01D92SSX6/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2016/07/raspberry-pi-port-diagram.jpg" alt=""></a></p>
    <p><strong>Get a quality SD card.</strong> The primary "drive" on your Pi will be the SD card, so make it a quality one. Based on <a href="http://www.pidramble.com/wiki/benchmarks/microsd-cards">these excellent benchmarks</a>, I recommend the <a href="http://www.amazon.com/dp/B013CP5HCK/?tag=codihorr-20">Sandisk Extreme 32GB</a> or <a href="http://www.amazon.com/dp/B00WR4IJBE/?tag=codihorr-20">Samsung Evo+ 32GB</a> models for best price to peformance ratio. That'll be $15, tops.</p>
    <p><strong>Download and install the bootable RetroPie image on your SD card.</strong> It's amazing how far this project has come since 2013, it is now about as close to plug and play as it gets for free, open source software. The install is, <a href="https://github.com/retropie/retropie-setup/wiki/First-Installation">dare I say … "easy"?</a></p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/xvYX_7iRRI0" frameborder="0" allowfullscreen></iframe>
    <p><strong>Decide how much you want to build.</strong> At this point you have a fully functioning emulation brain for well under $100 which is capable of playing literally <em>every significant console and arcade game created prior to 1997</em>. Your 1985 self is probably drunk with power. It is kinda awesome. Stop doing the Safety Dance for a moment and ask yourself these questions:</p>
    <ul>
    <li>
    <p>What <strong>controls</strong> do you plan to plug in via the USB ports? This will depend heavily on which games you want to play. Beyond the absolute basics of joystick and two buttons, there are Nintendo 64 games (think analog stick(s) required), driving games, spinner and trackball games, multiplayer games, yoke control games (think Star Wars), virtual gun games, and so on.</p>
    </li>
    <li>
    <p>What <strong>display</strong> to you plan to plug in via the HDMI port? You could go with a tiny screen and build a handheld emulator, the Pi is certainly small enough. Or you could have no display at all, and jack in via HDMI to any nearby display for whatever gaming jamboree might befall you and your friends. I will say that, for whatever size you build, <em>more display is better</em>. Absolutely go as big as you can in the allowed form factor, though the Pi won't effectively use much more than a 1080p display maximum.</p>
    </li>
    <li>
    <p>How much <strong>space</strong> do you want to dedicate to the box? Will it be portable? You could go anywhere from ultra-minimalist – a control box you can plug into any HDMI screen with a wireless controller – to a giant 40" widescreen stand up arcade machine with room for four players.</p>
    </li>
    <li>
    <p>What's your <strong>budget</strong>? We've only spent under $100 at this point, and great screens and new controllers aren't a whole lot more, but sometimes you want to build from spare parts you have lying around, if you can.</p>
    </li>
    <li>
    <p>Do you have the <strong>time</strong> and inclination to build this from parts? Or do you prefer to buy it pre-built?</p>
    </li>
    </ul>
    <p>These are all your calls to make. You can get some ideas from the pictures I posted at the top of this blog post, or search the web for "Raspberry Pi Arcade" for <a href="http://www.slothygeek.com/6-raspberry-pi-arcade-projects-step-by-step-tutorials/">lots of other ideas</a>.</p>
    <p>As a reasonable all-purpose starting point, I recommend <a href="http://www.retrobuiltgames.com/diy-kits-shop/porta-pi-arcade-wood-kit-10-hd/">the Build-Your-Own-Arcade kits</a> from Retro Built Games. From $330 for full kit, to $90 for just the wood case.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/07/retrobuiltgames-diy-pi-arcade.jpg" alt=""></p>
    <p>You could also buy <a href="http://www.amazon.com/dp/B00WAY9848/?tag=codihorr-20">the arcade controls alone</a> for $75, and build out (or buy) a case to put them in.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/07/arcade-controls-for-pi.jpg" alt=""></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/07/arcade-controls-mdf-case.jpg" alt=""></p>
    <p>My "mainstream" recommendation is <strong>a bartop arcade</strong>. It uses a common LCD panel size in the typical horizontal orientation, it's reasonably space efficient and somewhat portable, while still being comfortably large enough for a nice big screen with large speakers gameplay experience, and it supports two players if that's what you want. That'll be about $100 to $300 depending on options.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/07/bartop-arcade-kit.jpg" alt=""></p>
    <p>I remember spending well over $1,500 to build <a href="https://blog.codinghorror.com/rediscovering-arcade-nostalgia/">my old arcade cabinets</a>. I'm excited that it's no longer necessary to invest that much time, effort or money to successfully revisit our arcade past.</p>
    <p>Thanks largely to the <a href="http://www.amazon.com/dp/B01D92SSX6/?tag=codihorr-20">Raspberry Pi 3</a> and the <a href="https://retropie.org.uk/">RetroPie project</a>, this is now a simple Maker project you can (and should!) take on in a weekend with a friend or family. For a budget of $100 to $300 – maybe $500 if you want to get <em>extra</em> fancy – you can have a pretty great classic arcade and classic console emulation experience. That's way better than I was doing in 2005, even adjusting for inflation.</p>
    <table>
    <tr><td class="welovecodinghorror">[advertisement] At Stack Overflow, we put developers first. We already help you find answers to your tough coding questions; now let us help you <a href="http://careers.stackoverflow.com" rel="nofollow">find your next job</a>.</td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-07-24T22:12:40.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-raspberry-pi-has-revolutionized-emulation/</guid>
    </item>
    <item>
    <title>The Golden Age of x86 Gaming</title>
    <link>https://blog.codinghorror.com/the-golden-age-of-x86-gaming/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I've been happy with <a href="https://blog.codinghorror.com/the-2016-htpc-build/">my 2016 HTPC</a>, but the situation has changed, largely because of something I mentioned in passing back in November:</p>
    <blockquote>
    <p>The Xbox One and PS4 are <a href="http://www.extremetech.com/gaming/156273-xbox-720-vs-ps4-vs-pc-how-the-hardware-specs-compare">effectively plain old PCs</a>, built on:</p>
    <ul>
    <li>Intel Atom class (aka slow) AMD 8-core x86 CPU</li>
    <li>8 GB RAM</li>
    <li>AMD Radeon 77xx / 78xx GPUs</li>
    <li>cheap commodity 512GB or 1TB hard drives (not SSDs)</li>
    </ul>
    <p>The <strong>golden age of x86 gaming</strong> is well upon us. That's why the future of PC gaming is looking brighter every day. We can see it coming true in the solid GPU and idle power improvements in Skylake, riding the inevitable wave of x86 becoming the dominant kind of (non mobile, anyway) gaming for the forseeable future.</p>
    </blockquote>
    <p>And then, the bombshell. It is <a href="http://arstechnica.com/gaming/2016/04/ps4k-neo-details-specs-revealed-rumours/">all but announced</a> that Sony will be upgrading the PS4 this year, no more than three years after it was first introduced … <strong>just like you would upgrade a PC.</strong></p>
    <blockquote>
    <p>Sony may be tight-lipped for now, but it's looking increasingly likely that the company will release an updated version of the PlayStation 4 later this year. So far, the rumoured console has gone under the moniker PS4K or PS4.5, but a new report from gaming site GiantBomb suggests that the codename for the console is "NEO," and it even provides hardware specs for the PlayStation 4's improved CPU, GPU, and higher bandwidth memory.</p>
    <ul>
    <li>CPU: 1.6 → 2.1 Ghz CPU</li>
    <li>GPU: 18 CUs @ 800Mhz → 36 CUs @ 911Mhz</li>
    <li>RAM: 8GB DDR5 176 GB/s → 218 GB/s</li>
    </ul>
    </blockquote>
    <p>In PC enthusiast parlance, you might say Sony just slotted in a new video card, a faster CPU, and slightly higher speed RAM.</p>
    <p><a href="http://acommonblog.com/2011/09/the-golden-age-logo-design/"><img alt="https://blog.codinghorror.com/content/images/2016/05/goldenage-logo.jpg" alt=""></a></p>
    <p>This is old hat for PCs, but to release a new, faster model that is perfectly backwards compatible is almost unprecedented in the console world. I have to wonder if this is partially due to <a href="https://blog.codinghorror.com/i-tried-vr-and-it-was-just-ok/">the intense performance pressure of VR</a>, but whatever the reason, I applaud Sony for taking this step. It's a giant leap towards consoles being more like PCs, and <strong>another sign that the golden age of x86 is really and truly here.</strong></p>
    <p>I hate to break this to PS4 enthusiasts, but as big of an upgrade as that is – and it really is – it's still nowhere <em>near</em> enough power to drive modern games at 4k. Nvidia's <a href="http://arstechnica.com/gadgets/2016/05/nvidia-gtx-1080-review/">latest and greatest 1080 GTX</a> can only sometimes manage 30fps at 4k. The increase in required GPU power when going from 1080p to 4k is so vast that even the PC "cost is no object" folks who will happily pay $600 for a video card and $1000 for the rest of their box have some difficulty getting there today. Stuffing all that into a $299 box for the masses is going to take quite a few more years.</p>
    <p><a href="https://blog.codinghorror.com/our-brave-new-world-of-4k-displays/"><img alt="https://blog.codinghorror.com/content/images/2016/05/4k-vs-1080p-1.png" alt=""></a></p>
    <p>Still, I like the idea of the PS4 Neo so much that I'm considering buying it myself.  I strongly support this sea change in console upgradeability, even though I swore I'd stick with the Xbox One this generation. To be honest, my Xbox One has been a disappointment to me. I bought the "Elite" edition because it had a hybrid 1TB drive, and then added a 512GB USB 3.0 SSD to the thing and painstakingly moved all my games over to that, and it is <em>still</em> appallingly slow to boot, to log in, to page through the UI, to load games. It's also noisy under load and sounds like a broken down air conditioner even when in low power, background mode. The Xbox One experience is way too often drudgery and random errors instead of the gaming fun it's supposed to be. Although I do unabashedly love the new controller, I feel like the Xbox One is, overall, a worse gaming experience than the Xbox 360 was. And that's sad.</p>
    <p>Or maybe I'm just spoiled by PC performance, and the relatively crippled flavor of PC you get in these $399 console boxes. If all evidence points to the golden age of x86 being upon us, why not double down on x86 in the living room? Heck, while I'm at it … why not <em>triple down?</em></p>
    <p><a href="http://www.amazon.com/dp/B01DJ9XS52/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2016/05/skull-canyon-nuc-case-top.jpg" alt=""></a></p>
    <p>This, my friends, is what tripling down on x86 in the living room looks like.</p>
    <p>It's <a href="http://www.amazon.com/dp/B01DJ9XS52/?tag=codihorr-20">Intel's latest Skull Canyon NUC</a>. What does that acronym stand for? Too embarrassing to explain. Let's just pretend it means "tiny awesome x86 PC". What's significant about this box is it contains <strong>the first on-die GPU Intel has ever shipped that can legitimately be considered console class</strong>.</p>
    <p><a href="http://www.amazon.com/dp/B01DJ9XS52/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2016/05/skull-canyon-nuc-front-and-back-ports-1.jpg" alt=""></a></p>
    <p>It's <a href="http://www.amazon.com/dp/B01DJ9XS52/?tag=codihorr-20">not cheap at $579</a>, but this tiny box bristles with cutting edge x86 tech:</p>
    <ul>
    <li>Quad-core i7-6770HQ CPU (2.6 Ghz / 3.5 Ghz)</li>
    <li>Iris Pro Graphics 580 GPU with 128MB eDRAM</li>
    <li>Up to 32GB DDR4-2666 RAM</li>
    <li>Dual M.2 PCI x4 SSD slots</li>
    <li>802.11ac WiFi / Bluetooth / Gigabit Ethernet</li>
    <li>Thunderbolt 3 / USB 3.1 gen 2 Type-C port</li>
    <li>Four USB 3.0 ports</li>
    <li>HDMI 2.0, mini-DP 1.2 video out</li>
    <li>SDXC (UHS-I) card reader</li>
    <li>Infrared sensor</li>
    <li>3.5mm combo digital / optical out port</li>
    <li>3.5mm headphone jack</li>
    </ul>
    <p>All impressive, but the most remarkable items are the GPU and the Thunderbolt 3 port. Putting together a HTPC that can kick an Xbox One's butt as a gaming box is now as simple as adding these three items together:</p>
    <ol>
    <li>
    <a href="http://www.amazon.com/dp/B01DJ9XS52/?tag=codihorr-20">Intel NUC kit NUC6i7KYK</a> $579</li>
    <li>
    <a href="http://www.amazon.com/dp/B014R8JWEA/?tag=codihorr-20">16GB DDR4-2400</a> $75</li>
    <li>
    <a href="http://www.amazon.com/dp/B01639694M/?tag=codihorr-20">Samsung 950 Pro NVMe M.2 (512GB)</a> $317</li>
    </ol>
    <p>Ok, fine, it's a cool <strong>$970</strong> plus tax compared to $399 for one of those console x86 boxes. But did I mention it has <em>skulls</em> on it? <em>Skulls!</em></p>
    <p>The CPU and disk performance on offer here are hilariously far beyond what's available on current consoles:</p>
    <ul>
    <li>
    <p>Disk performance of the two internal PCIe 3.0 4x M.2 slots, assuming you choose a proper NVMe drive as you should, is measured in not megabytes per second but <a href="http://www.anandtech.com/show/10303/choosing-the-right-ssd-for-a-skylakeu-system/2"><em>gigabytes</em> per second.</a> Meanwhile consoles lumber on with, at best, hybrid drives.</p>
    </li>
    <li>
    <p>The Jaguar class AMD x86 cores in the Xbox One and PS4 are about the same as the <a href="http://anandtech.com/show/7314/intel-baytrail-preview-intel-atom-z3770-tested/2">AMD A4-5000 reviewed here</a>; those benchmarks indicate a modern Core i7 will be about <a href="http://www.anandtech.com/show/7003/the-haswell-review-intel-core-i74770k-i54560k-tested/6">four times faster</a>.</p>
    </li>
    </ul>
    <p>But most importantly, <a href="http://nucblog.net/2016/05/skull-canyon-nuc-review-conclusion/">its GPU performance is on par with current consoles</a>. NUC blog measured <strong>41fps average</strong> in Battlefield 4 at 1080p and medium settings. Digging through old benchmarks I find plenty of pages where a Radeon 78xx or 77xx series video card, the closest analog to what's in the XBox One and PS4, achieves a <a href="http://www.bit-tech.net/hardware/graphics/2013/11/27/battlefield-4-performance-analysis/3">similar result in Battlefield 4</a>:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/05/radeon-77xx-perf-bf4-1080p-medium.png" alt=""></p>
    <p>I personally benchmarked GRID 2 at 720p (high detail) on all three of the last HTPC models I owned:</p>
    <table width="320px">
    <tr>
    <td></td>
    <td>Max</td>
    <td>Min</td>
    <td>Avg
    </td>
    </tr>
    <tr>
    <td>i3-4130T, HD 4400</td>
    <td>32</td>
    <td>21</td>
    <td>27
    </td>
    </tr>
    <tr>
    <td>i3-6100T, HD 530</td>
    <td>50</td>
    <td>32</td>
    <td>39
    </td>
    </tr>
    <tr>
    <td>i7-6770HQ, Iris Pro 580</td>
    <td>96</td>
    <td>59</td>
    <td>78
    </td>
    </tr>
    </table>
    <p>When I up the resolution to 1080p, I get <strong>59fps average</strong>, 38 min, 71 max. Checking with <a href="http://www.notebookcheck.net/Computer-Games-on-Laptop-Graphics-Cards.13849.0.html">Notebookcheck's exhaustive benchmark database</a>, that is closest to the AMD R7 250, a rebranded Radeon 7770.</p>
    <p>What we have here is legitimately the first on-die GPU that can compete with a low-end discrete video card from AMD or Nvidia. Granted, an older one, one you could buy for about $80 today, but one that is certainly equivalent to what's in the Xbox One and PS4 <em>right now</em>. This is a real first for Intel, and it probably won't be the last time, considering that on-die GPU performance increases have massively outpaced CPU performance increases for the last 5 years.</p>
    <p>As for power usage, I was pleasantly surprised to measure that this box idles at <b>15w</b> at the Windows Desktop doing nothing, and drops to <b>13w</b> when the display sleeps. Considering the best idle numbers I've measured are from the <a href="https://blog.codinghorror.com/the-scooter-computer/">Scooter Computer at 7w</a> and <a href="https://blog.codinghorror.com/the-2016-htpc-build/">my previous HTPC build at 10w</a>, that's not bad at all! Under full game load, it's more like 70 to 80 watts, and in typical light use, 20 to 30 watts. It's the idle number that matters the most, as that represents the typical state of the box. And compared to <a href="http://www.extremetech.com/gaming/182829-new-report-slams-xbox-one-and-ps4-power-consumption-inefficiencies-still-abound">the 75 watts a console uses even when idling at the dashboard</a>, it's no contest.</p>
    <p>Of course, 4k video playback is no problem, though 10-bit 4K video <a href="http://jell.yfish.us/">may be a stretch</a>. If that's not enough — if you dream bigger than medium detail 1080p gameplay — the presence of a Thunderbolt 3 port on this little box means you can, at considerable expense, use <strong>any external GPU of your choice</strong>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/05/razer-core-external-GPU.jpg" alt=""></p>
    <p>That's the <a href="http://www.razerzone.com/store/razer-core">Razer Core external graphics dock</a>, and it's $499 all by itself, but it opens up an entire world of upgrading your GPU to whatever the heck you want, as long as your x86 computer has a Thunderbolt 3 port. And it really works! In fact, here's a video of it working live with this exact configuration:</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/BUxP1Uwp7so" frameborder="0" allowfullscreen></iframe>
    <p>Zero games are meaningfully CPU limited today; the disk and CPU performance of this Skull Canyon NUC is already so vastly far ahead of current x86 consoles, even the PS4 Neo that's about to be introduced. So being able to replace the one piece that needs to be the most replaceable is huge. Down the road you can add the latest, greatest GPU model whenever you want, just by plugging it in!</p>
    <p>The only downside of using such a small box as my HTPC is that my two 2.5" 2TB media drives become external USB 3.0 enclosures, and I am limited by the 4 USB ports. So it's a little … cable-y in there. But I've come to terms with that, and its tiny size is an acceptable tradeoff for all the cable and dongle overhead.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/05/skull-canyon-with-razer-core-external.jpg" alt=""></p>
    <p>I still remember how shocked I was <a href="https://blog.codinghorror.com/x86-uber-alles/">when Apple switched to x86 back in 2005</a>. I was also surprised to discover just how thoroughly both the PS4 and Xbox One embraced x86 in 2013. Add in the current furor over VR, plus the PS4 Neo opening new console upgrade paths, and the future of x86 as a gaming platform is rapidly approaching supernova.</p>
    <p>If you want to experience what console gaming will be like in 10 years, invest in a <a href="http://www.amazon.com/dp/B01DJ9XS52/?tag=codihorr-20">Skull Canyon NUC</a> and an external Thunderbolt 3 graphics dock today. <strong>If we are in a golden age of x86 gaming, this configuration is its logical endpoint.</strong></p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com" rel="nofollow">Find a better job the Stack Overflow way</a> - what you need when you need it, no spam, and no scams.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-05-20T22:05:59.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-golden-age-of-x86-gaming/</guid>
    </item>
    <item>
    <title>Your Own Personal WiFi Storage</title>
    <link>https://blog.codinghorror.com/your-own-personal-wifi-storage/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Our kids have reached the age – at ages 4, 4, and 7 respectively – that taking longer trips with them is now possible without everyone losing what's left of their sanity in the process. But we still have the same problem on multiple hour trips, whether it's in a car, or on a plane – how do we bring enough stuff to keep the kids entertained without carting 5 pounds of books and equipment along, per person? And if we agree, like most parents, that <a href="https://twitter.com/jimgaffigan/status/649355348013395968">the iPad is the general answer to this question</a>, how do I get enough local media downloaded and installed on each of their iPads before the trip starts? And do I need 128GB iPads, because those are kind of expensive?</p>
    <p>We clearly have a media sharing problem. I asked on Twitter and quite a number of people recommended the <a href="http://www.amazon.com/dp/B00RVIGY1I/?tag=codihorr-20">HooToo HT-TM05 TripMate Titan</a> at $40. I took their advice, and they were right – <strong>this little device is amazing!</strong></p>
    <p><a href="http://www.amazon.com/dp/B00RVIGY1I/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2016/05/HT-TM05.jpg" alt=""></a></p>
    <ul>
    <li>10400mAh External Battery</li>
    <li>WiFi USB 3.0 media sharing device</li>
    <li>Wired-to-WiFi converter</li>
    <li>WiFi-to-WiFi bridge to share a single paid connection</li>
    </ul>
    <p>The value of the last two points is debatable depending on your situation, but the utility of the first two is <em>huge!</em> Plus the large built in battery means it can act as a self-powered WiFi hotspot for 10+ hours. All this for <a href="http://www.amazon.com/dp/B00RVIGY1I/?tag=codihorr-20">only forty bucks!</a></p>
    <p>It's a very simple device. It has exactly <strong>one button</strong> on the top:</p>
    <ul>
    <li>Hold the button down for 5+ seconds to power on or off.</li>
    <li>Tap the button to see the current battery level, represented as 1-4 white LEDs.</li>
    <li>The blue LED will change to green if connected to another WiFi or wired network.</li>
    </ul>
    <p>Once you <a href="http://www.amazon.com/dp/B00RVIGY1I/?tag=codihorr-20">get yours</a>, just hold down the button to power it on, let it fully boot, and connect to the new <code>TripMateSith</code> WiFi network. As to why it's called that, I suspect it has to do with the color scheme of the device and this guy.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/05/darth-maul.jpg" alt=""></p>
    <p>I am guessing licensing issues forced them to pick the 'real' name of TripMate Titan, but wirelessly, it's known as <code>TripMateSith-XXXX</code>. Connect to that. The default password is <code>11111111</code> (that's eight ones).</p>
    <img alt="https://blog.codinghorror.com/content/images/2016/05/wifi-browser-hootoo-titan.png" width="320px">
    <p>Once connected, navigate to <code>10.10.10.254</code> in your browser. Username is <code>admin</code>, no password.</p>
    <img alt="https://blog.codinghorror.com/content/images/2016/05/hootoo-initial-connect.png" width="320px">
    <p>This interface is totally smartphone compatible, for the record, but I recommend you do this from a desktop or laptop since we need to upgrade the firmware immediately. As received, the device has firmware 2.000.022 and you'll definitely want to <a href="http://www.hootoo.com/downloads-HT-TM05.html">upgrade to the latest firmware</a> right away:</p>
    <ul>
    <li>Make sure a small USB storage device is attached – it needs local scratch disk space to upgrade.</li>
    <li>You'd think putting the firmware on a USB storage device and inserting said USB storage device into the HooToo would work, and I agree that's logical, but … you'd be wrong.</li>
    <li>Connect from a laptop or desktop, then visit the Settings, Firmware page and upload the firmware file from there. (I couldn't figure out any way to upgrade firmware from a phone, at least not on iOS.)</li>
    </ul>
    <h4 id="storage">Storage</h4>
    <p>For this particular use, so we can attach the storage, leave it attached forever, and kinda-sorta pretend it is all one device, I recommend a <a href="http://www.amazon.com/dp/B01BGTG2A0/?tag=codihorr-20">tiny $32 128GB USB 3.0 drive</a>. It's not a barn-burner, but it's fast enough for its diminutive size.</p>
    <p><a href="http://www.amazon.com/dp/B01BGTG2A0/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2016/05/sandisk-fit-128gb.jpg" width="320px"></a></p>
    <p>In the past, <a href="http://blog.codinghorror.com/a-ssd-in-your-pocket/">I've recommended very fast USB 3.0 drives</a>, but I think that time is coming to an end. If you need something larger than 128GB, you could carry a USB 3.0 enclosure with a traditional inexpensive 2.5" HD, but the combination of travel and spinning hard drives makes me nervous. Not to mention the extra power consumption. Instead, I recommend one of the new, budget compact M.2 SSDs in a USB 3.0 enclosure:</p>
    <ul>
    <li>
    <a href="http://www.amazon.com/dp/B00TGIW1XG/?tag=codihorr-20">500GB M.2 2280 SATA SSD</a> ($150)</li>
    <li>
    <a href="http://www.amazon.com/dp/B019NNEA2I/?tag=codihorr-20">M.2 SATA to USB 3.0 Enclosure</a> ($23)</li>
    </ul>
    <p><a href="http://www.amazon.com/dp/B01BO4L3MY/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2016/05/usb-3-sata-m2-enclosure-1.jpg" width="600px"></a></p>
    <p>They run absolute <em>circles</em> around large USB flash drives in performance! The larger the drive, believe me, the more you need to care about this, like say you need to quickly copy a bunch of reasonably new media for the kids to enjoy before you go catch that plane.</p>
    <p>Anyway, once you get this storage plugged into the HooToo it will automatically <strong>set up a DLNA share</strong> for you:</p>
    <img alt="https://blog.codinghorror.com/content/images/2017/01/hootoo-auto-dlna-share.jpg" width="320px">
    <p>However, you must explicitly move the files and folders into the Share folder created by the HooToo to browse them via DLNA.</p>
    <p>In theory you could do this directly to the filesystem on the USB drive, but since we're already <em>there</em>, I found it was just as easy to use the built in Explorer tool in the web browser, linked from the HooToo homepage:</p>
    <img alt="https://blog.codinghorror.com/content/images/2017/01/hootoo-add-dlna-share-folders-1.jpg" width="320px">
    <ul>
    <li>Select the files and folders you want to move</li>
    <li>Tap the wrench icon, then Cut</li>
    <li>Tap to enter the Share folder</li>
    <li>Tap the wrench icon, then Paste</li>
    </ul>
    <p>Anyway, once you get the folders and files you want into the <strong>Share</strong> folder, you're good to go for DLNA!</p>
    <h4 id="settingsandwifi">Settings and WiFi</h4>
    <p>Let's continue setting up our HooToo Tripmate Titan. In the web interface, under Settings, Network Settings, these are the essentials:</p>
    <ul>
    <li>
    <p>In Host Name, first <strong>set the device name to something short and friendly</strong>. You will be typing this later on every device you attach to it. I used <code>van</code> and <code>airplane</code> for mine, since that's where we plan to use them.</p>
    </li>
    <li>
    <p>In Wi-Fi and LAN</p>
    <ul>
    <li>
    <p>pick <strong>a simple WiFi password</strong>, because you'll need to tell people to type this in when they connect, or type it in for them. I'd keep it simple. High security is not needed here.</p>
    </li>
    <li>
    <p>set the <a href="http://www.extremetech.com/computing/179344-how-to-boost-your-wifi-speed-by-choosing-the-right-channel">WiFi channel to either 1, 6, or 11</a> so you are not crowding around other channels.</p>
    </li>
    <li>
    <p>set security to <a href="http://security.stackexchange.com/questions/23627/strength-of-wep-wpa-and-wpa-2-psk">WPA2-PSK only</a>. No need to support old, insecure connection types.</p>
    </li>
    </ul>
    </li>
    </ul>
    <p>There's more here, if you want to bridge wired or wirelessly, but this will get you started.</p>
    <h4 id="ios">iOS</h4>
    <p><font color="red">Update:</font> since I originally wrote this, I've switched to <a href="https://firecore.com/infuse">the Infuse app</a>. It's fantastic for media consumption, and although it is a little expensive at $9, there's a reason: it supports <em>tons</em> of different audio and file formats, including the ones that your iPhone and iPad don't understand, including Dolby and so on.</p>
    <p>Infuse supports the <a href="http://www.techhive.com/article/2020825/how-to-get-started-with-dlna.html">DLNA standard</a> built into the HooToo. So all you have to do is connect to the HooToo's wireless network, press the add files plus button at upper right, and connect to the one that automatically appears — in this case, <strong>DLNA-Van</strong>, there at the bottom.</p>
    <img alt="https://blog.codinghorror.com/content/images/2017/01/infuse-add-files-dlna-hootoo.png" width="320px">
    <p>With DLNA, <strong>no login is required!</strong> Once connected, you can scan through videos easily, with rather nice thumbnail and summary support.</p>
    <img alt="https://blog.codinghorror.com/content/images/2017/01/infuse-dlna-browse-videos-hootoo.jpg" width="320px">
    <p>For more than just media, you can also use the <a href="https://itunes.apple.com/us/app/fileexplorer/id499470113?mt=8">File Explorer app</a> for iOS (or similar). See the instructions below for Windows, as the process is very similar.</p>
    <h4 id="windowsmac">Windows / Mac</h4>
    <p>Connect to the HooToo's WiFi network, then type in the name of the device (mine's called <code>van</code>) in Explorer or the File Run dialog, prefixed by <code>\\</code>.</p>
    <img alt="https://blog.codinghorror.com/content/images/2016/05/Screenshot--17-.png" width="480px">
    <p>The default user accounts are <code>admin</code> and <code>guest</code> with no passwords, unless you set one up. Admin lets you write files; guest does not.</p>
    <img alt="https://blog.codinghorror.com/content/images/2016/05/Screenshot--18-.png" width="480px">
    <p>Once you connect you'll see the default file share for the USB device and can begin browsing the files at <code>UsbDisk1_Volume1</code>.</p>
    <img alt="https://blog.codinghorror.com/content/images/2016/05/Screenshot--19-.png" width="480px">
    <p>I also figured out how to browse the HooToo filesystem from a Mac as well:</p>
    <ul>
    <li>Connect to the HooToo's WiFi network</li>
    <li>Open a Finder Window</li>
    <li>On the "Go" menu select "Connect to Server..."</li>
    <li>Enter the HooToo device name, e.g. <code>van</code>
    </li>
    <li>When prompted enter admin or guest credentials</li>
    </ul>
    <h4 id="caveats">Caveats</h4>
    <p>For some reason, with a USB 3.0 flash drive attached, the battery slowly drains even when powered off. So you'll want to remove any flash drive when the HooToo is powered off for extended periods. I have no idea why this happens, but I was definitely able to reproduce the behavior. Kind of annoying since my whole goal was to have "one" device, but oh well.</p>
    <p>This isn't a <a href="http://www.howtogeek.com/252261/how-to-set-up-plex-and-watch-your-movies-on-any-device/">fancy, glitzy Plex based system</a>, it's a basic DLNA share. Devices that have previously connected to this WiFi network will definitely connect to it when no other WiFi networks are available, like say, when you're in a van driving to Legoland, or on a plane flying to visit your grandparents. You will still have to train people to launch <a href="https://firecore.com/infuse">the Infuse app</a>, and the right device name to look for...</p>
    <img alt="https://blog.codinghorror.com/content/images/2017/01/infuse-dlna-select-server.jpg" width="320px">
    <p>... or, if you're on a desktop / laptop, create a desktop link to the proper share.</p>
    <p>But in my book, simple is good. The <a href="http://www.amazon.com/dp/B00RVIGY1I/?tag=codihorr-20">HooToo HT-TM05 TripMate</a> plus a <a href="http://www.amazon.com/dp/B01BGTG2A0/?tag=codihorr-20">small 128GB flash drive</a>  is an easy, flexible way to wirelessly share large media files across a ton of devices for less than 75 bucks total, and it comes with a large, convenient rechargeable battery.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/jv_jkju_iZg?start=95" frameborder="0" allowfullscreen></iframe>
    <p>I think one of these will live, with its charger cable and a flash drive chock full of awesome media, permanently inside our van for the kids. Remember, <strong>no matter where you go, there your … files … are.</strong></p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Building out your tech team? <a href="http://careers.stackoverflow.com/products" rel="nofollow">Stack Overflow Careers</a> helps you hire from the largest community for programmers on the planet. We built our site with developers like you in mind.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-05-07T06:42:23.000Z</pubDate>
    <guid>https://blog.codinghorror.com/your-own-personal-wifi-storage/</guid>
    </item>
    <item>
    <title>They Have To Be Monsters</title>
    <link>https://blog.codinghorror.com/they-have-to-be-monsters/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Since I started working on Discourse, I spend a lot of time thinking about how software can encourage and nudge people to be more empathetic online. That's why it's troubling to read articles <a href="https://medium.com/@stephaniewittelswachs/the-end-of-empathy-5d8383b066d3">like this one</a>:</p>
    <blockquote>
    <p>My brother’s 32nd birthday is today. It’s an especially emotional day for his family because he’s not alive for it.</p>
    <p>He died of a heroin overdose last February.<br>
    This year is even harder than the last. I started weeping at midnight and eventually cried myself to sleep. Today’s symptoms include explosions of sporadic sobbing and an insurmountable feeling of emptiness. My mom posted a gut-wrenching comment on my brother’s Facebook page about the unfairness of it all. Her baby should be here, not gone. “Where is the God that is making us all so sad?” she asked.</p>
    <p>In response, someone — a stranger/(I assume) another human being — commented with one word: “Junkie.”</p>
    </blockquote>
    <p>The interaction may seem a bit strange and out of context until you realize that this is the Facebook page of a person who was somewhat famous, who <a href="http://variety.com/2015/tv/news/parks-and-recreation-producer-dead-harris-wittels-1201437460/">produced the excellent show Parks and Recreation</a>. Not that this forgives the behavior in any way, of course, but it does explain why strangers would wander by and make observations.</p>
    <p>There is deep truth in the old idea that people are able to say these things <strong>because they are looking at a screen full of words</strong>, not directly at the face of the person they're about to say a terrible thing to. That one level of abstraction the Internet allows, typing, which is so immensely powerful in so many other contexts …</p>
    <blockquote class="twitter-tweet" data-lang="en">
    <p lang="en" dir="ltr">“falling in love, breaking into a bank, bringing down the govt…they all look the same right now: they look like typing” <a href="https://twitter.com/PennyRed">@PennyRed</a> <a href="https://twitter.com/hashtag/TtW16?src=hash">#TtW16</a> <a href="https://twitter.com/hashtag/k3?src=hash">#k3</a></p>— whitney erin boesel (@weboesel) <a href="https://twitter.com/weboesel/status/721477628465704960">April 16, 2016</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>… has some crippling emotional consequences.</p>
    <p>As an exercise in empathy, try to imagine saying some of the terrible things people typed to each other online to a real person sitting directly in front of you. Or don't imagine, and <a href="http://www.esquire.com/sports/videos/a44351/female-sports-reporters-mean-tweets/">just watch this video</a>.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/9tU-D-m2JY8" frameborder="0" allowfullscreen></iframe>
    <p>I challenge you to watch the entirety of that video. I couldn't do it. This is the second time I've tried, and I had to turn it off not even 2 minutes in because I couldn't take it any more.</p>
    <p>It's no coincidence that these are comments directed at women. Over the last few years I have come to understand how, as a straight white man, I have the privilege of being immune from most of this kind of treatment. But others are not so fortunate. The Guardian analyzed 70 million comments and found that <a href="https://www.theguardian.com/technology/2016/apr/12/the-dark-side-of-guardian-comments">online abuse is heaped disproportionately on women, people of color, and people of different sexual orientation</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/04/men-vs-women-comments-blocked.png" alt=""></p>
    <blockquote>
    <p>And avalanches happen easily online. Anonymity disinhibits people, making some of them more likely to be abusive. Mobs can form quickly: once one abusive comment is posted, others will often pile in, competing to see who can be the most cruel. This abuse can move across platforms at great speed – from Twitter, to Facebook, to blogposts – and it can be viewed on multiple devices – the desktop at work, the mobile phone at home. To the person targeted, it can feel like the perpetrator is everywhere: at home, in the office, on the bus, in the street.</p>
    </blockquote>
    <p>I've only had a little taste of this treatment, once. The sense of being "under siege" – a constant barrage of vitriol and judgment pouring your way every day, every hour – was palpable. It was not pleasant. It absolutely affected my state of mind. Someone remarked in the comments that ultimately it did not matter, because as a white man I could walk away from the whole situation any time. And they were right. I began to appreciate what it would feel like when you <em>can't</em> walk away, when this harassment follows you around everywhere you go online, and you never really know when the next incident will occur, or exactly what shape it will take.</p>
    <p>Imagine the feeling of being constantly on edge like that, every day. What happens to your state of mind when walking away isn't an option? It gave me great pause.</p>
    <p><a href="http://www.brickartist.com/"><img alt="https://blog.codinghorror.com/content/images/2016/04/the-lego-scream.jpg" alt="The Scream by Nathan Sawaya"></a></p>
    <p>I admired the way Stephanie Wittels Wachs actually <em>engaged</em> with the person who left that awful comment. This is a man who has two children of his own, and should be no stranger to the kind of pain involved in a child's death. And yet he felt the need to post the word "Junkie" in reply to a mother's anguish over losing her child to drug addiction.</p>
    <blockquote>
    <p>Isn’t this what empathy is? Putting myself in someone else’s shoes with the knowledge and awareness that I, too, am human and, therefore, susceptible to this tragedy or any number of tragedies along the way?</p>
    </blockquote>
    <p>Most would simply delete the comment, block the user, and walk away. Totally defensible. But she didn't. She takes the time and effort to attempt to understand this person who is abusing her mother, to reach them, to connect, to <strong>demonstrate the very empathy this man appears incapable of</strong>.</p>
    <p>Consider the related story of Lenny Pozner, who lost a child at Sandy Hook, and became <a href="https://www.washingtonpost.com/news/grade-point/wp/2016/01/13/the-father-of-a-boy-killed-at-sandy-hook-gets-death-threats-from-people-who-say-the-shooting-was-a-hoax/">the target of groups who believe the event was a hoax</a>, and similarly selflessly devotes much of his time to refuting and countering these bizarre claims.</p>
    <blockquote>
    <p>Tracy’s alleged harassment was hardly the first, Pozner said. There’s a whole network of people who believe the media reported a mass shooting that never happened, he said, that the tragedy was an elaborate hoax designed to increase support for gun control. Pozner said he gets ugly comments often on social media, such as, “Eventually you’ll be tried for your crimes of treason against the people,” “… I won’t be satisfied until the caksets are opened…” and “How much money did you get for faking all of this?”</p>
    </blockquote>
    <p>It's easy to practice empathy when you limit it to people that are easy to empathize with – the downtrodden, the undeserving victims. But <strong>it is another matter entirely to empathize with those that hate, harangue, and intentionally make other people's lives miserable</strong>. If you can do this, you are a far better person than me. I struggle with it. But my hat is off to you. There's no better way to teach empathy than to practice it, in the most difficult situations.</p>
    <p>In individual cases, reaching out and really trying to empathize with people you disagree with or dislike can work, even people who happen to be lifelong members of hate organizations, <a href="http://www.newyorker.com/magazine/2015/11/23/conversion-via-twitter-westboro-baptist-church-megan-phelps-roper">as in the remarkable story of Megan Phelps-Roper</a>:</p>
    <blockquote>
    <p>As a member of the Westboro Baptist Church, in Topeka, Kansas, Phelps-Roper believed that AIDS was a curse sent by God. She believed that all manner of other tragedies—war, natural disaster, mass shootings—were warnings from God to a doomed nation, and that it was her duty to spread the news of His righteous judgments. To protest the increasing acceptance of homosexuality in America, the Westboro Baptist Church picketed the funerals of gay men who died of AIDS and of soldiers killed in Iraq and Afghanistan. Members held signs with slogans like “GOD HATES FAGS” and “THANK GOD FOR DEAD SOLDIERS,” and the outrage that their efforts attracted had turned the small church, which had fewer than a hundred members, into a global symbol of hatred.</p>
    </blockquote>
    <p>Perhaps one of the greatest failings of the Internet is <a href="https://medium.com/@jeremypreacher/emotional-labor-and-diversity-in-community-management-eb3a4985d71a#.2ei4skfxv">the breakdown in cost of emotional labor</a>.</p>
    <blockquote>
    <p>First we’ll reframe the problem: the real issue is not Problem Child’s opinions – he can have whatever opinions he wants. The issue is that he’s doing zero emotional labor – he’s not thinking about his audience or his effect on people at all. (Possibly, he’s just really bad at modeling other people’s responses – the outcome is the same whether he lacks the will or lacks the skill.) But to be a good community member, he <em>needs</em> to consider his audience.</p>
    </blockquote>
    <p>True empathy means reaching out and engaging in a loving way with everyone, even those that are hurtful, hateful, or spiteful. But on the Internet, can you do it every day, multiple times a day, across hundreds of people? Is this a reasonable thing to ask of someone? Is it even <em>possible</em>, short of sainthood?</p>
    <p>The question remains: <strong>why would people post such hateful things</strong> in the first place? Why reply "Junkie" to a mother's anguish? Why ask the father of a murdered child to publicly prove his child's death was not a hoax? Why tweet "Thank God for AIDS!"</p>
    <p>Unfortunately, I think I know the answer to this question, and you're not going to like it.</p>
    <p><a href="http://www.webtoons.com/en/comedy/bluechair/ep-59-busy-work/viewer?title_no=199&amp;episode_no=61"><img alt="https://blog.codinghorror.com/content/images/2016/04/dont-let-the-existential-dread.jpg" alt="Busy-Work by Shen, owlturd.com"></a></p>
    <p>I don't like it. I don't want it. But I know.</p>
    <p>I have laid some heavy stuff on you in this post, and for that, I apologize. I think the weight of what I'm trying to communicate here requires it. I have to warn you that the next article I'm about to link is far heavier than anything I have posted above, maybe the heaviest thing I've ever posted. It's about the legal quandary presented in the tragic cases of children who died because their parents accidentally left them strapped into carseats, and it won a much deserved pulitzer. It is also <a href="https://www.washingtonpost.com/lifestyle/magazine/fatal-distraction-forgetting-a-child-in-thebackseat-of-a-car-is-a-horrifying-mistake-is-it-a-crime/2014/06/16/8ae0fe3a-f580-11e3-a3a5-42be35962a52_story.html">one of the most harrowing things I have ever read</a>.</p>
    <blockquote>
    <p>Ed Hickling believes he knows why. Hickling is a clinical psychologist from Albany, N.Y., who has studied the effects of fatal auto accidents on the drivers who survive them. He says these people are often judged with disproportionate harshness by the public, even when it was clearly an accident, and even when it was indisputably not their fault.</p>
    <p>Humans, Hickling said, have a fundamental need to create and maintain a narrative for their lives in which the universe is not implacable and heartless, that terrible things do not happen at random, and that catastrophe can be avoided if you are vigilant and responsible.</p>
    <p>In hyperthermia cases, he believes, the parents are demonized for much the same reasons. “We are vulnerable, but we don’t want to be reminded of that. We want to believe that the world is understandable and controllable and unthreatening, that if we follow the rules, we’ll be okay. <strong>So, when this kind of thing happens to other people, we need to put them in a different category from us. We don’t want to resemble them, and the fact that we might is too terrifying to deal with. So, they have to be monsters.</strong>”</p>
    </blockquote>
    <p>This man left the junkie comment because he is afraid. He is afraid his own children could become drug addicts. He is afraid his children, through no fault of his, through no fault of anyone at all, could die at 30. When presented with real, tangible evidence of the pain and grief a mother feels at the drug related death of her own child, and the reality that it could happen to anyone, it became so overwhelming that it was too much for him to bear.</p>
    <p>Those "Sandy Hook Truthers" harass the father of a victim because they are afraid. They are afraid their own children could be viciously gunned down in cold blood any day of the week, bullets tearing their way through the bodies of the teachers standing in front of them, desperately trying to protect them from being murdered. They can't do anything to protect their children from this, and in fact there's <em>nothing any of us can do</em> to protect our children from being murdered at random, at school any day of the week, at the whim of any mentally unstable individual with access to an assault rifle. That's the harsh reality.</p>
    <p>When faced with the abyss of pain and grief that parents feel over the loss of their children, due to utter random chance in a world they can't control, they could never control, maybe none of us can <em>ever</em> control, the overwhelming sense of existential dread is simply too much to bear. So <strong><em>they have to be monsters</em></strong>. They must be.</p>
    <p>And we will fight these monsters, tooth and nail, raging in our hatred, so we can forget our pain, at least for a while.</p>
    <blockquote>
    <p>After Lyn Balfour’s acquittal, this comment appeared on the Charlottesville News Web site:</p>
    <p>“If she had too many things on her mind then she should have kept her legs closed and not had any kids. They should lock her in a car during a hot day and see what happens.”</p>
    </blockquote>
    <p>I imagine the suffering that these parents are already going through, reading these words that another human being typed to them, just <em>typed</em>, and something breaks inside me. I can't process it. But rather than pitting ourselves against each other out of fear, recognize that the monster who posted this terrible thing is me. It's you. It's all of us.</p>
    <p>The weight of seeing through the fear and beyond the monster to simply discover <em>yourself</em> is often too terrible for many people to bear. In a world of heavy things, it's the heaviest there is.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] At Stack Overflow, we help developers learn, share, and grow. Whether you’re looking for your next dream job or looking to build out your team, <a href="http://careers.stackoverflow.com" rel="nofollow">we've got your back</a>.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-04-29T21:47:53.000Z</pubDate>
    <guid>https://blog.codinghorror.com/they-have-to-be-monsters/</guid>
    </item>
    <item>
    <title>Here's The Programming Game You Never Asked For</title>
    <link>https://blog.codinghorror.com/heres-the-programming-game-you-never-asked-for/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>You know what's universally regarded as un-fun by most programmers? Writing <a href="https://en.wikipedia.org/wiki/Assembly_language">assembly language code</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/04/assembly-language.png" alt=""></p>
    <p>As Steve McConnell <a href="http://www.amazon.com/dp/0735619670/?tag=codihorr-20">said back in 1994</a>:</p>
    <blockquote>
    <p>Programmers working with high-level languages achieve better productivity and quality than those working with lower-level languages. Languages such as C++, Java, Smalltalk, and Visual Basic have been credited with improving productivity, reliability, simplicity, and comprehensibility by factors of 5 to 15 over low-level languages such as assembly and C. <strong>You save time when you don't need to have an awards ceremony every time a C statement does what it's supposed to.</strong></p>
    </blockquote>
    <p>Assembly is a language where, for performance reasons, every individual command is communicated in excruciating low level detail directly to the CPU. As we've gone from fast CPUs, to faster CPUs, to multiple absurdly fast CPU cores on the same die, to "gee, we kinda stopped caring about CPU performance altogether five years ago", there hasn't been much need for the kind of hand-tuned performance you get from assembly. Sure, there are <a href="http://blog.codinghorror.com/i-happen-to-like-heroic-coding/">the occasional heroics</a>, and they are amazing, but in terms of Getting Stuff Done, assembly has been well off the radar of mainstream programming for probably twenty years now, and for good reason.</p>
    <p>So who in their right mind would take up tedious assembly programming today? Yeah, nobody. But wait! What if I told you your Uncle Randy had just died and left behind this mysterious old computer, <a href="http://www.zachtronics.com/tis-100/">the TIS-100?</a></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/04/aunt-doris-note-tis-100.jpg" alt=""></p>
    <p>And what if I also told you the only way to figure out what that TIS-100 computer was used for – and what good old Uncle Randy was up to – was to read a (blessedly short 14 page) photocopied reference manual and fix its corrupted boot sequence … <em>using assembly language?</em></p>
    <p><a href="http://www.zachtronics.com/tis-100/"><img alt="https://blog.codinghorror.com/content/images/2016/04/tis-100-level-one.png" alt=""></a></p>
    <p>Well now, by God, it's time to learn us some assembly and get to the bottom of this mystery, isn't it? As its <a href="http://www.zachtronics.com/">creator</a> notes, <strong>this is the assembly language programming game you never asked for!</strong></p>
    <p>I was surprised to discover my co-founder <a href="https://eviltrout.com/">Robin Ward</a> liked TIS-100 so much that he not only played the game (presumably to completion) but wrote <a href="https://github.com/eviltrout/tis-100">a TIS-100 emulator in C</a>. This is apparently the kind of thing he does for fun, in his free time, when he's not already working full time with us programming <a href="http://www.discourse.org">Discourse</a>. Programmers gotta … program.</p>
    <p>Of course there's a long history of programming games. What makes TIS-100 unique is the way it fetishizes assembly programming, while most programming games take it a bit easier on you by easing you in with general concepts and simpler abstractions. But even "simple" programming games can be quite difficult. Consider one of my favorites on the Apple II, <a href="https://en.wikipedia.org/wiki/Rocky%27s_Boots">Rocky's Boots</a>, and its sequel, Robot Odyssey. <a href="http://blog.codinghorror.com/programming-4-fun/">I loved this game</a>, but in true programming fashion it was so difficult that <a href="http://www.slate.com/articles/technology/bitwise/2014/01/robot_odyssey_the_hardest_computer_game_of_all_time.html">finishing it in any meaningful sense was basically impossible</a>:</p>
    <blockquote>
    <p>Let me say: Any kid who completes this game while still a kid (I know only one, who also is one of the smartest programmers I’ve ever met) is guaranteed a career as a software engineer. Hell, any adult who can complete this game should go into engineering. <strong>Robot Odyssey is the hardest damn “educational” game ever made.</strong> It is also a stunning technical achievement, and one of the most innovative games of the Apple IIe era.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/04/robot-odyssey.png" alt=""></p>
    <p>Visionary, absurdly difficult games such as this gain cult followings. It is the game I remember most from my childhood. It is the game I love (and despise) the most, because it was the hardest, the most complex, the most challenging. The world it presented was like being exposed to Plato’s forms, a secret, nonphysical realm of pure ideas and logic. The challenge of the game—and it was one serious challenge—was to understand that other world. Programmer Thomas Foote had just started college when he picked up the game: “I swore to myself,” he told me, “that as God is my witness, I would finish this game before I finished college. I managed to do it, but just barely.”</p>
    </blockquote>
    <p>I was happy dinking around with a few robots that did a few things, got stuck, and moved on to other games. I got a little turned off by the way it treated programming as electrical engineering; messing around with a ton of AND OR and NOT gates was just not my jam. I was already <a href="http://blog.codinghorror.com/everything-i-needed-to-know-about-programming-i-learned-from-basic/">cutting my teeth on BASIC by that point</a> and I sensed a level of mastery was necessary here that I probably didn't have and I wasn't sure I even <em>wanted</em>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/04/robot-odyssey-chip.png" alt=""></p>
    <p>I'll take a COBOL code listing over <em>that</em> monstrosity any day of the week. Perhaps Robot Odyssey was so hard because, in the end, it was a bare metal CPU programming simulation, like TIS-100.</p>
    <p>A more gentle example of a modern programming game is Tomorrow Corporation's excellent <a href="http://tomorrowcorporation.com/humanresourcemachine">Human Resource Machine</a>.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/428R_oEjGGI" frameborder="0" allowfullscreen></iframe>
    <p>It has exactly the irreverent sense of humor you'd expect from the studio that built World of Goo and Little Inferno, both excellent and highly recommendable games in their own right. If you've ever wanted to find out if someone is truly interested in programming, recommend this game to them and see. It starts with only 2 instructions and slowly widens to include 11. Corporate drudgery has never been so … er, fun?</p>
    <p>I'm thinking about this because I believe there's a strong connection between programming games and being a talented software engineer. It's that essential sense of <em>play</em>, the idea that you're experimenting with this stuff because you enjoy it, and you bend it to your will out of the sheer joy of creation more than anything else. As I <a href="http://blog.codinghorror.com/programming-love-it-or-leave-it/">once said</a>:</p>
    <blockquote>
    <p>Joel implied that good programmers love programming so much they'd do it for <em>no pay at all</em>. I won't go quite that far, but I will note that the best programmers I've known have all had a <strong>lifelong passion for what they do</strong>. There's no way a minor economic blip would ever convince them they should do anything else. No way. No how.</p>
    </blockquote>
    <p>I'd rather sit a potential hire in front of Human Resource Machine and time how long it takes them to work through a few levels than <a href="http://blog.codinghorror.com/why-cant-programmers-program/">have them solve FizzBuzz for me</a> on a whiteboard. Is this interview about demonstrating competency in a certain technical skill that's worth a certain amount of money, or showing me how you can <em>improvise and have fun?</em></p>
    <p>That's why I was so excited when Patrick, Thomas, and Erin founded <a href="https://www.starfighters.io/">Starfighter</a>.</p>
    <p><a href="https://www.starfighters.io/"><img alt="https://blog.codinghorror.com/content/images/2016/04/starfighter-logo.png" alt=""></a></p>
    <p>If you want to know how competent a programmer is, give them a real-ish simulation of a real-ish system to hack against and experiment with – and see how far they get. In security parlance, this is known <a href="https://www.defcon.org/html/links/dc-ctf.html">as a CTF</a>, as popularized by Defcon. But it's rarely extended to programming, until now. Their first simulation is <a href="https://www.stockfighter.io/">StockFighter</a>.</p>
    <p>Participants are given:</p>
    <ul>
    <li>An interactive trading blotter interface</li>
    <li>A real, functioning set of limit-order-book venues</li>
    <li>A carefully documented JSON HTTP API, with an API explorer</li>
    <li>A series of programming missions.</li>
    </ul>
    <p>Participants are asked to:</p>
    <ul>
    <li>Implement programmatic trading against a real exchange in a thickly traded market.</li>
    <li>Execute block-shopping trading strategies.</li>
    <li>Implement electronic market makers.</li>
    <li>Pull off an elaborate HFT trading heist.</li>
    </ul>
    <p>This is a <em>seriously</em> next level hiring strategy, far beyond anything else I've seen out there. It's so next level that to be honest, I got really jealous reading about it, because <strong>I've felt for a long time that Stack Overflow should be doing yearly programming game events exactly like this</strong>, with special one-time badges obtainable only by completing certain levels on that particular year. Stack Overflow is <a href="http://blog.codinghorror.com/for-a-bit-of-colored-ribbon/">already a sort of game</a>, but people would go <em>nuts</em> for a yearly programming game event. Absolutely <em>bonkers</em>.</p>
    <p>I know we've talked about <a href="http://blog.codinghorror.com/we-hire-the-best-just-like-everyone-else/">giving lip service to the idea of hiring the best</a>, but if that's <em>really</em> what you want to do, the best programmers I've ever known have excelled at exactly the situation that Starfighter simulates — live troubleshooting and reverse engineering of an existing system, even to the point of <a href="http://blog.codinghorror.com/why-isnt-my-encryption-encrypting/">finding rare exploits</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/04/stockfighter-hardware.jpg" alt=""></p>
    <p>Consider the dedication of this participant who built <a href="https://discuss.starfighters.io/t/wireless-handheld-build-done/4985?u=codinghorror">a complete wireless trading device</a> for StockFighter. Was it necessary? Was it practical? No. <strong>It's the programming game we never asked for.</strong> But here we are, regardless.</p>
    <p>An arbitrary programming game, particularly one that goes to great lengths to simulate a fictional system, is a wonderful expression of the inherent joy in <em>playing</em> and <em>experimenting</em> with code. If I could find them, I'd gladly hire a dozen people just like that any day, and set them loose on our very real programming project.</p>
    <table>
    <tr><td class="welovecodinghorror">[advertisement] At Stack Overflow, we put developers first. We already help you find answers to your tough coding questions; now let us help you <a href="http://careers.stackoverflow.com" rel="nofollow">find your next job</a>.</td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-04-15T09:48:18.000Z</pubDate>
    <guid>https://blog.codinghorror.com/heres-the-programming-game-you-never-asked-for/</guid>
    </item>
    <item>
    <title>Thanks For Ruining Another Game Forever, Computers</title>
    <link>https://blog.codinghorror.com/thanks-for-ruining-another-game-forever-computers/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>In 2006, after <a href="http://blog.codinghorror.com/chess-computer-v-human/">visiting the Computer History Museum's exhibit on Chess</a>, I opined:</p>
    <blockquote>
    <p>We may have reached an inflection point. The problem space of chess is so astonishingly large that incremental increases in hardware speed and algorithms are unlikely to result in meaningful gains from here on out.</p>
    </blockquote>
    <p>So. About that. Turns out I was kinda … <em>totally completely wrong</em>. The number of possible moves, or "problem space", of Chess is indeed astonishingly large, estimated to be 10<sup>50</sup>:</p>
    <blockquote>
    <p>100,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000</p>
    </blockquote>
    <iframe width="420" height="315" src="https://www.youtube.com/embed/iSnAiXKU7h8" frameborder="0" allowfullscreen></iframe>
    <p><a href="https://en.wikipedia.org/wiki/Deep_Blue_(chess_computer)">Deep Blue</a> was interesting because it forecast a particular kind of future, a future where <strong>specialized hardware enabled brute force attack of the enormous chess problem space</strong>, as its purpose built chess hardware outperformed general purpose CPUs of the day by <em>many</em> orders of magnitude. How many orders of magnitude? In the heady days of 1997, Deep Blue could evaluate <strong>200 million chess positions per second</strong>. And that was enough to defeat Kasparov, the highest ever ranked human player – until <a href="https://en.wikipedia.org/wiki/Comparison_of_top_chess_players_throughout_history">2014</a> at least. Even though one of its best moves was <a href="http://www.wired.com/2012/09/deep-blue-computer-bug/">the result of a bug</a>.</p>
    <blockquote>
    <p>200,000,000</p>
    </blockquote>
    <p>In 2006, about ten years later, according to the <a href="http://www.chess.com/download/view/fritz-12-benchmark">Fritz Chess benchmark</a>, my PC could evaluate only 4.5 million chess positions per second.</p>
    <blockquote>
    <p>4,500,000</p>
    </blockquote>
    <p>Today, about twenty years later, that very same benchmark says my PC can evaluate a mere 17.2 million chess positions per second.</p>
    <blockquote>
    <p>17,200,000</p>
    </blockquote>
    <p>Ten years, four times faster. Not bad! Part of that is I went from dual to quad core, and these chess calculations scale almost linearly with the number of cores. An eight core CPU, no longer particularly exotic, could probably achieve ~28 million on this benchmark today.</p>
    <blockquote>
    <p>28,000,000</p>
    </blockquote>
    <p>I am not sure the scaling is exactly linear, but it's fair to say that even now, <em>twenty years later</em>, a modern 8 core CPU is still about an order of magnitude slower at the brute force task of evaluating chess positions than what Deep Blue's specialized chess hardware achieved in 1997.</p>
    <p>But here's the thing: none of that speedy brute forcing matters today. Greatly improved chess programs running on mere <em>handheld devices</em> can perform <a href="https://en.wikipedia.org/wiki/Human%E2%80%93computer_chess_matches#Pocket_Fritz_4_.282009.29">beyond grandmaster level</a>.</p>
    <blockquote>
    <p>In 2009 a chess engine running on slower hardware, a 528 MHz HTC Touch HD mobile phone running Pocket Fritz 4 reached the grandmaster level – it won a category 6 tournament with a performance rating of 2898. <strong>Pocket Fritz 4 searches fewer than 20,000 positions per second. This is in contrast to supercomputers such as Deep Blue that searched 200 million positions per second.</strong></p>
    </blockquote>
    <p>As far as chess goes, despite what I so optimistically thought in 2006, it's been <em>game over</em> for humans for quite a few years now. The best computer chess programs, vastly more efficient than Deep Blue, combined with modern CPUs which are now finally within an order of magnitude of what Deep Blue's specialized chess hardware could deliver, play at levels way beyond what humans can achieve.</p>
    <p><strong>Chess: ruined forever.</strong> Thanks, computers. You jerks.</p>
    <p>Despite this resounding defeat, there was still hope for humans in the game of Go. The number of possible moves, or "problem space", of Go is estimated to be 10<sup>170</sup>:</p>
    <blockquote>
    <p>1,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000,000</p>
    </blockquote>
    <p>Remember that Chess had a mere <em>fifty</em> zeroes there? Go has <a href="https://en.wikipedia.org/wiki/Go_and_mathematics">more possible moves than there are <strong>atoms in the universe</strong></a>.</p>
    <p>Wrap your face around that one.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/03/go-game.jpg" alt=""></p>
    <p>Deep Blue was a statement about the inevitability of <em>eventually</em> being able to brute force your way around a difficult problem with the constant wind of <a href="http://blog.codinghorror.com/moores-law-in-practical-terms/">Moore's Law</a> at your back. If Chess is the quintessential European game, Go is the quintessential Asian game. Go requires a completely different strategy. Go means wrestling with a problem that is essentially <a href="http://ai-depot.com/LogicGames/Go-Complexity.html">impossible for computers to solve in any traditional way</a>.</p>
    <blockquote>
    <p>A simple material evaluation for chess works well – each type of piece is given a value, and each player receives a score depending on his/her remaining pieces. The player with the higher score is deemed to be 'winning' at that stage of the game.</p>
    <p>However, Chess programmers innocently asking Go players for an evaluation function would be met with disbelief! No such simple evaluation exists. Since there is only a single type of piece, only the number each player has on the board could be used for a simple material heuristic, and there is almost no discernible correlation between the number of stones on the board and what the end result of the game will be.</p>
    </blockquote>
    <p>Analysis of a problem this hard, with brute force completely off the table, is colloquially called "AI", though that term is a bit of a stretch to me. I prefer to think of it as building systems that can learn from experience, aka <a href="https://en.wikipedia.org/wiki/Machine_learning">machine learning</a>. Here's a talk which covers DeepMind learning to play classic Atari 2600 videogames. (Jump to the 10 minute mark to see what I mean.)</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/rbsqaJwpu6A" frameborder="0" allowfullscreen></iframe>
    <p>As impressive as this is – and it truly is – bear in mind that games as simple as Pac-Man still remain far beyond the grasp of Deep Mind. But what happens when you point a system like that at the game of Go?</p>
    <p>DeepMind built a system, <a href="https://en.wikipedia.org/wiki/AlphaGo">AlphaGo</a>, designed to see how far they could get with those approaches in the game of Go. AlphaGo recently played one of the best Go players in the world, Lee Sedol, and <a href="https://en.wikipedia.org/wiki/AlphaGo_versus_Lee_Sedol">defeated him in a stunning 4-1 display</a>. Being the optimist that I am, I guessed that DeepMind would win one or two games, but a near total rout like this? Incredible. <strong>In the space of just 20 years, computers went from barely beating the best humans at Chess, with a problem space of 10<sup>50</sup>, to definitively beating the best humans at Go, with a problem space of 10<sup>170</sup>.</strong> How did this happen?</p>
    <p>Well, a few things happened, but one unsung hero in this transformation is the humble video card, or GPU.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/03/asus-380x-front.jpg" alt=""></p>
    <p>Consider this breakdown of <a href="https://en.m.wikipedia.org/wiki/FLOPS#Hardware_costs">the cost of floating point operations</a> over time, measured in <strong>dollars per gigaflop</strong>:</p>
    <table style="width:320px">
    <tr>
    <td>1961</td>
    <td>$8,300,000,000</td>
    <td>
    </td>
    </tr>
    <tr>
    <td>1984</td>
    <td>$42,780,000</td>
    <td>
    </td>
    </tr>
    <tr>
    <td>1997</td>
    <td>$42,000</td>
    <td>
    </td>
    </tr>
    <tr>
    <td>2000</td>
    <td>$1,300</td>
    <td>
    </td>
    </tr>
    <tr>
    <td>2003</td>
    <td>$100</td>
    <td>
    </td>
    </tr>
    <tr>
    <td>2007</td>
    <td>$52</td>
    <td>
    </td>
    </tr>
    <tr>
    <td>2011</td>
    <td>$1.80</td>
    <td>
    </td>
    </tr>
    <tr>
    <td>2012</td>
    <td>$0.73</td>
    <td>
    </td>
    </tr>
    <tr>
    <td>2013</td>
    <td>$0.22</td>
    <td>
    </td>
    </tr>
    <tr>
    <td>2015</td>
    <td>$0.08</td>
    <td>
    </td>
    </tr>
    </table>
    <p>What's not clear in this table is that after 2007, <strong>all the big advances in FLOPS came from gaming video cards</strong> designed for high speed real time 3D rendering, and as an incredibly beneficial side effect, they also turn out to be <a href="https://blogs.nvidia.com/blog/2016/01/12/accelerating-ai-artificial-intelligence-gpus/">crazily fast at machine learning tasks</a>.</p>
    <blockquote>
    <p>The Google Brain project had just achieved amazing results — it learned to recognize cats and people by watching movies on YouTube. But it required 2,000 CPUs in servers powered and cooled in one of Google’s giant data centers. Few have computers of this scale. Enter NVIDIA and the GPU. Bryan Catanzaro in NVIDIA Research teamed with Andrew Ng’s team at Stanford to use GPUs for deep learning. As it turned out, 12 NVIDIA GPUs could deliver the deep-learning performance of 2,000 CPUs.</p>
    </blockquote>
    <p>Let's consider a related case of highly parallel computation. How much faster is a GPU at <a href="http://blog.codinghorror.com/speed-hashing/">password hashing</a>?</p>
    <table cellpadding="2" cellspacing="2" style="width:300px">
    <tr>
    <td>Radeon 7970</td>
    <td align="right">8213.6 M c/s</td>
    </tr>
    <tr>
    <td>6-core AMD CPU</td>
    <td align="right">52.9 M c/s</td>
    </tr>
    </table>
    <p>Only <strong>155 times faster</strong> right out of the gate. No big deal. On top of that, CPU performance has largely stalled in the last decade. While more and more cores are placed on each die, which is great when the problems are parallelizable – as they definitely are in this case – the actual performance improvement of any individual core over the last 5 to 10 years is rather modest.</p>
    <p><strong>But GPUs are still doubling in performance every few years</strong>. Consider password hash cracking expressed in the rate of <a href="http://www.crackingservice.com/?q=node/20">hashes per second</a>:</p>
    <table style="width:320px">
    <tr>
    <td>GTX 295</td>
    <td>2009</td>
    <td>25k</td>
    </tr>
    <tr>
    <td>GTX 690</td>
    <td>2012</td>
    <td>54k</td>
    </tr>
    <tr>
    <td>GTX 780 Ti</td>
    <td>2013</td>
    <td>100k</td>
    </tr>
    <tr>
    <td>GTX 980 Ti</td>
    <td>2015</td>
    <td>240k</td>
    </tr>
    </table>
    <p>The latter video card is the one in my machine right now. It's likely the next major revision from Nvidia, due later this year, will <a href="http://wccftech.com/nvidia-pascal-gpu-gtc-2015/">double these rates again</a>.</p>
    <p>(While I'm at it, I'd like to emphasize how much it sucks to be an 8 character password in today's world. <strong>If your password is only 8 characters, that's perilously close to no password at all.</strong> That's also why why <a href="http://blog.codinghorror.com/your-password-is-too-damn-short/">your password is (probably) too damn short</a>. In fact, we just raised the <em>minimum</em> allowed password length on <a href="http://www.discourse.org">Discourse</a> to 10 characters, because annoying password complexity rules are much less effective in reality than <a href="http://arstechnica.com/security/2013/06/password-complexity-rules-more-annoying-less-effective-than-length-ones/">simply requiring longer passwords</a>.)</p>
    <p><a href="https://www.tastehit.com/blog/google-deepmind-alphago-how-it-works/">Distributed AlphaGo</a> used 1202 CPUs and <strong>176 GPUs</strong>. While that doesn't sound like much, consider that as we've seen, each GPU can be up to 150 times faster at processing these kinds of highly parallel datasets — so those 176 GPUs were the equivalent of adding ~26,400 CPUs to the task. Or more!</p>
    <p>Even if you don't care about video games, they happen to have a profound accidental impact on machine learning improvements. <strong>Every time you see a new video card release, don't think "slightly nicer looking games" think "wow, hash cracking and AI just got 2× faster … again!"</strong></p>
    <p>I'm certainly not making the same mistake I did when looking at Chess in 2006. (And in my defense, I totally did not see the era of GPUs as essential machine learning aids coming, even though I am a gamer.) If AlphaGo was intimidating today, having soundly beaten the best human Go player in the world, it'll be no contest after a few more years of GPUs doubling and redoubling their speeds again.</p>
    <p>AlphaGo, broadly speaking, is the culmination of two very important trends in computing:</p>
    <ol>
    <li>
    <p>Huge increases in parallel processing power driven by consumer GPUs and videogames, which started in 2007. So if you're a gamer, congratulations! You're part of the problem-slash-solution.</p>
    </li>
    <li>
    <p>We're beginning to build sophisticated (and combined) algorithmic approaches for entirely new problem spaces that are far too vast to even begin being solved by brute force methods alone. And these approaches clearly work, insofar as they mastered one of the hardest games in the world, one that many thought humans would never be defeated in.</p>
    </li>
    </ol>
    <p>Great. <a href="http://www.newyorker.com/tech/elements/in-the-age-of-google-deepmind-do-the-young-go-prodigies-of-asia-have-a-future">Another game ruined forever by computers</a>. Jerks.</p>
    <p>Based on our experience with Chess, and now Go, we know that computers will continue to beat us at virtually every game we play, in the same way that dolphins will always swim faster than we do. But what if that very same human mind was capable of not only building the dolphin, but continually refining it until they arrived at the <a href="http://jacquesmattheij.com/another-way-of-looking-at-lee-sedol-vs-alphago">world's fastest minnow</a>? Where Deep Blue was the more or less inevitable end result of brute force computation, AlphaGo is the beginning of a whole new era of sophisticated problem solving against far more enormous problems. <strong>AlphaGo's victory is not a defeat of the human mind, but its greatest triumph.</strong></p>
    <p>(If you'd like to learn more about the powerful intersection of sophisticated machine learning algorithms and your GPU, read <a href="https://www.tastehit.com/blog/google-deepmind-alphago-how-it-works/">this excellent summary of AlphaGo</a> and then <a href="https://github.com/kuz/DeepMind-Atari-Deep-Q-Learner">download the DeepMind Atari learner</a> and try it yourself.)</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com" rel="nofollow">Find a better job the Stack Overflow way</a> - what you need when you need it, no spam, and no scams.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-03-25T22:29:41.000Z</pubDate>
    <guid>https://blog.codinghorror.com/thanks-for-ruining-another-game-forever-computers/</guid>
    </item>
    <item>
    <title>We Hire the Best, Just Like Everyone Else</title>
    <link>https://blog.codinghorror.com/we-hire-the-best-just-like-everyone-else/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>One of the most common pieces of advice you'll get as a startup is this:</p>
    <blockquote>
    <p><strong>Only hire the best.</strong> The quality of the people that work at your company will be one of the biggest factors in your success – or failure.</p>
    </blockquote>
    <p>I've heard this advice over and over and over at startup events, to the point that I got a little sick of hearing it. It's not wrong. Putting aside the fact that every single other startup in the world who heard this same advice before you is already out there frantically doing everything they can to hire all the best people out from under you and everyone else, it is superficially true. A company staffed by a bunch of people who don't care about their work and aren't good at their jobs isn't exactly poised for success. But in a room full of people giving advice to startups, nobody wants to talk about the elephant in that room:</p>
    <blockquote>
    <p>It doesn't matter how good the people are at your company when you happen to be working on the wrong problem, at the wrong time, using the wrong approach.</p>
    </blockquote>
    <p>Most startups, statistically speaking, <a href="http://fortune.com/2014/09/25/why-startups-fail-according-to-their-founders/">are going to fail</a>.</p>
    <p><a href="https://www.cbinsights.com/blog/startup-failure-post-mortem/"><img alt="https://blog.codinghorror.com/content/images/2016/03/top-20-reasons-startups-fail.png" alt=""></a></p>
    <p>And they will fail regardless of whether they hired "the best" due to circumstances largely beyond their control. So in that context does maximizing for the best possible hires really make sense?</p>
    <p>Given the risks, I think maybe "hire the nuttiest risk junkie adrenaline addicted has-ideas-so-crazy-they-will-never-work people you can find" might actually be more practical startup advice. (Actually, now that I think about it, if that describes you, and you have serious Linux, Ruby, and JavaScript chops, perhaps you should email me.)</p>
    <blockquote class="twitter-tweet" data-lang="en">
    <p lang="en" dir="ltr">I told that person the same thing I tell all prospective job candidates: "come with me if you want to live"</p>— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/status/602375505694720000">May 24, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>Okay, the goal is to increase your <em>chance</em> of success, <s>however small it may be</s>, therefore you should strive to hire the best. Seems reasonable, even noble in its way. But this pursuit of the best unfortunately comes with a serious dark side. Can anyone even tell me what "best" is? By what metrics? Judged by which results? How do we measure this? Who among us is suitable to judge others as the best at … what, exactly? Best is an extreme. Not pretty good, not very good, not excellent, but aiming for the crème de la crème, <a href="http://www.joelonsoftware.com/articles/HighNotes.html">the top 1% in the industry</a>.</p>
    <blockquote>
    <p>The real trouble with using a lot of mediocre programmers instead of a couple of good ones is that no matter how long they work, they never produce something as good as what the great programmers can produce.</p>
    </blockquote>
    <p>Pursuit of this extreme means <strong>hiring anyone less than the best becomes unacceptable, even harmful</strong>:</p>
    <blockquote>
    <p>In the Macintosh Division, we had a saying, “A players hire A players; B players hire C players” – meaning that great people hire great people. On the other hand, mediocre people hire candidates who are not as good as they are, so they can feel superior to them. (If you start down this slippery slope, you’ll soon end up with Z players; this is called The Bozo Explosion. It is followed by The Layoff.) — <a href="http://guykawasaki.com/the_art_of_recr-2/">Guy Kawasaki</a></p>
    </blockquote>
    <!-- -->
    <blockquote>
    <p>There is an opportunity cost to keeping someone when you could do better. At a startup, that opportunity cost may be the difference between success and failure. Do you give less than full effort to make your enterprise a success? As an entrepreneur, you sweat blood to succeed. Shouldn’t you have a team that performs like you do? Every person you hire who is not a top player is like having a leak in the hull. Eventually you will sink. — <a href="http://venturebeat.com/2013/02/06/why-hiring-b-players-will-kill-your-startup/">Jon Soberg</a></p>
    </blockquote>
    <!-- -->
    <blockquote>
    <p>Why am I so hardnosed about this? It’s because it is much, <em>much</em> better to reject a good candidate than to accept a bad candidate. A bad candidate will cost a lot of money and effort and waste other people’s time fixing all their bugs. Firing someone you hired by mistake can take months and be nightmarishly difficult, especially if they decide to be litigious about it. In some situations it may be completely impossible to fire anyone. Bad employees demoralize the good employees. And they might be bad programmers but really nice people or maybe they <em>really need this job</em>, so you can’t bear to fire them, or you can’t fire them without pissing everybody off, or whatever. It’s just a bad scene.</p>
    <p>On the other hand, if you reject a good candidate, I mean, I guess in some existential sense an injustice has been done, but, hey, if they’re so smart, don’t worry, they’ll get <em>lots</em> of good job offers. Don’t be afraid that you’re going to reject too many people and you won’t be able to find anyone to hire. During the interview, it’s not your problem. Of course, it’s important to seek out good candidates. But once you’re actually interviewing someone, pretend that you’ve got 900 more people lined up outside the door. Don’t lower your standards no matter how hard it seems to find those great candidates. — <a href="http://www.joelonsoftware.com/articles/GuerrillaInterviewing3.html">Joel Spolsky</a></p>
    </blockquote>
    <p>I don't mean to be critical of anyone I've quoted. I love Joel, we founded Stack Overflow together, and his advice about interviewing and hiring <a href="http://www.amazon.com/Smart-Gets-Things-Done-Technical/dp/1590598385/?tag=codihorr-20">remains some of the best in the industry</a>. It's hardly unique to express these sort of opinions in the software and startup field. I could have cited two dozen different articles and treatises about hiring that say the exact same thing: aim high and set out to hire the best, or <em>don't bother</em>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/03/How-do-you-avoid-a-bad-hire.jpeg" alt=""></p>
    <p>This risk of hiring not-the-best is so severe, so existential a crisis to the very survival of your company or startup, the hiring process has to become highly selective, even arduous. <strong>It is better to reject a good applicant <em>every single time</em> than accidentally accept one single mediocre applicant.</strong> If the interview process produces literally anything other than unequivocal "Oh my God, this person is unbelievably talented, we have to hire them", from every single person they interviewed with, right down the line, then it's an automatic NO HIRE. Every time.</p>
    <p>This level of strictness always made me uncomfortable. I'm not going to lie, it starts with my own selfishness. I'm pretty sure I wouldn't get hired at big, famous companies with legendarily difficult technical interview processes because, you know, <em>they only hire the best</em>. I don't think I am one of the best. More like <a href="http://blog.codinghorror.com/who-needs-talent-when-you-have-intensity/">cranky, tenacious, and outspoken</a>, to the point that I wake up most days not even wanting to work with myself.</p>
    <p>If your hiring attitude is that it's better to be possibly wrong a hundred times so you can be absolutely right one time, you're going to be primed to throw away a lot of candidates on pretty thin evidence.</p>
    <blockquote class="twitter-tweet" data-lang="en">
    <p lang="en" dir="ltr">Before cofounding GitHub I applied for an engineering job at Yahoo and didn’t get it. Don’t let other people discourage you.</p>— Chris Wanstrath (@defunkt) <a href="https://twitter.com/defunkt/status/469607846527520768">May 22, 2014</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <blockquote class="twitter-tweet" data-lang="en">
    <p lang="en" dir="ltr">I've been twitter following the careers of people we interviewed but passed on at my last gig.<br><br>Turns out we were almost always wrong.</p>— Trek Glowacki (@trek) <a href="https://twitter.com/trek/status/692116840940716032">January 26, 2016</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>Perhaps worst of all, if the interview process is predicated on zero doubt, total confidence … maybe this candidate doesn't feel right because they don't look like you, dress like you, think like you, speak like you, or come from a similar background as you? Are you <strong>accidentally maximizing for hidden bias?</strong></p>
    <p>One of the best programmers I ever worked with was Susan Warren, an ex-Microsoft engineer who taught me about the <a href="https://web.archive.org/web/20051101203600/http://weblogs.asp.net/swarren/archive/2004/04/26/120366.aspx">People Like Us problem</a>, way back in 2004:</p>
    <blockquote>
    <p>I think there is a real issue around diversity in technology (and most other places in life).  I tend to think of it as the PLU problem.  Folk (including MVPs) tend to connect best with folks most like them ("People Like Us").  In this case, male MVPs pick other men to become MVPs.  It's just human nature.</p>
    <p>As one reply notes, diversity is good.  I'd go as far as to say it's awesome, amazing, priceless.  But it's hard to get to -- the classic chicken and egg problem -- if you rely on your natural tendencies alone.  In that case, if you want more female MVPs to be invited you need more female MVPs.  If you want more Asian-American MVPs to be invited you need more Asian-American MVPs, etc.  And the (cheap) way to break a new group in is via quotas.</p>
    <p>IMO, building diversity via quotas is bad because they are unfair.  Educating folks on why diversity is awesome and how to build it is the right way to go, but also far more costly.</p>
    </blockquote>
    <p>Susan was (and is) amazing. I learned so much working under her, and a big part of what made her awesome was that she was very much Not Like Me. But how could I have appreciated that before meeting her? The fact is that as human beings, we tend to prefer what's comfortable, and what's most comfortable of all is … well, People Like Us. The effect can be shocking because it's so subtle, so unconscious – and yet, surprisingly strong:</p>
    <ul>
    <li>
    <p>Baseball cards held by a black hand consistently sold for <a href="https://www.washingtonpost.com/news/wonk/wp/2015/12/11/whites-earn-more-than-blacks-even-on-ebay/">twenty percent less</a> than those held by a white hand.</p>
    </li>
    <li>
    <p>Using screens to hide the identity of auditioning musicians increased women's probability of advancing from preliminary orchestra auditions <a href="http://www.nber.org/papers/w5903">by fifty percent</a>.</p>
    </li>
    <li>
    <p>Denver police officers and community members were shown rapidly displayed photos of black and white men, some holding guns, some holding harmless objects like wallets, and asked to press either the "Shoot" or "Don't Shoot" button as fast as they could for each image. Both the police and community members were <a href="http://www.motherjones.com/politics/2014/11/science-of-racism-prejudice">three times more likely to shoot black men</a>.</p>
    </li>
    </ul>
    <p>It's not intentional, it's never intentional. That's the problem. I think our industry needs to shed this old idea that it's OK, even <em>encouraged</em> to turn away technical candidates for anything less than absolute 100% confidence at every step of the interview process. Because when you do, <strong>you are accidentally optimizing for implicit bias</strong>. Even as a white guy who probably fulfills every stereotype you can think of about programmers, and who is in fact <a href="https://twitter.com/codinghorror/status/644616067847880705">wearing an "I Rock at Basic" t-shirt</a> while writing this very blog post*, that's what has always bothered me about it, more than the strictness. If you care at all about diversity in programming and tech, on any level, this hiring approach is not doing anyone any favors, and hasn't been. For years.</p>
    <p>I know what you're thinking.</p>
    <blockquote>
    <p>Fine, Jeff, if you're so smart, and "hiring the best" isn't the right strategy for startups, and maybe even harmful to our field as a whole, what <em>should</em> be doing?</p>
    </blockquote>
    <p>Well, I don't know, exactly. I may be the wrong person to ask because <a href="http://firstround.com/review/Heres-Why-Youre-Not-Hiring-the-Best-and-the-Brightest/">I'm also a big believer in <em>geographic</em> diversity on top of everything else</a>. Here's what the composition of the current Discourse team looks like:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/03/discourse-team-timezones.png" alt=""></p>
    <p>I would argue, quite strongly and at some length, that if you want better diversity in the field, perhaps a good starting point is <strong>not demanding that all your employees live within a tiny 30 mile radius of San Francisco or Palo Alto.</strong> There's a whole wide world of Internet out there, full of amazing programmers at every level of talent and ability. Maybe broaden your horizons a little, even stretch said horizons outside the United States, <a href="https://ma.tt/2014/12/how-paul-graham-is-wrong/">if you can imagine such a thing</a>.</p>
    <p>I know hiring people is difficult, even with the very best of intentions and under ideal conditions, so I don't mean to trivialize the challenge. I've recommended plenty of things in the past, a smorgasboard of approaches to try or leave on the table as you see fit:</p>
    <ul>
    <li><a href="http://blog.codinghorror.com/on-interviewing-programmers/">On Interviewing Programmers</a></li>
    <li><a href="http://blog.codinghorror.com/the-nonprogramming-programmer/">The Non-Programming Programmer</a></li>
    <li><a href="http://blog.codinghorror.com/how-to-hire-a-programmer/">How to Hire a Programmer</a></li>
    <li><a href="http://blog.codinghorror.com/the-years-of-experience-myth/">The years of experience myth</a></li>
    </ul>
    <p>… but the one thing I keep coming back to, that I believe has enduring value in almost all situations, is <a href="https://hbr.org/2014/04/the-ceo-of-automattic-on-holding-auditions-to-build-a-strong-team">the audition project</a>:</p>
    <blockquote>
    <p>The most significant shift we’ve made is requiring every final candidate to work with us for three to eight weeks on a contract basis. Candidates do real tasks alongside the people they would actually be working with if they had the job. They can work at night or on weekends, so they don’t have to leave their current jobs; most spend 10 to 20 hours a week working with Automattic, although that’s flexible. (Some people take a week’s vacation in order to focus on the tryout, which is another viable option.) The goal is not to have them finish a product or do a set amount of work; it’s to allow us to quickly and efficiently assess whether this would be a mutually beneficial relationship. They can size up Automattic while we evaluate them.</p>
    </blockquote>
    <p>What I like about audition projects:</p>
    <ul>
    <li>It's real, practical work.</li>
    <li>They get paid. (Ask yourself who gets "paid" for a series of intensive interviews that lasts multiple days? Certainly not the candidate.)</li>
    <li>It's healthy to structure your work so that small projects like this can be taken on by outsiders. If you can't onboard a potential hire, you probably can't onboard a new hire very well either.</li>
    <li>Interviews, no matter how much effort you put into them, are so hit and miss that the only way to figure out if someone is <em>really</em> going to work in a given position is to <strong>actually work with them.</strong>
    </li>
    </ul>
    <p>Every company says they want to hire the best. Anyone who tells you they know how to do that is either lying to you or to themselves. But I can tell you this: the companies that really <em>do</em> hire the best people in the world certainly don't accomplish that by hiring from the same tired playbook every other company in Silicon Valley uses.</p>
    <p>Try different approaches. Expand your horizons. Look beyond People Like Us and imagine what the world of programming could look like in 10, 20 or even 50 years – and help us move there by hiring to make it so.</p>
    <p>* And for the record, <a href="http://blog.codinghorror.com/everything-i-needed-to-know-about-programming-i-learned-from-basic/">I really do rock at BASIC</a>.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Building out your tech team? <a href="http://careers.stackoverflow.com/products" rel="nofollow">Stack Overflow Careers</a> helps you hire from the largest community for programmers on the planet. We built our site with developers like you in mind.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-03-04T12:17:58.000Z</pubDate>
    <guid>https://blog.codinghorror.com/we-hire-the-best-just-like-everyone-else/</guid>
    </item>
    <item>
    <title>Is Your Computer Stable?</title>
    <link>https://blog.codinghorror.com/is-your-computer-stable/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Over the last twenty years, I've probably built around a hundred computers. It's not very difficult, and in fact, it's gotten a whole lot easier over the years as computers become more highly integrated. Consider what it would take to build something very modern like <a href="http://blog.codinghorror.com/the-scooter-computer/">the Scooter Computer</a>:</p>
    <ol>
    <li>Apply a dab of thermal compound to top of case.</li>
    <li>Place motherboard in case.</li>
    <li>Screw motherboard into case.</li>
    <li>Insert SSD stick.</li>
    <li>Insert RAM stick.</li>
    <li>Screw case closed.</li>
    <li>Plug in external power.</li>
    <li>Boot.</li>
    </ol>
    <p>Bam done.</p>
    <iframe width="420" height="315" src="https://www.youtube.com/embed/PKf1I759PPQ" frameborder="0" allowfullscreen></iframe>
    <p>It's stupid easy. My six year old son and I have built Lego kits that were way more complex than this. Even a traditional desktop build is only a few more steps: insert CPU, install heatsink, route cables. And a server build is merely a few additional steps on top of that, maybe with some 1U or 2U space constraints. Scooter, desktop, or server, if you've built one computer, you've basically built them all.</p>
    <p>Everyone breathes a sigh of relief when their newly built computer boots up for the first time, no matter how many times they've done it before. But booting is only the beginning of the story. Yeah, it boots, great. Color me unimpressed. What we really need to know is whether <strong>that computer is stable</strong>.</p>
    <p>Although commodity computer parts <a href="https://www.pugetsystems.com/labs/articles/Most-Reliable-Hardware-of-2015-749/">are more reliable every year</a>, and vendors test their parts plenty before they ship them, there's no guarantee all those parts will work reliably <em>together</em>, in your particular environment, under your particular workload. And there's always the possibility, however slim, of getting very, very unlucky with subtly broken components.</p>
    <p>Because we're rational scientists, we test stuff in our native environment, and collect data to <strong>prove our computer is stable</strong>.  Right? So after we boot, we test.</p>
    <h5 id="memory">Memory</h5>
    <p>I like to start with memory tests, since those require bootable media and work the same on all x86 computers, even before you have an operating system. <a href="https://en.wikipedia.org/wiki/Memtest86">Memtest86</a> is the granddaddy of all memory testers. I'm not totally clear what caused the split between that and Memtest86+, but all of them work similarly. The one from passmark seems to be most up to date, so <a href="http://www.memtest86.com/download.htm">that's what I recommend</a>.</p>
    <p>Download the version of your choice, write it to a bootable USB drive, plug it into your newly built computer, boot and let it work its magic. It's all automatic. Just boot it up and watch it go.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/memtest86.png" alt=""></p>
    <p>(If your computer supports UEFI boot you'll get <a href="http://www.memtest86.com/support/ver_history.htm">the newest version 6.x</a>, otherwise you'll see version 4.2 as above.)</p>
    <p>I recommend <strong>one complete pass of memtest86</strong> at minimum, but if you want to be extra careful, let it run overnight. Also, if you have a lot of memory, memtest can take a while! For our servers with 128GB it took about three hours, and I expect that time scales linearly with the amount of memory.</p>
    <p>The "Pass" percentage at the top should get to 100% and the "Pass" count in the table should be greater than one. If you get any errors at all, anything whatsoever other than a clean 100% pass, <em>your computer is not stable</em>. Time to start removing RAM sticks and figure out which one is bad.</p>
    <h5 id="os">OS</h5>
    <p>All subsequent tests will require an operating system, and one basic iron clad test of stability for any computer is <strong>whether it can install an operating system</strong>. Pick your free OS of choice, and begin a default install. I recommend <a href="http://www.ubuntu.com/download/server">Ubuntu Server LTS x64</a> since it assumes less about your video hardware. Download the ISO and write it to a bootable USB drive. Then boot it.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/ubuntu-server-install.png" alt=""></p>
    <p>(Hey look it has a memory test option! How convenient!)</p>
    <ul>
    <li>Be sure you have network connected for the install with DHCP; it makes the install go faster when you don't have to wait for network detection to time out and nag you about the network stuff.</li>
    <li>In general, you'll be pressing <kbd>enter</kbd> a whole lot to accept all the defaults and proceed onward. I know, I know, we're installing Linux, but believe it or not, they've gotten the install bit down by now.</li>
    <li>About all you should be prompted for is the username and password of the default account. I recommend <code>jeff</code> and <code>password</code>, because I am one of the world's preeminent computer security experts.</li>
    <li>If you are installing from USB and get nagged about a missing CD, remove and reinsert the USB drive. No, I don't know why either, but <a href="http://askubuntu.com/questions/593002/fail-to-install-ubuntu-server-14-04-64bit-lts-from-usb-drive">it works</a>.</li>
    </ul>
    <p>If <em>anything</em> weird happens during your Ubuntu Server install that prevents it from finalizing the install and booting into Ubuntu Server … <em>your computer is not stable</em>. I know it doesn't sound like much, but this is a decent holistic test as it exercises the whole system in very repeatable ways.</p>
    <p>We'll need an OS installed for the next tests, anyway. I'm assuming you've installed Ubuntu, but any Linux distribution should work similarly.</p>
    <h5 id="cpu">CPU</h5>
    <p>Next up, let's make sure the brains of the operation are in order: the CPU. To be honest, if you've gotten this far, past the RAM and OS test, the odds of you having a completely broken CPU are fairly low. But we need to be <em>sure</em>, and the best way to do that is to call upon our old friend, Marin Mersenne.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/marin-mersenne.jpg" alt=""></p>
    <blockquote>
    <p>In mathematics, a Mersenne prime is a prime number that is one less than a power of two. That is, it is a prime number that can be written in the form M<sub><i>n</i></sub> = 2<sup><i>n</i></sup> − 1 for some integer <i>n</i>. They are named after Marin Mersenne, a French Minim friar, who studied them in the early 17th century. The first four Mersenne primes are 3, 7, 31, and 127.</p>
    </blockquote>
    <p>I've been using <a href="http://www.mersenne.org/download/">Prime95 and MPrime</a> – tools that attempt to rip through as many giant numbers as fast as possible to determine if they are prime – for the last 15 years. Here's how to download and install <code>mprime</code> on that fresh new Ubuntu Server system you just booted up.</p>
    <pre><code>mkdir mprime
    cd mprime
    wget ftp://mersenne.org/gimps/p95v298b3.linux64.tar.gz
    tar xzvf p95v298b3.linux64.tar.gz
    rm p95v298b3.linux64.tar.gz
    </code></pre>
    <p>(You may need to replace the version number in the above command with the current latest from the <a href="http://www.mersenne.org/download/">mersenne.org download page</a>, but as of this writing, that's the latest. Also, if you prefer an older version without the very heat intensive AVX and AVX2 instructions added in 2011 and 2014 respectively, get <code>mprime266-linux64.tar.gz</code>)</p>
    <p>Now you have a copy of mprime in your user directory. Start it by typing <code>./mprime</code></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/mprime-prompt.png" alt=""></p>
    <p>Just passing through, thanks. Answer <kbd>N</kbd> to the GIMPS prompt.</p>
    <p>Next you'll be prompted for the number of torture test threads to run. They're smart here and always pick an equal number of threads to logical cores, so press <kbd>enter</kbd> to accept that. You want a full CPU test on all cores. Next, select the test type.</p>
    <ol>
    <li>Small FFTs (maximum heat and FPU stress, data fits in L2 cache, RAM not tested much).</li>
    <li>In-place large FFTs (maximum power consumption, some RAM tested).</li>
    <li>Blend (tests some of everything, lots of RAM tested).</li>
    </ol>
    <p>They're not kidding when they say "maximum power consumption", as you're about to learn. Select <kbd>2</kbd>. Then select <kbd>Y</kbd> to begin the torture and watch your CPU squirm in pain.</p>
    <pre><code>Accept the answers above? (Y):
    [Main thread Feb 14 05:48] Starting workers.
    [Worker #2 Feb 14 05:48] Worker starting
    [Worker #3 Feb 14 05:48] Worker starting
    [Worker #3 Feb 14 05:48] Setting affinity to run worker on logical CPU #2
    [Worker #4 Feb 14 05:48] Worker starting
    [Worker #2 Feb 14 05:48] Setting affinity to run worker on logical CPU #3
    [Worker #1 Feb 14 05:48] Worker starting
    [Worker #1 Feb 14 05:48] Setting affinity to run worker on logical CPU #1
    [Worker #4 Feb 14 05:48] Setting affinity to run worker on logical CPU #4
    [Worker #2 Feb 14 05:48] Beginning a continuous self-test on your computer.
    [Worker #4 Feb 14 05:48] Test 1, 44000 Lucas-Lehmer iterations of M7471105 using FMA3 FFT length 384K, Pass1=256, Pass2=1536.
    </code></pre>
    <p>Now's the time to break out your Kill-a-Watt or similar power consumption meter, if you have it, so you can <a href="http://blog.codinghorror.com/why-estimate-when-you-can-measure/">measure the maximum CPU power draw</a>. On most systems, unless you have an absolute beast of a gaming video card installed, the CPU is the single device that will pull the most heat and power in your system. This is full tilt, every core of your CPU burning as many cycles as possible.</p>
    <p>I suggest running the <code>i7z</code> utility from another console session so you can monitor core temperatures and speeds while <code>mprime</code> is running its torture test.</p>
    <pre><code>sudo apt-get install i7z
    sudo i7z
    </code></pre>
    <p><strong>Let mprime run overnight in maximum heat torture test mode</strong>. The Mersenne calculations are meticulously checked, so if there are any mistakes the whole process will halt with an error at the console. And if mprime halts, ever … <em>your computer is not stable.</em></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/i7z-status.png" alt=""></p>
    <p><strong>Watch those CPU temperatures!</strong> In addition to absolute CPU temperatures, you'll also want to keep an eye on total heat dissipation in the system. The system fans (if any) should spin up, and the whole system should be kept at reasonable temperatures through this ordeal, or else you're going to have a sick, overheating computer one day.</p>
    <p>The bad news is that it's extremely rare to have any kind of practical, real world workload remotely resembling the stress that Mersenne lays on your CPU. The good news is that if your system can survive the onslaught of Mersenne overnight, it's definitely ready for anything you can conceivably throw at it in the future.</p>
    <h5 id="disk">Disk</h5>
    <p>Disks are probably the easiest items to replace in most systems – and the ones most likely to fail over time. We know the disk can't be totally broken since we just installed an OS on the thing, but let's be sure.</p>
    <p>Start with a <a href="https://en.wikipedia.org/wiki/Badblocks">bad blocks test</a> for the whole drive.</p>
    <pre><code>sudo badblocks -sv /dev/sda
    </code></pre>
    <p>This exercises the full extent of the disk (in safe read only fashion). Needless to say, any errors here should prompt serious concern for that drive.</p>
    <pre><code>Checking blocks 0 to 125034839
    Checking for bad blocks (read-only test): done
    Pass completed, 0 bad blocks found. (0/0/0 errors)
    </code></pre>
    <p>Let's check the <a href="https://help.ubuntu.com/community/Smartmontools">SMART readings</a> for the drive next.</p>
    <pre><code>sudo apt-get install smartmontools
    smartctl -i /dev/sda 
    </code></pre>
    <p>That will let you know if the drive supports SMART. Let's enable it, if so, and see the basic drive stats:</p>
    <pre><code>smartctl -s on /dev/sda
    smartctl -a /dev/sda    
    </code></pre>
    <p>Now we can run some SMART tests. But first check how long the tests on offer will take:</p>
    <pre><code>smartctl -c /dev/sda
    </code></pre>
    <p>Run the <code>long</code> test if you have the time, or the <code>short</code> test if you don't:</p>
    <pre><code>smartctl -t long /dev/sda
    </code></pre>
    <p>It's done asynchronously, so after the time elapses, show the SMART test report and ensure you got a pass:</p>
    <pre><code>smartctl -l selftest /dev/sda 
    === START OF READ SMART DATA SECTION ===
    SMART Self-test log structure revision number 1
    Num  Test_Description    Status                  Remaining  LifeTime(hours)  LBA_of_first_error
    # 1  Extended offline    Completed without error       00%       100         -
    </code></pre>
    <p>Next, run a simple disk benchmark to see if you're getting roughly the performance you expect from the drive or array:</p>
    <pre><code>dd bs=1M count=512 if=/dev/zero of=test conv=fdatasync
    hdparm -Tt /dev/sda
    </code></pre>
    <p>For a system with a basic SSD you should see results at least this good, and perhaps considerably better:</p>
    <pre><code>536870912 bytes (537 MB) copied, 1.52775 s, 351 MB/s
    Timing cached reads:   11434 MB in  2.00 seconds = 5720.61 MB/sec
    Timing buffered disk reads:  760 MB in  3.00 seconds = 253.09 MB/sec
    </code></pre>
    <p>Finally, let's try a more intensive test with <a href="https://en.wikipedia.org/wiki/Bonnie%2B%2B">bonnie++</a>, a disk benchmark:</p>
    <pre><code>sudo apt-get install bonnie++
    bonnie++ -f
    </code></pre>
    <p>We don't care too much about the resulting benchmark numbers here, what we're looking for is to pass without errors. And if you get errors during any of the above … <em>your computer is not stable.</em></p>
    <p>(I think these disk tests are sufficient for general use, particularly if you consider drives easily RAID-able and replaceable as I do. However, if you want to test your drives more exhaustively, a good resource is the <a href="https://forums.freenas.org/index.php?threads/how-to-hard-drive-burn-in-testing.21451/">FreeNAS "how to burn in hard drives" topic</a>.)</p>
    <h5 id="network">Network</h5>
    <p>I don't have a lot of experience with network hardware failure, to be honest. But I do believe in the cult of bandwidth, and that's one thing we can check.</p>
    <p>You'll need two machines for an <a href="https://en.wikipedia.org/wiki/Iperf">iperf</a> test, which makes it more complex. Here's the server, let's say it's at 10.0.0.1:</p>
    <pre><code>sudo apt-get install iperf
    iperf -s
    </code></pre>
    <p>and here's the client, which will connect to the server and record how fast it can transmit data between the two:</p>
    <pre><code>sudo apt-get install iperf
    iperf -c 10.0.0.1
    
    ------------------------------------------------------------
    Client connecting to 10.0.0.1, TCP port 5001
    TCP window size: 23.5 KByte (default)
    ------------------------------------------------------------
    [  3] local 10.0.0.2 port 43220 connected with 10.0.0.1 port 5001
    [ ID] Interval       Transfer     Bandwidth
    [  3]  0.0-10.0 sec  1.09 GBytes    933 Mbits/sec
    </code></pre>
    <p>As a point of reference, you should expect to see roughly <strong>120 megabytes/sec (aka 960 megabits)</strong> of real world throughput on a single gigabit ethernet connection. If you're lucky enough to have a 10 gigabit connection, well, good luck reaching that meteoric 1.2 Gigabyte/sec theoretical throughput maximum.</p>
    <h5 id="videocard">Video Card</h5>
    <p>I'm not covering this, because very few of the computers I build these days need more than the stuff built into the CPU to handle video. Which is getting <a href="http://blog.codinghorror.com/the-2016-htpc-build/">surprisingly decent, at last</a>.</p>
    <p>You're a gamer, right? So you'll probably want to boot into Windows and try something like <a href="http://www.ozone3d.net/benchmarks/fur/">furmark</a>. And you <em>should</em> test, because GPUs – especially gaming GPUs – are rather cutting edge bits of kit and burn through a lot of watts. Monitor temperatures and system heat, too.</p>
    <p>If you have recommendations for gaming class video card stability testing, share them in the comments.</p>
    <h5 id="okmaybeitsstable">OK, <em>Maybe</em> It's Stable</h5>
    <p>This is the regimen I use on the machines I build and touch. And it's worked well for me. I've identified faulty CPUs (once), faulty RAM, faulty disks, and insufficient case airflow early on so that I could deal with them in the lab, before they became liabilities in the field. Doesn't mean they won't fail <em>eventually</em>, but I did all I could to make sure my <s>babies</s> computers can live long and prosper.</p>
    <p>Who knows, with a bit of luck maybe you'll end up like the guy whose <a href="http://arstechnica.com/information-technology/2013/03/epic-uptime-achievement-can-you-beat-16-years/">netware server had <strong>sixteen years</strong> of uptime</a> before it was decommissioned.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/16-years-of-uptime.jpg" alt=""></p>
    <p>These tests are just a starting point. What techniques do you use to ensure the computers you build are stable? How would you improve on these stability tests based on your real world experience?</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] At Stack Overflow, we help developers learn, share, and grow. Whether you’re looking for your next dream job or looking to build out your team, <a href="http://careers.stackoverflow.com" rel="nofollow">we've got your back</a>.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-02-14T06:58:39.000Z</pubDate>
    <guid>https://blog.codinghorror.com/is-your-computer-stable/</guid>
    </item>
    <item>
    <title>The Scooter Computer</title>
    <link>https://blog.codinghorror.com/the-scooter-computer/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>When we initially deployed our <a href="http://blog.codinghorror.com/building-servers-for-fun-and-prof-ok-maybe-just-for-fun/">handbuilt colocated servers</a> for Discourse in 2013, I needed a way to provide an isolated VPN channel in for secure remote access and troubleshooting. Rather than dedicate a whole server to this task, I purchased <a href="http://blog.codinghorror.com/because-everyone-still-needs-a-router/">the inexpensive, open source firmware friendly Asus RT-N16 router</a>, flashed it with the popular TomatoUSB open source firmware, removed the antennas, turned off the WiFi and dropped it off in our colocated rack to let it act as a dedicated VPN access point.</p>
    <a href="http://www.amazon.com/dp/B00387G6R8/?tag=codihorr-20">
    <img alt="Asus RT-N16" title="Asus RT-N16" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b016306b1a243970d-800wi.jpg" width="500" height="414"></a>
    <p>And that box – which was $100 then and around $70 now – worked well enough until now. Although the version of OpenSSL in the 2012 era Tomato firmware we used is not vulnerable to Heartbleed, it's still getting out of date in terms of the encryption it supports and allows. And <a href="http://www.polarcloud.com/tomato">Tomato</a> itself is updated sporadically, chaotically at best.</p>
    <p>Let's face it: <strong>this is just a little box that runs a chopped up version of Linux</strong>, with a bit of specialized wireless hardware and multiple antennas tacked on … that we're not even using. So when it came time to upgrade, we wondered:</p>
    <blockquote>
    <p>Why not just go with a small box that can run a real, full Linux distro? Wouldn't that be simpler and easier to keep up to date?</p>
    </blockquote>
    <p>After doing some research and asking on Twitter, I discovered there are a ton of amazing little Broadwell "mini-PC" boxes <a href="http://www.aliexpress.com/category/70803003/mini-pcs.html">available on AliExpress</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/IMG_2485.JPG" alt=""></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/IMG_2486.JPG" alt=""></p>
    <p>The specs are kind of amazing for the price. I paid <strong>~$350</strong> each for <a href="http://www.aliexpress.com/item/Fanless-i5-Mini-PC-Windows-Barebone-PC-Broadwell-Intell-Core-i5-5200U-2-7GHz-4K-HTPC/32366202925.html">the ones I selected</a>:</p>
    <ul>
    <li>
    <a href="http://ark.intel.com/products/85212/Intel-Core-i5-5200U-Processor-3M-Cache-up-to-2_70-GHz">i5-5200</a> Broadwell 2 core / 4 thread CPU at 2.2 Ghz - 2.7 Ghz</li>
    <li>16GB DDR3 RAM</li>
    <li>128GB M.2 SSD</li>
    <li>Dual gigabit Realtek 8168 ethernet</li>
    <li>front 4 USB 3.0 ports / rear 4 USB 2.0 ports</li>
    <li>Dual HDMI out</li>
    </ul>
    <p>(There's also optical and analog audio connectors on the front, as well as a SD card reader, which I covered with a sticker since we had no need for audio. I also stripped the WiFi out since we didn't need it, but it was included for the price, too.)</p>
    <p>Selecting the <a href="http://ark.intel.com/products/75990/Intel-Core-i5-4258U-Processor-3M-Cache-up-to-2_90-GHz">i5-4258u</a>, 4GB RAM, and 64GB SSD pushes the price down to <strong>$270</strong>. That's still a solid CPU, only a single generation behind Intel's latest and greatest Skylake, and carrying the midrange i5 moniker; it's no pushover. There are also many, many variants of this box from <a href="http://www.aliexpress.com/category/70803003/mini-pcs.html">other AliExpress sellers</a> that have slightly older, cheaper CPUs that are still plenty powerful. You can easily spec a box similar to this one for $200.</p>
    <p>That's not a whole lot more than the $200 you'd pay for a high end router these days, and as Ars Technica notes, <a href="http://arstechnica.com/gadgets/2016/01/numbers-dont-lie-its-time-to-build-your-own-router/">the average x86 box is radically faster</a>.</p>
    <p><a href="http://arstechnica.com/gadgets/2016/01/numbers-dont-lie-its-time-to-build-your-own-router/"><img alt="https://blog.codinghorror.com/content/images/2016/02/homebrew-vs-router-perf-ars.png" alt=""></a></p>
    <p>Note that the above graphs, "homebrew" means an <a href="http://ark.intel.com/products/71995/Intel-Celeron-Processor-1037U-2M-Cache-1_80-GHz">old, 1.8 Ghz Ivy Bridge dual core chip</a>, 3 generations behind current CPUs, that doesn't even merit the i3 or i5 designation, and has no hyperthreading. Do bear that in mind as you keep reading.</p>
    <p><strong>Meet The Scooter Computer</strong></p>
    <p>This box may be small, and only 15 watt TDP, but it is mighty. I spun up a new Digital Ocean droplet and ran a quick benchmark:</p>
    <pre><code>sudo apt-get install sysbench
    sysbench --test=cpu --cpu-max-prime=20000 run
    </code></pre>
    <table>
    <tr>
    <td>Tie Shuttle 6
    <pre>total time:           28.0707s
    total num events:     10000
    total time take:      28.0629
    per-request stats:
         min:             2.77ms
         avg:             2.81ms
         max:             3.99ms
         ~95 percentile:  3.00ms</pre>
    </td>
    <td>Digital Ocean Droplet
    <pre>total time:          35.9541s
    total num events:    10000
    total time taken:    35.9492
    per-request stats:
         min:             3.50ms
         avg:             3.59ms
         max:             13.31ms
         ~95 percentile:  3.79ms</pre>
    </td>
    </tr>
    </table>
    <p>Results will of course <a href="https://wiki.mikejung.biz/Sysbench#Cloud_.2F_VPS_CPU_Performance_Test_Results_with_Sysbench">vary by cloud provider</a>, but rest assured this box is just as fast as and possibly even faster than the average cloud box you could spin up right now. Of course it is "only" 2 cores / 4 threads, but the more cores you need, the slower they tend to go because of the overall TDP limits of the core package.</p>
    <p>One thing that's not immediately obvious in photos is that this thing is indeed small but <em>hefty</em>, like holding a solid chunk of aluminum in your hand. That's because the box is passively cooled — the whole case is the heatsink, as the CPU on the bottom of the motherboard mates with the finned top of the case.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/tie-shuttle-top-case.jpg" alt=""></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/scooter-computer-internals.jpg" alt=""></p>
    <p>Opening this box you realize just how simple things are inside it; it's barely more than a highly integrated motherboard strapped to an aluminum block. This isn't a Steve Jobs truck, a Mac Mini car, or even a motorcycle. <strong>This is <a href="http://blog.codinghorror.com/geek-transportation-systems/">a scooter</a>.</strong></p>
    <blockquote>
    <p>Scooters are very primitive machines; it is both their greatest strength and their greatest weakness. It's arguably the simplest personal wheeled vehicle there is. In these short distance scenarios, scooters tend to win over, say, bicycles because there's less setup and teardown necessary – you don't have to lock up a scooter, nor do you have to wear a helmet. Just hop on and go! You get almost all the benefits of gravity and wheeled efficiency with a minimum of fuss and maintenance. And yes, it's fun, too!</p>
    </blockquote>
    <p>Passively cooled computers are paragons of simplicity and reliable consumer electronics, but passively cooling a "real" x86 PC is the holy grail. To get serious performance you usually need to feed the CPU at least 10 to 20 watts – and dissipating that kind of energy with zero fans and ambient airflow alone is not trivial. Let's see how our scooter does overnight running <a href="http://www.mersenne.org/download/">Mersenne Primes</a>, which is the heaviest CPU load possible.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/CZ30-0eWYAAZniT.jpg" alt=""></p>
    <p>You can place your hand on the top of the box during this, but it's uncomfortable. And the whole box radiates heat, not just the top. Overall it was completely stable for me during overnight mprime torture testing with the 15w TDP CPU I chose, and I am comfortable with these boxes sitting in our rack in the datacenter, even under extended full load. However, I would be <em>very</em> careful putting a 28w TDP CPU in this box unless you are absolutely sure it won't be at full load very often. Passive cooling is hard.</p>
    <p>Power consumption, as measured by my Kill-a-Watt, ranged from <strong>7 watts</strong> at the Ubuntu Server 14.04 text login screen, to 8-10 watts at an idle Ubuntu 15.10 GUI login screen (the default OS it arrived with), to 14-18 watts in memory testing, to <strong>26 watts in mprime</strong>.</p>
    <p>I should also mention that even under extreme mprime load, both CPUs stayed at 2.5 Ghz indefinitely, which is unusual in my experience. To achieve 2.7 Ghz you need a single threaded load. Considering the base clock of the i5-5200u is 2.2 Ghz, that's quite good! Many 4-6-8 core CPUs drop all the way down to their base clock pretty fast once they have significant load, which makes the "turbo" moniker a bit of a lie.</p>
    <p>(By the way, don't bother using burnP6, it generates way too little heat compared to mprime, which is an absolute <em>monster</em>. If your CPU can survive an overnight run of mprime, I can assure you it's ready for just about anything the real world can throw at it, ever.)</p>
    <p><strong>Disk</strong></p>
    <p>The machine has M.2 slots for two drives, as well as a SATA port and power cable (not pictured, but was included in the box) if you want to mate a 2.5" drive with the drive mounting holes on the bottom of the case. So if you prefer a mirrored two drive RAID array here for reliability, or a giant honking 2TB 2.5" HDD slapped in there for media storage, all of that is possible!</p>
    <p>Be careful, as the internal M.2 slots are <strong>2242</strong>, meaning <a href="http://rog.asus.com/313352014/labels/guides/buying-an-m-2-ssd-how-to-tell-which-is-which/">42mm length</a>. There seem to be mostly (only?) lower cost SSD drives available in this size for whatever reason.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/m-2-length.jpg" alt=""></p>
    <p>Don't worry, though, the bundled 128GB <a href="http://mydigitalssd.com/msata-ssd.php">Phison S9</a> M.2 SSD has <a href="http://www.servethehome.com/mydigitalssd-bp4-128gb-msata-benchmarks-review/">decent performance</a>, roughly equal to a good SSD from a few years ago:</p>
    <pre><code>dd bs=1M count=512 if=/dev/zero of=test conv=fdatasync
    hdparm -Tt /dev/sda
    
    536870912 bytes (537 MB) copied, 1.52775 s, 351 MB/s
    Timing cached reads:   11434 MB in  2.00 seconds = 5720.61 MB/sec
    Timing buffered disk reads:  760 MB in  3.00 seconds = 253.09 MB/sec
    </code></pre>
    <p>That's respectable SSD performance and won't hold you back in most use cases, but it's not a barn-burning disk subsystem, either. If you want to upgrade, I recommend the <a href="http://www.amazon.com/dp/B00TGIVVKU/?tag=codihorr-20">Samsung 850 EVO</a> which comes in the required form factor.</p>
    <p>Of course the Samsung 850 Pro would fit fine as a traditional 2.5" SATA drive mounted to the case cover, and would perform like this:</p>
    <pre><code>536870912 bytes (537 MB) copied, 1.20895 s, 444 MB/s
    Timing cached reads:   38608 MB in  2.00 seconds = 19330.61 MB/sec
    Timing buffered disk reads: 1584 MB in  3.00 seconds = 527.92 MB/sec
    </code></pre>
    <p><strong>RAM</strong></p>
    <p>Intel limits these Broadwell U class CPUs to 16GB RAM total, so maxing the box out is only going to set you back around $70. Still, that's a significant percentage of the ~$350 total cost, and you may not need that much RAM for what you have in mind.</p>
    <p>However, do be careful that you get dual-channel RAM for lower RAM configurations; you don't want a single 4GB DIMM, you want two 2GB DIMMs. They ship from the vendor with a single DIMM, so beware. It may not matter <a href="http://www.anandtech.com/show/8672/lenovo-thinkstation-p300-workstation-review-haswell-plus-quadro/6">depending on the task</a>, as noted by AnandTech, but our boxes will be used for OpenSSL, and memory is cheap, so why not?</p>
    <p><strong>The Versatile Scooter</strong></p>
    <p>When I began looking at this, I was shocked to discover just how low-end the x86 CPUs are in a lot of "dedicated" devices, such as the official <a href="https://www.pfsense.org/products/">pfSense hardware</a>:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/pfsense-hardware-lineup.png" alt=""></p>
    <p>Sure, 2.4 Ghz and 8 cores on that C2758 sounds reasonable – until you realize those are old Intel Bay Trail Atom cores. Even the <em>current</em> Cherry Trail Atom cores aren't so hot. Furthermore, those are probably the maximum "turbo" frequencies being quoted, which are unlikely to be sustained under any kind of real multi-core load. Also, did I mention this is being sold as a $1,400 device? Except for the lack of more than 2 dedicated gigabit ethernet ports, I'd put our scooter computer up against that C2758 any day of the week. And you know what? It'd win.</p>
    <p>I think this logic applies to a lot of dedicated hardware these days — routers, switches, firewalls, and so on. <strong>You're often better off building up a modern high power, low TDP x86 box and slapping a regular Linux distro on there.</strong></p>
    <p>You can even kinda-sorta fit six of them in a 1U rack space.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/02/shuttles-vs-1u.jpg" alt=""></p>
    <p>(Well, except for the power bricks and cables. Vertical mounting on a 1U shelf works out a bit better, and each conveniently came with a stand for vertical operation.)</p>
    <p>Now that I've worked with these boxes, I've become rather enamored of the Scooter Computer concept. Wherever we were thinking that we had to run either:</p>
    <ul>
    <li>
    <p>A virtual machine on big iron for some small but important utility function in our rack.</p>
    </li>
    <li>
    <p>Dedicated, purpose built hardware for networking, firewall, or switching with a custom OS.</p>
    </li>
    </ul>
    <p>… we can now take advantage of cheap, reliable, flexible, totally solid state commodity x86 hardware that's spread across many machines and running standard Linux distributions, like all the rest of our 1U servers.</p>
    <table>
    <tr><td class="welovecodinghorror">[advertisement] At Stack Overflow, we put developers first. We already help you find answers to your tough coding questions; now let us help you <a href="http://careers.stackoverflow.com" rel="nofollow">find your next job</a>.</td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-02-03T08:52:36.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-scooter-computer/</guid>
    </item>
    <item>
    <title>Zopfli Optimization: Literally Free Bandwidth</title>
    <link>https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>In 2007 I wrote about <a href="http://blog.codinghorror.com/getting-the-most-out-of-png/">using PNGout to produce amazingly small PNG images</a>. I still refer to this topic frequently, as seven years later, the average PNG I encounter on the Internet is very unlikely to be optimized.</p>
    <p>For example, consider <a href="http://pbfcomics.com/274/">this recent Perry Bible Fellowship cartoon</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/01/PBF274-Adam_2-0.png" alt=""></p>
    <p>Saved directly from the PBF website, this comic is a 800 × 1412, 32-bit color PNG image of 671,012 bytes. Let's save it in a few different formats to get an idea of how much space this image could take up:</p>
    <table style="width:320px">
    <tr>
    <td>BMP</td>
    <td>24-bit</td>
    <td>3,388,854</td>
    </tr>
    <tr>
    <td>BMP</td>
    <td>8-bit</td>
    <td>1,130,678</td>
    </tr>
    <tr>
    <td>GIF</td>
    <td>8-bit, no dither</td>
    <td>147,290</td>
    </tr>
    <tr>
    <td>GIF</td>
    <td>8-bit, max dither</td>
    <td>283,162</td>
    </tr>
    <tr>
    <td>PNG</td>
    <td>32-bit</td>
    <td>671,012</td>
    </tr>
    </table>
    <p>PNG is a win because like GIF, it has built-in compression, but <em>unlike</em> GIF, you aren't limited to cruddy 8-bit, 256 color images. Now what happens when we apply PNGout to this image?</p>
    <table style="width:320px">
    <tr>
    <td>Default PNG</td>
    <td>671,012</td>
    <td></td>
    </tr>
    <tr>
    <td>PNGout</td>
    <td>623,859</td>
    <td>7%</td>
    </tr>
    </table>
    <p>Take any random PNG of unknown provenance, apply PNGout, and you're likely to see around a 10% file size savings, possibly a lot more. Remember, this is <em>lossless</em> compression. The output is identical. It's a smaller file to send over the wire, and the smaller the file, the faster the decompression. This is <strong>free bandwidth</strong>, people! It doesn't get much better than this!</p>
    <p>Except when it does.</p>
    <p>In 2013 Google introduced a new, fully backwards compatible method of compression <a href="http://googledevelopers.blogspot.com/2013/02/compress-data-more-densely-with-zopfli.html">they call Zopfli</a>.</p>
    <blockquote>
    <p>The output generated by Zopfli is typically 3–8% smaller compared to <code>zlib</code> at maximum compression, and we believe that Zopfli represents the state of the art in Deflate-compatible compression. Zopfli is written in C for portability. It is a compression-only library; existing software can decompress the data. Zopfli is bit-stream compatible with compression used in gzip, Zip, PNG, HTTP requests, and others.</p>
    </blockquote>
    <p>I apologize for being super late to this party, but let's test this bold claim. What happens to our PBF comic?</p>
    <table style="width:320px">
    <tr>
    <td>Default PNG</td>
    <td>671,012</td>
    <td></td>
    </tr>
    <tr>
    <td>PNGout</td>
    <td>623,859</td>
    <td>7%</td>
    </tr>
    <tr>
    <td>ZopfliPNG</td>
    <td>585,117</td>
    <td style="color:red">13%</td>
    </tr>
    </table>
    <p>Looking good. But that's just one image. We're <a href="http://blog.discourse.org/2015/12/emoji-and-discourse/">big fans of Emoji at Discourse</a>, let's try it on the original first release of the <a href="http://emojione.com/">Emoji One</a> emoji set – that's a complete set of 842 64×64 PNG files in 32-bit color:</p>
    <table style="width:320px">
    <tr>
    <td>Default PNG</td>
    <td>2,328,243</td>
    <td></td>
    </tr>
    <tr>
    <td>PNGout</td>
    <td>1,969,973</td>
    <td>15%</td>
    </tr>
    <tr>
    <td>ZopfliPNG</td>
    <td>1,698,322</td>
    <td style="color:red">27%</td>
    </tr>
    </table>
    <p>Wow. Sign me up for some of that.</p>
    <p>In my testing, Zopfli reliably produces 3 to 8 percent smaller PNG images than even the mighty PNGout, which is an incredible feat. Furthermore, any standard gzip compressed resource can benefit from Zopfli's improved deflate, <a href="https://mathiasbynens.be/demo/jquery-size">such as jQuery</a>:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2016/01/zopfli-vs-gzip.png" alt=""></p>
    <p>Or the standard compression corpus tests:</p>
    <table style="width:360px">
    <tr>
    <td></td>
    <td><code>gzip -­9</code></td>
    <td>kzip</td>
    <td>Zopfli</td>
    </tr>
    <tr>
    <td>Alexa­ 10k</td>
    <td>128mb</td>
    <td>125mb</td>
    <td>124mb</td>
    </tr>
    <tr>
    <td><a href="https://en.wikipedia.org/wiki/Calgary_corpus">Calgary</a></td>
    <td>1017kb</td>
    <td>979kb</td>
    <td>975kb</td>
    </tr>
    <tr>
    <td><a href="https://en.wikipedia.org/wiki/Canterbury_corpus">Canterbury</a></td>
    <td>731kb</td>
    <td>674kb</td>
    <td>670kb</td>
    </tr>
    <tr>
    <td><a href="http://mattmahoney.net/dc/textdata">enwik8</a></td>
    <td>36mb</td>
    <td>35mb</td>
    <td>35mb</td>
    </tr>
    </table>
    <p>(Oddly enough, I had not heard of <a href="http://advsys.net/ken/utils.htm">kzip</a> – turns out that's our old friend Ken Silverman popping up again, probably using the same compression bag of tricks from his PNGout utility.)</p>
    <p>But there is a catch, because <a href="https://en.wikipedia.org/wiki/There_ain%27t_no_such_thing_as_a_free_lunch">there's always a catch</a> – it's also <strong>80 times slower</strong>. No, that's not a typo. Yes, you read that right.</p>
    <table style="width:300px">
    <tr>
    <td><code>gzip -­9</code></td>
    <td>5.6s</td>
    </tr>
    <tr>
    <td><code>7­zip ­mm=Deflate ­mx=9</code></td>
    <td>128s</td>
    </tr>
    <tr>
    <td>kzip</td>
    <td>336s</td>
    </tr>
    <tr>
    <td>Zopfli</td>
    <td>454s</td>
    </tr>
    </table>
    <p>Gzip compression is faster than it looks in the above comparsion, because level 9 is <a href="http://tukaani.org/lzma/benchmarks.html">a bit slow for what it does</a>:</p>
    <table style="width:320px">
    <tr>
    <td></td>
    <td>Time</td>
    <td>Size</td>
    </tr>
    <tr>
    <td><code>gzip -1</code></td>
    <td>11.5s</td>
    <td>40.6%</td>
    </tr>
    <tr>
    <td><code>gzip -2</code></td>
    <td>12.0s</td>
    <td>39.9%</td>
    </tr>
    <tr>
    <td><code>gzip -3</code></td>
    <td>13.7s</td>
    <td>39.3%</td>
    </tr>
    <tr>
    <td><code>gzip -4</code></td>
    <td>15.1s</td>
    <td>38.2%</td>
    </tr>
    <tr>
    <td><code>gzip -5</code></td>
    <td>18.4s</td>
    <td>37.5%</td>
    </tr>
    <tr>
    <td><code>gzip -6</code></td>
    <td>24.5s</td>
    <td>37.2%</td>
    </tr>
    <tr>
    <td><code>gzip -7</code></td>
    <td>29.4s</td>
    <td>37.1%</td>
    </tr>
    <tr>
    <td><code>gzip -8</code></td>
    <td>45.5s</td>
    <td>37.1%</td>
    </tr>
    <tr>
    <td><code>gzip -9</code></td>
    <td>66.9s</td>
    <td>37.0%</td>
    </tr>
    </table>
    <p>You decide if that whopping 0.1% compression ratio difference between <code>gzip -7</code>and <code>gzip -9</code> is worth the <em>doubling</em> in CPU time. In related news, this is why pretty much every compression tool's so-called "Ultra" compression level or mode is generally a bad idea. You <a href="http://blog.codinghorror.com/compression-and-cliffs/">fall off an algorithmic cliff</a> pretty fast, so stick with the middle or the optimal part of the curve, which tends to be the default compression level. They do pick those defaults for a reason.</p>
    <p>PNGout was not exactly <em>fast</em> to begin with, so imagining something that's 80 times slower (at best!) to compress an image or a file is definite cause for concern. You may not notice on small images, but try running either on a larger PNG and it's basically time to go get a sandwich. Or if you have a multi-core CPU, 4 to 16 sandwiches. This is why applying Zopfli to user-uploaded images might not be the greatest idea, because the first server to try Zopfli-ing a 10k × 10k PNG image is in for a hell of a surprise.</p>
    <p>However, remember that <em>decompression</em> is still the same speed, and totally safe. This means <strong>you probably only want to use Zopfli on pre-compiled resources</strong>, which are designed to be compressed once and downloaded millions of times – rather than a bunch of PNG images your users uploaded which may only be viewed a few hundred or thousand times at best, regardless of how optimized the images happen to be.</p>
    <p>For example, at <a href="http://discourse.org">Discourse</a> we have a default avatar renderer which produces nice looking PNG avatars for users based on the first letter of their username, plus a color scheme selected via the hash of their username. Oh yes, and the very nice <a href="https://www.google.com/fonts/specimen/Roboto">Roboto open source font</a> from Google.</p>
    <table style="width:320px">
    <tr>
    <td>
    <img alt="https://blog.codinghorror.com/content/images/2016/01/discourse-default-avatar-a.png" style="border-radius:50%" width="100">
    </td>
    <td>
    <img alt="https://blog.codinghorror.com/content/images/2016/01/discourse-default-avatar-d.png" style="border-radius:50%" width="100">
    </td>
    <td>
    <img alt="https://blog.codinghorror.com/content/images/2016/01/discourse-default-avatar-s.png" style="border-radius:50%" width="100">
    </td>
    </tr>
    </table>
    <p>We spent a <em>lot</em> of time optimizing the output avatar images, because these avatars can be served millions of times, and pre-rendering the whole lot of them, given the constraints of …</p>
    <ul>
    <li>10 numbers</li>
    <li>26 letters</li>
    <li>~250 color schemes</li>
    <li>~5 sizes</li>
    </ul>
    <p>… isn't unreasonable at around 45,000 unique files. We also have a centralized https CDN we set up to to serve avatars (if desired) across all Discourse instances, to further reduce load and increase cache hits.</p>
    <p>Because these images stick to shades of one color, I reduced the color palette to 8-bit (actually 128 colors) to save space, and of course we run PNGout on the resulting files. They're about as tiny as you can get. When I ran Zopfli on the above avatars, I was super excited to see my expected 3 to 8 percent free file size reduction and after the console commands ran, I saw that saved … 1 byte, 5 bytes, and 2 bytes respectively. <a href="https://wompwompwomp.com/">Cue sad trombone</a>.</p>
    <p>(Yes, it is technically possible <a href="http://pointlessramblings.com/posts/pngquant_vs_pngcrush_vs_optipng_vs_pngnq/">to produce strange "lossy" PNG images</a>, but I think that's counter to the spirit of PNG which is designed for <em>lossless</em> images. If you want lossy images, <a href="http://blog.codinghorror.com/screenshots-jpeg-vs-gif/">go with JPG</a> or another lossy format.)</p>
    <p>The great thing about Zopfli is that, assuming you are OK with the extreme up front CPU demands, it is a "set it and forget it" optimization step that can apply anywhere and will never hurt you. Well, other than possibly burning a lot of spare CPU cycles.</p>
    <p>If you work on a project that serves compressed assets, take a close look at Zopfli. It's not a silver bullet – as with all advice, run the tests on <em>your</em> files and see – but it's about as close as it gets to <strong>literally free bandwidth</strong> in our line of work.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com" rel="nofollow">Find a better job the Stack Overflow way</a> - what you need when you need it, no spam, and no scams.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2016-01-02T09:38:24.000Z</pubDate>
    <guid>https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/</guid>
    </item>
    <item>
    <title>The Hugging Will Continue Until Morale Improves</title>
    <link>https://blog.codinghorror.com/the-hugging-will-continue-until-morale-improves/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I saw in today's news that Apple <a href="https://t.co/KpC9xID5kU">open sourced their Swift language</a>. One of the most influential companies in the world explicitly adopting an open source model – that's great! I'm a believer. One of the big reasons <a href="http://blog.codinghorror.com/civilized-discourse-construction-kit/">we founded Discourse</a> was to build an open source solution that anyone, anywhere could use and safely build upon.</p>
    <blockquote class="twitter-tweet" lang="en">
    <p lang="en" dir="ltr">It's not that Unix won -- just that closed source lost. Big time.</p>— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/status/616377394253795328">July 1, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>People were also encouraged that Apple was so refreshingly open about this whole process and involving the larger community in the process. They even <a href="https://twitter.com/mcdado/status/672509114476601345">hired from the community</a>, which is something I always urge companies to do.</p>
    <p>Also, not many people were, shall we say … <em>fans</em> … of Objective C <a href="http://www.antonzherdev.com/post/70064588471/top-13-worst-things-about-objective-c">as a language</a>. There was a lot of community interest in having another viable modern language to write iOS apps in, and to Apple's credit, they produced Swift, and even promised to open source it by the end of the year. And they delivered, in a deliberate, thoughtful way. (Did I mention that <a href="https://github.com/apple/swift-cmark">they use CommonMark</a>? That's kind of awesome, too.)</p>
    <p>One of my heroes, Miguel de Icaza, happens to have <em>lots</em> of life experience in open sourcing things that were not exactly open source to start with. He applauded the move, and even made a small change to his Mono project in tribute:</p>
    <blockquote class="twitter-tweet" lang="en">
    <p lang="en" dir="ltr">When Swift was open sourced today, I saw they had a Code of Conduct. We had to follow suit, Mono has adopted it: <a href="https://t.co/hVO3KL1Dn5">https://t.co/hVO3KL1Dn5</a></p>— Miguel de Icaza (@migueldeicaza) <a href="https://twitter.com/migueldeicaza/status/672590341757927426">December 4, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>Which I also thought was kinda cool.</p>
    <p>It surprises me that anyone could ever object to the mere <em>presence</em> of a code of conduct. But <a href="https://medium.com/@jmspool/safe-conferences-are-deliberately-designed-2849b6cd3658">some people do</a>.</p>
    <blockquote>
    <ul>
    <li>
    <p>A weak Code of Conduct is a placebo label saying a conference is safe, without actually ensuring it’s safe.</p>
    </li>
    <li>
    <p>Absence of a Code of Conduct does not mean that the organizers will provide an unsafe conference.</p>
    </li>
    <li>
    <p>Creating safety is not the same as creating a feeling of safety.</p>
    </li>
    <li>
    <p>Things organizers can do to make events safer: Restructure parties to reduce unsafe intoxication-induced behavior; work with speakers in advance to minimize potentially offensive material; and provide very attentive, mindful customer service consistently through the attendee experience.</p>
    </li>
    <li>
    <p>Creating a safe conference is more expensive than just publishing a Code of Conduct to the event, but has a better chance of making the event safe.</p>
    </li>
    <li>
    <p>Safe conferences are the outcome of a deliberate design effort.</p>
    </li>
    </ul>
    </blockquote>
    <p>I have to say, I don't understand this at all. Even if you do believe these things, why would you say them <em>out loud?</em> What possible constructive outcome could result from you saying them? It's a textbook case of honesty <a href="http://blog.codinghorror.com/trust-me-im-lying/">not always being the best policy</a>. If this is all you've got, just say nothing, or wave people off with platitudes, like politicians do. And if you're Jared Spool, notable and <a href="https://en.wikipedia.org/wiki/Jared_Spool">famous within your field</a>, it's even worse – what does this say to everyone else working in your field?</p>
    <p>Mr. Spool's central premise is this:</p>
    <blockquote>
    <p>Creating safety is not the same as creating a feeling of safety.</p>
    </blockquote>
    <p>Which, actually … isn't true, and runs counter to everything I know about empathy. If you've ever watched It's Not About the Nail, you'll understand that <strong>a <em>feeling</em> of safety is, in fact, what many people are looking for</strong>. It's not the whole story by any means, but it's a very important starting point. An anchor.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/-4EDhdAHrOg" frameborder="0" allowfullscreen></iframe>
    <p>People understand <a href="https://medium.com/@ag_dubs/no-true-conference-organizer-dd0ff11294a">you cannot possibly protect them from every single possible negative outcome at a conference</a>. That's absurd. But they also want to hear you stand up for them, and say out loud that, yes, these are the things we believe in. This is what we know to be true. Here is how we will look out for each other.</p>
    <p>I also had a direct flashback to Deborah Tannen's groundbreaking <a href="http://www.amazon.com/dp/0060959622/?tag=codihorr-20">You Just Don't Understand</a>, in which you learn that <strong>men are all about fixing the problem</strong>, so much so that they rush headlong into any remotely plausible solution, without stopping along the way to actually <em>listen</em> and appreciate the depth of the problem, which maybe … can't really even <em>be</em> fixed?</p>
    <blockquote>
    <p>If women are often frustrated because men do not respond to their troubles by offering matching troubles, men are often frustrated because women do … he feels she is trying to take something away from him by denying the uniqueness of his experience … if women resent men's tendency to offer solutions to problems, men complain about women's refusal to take action to solve the problems they complain about.</p>
    <p>Since many men see themselves as problem solvers, a complaint or a trouble is a challenge … Trying to solve a problem or fix a trouble focuses on the message level. But for most women who habitually report problems at work or in friendships, the message is not the main point … trouble talk is intended to reinforce rapport by sending the metamessage "We're the same; you're not alone."</p>
    <p>Women are frustrated when they not only don’t get this reinforcement but, quite the opposite, feel distanced by the advice, which seems to send the metamessage "We’re not the same. You have the problems; I have the solutions."</p>
    </blockquote>
    <p>Having children really underscored this point for me. The quickest way to turn a child's frustration into a screaming, explosive tantrum is to <strong>try to fix their problem for them</strong>. This is such a hard thing for engineers to wrap their heads around, particularly male engineers, because we are <em>all about</em> fixing the problems. That's what we do, right? That's why we exist? We fix problems?</p>
    <p>I once wrote this in reply to <a href="https://community.imgur.com">an Imgur discussion topic</a> about navigating an "emotionally charged sitation":</p>
    <blockquote>
    <p>Oh, you want a master class in dealing with emotionally charged situations? Well, why didn't you just say so?</p>
    <p><strong>Have kids.</strong> Within a few years you will learn to be an expert in dealing with this kind of stuff, because what nobody tells you about having kids is that for the first ~5 years, they are constantly. freaking. the. f**k. out.</p>
    <p><a href="http://jasongood.net/365/2012/12/46-reasons-why-my-three-year-old-might-be-freaking-out/">46 Reasons My Three Year Old Might Be Freaking Out</a></p>
    <p>If this seems weird to you, or like some kind of made up exaggerated hilarious absurd brand of humor, oh trust me. It's not. Real talk. <em>This is actually how it is.</em></p>
    <p>In their defense, it's not their fault: they've never felt fear, anger, hunger, jealousy, love, or any of the dozen other incredibly complex emotions you and I deal with on a daily basis. So they learn. But along the way, there will be many many many manymanymanymany freakouts. And guess who's there to help them navigate said freakouts?</p>
    <p>You are.</p>
    <p>What works <a href="http://blog.codinghorror.com/how-to-talk-to-human-beings/">is surprisingly simple</a>:</p>
    <ul>
    <li>Be there.</li>
    <li>Listen.</li>
    <li>Empathize, hug, and echo back to them. <em>Don't</em> try to solve their problems! DO NOT DO IT! Paradoxically, this only makes it way worse if you do. Let them work through the problem on their own. They always will – and knowing someone trusts you enough to figure our your own problems is a major psychological boost.</li>
    </ul>
    <p>You gotta <a href="http://learn.genetics.utah.edu/content/epigenetics/rats/">lick your rats</a>, man.</p>
    <p>(protip: this works identically on adults and kids. Turns out most so-called adults aren't fully grown up. Who knew?)</p>
    </blockquote>
    <p>I guess my point is that rats aren't so different from people. We all want the same thing. Comfort from someone who can tell us that the world is safe, the world is not out to get you, that bad things can (and might) happen to you but <em>you'll still be OK because we will help you</em>. We're all in this thing together, you're a human being much like myself and we love you.</p>
    <p><strong>That's why a visible, public code of conduct is a good idea, not only at an in-person conference, but also on a software project like Swift, or Mono.</strong> But programmers being programmers – because they spend all day every day mired in the crazy world of infinitely recursive rules from their OS, from their programming language, from their APIs, from their tools – are rules lawyers <em>par excellence</em>. Nobody on planet Earth is better at arguing to the death over a set of completely arbitrary, made up rules than the average programmer.</p>
    <p>I knew in my heart of hearts that someone – and by someone I mean a programmer – would inevitably complain about the fact that Mono had added a code of conduct, another "unnecessary" ruleset. So I made a programmer joke.</p>
    <blockquote class="twitter-tweet" lang="en">
    <p lang="en" dir="ltr"><a href="https://twitter.com/migueldeicaza">@migueldeicaza</a> I find these rules offensive and will be fining a complaint</p>— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/status/672604329627418630">December 4, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>This is the second time in as many days that I made what I <em>thought</em> was an obvious joke on Twitter that was interpreted seriously.</p>
    <blockquote class="twitter-tweet" lang="en">
    <p lang="en" dir="ltr">When someone starts at Discourse, I have the talk with them. "You remember your family? Forget them. Look at me. *We* are your family now."</p>— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/status/672142544642248704">December 2, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>OK, maybe sometimes my Twitter jokes aren't very good. Well, you know, that's just, like … <em>your opinion</em>, man. I should probably switch from Twitter to Myspace or Ello or Google Plus or Snapchat or something.</p>
    <p>But it bothered me that people, any people, would think I actually asked new hires to put the company above their family.* Or that I didn't believe in a code of conduct. I guess some of that comes from having ~200k followers; once your audience gets big enough, <a href="https://en.wikipedia.org/wiki/Poe%27s_law">Poe's Law</a> becomes inevitable?</p>
    <p>Anyway, I wanted to say I'm sorry. And I'm particularly sorry that <a href="http://eev.ee/">eevee</a>, who wrote that <em>awesome</em> <a href="http://blog.codinghorror.com/the-php-singularity/">PHP is a Fractal of Bad Design article that I once riffed on</a>, thought I was serious, or even worse, that my joke was in bad taste. Even though <a href="http://eev.ee/blog/2015/09/17/the-sad-state-of-web-app-deployment/">the negative article about Discourse</a> eevee wrote did kinda hurt my feelings.</p>
    <blockquote class="twitter-tweet" lang="en">
    <p lang="en" dir="ltr"><a href="https://twitter.com/samsaffron">@samsaffron</a> <a href="https://twitter.com/JakubJirutka">@JakubJirutka</a> programmers should not have feelings that is a liability</p>— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/status/649743704069029888">October 2, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>I know we have our differences, but if we as programmers can't come together through our collective shared horror over PHP, the Nickelback of programming languages, then clearly I have failed.</p>
    <p>To show that <strong>I absolutely do believe in the value of a code of conduct</strong>, even as public statements of intent that we may not completely live up to, even if we've never had any incidents or problems that would require formal statements – I'm also adding a code of conduct as defined by <a href="http://contributor-covenant.org/">contributor-covenant.org</a> to the <a href="https://github.com/discourse/discourse">Discourse project</a>. We're all in this open source thing together, you're a human being <a href="http://blog.codinghorror.com/what-if-we-could-weaponize-empathy/">very much like us</a>, and we vow to treat you with the same respect we'd want you to treat us. This should not be controversial. It should be common. And saying so matters.</p>
    <p>If you maintain an open source project, I strongly urge you to consider formally adopting a <a href="http://contributor-covenant.org/">code of conduct</a>, too.</p>
    <blockquote class="twitter-tweet" lang="en">
    <p lang="en" dir="ltr"><a href="https://twitter.com/codinghorror">@codinghorror</a> hugs!</p>— Miguel de Icaza (@migueldeicaza) <a href="https://twitter.com/migueldeicaza/status/672619657703084033">December 4, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>The hugging will continue until morale improves.</p>
    <p><small>*  That's only required of co-founders</small></p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Building out your tech team? <a href="http://careers.stackoverflow.com/products" rel="nofollow">Stack Overflow Careers</a> helps you hire from the largest community for programmers on the planet. We built our site with developers like you in mind.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-12-04T11:17:05.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-hugging-will-continue-until-morale-improves/</guid>
    </item>
    <item>
    <title>The 2016 HTPC Build</title>
    <link>https://blog.codinghorror.com/the-2016-htpc-build/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I've <a href="http://blog.codinghorror.com/if-loving-computers-is-wrong-i-dont-want-to-be-right/">loved many computers in my life</a>, but the HTPC has always had a special place in my heart. It's the only always-on workhorse computer in our house, it is utterly silent, totally reliable, sips power, and it's at the center of our home entertainment, networking, storage, and gaming. This handy box does it all, 24/7.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/11/antec-itx-casejpg.jpg" alt=""></p>
    <p>I love this little machine to death; it's always been there for me and my family. The <b>steady march of improvements in my HTPC build</b> over the years lets me look back and see how far the old beige box PC has come in the decade I've been blogging:</p>
    <table cellpadding="4" cellspacing="4">
    <tr>
    <td><a href="http://blog.codinghorror.com/pentium-m-home-theater-pc/">2005</a></td>
    <td>~$1000</td>
    <td>512MB RAM, 1 CPU</td>
    <td>80w
    </td>
    </tr>
    <tr>
    <td><a href="http://blog.codinghorror.com/building-your-own-home-theater-pc/">2008</a></td>
    <td>~$520</td>
    <td>2GB RAM, 2 CPU</td>
    <td>45w
    </td>
    </tr>
    <tr>
    <td><a href="http://blog.codinghorror.com/revisiting-the-home-theater-pc/">2011</a></td>
    <td>~$420</td>
    <td>4GB RAM, 2/4 CPU + GPU</td>
    <td>22w
    </td>
    </tr>
    <tr>
    <td><a href="http://blog.codinghorror.com/the-2013-htpc-build/">2013</a></td>
    <td>~$300</td>
    <td>8GB RAM, 2/4 CPU + GPU×2</td>
    <td>15w
    </td>
    </tr>
    <tr>
    <td><b>2016</b></td>
    <td><b>~$320</b></td>
    <td><b>8GB RAM, 2/4 CPU + GPU×4</b></td>
    <td>
    <font color="red"><b>10w</b></font>
    </td>
    </tr>
    </table>
    <p>As expected, the per-thread performance increase from 2013's Haswell CPU to 2016's Skylake CPU is modest – 20 percent at best, and that might be rounding up. About all you can do is slap more cores in there, to very limited benefit in most applications. The 6100T I chose is dual-core plus hyperthreading, which I consider the sweet spot, but there are some other <a href="http://ark.intel.com/compare/88200,88183,90734,90725">Skylake 6000 series variants at the same 35w power envelope</a> which offer true quad-core, or quad-core plus hyperthreading – and, inevitably, a slightly lower base clock rate. So it goes.</p>
    <p>The real story is how idle power consumption was <strong>reduced another 33 percent</strong>. Here's what I measured with <a href="http://blog.codinghorror.com/why-estimate-when-you-can-measure/">my trusty kill-a-watt</a>:</p>
    <ul>
    <li>
    <b>10w</b> idle with display off
    </li>
    <li>11w idle with display on
    </li>
    <li>13w active standard netflix (720p?) movie playback
    </li>
    <li>14w multiple torrents, display off
    </li>
    <li>15w 1080p video playback in MPC-HC x64
    </li>
    <li>40w Lego Batman 3 high detail 720p gameplay
    </li>
    <li>
    <b>56w</b> Prime95 full CPU load + Rthdribl full GPU load
    </li>
    </ul>
    <p>These are impressive numbers, much better than I expected. Maybe part of it is the latest Windows 10 update which <a href="http://www.anandtech.com/show/9751/examining-intel-skylake-speed-shift-more-responsive-processors">supports the new Speed Shift technology in Skylake</a>. Speed Shift hands over CPU clockspeed control to the CPU itself, so it can ramp its internal clock up and down dramatically faster than the OS could. A Skylake CPU, with the right OS support, gets up to speed and back to idle faster, resulting in better performance and less overall power draw.</p>
    <p>Skylake's on-board <b>HD 530 graphics is about twice as fast as the HD 4400 that it replaces</b>. Haswell offered the first reasonable big screen gaming GPU on an Intel CPU, but only just. 720p was <em>mostly</em> attainable in older games with the HD 4400, but I sometimes had to drop to medium detail settings, or lower. Two generations on, with the HD 530, even recent games like GRID Autosport, Lego Jurassic Park and so on can now be played at 720p with high detail settings at consistently high framerates. It depends on the game, but a few can even be played at 1080p now with medium settings. I did have at least one saved benchmark result on the disk to compare with:</p>
    <table>
    <tr>
    <td>GRID 2, 1280×720, high detail defaults</td>
    <td></td>
    <td></td>
    <td>
    </td>
    </tr>
    <tr>
    <td></td>
    <td>Max</td>
    <td>Min</td>
    <td>Avg
    </td>
    </tr>
    <tr>
    <td>i3-4130T, Intel HD 4400 GPU</td>
    <td>32</td>
    <td>21</td>
    <td>27
    </td>
    </tr>
    <tr>
    <td>i3-6100T, Intel HD 530 GPU</td>
    <td>50</td>
    <td>32</td>
    <td>39
    </td>
    </tr>
    </table>
    <p>Skylake is a legitimate gaming system on a chip, provided you are OK with 720p. It's tremendous fun to play Lego Batman 3 with my son.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/7bsHsp2WXUI" frameborder="0" allowfullscreen></iframe>
    <p>At 720p using high detail settings, where there used to be many instances of notable slowdown, particularly in co-op, it now feels very smooth throughout. And since games are much cheaper on PC than consoles, <a href="http://store.steampowered.com/">particularly through Steam</a>, we have access to a complete range of gaming options from new to old, from indie to mainstream – and an enormous, inexpensive back catalog.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/11/steam-game-choices.jpg" alt=""></p>
    <p>Of course, this is still far from the performance you'd get out of a $300 video card or a $300 console. You'll never be able to play a cutting edge, high end game like GTA V or Witcher 3 on this HTPC box. But <em>you may not need to</em>. <a href="http://store.steampowered.com/streaming/">Steam in-home streaming</a> has truly come into its own in the last year. I tried streaming Batman: Arkham Knight from my beefy home office computer to the HTPC at 1080p, and I was surprised to discover just how effortless it was – nor could I detect any visual artifacts or input latency.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/11/steam-streaming.jpg" alt=""></p>
    <p>It's <a href="http://www.pcgamer.com/how-to-set-up-steam-in-home-streaming-on-your-pc/#page-1">super easy to set up</a> – just have the Steam client running on both machines at a logged in Windows desktop (can't be on the lock screen), and press the Stream button on any game that you don't have installed locally. Be careful with WiFi when streaming high resolutions, obviously, but if you're on a wired network, I found the experience is nearly identical to playing the game locally. As long as the game has native console / controller support, like Arkham Knight and Fallout 4, streaming to the big screen works great. Try it! That's how Henry and I are going to play through <a href="http://store.steampowered.com/app/225540/">Just Cause 3</a> this Tuesday and <a href="http://blog.codinghorror.com/my-holiday-in-beautiful-panau/">I can't wait</a>.</p>
    <p>As before in 2013, I only upgraded the guts of the system, so the incremental cost is low.</p>
    <ul>
    <li>
    <a href="http://www.amazon.com/dp/B015CQ8D9Q/?tag=codihorr-20">GA-H170N-WIFI</a> H170 motherboard — $120</li>
    <li>
    <a href="http://www.amazon.com/dp/B00MMLUZ2I/?tag=codihorr-20">8GB DDR4</a> RAM — $46</li>
    <li>
    <a href="http://www.amazon.com/dp/B0161V02ZO/?tag=codihorr-20">Intel i3-6100T</a> 35w, 3.2 GHz dual core CPU — $155</li>
    </ul>
    <p>That's a total of <strong>$321</strong> for this upgrade cycle, about the cost of a new Xbox One or PS4. The i3-6100T should be a bit cheaper; according to Intel it has the same list price as the i3-6100, but suffers from weak availability. The motherboard I chose is a little more expensive, too, perhaps because it <a href="http://www.gigabyte.com/products/product-page.aspx?pid=5552#ov">includes extras like built in WiFi and M.2 support</a>, although I'm not using either quite yet. You might be able to source a cheaper H170 motherboard than mine.</p>
    <p>The rest of the system has <a href="http://blog.codinghorror.com/the-2013-htpc-build/">not changed much since 2013</a>:</p>
    <ul>
    <li>
    <a href="http://www.amazon.com/gp/product/B0035UETHW/?tag=codihorr-20">PicoPSU 90</a> — $50</li>
    <li>
    <a href="http://www.amazon.com/gp/product/B0035FIS2O/?tag=codihorr-20">Antec ISK 300-150</a> — $68</li>
    <li>
    <a href="http://www.amazon.com/dp/B00OBRE5UE/?tag=codihorr-20">512GB SSD boot drive</a> — $150</li>
    <li>
    <a href="http://www.amazon.com/dp/B00I8O6OQ4/?tag=codihorr-20">2TB 2.5" HDD</a> × 2 — $200</li>
    </ul>
    <p>Populate these items to taste, pick whatever drives and mini-ITX case you prefer, but <strong>definitely stick with the PicoPSU</strong>, because removing the large, traditional case power supply makes the setup both a) much more power efficient at low wattage, and b) much roomier inside the case and easier to install, upgrade, and maintain.</p>
    <p>I also switched to <a href="http://www.amazon.com/dp/B015IX3X3E/?tag=codihorr-20">Xbox One controllers</a>, for no really good reason other than the Xbox 360 is getting more obsolete every month, and now that my beloved Rock Band 4 is available on next-gen systems, I'm trying to slowly evict the 360s from my house.</p>
    <p><a href="http://www.amazon.com/dp/B015IX3X3E/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2015/11/xbox-one-controller.jpg" alt=""></a></p>
    <p>The <a href="http://www.amazon.com/dp/B00ZB7W4QU/?tag=codihorr-20">Windows 10 wireless Xbox One adapter</a> does have some perks. In addition to working with the newer and slightly nicer gamepads from the Xbox One, it supports an audio stream over each controller via the controller's headset connector. But really, for the purposes of Steam gaming, any USB controller will do.</p>
    <p>While I've been over the moon in love with my HTPC for years, and I liked the Xbox 360, I have been thoroughly unimpressed with my newly purchased Xbox One. Both the new and old UIs are hard to use, it's quite slow relative to my very snappy HTPC, and it has a ton of useless features that I don't care about, like broadcast TV support. About all the Xbox One lets you do is <em>sometimes</em> play next gen games at 1080p without paying $200 or $300 for a fancy video card, and let's face it – the PS4 does that slightly better. <strong>If those same games are available on PC, you'll have a better experience streaming them from a gaming PC</strong> to either a cheap Steam streaming box, or a generalist HTPC like this one.</p>
    <p>The Xbox One and PS4 are <a href="http://www.extremetech.com/gaming/156273-xbox-720-vs-ps4-vs-pc-how-the-hardware-specs-compare">effectively plain old PCs</a>, built on:</p>
    <ul>
    <li>Intel Atom class (aka slow) AMD 8-core x86 CPU</li>
    <li>8 GB RAM</li>
    <li>AMD Radeon 77xx / 78xx GPUs</li>
    <li>cheap commodity 512GB or 1TB hard drives (not SSDs)</li>
    </ul>
    <p>The <strong>golden age of x86 gaming</strong> is well upon us. That's why the future of PC gaming is looking brighter every day. We can see it coming true in the solid GPU and idle power improvements in Skylake, riding the inevitable wave of x86 becoming the dominant kind of (non mobile, anyway) gaming for the forseeable future.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] At Stack Overflow, we help developers learn, share, and grow. Whether you’re looking for your next dream job or looking to build out your team, <a href="http://careers.stackoverflow.com" rel="nofollow">we've got your back</a>.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-11-30T06:42:33.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-2016-htpc-build/</guid>
    </item>
    <item>
    <title>To ECC or Not To ECC</title>
    <link>https://blog.codinghorror.com/to-ecc-or-not-to-ecc/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>On one of my visits to the <a href="http://www.computerhistory.org/">Computer History Museum</a> – and by the way this is an absolute <em>must-visit</em> place if you are ever in the San Francisco bay area – I saw an early Google server rack circa 1999 in the exhibits.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/11/old-google-server-rack.jpg" alt=""></p>
    <p>Not too fancy, right? Maybe even … a little janky? This is <a href="http://blog.codinghorror.com/building-a-computer-the-google-way/">building a computer the Google way</a>:</p>
    <blockquote>
    <p>Instead of buying whatever pre-built rack-mount servers Dell, Compaq, and IBM were selling at the time, <strong>Google opted to hand-build their server infrastructure themselves</strong>. The sagging motherboards and hard drives are literally propped in place on handmade plywood platforms. The power switches are crudely mounted in front, the network cables draped along each side. The poorly routed power connectors snake their way back to generic PC power supplies in the rear.</p>
    <p>Some people might look at these early Google servers and see an amateurish fire hazard. Not me. I see a prescient understanding of how inexpensive commodity hardware would shape today's internet. I felt right at home when I saw this server; it's exactly what I would have done in the same circumstances. This rack is a perfect example of the commodity x86 market D.I.Y. ethic at work: if you want it done right, and done inexpensively, you build it yourself.</p>
    </blockquote>
    <p>This rack is now immortalized in <a href="http://americanhistory.si.edu/press/fact-sheets/google-corkboard-server-1999">the National Museum of American History</a>. Urs Hölzle <a href="https://plus.google.com/+UrsH%C3%B6lzle/posts/VGwMnY3oUSY">posted lots more juicy behind the scenes details</a>, including the exact specifications:</p>
    <ul>
    <li>Supermicro P6SMB motherboard</li>
    <li>256MB PC100 memory</li>
    <li>Pentium II 400 CPU</li>
    <li>IBM Deskstar 22GB hard drives (×2)</li>
    <li>Intel 10/100 network card</li>
    </ul>
    <p>When I <a href="http://blog.codinghorror.com/farewell-stack-exchange/">left Stack Exchange</a> (sorry, <a href="https://blog.stackoverflow.com/2015/09/were-changing-our-name-back-to-stack-overflow/">Stack Overflow</a>) one of the things that excited me most was <strong>embarking on a new project using 100% open source tools.</strong> That project is, of course, <a href="http://discourse.org">Discourse</a>.</p>
    <p>Inspired by Google and their use of cheap, commodity x86 hardware to scale on top of the open source Linux OS, I also <a href="http://blog.codinghorror.com/building-servers-for-fun-and-prof-ok-maybe-just-for-fun/">built our own servers</a>.  When I get stressed out, when I feel the world weighing heavy on my shoulders and I don't know where to turn … <em>I build servers</em>. It's therapeutic.</p>
    <blockquote class="twitter-tweet" lang="en">
    <p lang="en" dir="ltr">I like to give servers a little pep talk while I build them. "Who's the best server! Who's the fastest server!"</p>— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/status/666062934171189249">November 16, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>Don't judge me, man.</p>
    <p>But more seriously, with the release of Intel's latest Skylake architecture, it's finally time to upgrade our 2013 era Discourse servers to the latest and greatest, something reflective of 2016 – which means building even more servers.</p>
    <p>Discourse <a href="http://blog.codinghorror.com/why-ruby/">runs on a Ruby stack</a> and one thing we learned early on is that <strong>Ruby demands exceptional single threaded performance</strong>, aka, a CPU running as fast as possible. Throwing umptazillion CPU cores at Ruby doesn't buy you a whole lot other than being able to handle more requests at the same time. Which is nice, but doesn't get you <em>speed</em> per se. Someone made a helpful technical video to illustrate exactly how this all works:</p>
    <p><video poster="/content/images/2015/11/javascript-python-ruby-apps.jpg" width="100%" preload="none" controls><source src="http://discourse-cdn.codinghorror.com/uploads/default/original/3X/1/0/1049b1846f0cfa65ed0a9b4ab970d57d6dc0bd5a.mp4"></source></video></p>
    <p>This is by no means exclusive to Ruby; other languages like JavaScript and Python also share this trait. And Discourse itself is a JavaScript application delivered through the browser, which exercises the mobile / laptop / desktop client CPU. Mobile devices reaching near-parity with desktop performance in single threaded performance is something we're betting on in a big way with Discourse.</p>
    <p>So, good news! Although PC performance has been <a href="http://blog.codinghorror.com/the-pc-is-over/">incremental at best in the last 5 years</a>, between Haswell and Skylake, Intel managed to deliver a respectable per-thread performance bump. Since we are upgrading our servers from Ivy Bridge (very similar to the i7-3770k), the generation before Haswell, I'd <a href="http://www.anandtech.com/show/9483/intel-skylake-review-6700k-6600k-ddr4-ddr3-ipc-6th-generation/11">expect</a> a solid 33% performance improvement at minimum.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/11/skylake-javascript-performance-boost-1.png" alt=""></p>
    <p>Even worse, the more cores they pack on a single chip, the slower they all go. From Intel's current Xeon E5 lineup:</p>
    <ul>
    <li>E5-1680 → 8 cores, 3.2 Ghz</li>
    <li>E5-1650 → 6 cores, 3.5 Ghz</li>
    <li>E5-1630 → 4 cores, 3.7 Ghz</li>
    </ul>
    <p>Sad, isn't it? Which brings me to the following build for our core web tiers, which optimizes for "lots of inexpensive, fast boxes"</p>
    <table width="100%">
    <tr>
    <td><b>2013</b></td>
    <td><b>2016</b></td>
    </tr>
    <tr>
    <td valign="top">
    Xeon E3-1280 V2 Ivy Bridge 3.6 Ghz / 4.0 Ghz quad-core ($640)<br>
    SuperMicro X9SCM-F-O mobo ($190)<br>
    32 GB DDR3-1600 ECC ($292)<br>
    SC111LT-330CB 1U chassis ($200)<br>
    Samsung 830 512GB SSD ×2 ($1080)<br>
    1U Heatsink ($25)<br>
    </td>
    <td valign="top">
    i7-6700k Skylake 4.0 Ghz / 4.2 Ghz quad-core ($370)<br>
    SuperMicro X11SSZ-QF-O mobo ($230)<br>
    64 GB DDR4-2133 ($520)<br>
    CSE-111LT-330CB 1U chassis ($215)<br>
    Samsung 850 Pro 1TB SSD ×2 ($886)<br>
    1U Heatsink ($20)<br>
    </td>
    </tr>
    <tr>
    <td>$2,427</td>
    <td>$2,241</td>
    </tr>
    <tr>
    <td>
    31w idle, 87w BurnP6 load
    </td>
    <td>
    14w idle, 81w BurnP6 load
    </td>
    </tr>
    </table>
    <p>So, about 10% cheaper than what we spent in 2013, with 2× the memory, 2× the storage (probably 50-100% faster too), and at least ~33% faster CPU. With lower power draw, to boot! Pretty good. Pretty, pretty, pretty, <em>pretty</em> good.</p>
    <p>(Note that the memory bump is only possible thanks to Intel finally relaxing their iron fist of maximum allowed RAM at the low end; that's new to the Skylake generation.)</p>
    <p>One thing is conspicuously missing in our 2016 build: Xeons, and <strong>ECC Ram</strong>. In my defense, this isn't intentional – we wanted the fastest per-thread performance and no Intel Xeon, either currently available or announced, goes to 4.0 GHz with Skylake. Paying half the price for a CPU with better per-thread performance than any Xeon, well, I'm not going to kid you, that's kind of a nice perk too.</p>
    <p>So <a href="https://en.wikipedia.org/wiki/ECC_memory">what is ECC all about</a>?</p>
    <blockquote>
    <p>Error-correcting code memory (ECC memory) is a type of computer data storage that can detect and correct the most common kinds of internal data corruption. ECC memory is used in most computers where data corruption cannot be tolerated under any circumstances, such as for scientific or financial computing.</p>
    <p>Typically, ECC memory maintains a memory system immune to single-bit errors: the data that is read from each word is always the same as the data that had been written to it, even if one or more bits actually stored have been flipped to the wrong state. Most non-ECC memory cannot detect errors although some non-ECC memory with parity support allows detection but not correction.</p>
    </blockquote>
    <p>It's <strong>received wisdom in the sysadmin community that you <em>always</em> build servers with ECC RAM</strong> because, well, you build servers to be reliable, right? Why would anyone intentionally build a server that isn't reliable? <em>Are you crazy, man?</em> Well, looking at that cobbled together Google 1999 server rack, which also utterly lacked any form of ECC RAM, I'm inclined to think that reliability measured by "lots of redundant boxes" is more worthwhile and easier to achieve than the platonic ideal of making every individual server bulletproof.</p>
    <p>Being the type of guy who likes to question stuff… I began to question. Why is it that ECC is so essential anyway? If ECC was so important, so critical to the reliable function of computers, why isn't it built in to every desktop, laptop, and smartphone in the world by now? Why is it optional? This smells awfully… <em>enterprisey</em> to me.</p>
    <p>Now, before everyone stops reading and I get permanently branded as "that crazy guy who hates ECC", I think ECC RAM is fine:</p>
    <ul>
    <li>The cost difference between ECC and not-ECC is minimal these days.</li>
    <li>The performance difference between ECC and not-ECC is minimal these days.</li>
    <li>Even if ECC only protects you from rare 1% hardware error cases that you may never hit until you literally build hundreds or thousands of servers, it's cheap insurance.</li>
    </ul>
    <p>I am not anti-insurance, nor am I anti-ECC. But I do seriously question whether ECC is as operationally critical as we have been led to believe, and I think the data shows modern, non-ECC RAM is already extremely reliable.</p>
    <p>First, let's look at the <a href="https://www.pugetsystems.com/labs/articles/Most-Reliable-Hardware-of-2014-616/">Puget Systems reliability stats</a>. These guys build lots of commodity x86 gamer PCs, burn them in, and ship them. They helpfully track statistics on how many parts fail either from burn-in or later in customer use. Go ahead and read through the stats.</p>
    <blockquote>
    <p>For the last two years, CPU reliability has dramatically improved. What is interesting is that this lines up with the launch of the Intel Haswell CPUs which was when the CPU voltage regulation was moved from the motherboard to the CPU itself. At the time we theorized that this should raise CPU failure rates (since there are more components on the CPU to break) but the data shows that it has actually increased reliability instead.</p>
    <p>Even though DDR4 is very new, reliability so far has been excellent. Where DDR3 desktop RAM had an overall failure rate in 2014 of ~0.6%, DDR4 desktop RAM had absolutely no failures.</p>
    <p>SSD reliability has dramatically improved recently. This year Samsung and Intel SSDs only had a 0.2% overall failure rate compared to 0.8% in 2013.</p>
    </blockquote>
    <p>Modern commodity computer parts from reputable vendors are amazingly reliable. And their trends show from 2012 onward essential PC parts have gotten <em>more</em> reliable, not less. (I can also vouch for the improvement in SSD reliability as we have had zero server SSD failures in 3 years across our 12 servers with 24+ drives, whereas in 2011 I was writing about <a href="http://blog.codinghorror.com/the-hot-crazy-solid-state-drive-scale/">the Hot/Crazy SSD Scale</a>.) And doesn't this make sense from a financial standpoint? How does it benefit you as a company to ship <em>unreliable</em> parts? That's money right out of your pocket and the reseller's pocket, plus time spent dealing with returns.</p>
    <p>We had a, uh, "spirited" discussion about this internally on our private Discourse instance.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/11/discourse-2016-server-discussion.png" alt=""></p>
    <p>This is <a href="http://blog.brianmoses.net/2014/03/why-i-chose-non-ecc-ram-for-my-freenas.html">not a new debate</a> by any means, but I was frustrated by the lack of data out there. In particular, I'm really questioning <a href="https://storagemojo.com/2012/10/23/dram-errors-soft-and-hard/">the difference between "soft" and "hard" memory errors</a>:</p>
    <blockquote>
    <p>But what is the nature of those errors? Are they soft errors – as is commonly believed – where a stray Alpha particle flips a bit? Or are they hard errors, where a bit gets stuck?</p>
    </blockquote>
    <p><strong>I absolutely believe that hard errors are reasonably common.</strong> RAM DIMMS can have bugs, or the chips on the DIMM can fail, or there's a design flaw in circuitry on the DIMM that only manifests in certain corner cases or under extreme loads. I've seen it plenty. But <a href="https://en.wikipedia.org/wiki/Soft_error">a soft error</a> where a bit of memory randomly flips?</p>
    <blockquote>
    <p>There are two types of soft errors, chip-level soft error and system-level soft error. Chip-level soft errors occur when the radioactive atoms in the chip's material decay and release alpha particles into the chip. Because an alpha particle contains a positive charge and kinetic energy, the particle can hit a memory cell and cause the cell to change state to a different value. The atomic reaction is so tiny that it does not damage the actual structure of the chip.</p>
    </blockquote>
    <p>Outside of airplanes and spacecraft, I have a difficult time believing that soft errors happen with any frequency, otherwise most of the computing devices on the planet would be crashing left and right. I deeply distrust the anecdotal voodoo behind "but one of your computer's memory bits could flip, you'd never know, and corrupted data would be written!" It'd be one thing if we observed this regularly, but I've been unhealthily obsessed with computers since birth and I have never found random memory corruption to be a real, actual problem on any computers I have either owned or had access to.</p>
    <p>But who gives a damn what I think. <em>What does the data say?</em></p>
    <p>A <a href="http://www.ece.rochester.edu/~xinli/usenix07/">2007 study</a> found that the observed soft error rate in live servers was <em>two orders of magnitude</em> lower than previously predicted:</p>
    <blockquote>
    <p>Our preliminary result suggests that <strong>the memory soft error rate in two real production systems (a rack-mounted server environment and a desktop PC environment) is much lower than what the previous studies concluded.</strong> Particularly in the server environment, with high probability, the soft error rate is at least two orders of magnitude lower than those reported previously. We discuss several potential causes for this result.</p>
    </blockquote>
    <p>A <a href="http://www.cs.toronto.edu/~bianca/papers/sigmetrics09.pdf">2009 study on Google's server farm</a> notes that soft errors were difficult to find:</p>
    <blockquote>
    <p>We provide <strong>strong evidence that memory errors are dominated by hard errors, rather than soft errors</strong>, which previous work suspects to be the dominant error mode.</p>
    </blockquote>
    <p>Yet another <a href="http://selse.org//images/selse_2012/Papers/selse2012_submission_4.pdf">large scale study from 2012</a> discovered that RAM errors were dominated by permanent failure modes typical of hard errors:</p>
    <blockquote>
    <p>Our study has several main findings. First, we find that approximately <strong>70% of DRAM faults are recurring (e.g., permanent) faults, while only 30% are transient faults.</strong> Second, we find that large multi-bit faults, such as faults that affects an entire row, column, or bank, constitute over 40% of all DRAM faults. Third, we find that almost 5% of DRAM failures affect board-level circuitry such as data (DQ) or strobe (DQS) wires. Finally, we find that chipkill functionality reduced the system failure rate from DRAM faults by 36x.</p>
    </blockquote>
    <p>In the end, we decided the non-ECC RAM risk was acceptable for every tier of service except our databases. Which is kind of a bummer since <a href="http://www.itworld.com/article/2985214/hardware/intels-xeon-roadmap-for-2016-leaks.html">higher end Skylake Xeons got pushed back to the big Purley platform upgrade in 2017</a>. Regardless, we burn in every server we build with a complete run of memtestx86 and overnight prime95/mprime, and you should too. There's one whirring away through endless memory tests right behind me as I write this.</p>
    <p>I find it very, very suspicious that ECC – if it is so critical to preventing these random, memory corrupting bit flips – <strong>has not already been built into every type of RAM that we ship in the ubiquitous computing devices all around the world as a cost of doing business.</strong> But I am by no means opposed to paying a small insurance premium for server farms, either. You'll have to look at the data and decide for yourself. Mostly I wanted to collect all this information in one place so people who are also evaluating the cost/benefit of ECC RAM for themselves can read the studies and decide what they want to do.</p>
    <p>Please feel free to leave comments if you have other studies to cite, or significant measured data to share.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] At Stack Overflow, we put developers first. We already help you find answers to your tough coding questions; now let us help you <a href="http://careers.stackoverflow.com" rel="nofollow">find your next job</a>.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-11-19T23:44:21.000Z</pubDate>
    <guid>https://blog.codinghorror.com/to-ecc-or-not-to-ecc/</guid>
    </item>
    <item>
    <title>Building a PC, Part VIII: Iterating</title>
    <link>https://blog.codinghorror.com/building-a-pc-part-viii-iterating/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>The last time I seriously upgraded my PC was in 2011, because <a href="http://blog.codinghorror.com/the-pc-is-over/">the PC is over</a>. And in some ways, it truly is – they can slap a ton more CPU cores on a die, for sure, but the overall single core performance increase from a 2011 high end Intel CPU to today's high end Intel CPU is … really quite modest, on the order of maybe 30% to 40%.</p>
    <p>In that same timespan, mobile and tablet CPU performance has continued to just about double every year. Which means the forthcoming iPhone 6s <a href="http://www.techtimes.com/articles/77083/20150818/alleged-iphone-6s-geekbench-3-results-show-2gb-ram-and-tri-core-1-5-ghz-cpu.htm">will be</a> almost <strong>10 times faster</strong> than the iPhone 4 was.</p>
    <p><a href="https://browser.primatelabs.com/ios-benchmarks"><img alt="https://blog.codinghorror.com/content/images/2015/09/geekbench-single-core-iphone-results.png" alt="iPhone single core geekbench results"></a></p>
    <p>Remember, that's only single core CPU performance – I'm not even factoring in the move from single, to dual, to triple core as well as generally faster memory and storage. This stuff is old hat on desktop, where we've had mainstream dual cores for a decade now, but they are <em>huge</em> improvements for mobile.</p>
    <p>When your mobile devices get 10 times faster in the span of four years, it's hard to muster much enthusiasm for a modest 1.3 × or 1.4 × iterative improvement in your PC's performance over the same time.</p>
    <p>I've been slogging away at this for a while; my current PC build series spans 7 years:</p>
    <ul>
    <li><a href="http://blog.codinghorror.com/building-a-pc-part-vii-rebooting/">Building a PC, Part VII: Rebooting</a></li>
    <li><a href="http://www.codinghorror.com/blog/2009/12/building-a-pc-part-vi-rebuilding.html">Building a PC, Part VI: Rebuilding</a></li>
    <li><a href="http://www.codinghorror.com/blog/2008/04/building-a-pc-part-v-upgrading.html">Building a PC, Part V: Upgrading</a></li>
    <li><a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-iv-now-its-your-turn.html">Building a PC, Part IV: Now It's Your Turn</a></li>
    <li><a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-iii-overclocking.html">Building a PC, Part III: Overclocking</a></li>
    <li><a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-ii.html">Building a PC, Part II: Burn in</a></li>
    <li><a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-i.html">Building a PC, Part I: Minimal boot</a></li>
    </ul>
    <p>The fun part of building a PC is that it's relatively easy to swap out the guts when something compelling comes along. CPU performance improvements may be modest these days, but there are still bright spots where performance is increasing more dramatically. Mainly in graphics hardware and, in this case, <strong>storage</strong>.</p>
    <p>The current latest-and-greatest Intel CPU is Skylake. Like Sandy Bridge in 2011, which brought us much faster 6 Gbps SSD-friendly drive connectors (although only two of them), the Skylake platform brings us another key storage improvement – the ability to connect hard drives directly to the PCI Express lanes. Which looks like this:</p>
    <p><a href="http://techreport.com/review/28446/samsung-sm951-pcie-ssd-reviewed"><img alt="https://blog.codinghorror.com/content/images/2015/09/m2-drive-on-mobo.jpg" alt=""></a></p>
    <p>… and performs like this:</p>
    <p><a href="http://arstechnica.com/gadgets/2015/08/intel-skylake-core-i7-6700k-reviewed/"><img alt="https://blog.codinghorror.com/content/images/2015/09/Ars-Technica-Skylake-Review-Charts-012.png" alt=""></a></p>
    <p><strong>Now <em>there's</em> the 3× performance increase we've been itching for!</strong> To be fair, a raw increase of 3× in drive performance doesn't necessarily equate to a computer that boots in one third the time. But here's why disk speed matters:</p>
    <blockquote>
    <p>If the CPU registers are how long it takes you to fetch data from your brain, then <a href="http://blog.codinghorror.com/the-infinite-space-between-words/">going to disk is the equivalent of fetching data from Pluto</a>.</p>
    </blockquote>
    <p>What I've always loved about SSDs is that they attack the <strong>PC's worst-case performance scenario</strong>, when information has to come off the slowest device inside your computer – the hard drive. SSDs massively reduced the variability of requests for data. Let's compare L1 cache access time to minimum disk access time:</p>
    <blockquote>
    <p>Traditional hard drive<br>
    0.9 ns → 10 ms (variability of 11,111,111× )</p>
    <p>SSD<br>
    0.9 ns → 150 µs (variability of 166,667× )</p>
    </blockquote>
    <p>SSDs provide a reduction in overall performance variability of 66×! And when comparing latency:</p>
    <blockquote>
    <p><a href="http://storagereview.com/toshiba_sata_hdd_enterprise_35_review_mg03acax00">7200rpm HDD</a> —  1800ms<br>
    <a href="http://storagereview.com/intel_ssd_dc_s3500_enterprise_review">SATA SSD</a> — 4ms<br>
    <a href="http://storagereview.com/huawei_tecal_es3000_application_accelerator_review">PCIe SSD</a> — 0.34ms</p>
    </blockquote>
    <p>Even going from a fast SATA SSD to a PCI Express SSD, you're looking at a 10x reduction in drive latency.</p>
    <p>Here's what you need:</p>
    <ul>
    <li>
    <a href="http://www.amazon.com/dp/B01639696U/?tag=codihorr-20">256GB Samsung 950 Pro NVMe M.2 drive</a> $198</li>
    <li>
    <a href="http://www.amazon.com/dp/B012NH05UW/?tag=codihorr-20">Asus Z170-A motherboard</a> $165</li>
    <li>
    <a href="http://www.amazon.com/dp/B012M8M7TY/?tag=codihorr-20">Intel i5-i6600k Skylake CPU</a> $270</li>
    <li>
    <a href="http://www.amazon.com/dp/B00TPQPOIS/?tag=codihorr-20">16GB DDR4 memory</a> $134</li>
    </ul>
    <p>These are the basics. It's best to use the M.2 connection as a fast boot / system drive, so I scaled it back to the smaller 256 GB version. I also had a lot of trouble getting my hands on the faster i7-6700k CPU, which appears supply constrained and is currently overpriced as a result.</p>
    <p>(Also, be careful, as some older M.2 drives can use the older <strong>AHCI</strong> connection type. Make sure yours is <strong>NVMe</strong>, as <a href="http://www.anandtech.com/show/7843/testing-sata-express-with-asus/4">the performance difference can be substantial</a>.)</p>
    <p>Even though the days of doubling (or even 1.5×-ing) CPU performance are long gone for PCs, there are still some key iterative performance milestones to hit. Like <a href="http://blog.codinghorror.com/our-brave-new-world-of-4k-displays/">mainstream 4k displays</a>, I believe mainstream PCI express SSDs are another important step in the overall evolution of desktop computing. Or <a href="http://blog.codinghorror.com/the-pc-is-over/">its corpse</a>, anyway.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com" rel="nofollow">Find a better job the Stack Overflow way</a> - what you need when you need it, no spam, and no scams.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-09-17T21:55:00.000Z</pubDate>
    <guid>https://blog.codinghorror.com/building-a-pc-part-viii-iterating/</guid>
    </item>
    <item>
    <title>Our Brave New World of 4K Displays</title>
    <link>https://blog.codinghorror.com/our-brave-new-world-of-4k-displays/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>It's been three years since I last upgraded monitors. Those <a href="http://blog.codinghorror.com/the-ips-lcd-revolution/">inexpensive Korean 27" IPS panels</a>, with a resolution of 2560×1440 – also known as 1440p – have served me well. You have no idea how many people I've witnessed being Wrong On The Internet on these babies.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/read-what-the-smart-people-are-saying.png" alt=""></p>
    <p>I recently got the upgrade itch real bad:</p>
    <ul>
    <li>
    <p>4K monitors have stabilized as a category, from super bleeding edge "I'm probably going to regret buying this" early adopter stuff, and beginning to approach mainstream maturity.</p>
    </li>
    <li>
    <p>Windows 10, with its <a href="https://www.thurrott.com/windows/windows-10/4597/windows-10-feature-focus-display-scaling">promise of better high DPI handling</a>, was released. I know, I know, we've been promised reasonable DPI handling in Windows for the last five years, but hope springs eternal. This time will be different!™</p>
    </li>
    <li>
    <p>I needed a reason to buy a new high end video card, which I was also itching to upgrade, and simplify from a <a href="http://blog.codinghorror.com/multiple-video-cards/">dual card config</a> back to a (very powerful) single card config.</p>
    </li>
    <li>
    <p>I wanted to rid myself of the monitor power bricks and USB powered DVI to DisplayPort converters that those Korean monitors required. I covet simple, modern DisplayPort connectors. I was beginning to feel like a bad person because I had never even <em>owned</em> a display that had a DisplayPort connector. First world problems, man.</p>
    </li>
    <li>
    <p>1440p at 27" is decent, but it's also … sort of an awkward no-man's land. Nowhere near high enough resolution to be retina, but it <em>is</em> high enough that you probably want to scale things a bit. After living with this for a few years, I think it's better to just suck it up and deal with giant pixels (34" at 1440p, say), or go with something <em>much</em> more high resolution and trust that everyone is getting their collective act together by now on software support for high DPI.</p>
    </li>
    </ul>
    <p>Given my great experiences with modern high DPI smartphone and tablet displays (are there any other kind these days?), <strong>I want those same beautiful high resolution displays on my desktop, too.</strong> I'm good enough, I'm smart enough, and <a href="https://www.youtube.com/watch?v=-DIETlxquzY">doggone it, people like me</a>.</p>
    <p>I was excited, then, to discover some <a href="https://pcmonitors.info/reviews/asus-pb279q/">strong recommendations</a> for <a href="http://www.amazon.com/dp/B00YWCYKQM/?tag=codihorr-20">the Asus PB279Q</a>.</p>
    <p><a href="http://www.amazon.com/dp/B00YWCYKQM/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2015/08/asus-PB279Q.jpg" alt=""></a></p>
    <p>The <a href="http://www.amazon.com/dp/B00YWCYKQM/?tag=codihorr-20">Asus PB279Q</a> is a 27" panel, same size as my previous cheap Korean IPS monitors, but it is more premium in every regard:</p>
    <ul>
    <li>3840×2160</li>
    <li>"professional grade" color reproduction</li>
    <li>thinner bezel</li>
    <li>lighter weight</li>
    <li>semi-matte (not super glossy)</li>
    <li>integrated power (no external power brick)</li>
    <li>DisplayPort 1.2 and HDMI 1.4 support built in</li>
    </ul>
    <p>It is also a more premium monitor in price, at <strong>around $700</strong>, whereas I got my super-cheap no-frills Korean IPS 1440p monitors for roughly half that price. But when I say no-frills, I mean it – these Korean monitors didn't even have on-screen controls!</p>
    <p>4K is a surprisingly big bump in resolution over 1440p — we go from 3.7 to <strong>8.3 megapixels</strong>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/common-hd-resolutions-compared.png" alt=""></p>
    <p>But, is it … <em>retina?</em></p>
    <p>It depends how you define that term, and from what distance you're viewing the screen. Per <a href="http://isthisretina.com/">Is This Retina</a>:</p>
    <table width="600">
    <tr>
    <td>27" 3840×2160</td>
    <td>'retina' at a viewing distance of <b>21"</b>
    </td>
    </tr>
    <tr>
    <td>27" 2560×1440</td>
    <td>'retina' at a viewing distance of <b>32"</b>
    </td>
    </tr>
    </table>
    <p>With <a href="http://blog.codinghorror.com/computer-workstation-ergonomics/">proper computer desk ergonomics</a> you should be sitting with the top of your monitor at eye level, at about an arm's length in front of you. I just measured my arm and, fully extended, it's about 26". Sitting at <a href="http://blog.codinghorror.com/the-ideal-computer-desk/">my desk</a>, I'm probably about that distance from my monitor or a bit closer, but certainly beyond the 21" necessary to call this monitor 'retina' despite being 163 PPI. It definitely looks that way to my eye.</p>
    <p>I have more words to write here, but let's cut to the chase for the impatient and the TL;DR crowd. <strong>This 4K monitor is totally amazing and <a href="http://www.amazon.com/dp/B00YWCYKQM/?tag=codihorr-20">you should buy one</a>.</strong> It feels exactly like going from the non-retina iPad 2 to the retina iPad 3 did, except on the desktop. It makes all the text on your screen look beautiful. There is almost no downside.</p>
    <p>There are a few caveats, though:</p>
    <ul>
    <li>
    <p>You will need a beefy video card to drive a 4K monitor. I personally <a href="http://www.amazon.com/dp/B00YU72IS6/?tag=codihorr-20">went all out for the GeForce 980 Ti</a>, because I might want to actually game at this native resolution, and the 980 Ti is the undisputed fastest single video card in the world at the moment. If you're not a gamer, any midrange video card should do fine.</p>
    </li>
    <li>
    <p>Display scaling is definitely still a problem at times with a 4K monitor. You <em>will</em> run into apps that don't respect DPI settings and end up magnifying-glass tiny. Scott Hanselman provided <a href="http://www.hanselman.com/blog/LivingAHighDPIDesktopLifestyleCanBePainful.aspx">many examples in January 2014</a>, and although stuff has improved since then with Windows 10, it's far from perfect.</p>
    <p>Browsers scale great, and the OS does too, but if you use any desktop apps built by careless developers, you'll run into this. The only good long term solution is to spread the gospel of 4K and shame them into submission with me. <a href="http://blog.codinghorror.com/are-you-an-evangelist-too/">Preach it</a>, brothers and sisters!</p>
    </li>
    <li>
    <p><strong>Enable DisplayPort 1.2</strong> in the monitor settings so you can turn on 60Hz. Trust me, you <em>do not</em> want to experience a 30Hz LCD display. It is unspeakably bad, enough to put one off computer screens forever. For people who tell you <a href="http://30vs60.com/">they can't see the difference between 30fps and 60fps</a>, just switch their monitors to 30hz and watch them squirm in pain.</p>
    <p><video controls loop width="460" height="358"><source src="http://discourse-cdn.codinghorror.com/uploads/default/original/3X/e/6/e6652f5e30a675ee52bc3e0ccd062f4e9978e09d.mp4"></source></video></p>
    <p>Viewing those comparison videos, I begin to understand why gamers want 90Hz, 120Hz or even 144Hz monitors. 60fps / 60 Hz should be the <em>absolute minimum</em>, no matter what resolution you're running. Luckily DisplayPort 1.2 enables 60 Hz at 4K, but only just. You'll need DisplayPort 1.3+ <a href="http://www.extremetech.com/extreme/199128-vesa-steams-ahead-with-displayport-1-4a-allows-for-8k-scaling">to do better than that</a>.</p>
    </li>
    <li>
    <p>Disable the crappy built in monitor speakers. <a href="http://blog.codinghorror.com/headphone-snobbery/">Headphones or bust</a>, baby!</p>
    </li>
    <li>
    <p>Turn down the brightness from the standard factory default of <a href="http://blog.codinghorror.com/bias-lighting/">retina scorching 100%</a> to something saner like 50%. Why do manufacturers do this? Is it because they hate eyeballs? While you're there, you might mess around with some <a href="http://blog.codinghorror.com/computer-display-calibration-101/">basic display calibration</a>, too.</p>
    </li>
    </ul>
    <p>This <a href="http://www.amazon.com/dp/B00YWCYKQM/?tag=codihorr-20">Asus PB279Q 4K monitor</a> is the <strong>best thing I've upgraded on my computer in years</strong>. Well, actually, thing(s) I've upgraded, because <a href="http://www.theonion.com/article/coworker-with-two-computer-screens-not-fucking-aro-29151">I am not f**ing around over here</a>.</p>
    <p><a href="http://www.colebrookbossonsaunders.com/products/monitor-arm-stand/flo"><img alt="https://blog.codinghorror.com/content/images/2015/08/unnamed.jpg" alt="Flo monitor arms, front view, triple monitors"></a></p>
    <p>I'm a <a href="http://blog.codinghorror.com/three-monitors-for-every-user/">long time proponent of the triple monitor lifestyle</a>, and the only thing better than a 4K display is <em>three 4K displays!</em> That's 11,520×2,160 pixels to you, or 6,480×3,840 if rotated.</p>
    <p>(Good luck attempting to game on this configuration with all three monitors active, though. <a href="http://www.tweaktown.com/tweakipedia/88/nvidia-geforce-gtx-980-ti-4k-surround-6480x3840/index.html">You're gonna need it</a>. Some newer games are too demanding to run on "High" settings on a <em>single</em> 4K monitor, even with the mighty <a href="http://www.amazon.com/dp/B00YU72IS6/?tag=codihorr-20">Nvidia 980 Ti</a>.)</p>
    <p>I've also been experimenting with <a href="http://www.colebrookbossonsaunders.com/products/monitor-arm-stand/flo">better LCD monitor arms</a> that properly support my preferred triple monitor configurations. Here's a picture from the back, where all the action is:</p>
    <p><a href="http://www.colebrookbossonsaunders.com/products/monitor-arm-stand/flo"><img alt="https://blog.codinghorror.com/content/images/2015/08/monitors-rear.jpg" alt="Flo monitor arms, triple monitors, rear view"></a></p>
    <p>These are the <a href="http://www.colebrookbossonsaunders.com/products/monitor-arm-stand/flo">Flo Monitor Supports</a>, and they free up a ton of desk space in a triple monitor configuration while also looking quite snazzy. I'm fond of putting my keyboard <em>just</em> under the center monitor, which isn't possible with any monitor stand.</p>
    <p><a href="http://www.colebrookbossonsaunders.com/products/monitor-arm-stand/flo"><img alt="https://blog.codinghorror.com/content/images/2015/08/flo-monitor-arm-suggested-setups.png" alt="Flo monitor arm suggested multi-monitor setups"></a></p>
    <p>With these Flo arms you can "scale up" your configuration from dual to triple or even quad (!) monitor later.</p>
    <p>4K monitors are here, they're not that expensive, the desktop operating systems and video hardware are in place to properly support them, and in the appropriate size (27") we can finally have <strong>an amazing retina display experience at typical desktop viewing distances</strong>. Choose the <a href="http://www.amazon.com/dp/B00YWCYKQM/?tag=codihorr-20">Asus PB279Q 4K monitor</a>, or whatever 4K monitor you prefer, but take the plunge.</p>
    <p>In 2007, I asked <a href="http://blog.codinghorror.com/where-are-the-high-resolution-displays/">Where Are The High Resolution Displays</a>, and now, 8 years later, they've finally, <em>finally</em> arrived on my desktop. Praise the lord and pass the pixels!</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/common-hd-resolutions-compared-8k.png" alt=""></p>
    <p>Oh, and gird your loins for 8K one day. It, too, <a href="https://www.youtube.com/watch?v=sLprVF6d7Ug">is coming</a>.</p>
    <table> 
    <tr><td class="welovecodinghorror"> 
    [advertisement] Building out your tech team? <a href="http://careers.stackoverflow.com/products" rel="nofollow">Stack Overflow Careers</a> helps you hire from the largest community for programmers on the planet.  We built our site with developers like you in mind.
    </td></tr> 
    </table> <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-08-18T08:39:44.000Z</pubDate>
    <guid>https://blog.codinghorror.com/our-brave-new-world-of-4k-displays/</guid>
    </item>
    <item>
    <title>Welcome to The Internet of Compromised Things</title>
    <link>https://blog.codinghorror.com/welcome-to-the-internet-of-compromised-things/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>This post is a bit of a public service announcement, so I'll get right to the point:</p>
    <blockquote>
    <p>Every time you use WiFi, ask yourself: <strong>could I be connecting to the Internet through a compromised router with malware?</strong></p>
    </blockquote>
    <p>It's becoming more and more common to see malware installed not at the server, desktop, laptop, or smartphone level, but at the <em>router</em> level. Routers have become quite capable, powerful little computers in their own right over the last 5 years, and that means they can, unfortunately, be harnessed to work against you.</p>
    <p>I write about this because <strong>it recently happened to two people I know.</strong></p>
    <blockquote class="twitter-tweet" lang="en">
    <p lang="en" dir="ltr">.<a href="https://twitter.com/jchris">@jchris</a> A friend got hit by this on newly paved win8.1 computer. Downloaded Chrome, instantly infected with malware. Very spooky.</p>— not THE Damien Katz (@damienkatz) <a href="https://twitter.com/damienkatz/status/601169882122584065">May 20, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <blockquote class="twitter-tweet" lang="en">
    <p lang="en" dir="ltr"><a href="https://twitter.com/codinghorror">@codinghorror</a> *no* idea and there’s almost ZERO info out there. Essentially malicious JS adware embedded in every in-app browser</p>— John O'Nolan (@JohnONolan) <a href="https://twitter.com/JohnONolan/status/629510925389856768">August 7, 2015</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>In both cases, they eventually determined the source of the problem was that <strong>the router they were connecting to the Internet through had been compromised</strong>.</p>
    <p>This is way more evil genius than infecting a mere <em>computer</em>. If you can manage to systematically infect common home and business routers, you can potentially compromise <strong>every computer connected to them.</strong></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/muahahaha.jpg" alt=""></p>
    <p>Hilarious meme images I am contractually obligated to add to each blog post aside, this is scary stuff and you should be scared.</p>
    <p>Router malware is the ultimate man-in-the-middle attack. For all meaningful traffic sent through a compromised router <a href="http://blog.codinghorror.com/should-all-web-traffic-be-encrypted/">that isn't HTTPS encrypted</a>, it is 100% game over. The attacker will certainly be sending all that traffic somewhere they can sniff it for anything important: logins, passwords, credit card info, other personal or financial information. And they can direct you to <a href="http://blog.codinghorror.com/phishing-the-forever-hack/">phishing websites</a> at will – if you think you're on the "real" login page for the banking site you use, think again.</p>
    <p>Heck, even if you completely trust the person whose router you are using, they could be technically be doing this to you. But they probably aren't.</p>
    <p>Probably.</p>
    <p>In John's case, the attackers inserted annoying ads in all unencrypted web traffic, which is an obvious tell to a sophisticated user. But how exactly would the average user figure out where this junk is coming from (or worse, assume the regular web is just full of ad junk all the time), when even a technical guy like John – founder of the <a href="https://ghost.org/">open source Ghost blogging software</a> used on this very blog – was flummoxed?</p>
    <p>But that's OK, we're smart users who would <em>only</em> access public WiFi using HTTPS websites, right? Sadly, <strong>even if the traffic <em>is</em> HTTPS encrypted, it can still be subverted!</strong> There's an <a href="https://cryptostorm.org/viewtopic.php?f=67&amp;t=8713">extremely technical blow-by-blow analysis at Cryptostorm</a>, but the TL;DR is this:</p>
    <blockquote>
    <p>Compromised router answers DNS req for *.google.com to 3rd party with faked HTTPS cert, you download malware Chrome. Game over.</p>
    </blockquote>
    <p>HTTPS certificate shenanigans. DNS and BGP manipulation. Very hairy stuff.</p>
    <p>How is this possible? Let's start with the weakest link, your router. Or more specifically, <strong>the programmers responsible for coding the admin interface to your router</strong>.</p>
    <p>They must be terribly incompetent coders to let your router get compromised over the Internet, since one of the major selling points of a router is to act as a basic firewall layer between the Internet and you… right?</p>
    <p>In their defense, that part of a router generally works as advertised. More commonly, you <em>aren't</em> being attacked from the hardened outside. <strong>You're being attacked from the soft, creamy inside.</strong></p>
    <p><a href="http://arstechnica.com/security/2014/03/hackers-hijack-300000-plus-wireless-routers-make-malicious-changes/"><img alt="https://blog.codinghorror.com/content/images/2015/08/csrf-soho-router-attack-1.png" alt=""></a></p>
    <p>That's right, <a href="http://tvtropes.org/pmwiki/pmwiki.php/Main/TheCallsAreComingFromInsideTheHouse"><em>the calls are coming from inside your house!</em></a></p>
    <p>By that I mean you'll visit a malicious website that <strong>scripts your own browser to access the web-based admin pages of your router, and reset (or use the default) admin passwords to reconfigure it.</strong></p>
    <p>Nasty, isn't it? They <a href="http://arstechnica.com/security/2014/03/hackers-hijack-300000-plus-wireless-routers-make-malicious-changes/">attack from the inside using your own browser</a>. But that's not the only way.</p>
    <ul>
    <li>
    <p>Maybe you accidentally turned on remote administration, so your router can be modified from the outside.</p>
    </li>
    <li>
    <p>Maybe you left your router's admin passwords at default.</p>
    </li>
    <li>
    <p>Maybe there is a legitimate external exploit for your router and you're running a very old version of firmware.</p>
    </li>
    <li>
    <p>Maybe your ISP provided your router and made a security error in the configuration of the device.</p>
    </li>
    </ul>
    <p>In addition to being kind of terrifying, this does not bode well for the Internet of Things.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/internet-of-compromised-things.png" alt=""></p>
    <p>Internet of <em>Compromised</em> Things, more like.</p>
    <p>OK, so what can we do about this? There's no perfect answer; I think it has to be a defense in depth strategy.</p>
    <h3 id="insideyourhome">Inside Your Home</h3>
    <p><strong>Buy a new, quality router.</strong> You don't want a router that's years old and hasn't been updated. But on the other hand you also don't want something <em>too</em> new that hasn't been vetted for firmware and/or security issues in the real world.</p>
    <p>Also, any router your ISP provides is going to be about as crappy and "recent" as the awful stereo system you get in a new car. So I say stick with well known consumer brands. There are some hardcore folks who think <a href="http://routersecurity.org/">all consumer routers are trash</a>, so YMMV.</p>
    <p>I can recommend the <a href="http://www.amazon.com/dp/B00MPI5N7U/?tag=codihorr-20">Asus RT-AC87U</a> – it did <a href="http://www.smallnetbuilder.com/tools/rankers/router/result/1689-asus-rtac87u">very well in the SmallNetBuilder tests</a>, Asus is a respectable brand, it's been out a year, and for most people, this is <em>probably</em> an upgrade over what you currently have without being totally bleeding edge overkill. I know it is an upgrade for me.</p>
    <p><a href="http://www.amazon.com/dp/B00MPI5N7U/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2015/08/RT-AC87U-03.jpg" alt=""></a></p>
    <p>(I am also <a href="http://eero.com/">eagerly awaiting Eero</a> as a domestic best of breed device with amazing custom firmware, and have one pre-ordered, but it hasn't shipped yet.)</p>
    <p><strong>Download and install the latest firmware</strong>. Ideally, do this before connecting the device to the Internet. But if you connect and then immediately use the firmware auto-update feature, who am I to judge you.</p>
    <p><strong>Change the default admin passwords</strong>. Don't leave it at the documented defaults, because then it could be potentially scripted and accessed.</p>
    <p><strong>Turn off WPS</strong>. Turns out the Wi-Fi Protected Setup feature intended to make it "easy" to connect to a router by pressing a button or entering a PIN made it … <a href="https://nakedsecurity.sophos.com/2014/09/02/using-wps-may-be-even-more-dangerous/">a bit too easy</a>. This is <em>always</em> on by default, so be sure to disable it.</p>
    <p><strong>Turn off uPNP</strong>. Since we're talking about attacks that come from "inside your house", uPNP offers <a href="http://security.stackexchange.com/questions/38631/what-are-the-security-implications-of-enabling-upnp-in-my-home-router">zero protection as it has no method of authentication</a>. If you need it for specific apps, you'll find out, and you can forward those ports manually as needed.</p>
    <p><strong>Make sure remote administration is turned off.</strong> I've <em>never</em> owned a router that had this on by default, but check just to be double plus sure.</p>
    <p><strong>For Wifi, turn on WPA2+AES and use a long, strong password.</strong>  Again, I feel most modern routers get the defaults right these days, but just check. The password is your responsibility, and <a href="http://blog.codinghorror.com/open-wireless-and-the-illusion-of-security/">password strength matters tremendously</a> for wireless security, so be sure to make it a long one – at least 20 characters with all the variability you can muster.</p>
    <p><strong>Pick a unique SSID.</strong> Default SSIDs just scream <em>hack me, for I have all defaults and a clueless owner</em>. And no, don't bother "hiding" your SSID, <a href="http://www.howtogeek.com/howto/28653/debunking-myths-is-hiding-your-wireless-ssid-really-more-secure/">it's a waste of time</a>.</p>
    <p><strong>Optional: use less congested channels for WiFi.</strong> The default is "auto", but you can sometimes get better performance by picking less used frequencies at the ends of the spectrum. As summarized by official ASUS support reps:</p>
    <ul>
    <li>
    <p>Set 2.4 GHz channel bandwidth to 40 MHz, and change the control channel to 1, 6 or 11.</p>
    </li>
    <li>
    <p>Set 5 GHz channel bandwidth to 80 MHz, and change the control channel to 165 or 161.</p>
    </li>
    </ul>
    <p><strong>Experts only: install an open source firmware.</strong> I discussed this a fair bit in <a href="http://blog.codinghorror.com/because-everyone-still-needs-a-router/">Everyone Needs a Router</a>, but you have to be very careful which router model you buy, and you'll probably need to stick with older models. There are several which are specifically sold to be friendly to open source firmware.</p>
    <h3 id="outsideyourhome">Outside Your Home</h3>
    <p>Well, this one is simple. Assume everything you do outside your home, on a remote network or over WiFi is being monitored by <strong>IBGs</strong>: Internet Bad Guys.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/internet-bad-guy.jpg" alt=""></p>
    <p>I know, kind of an oppressive way to voyage out into the world, but it's better to start out with a defensive mindset, because you could be connecting to anyone's compromised router or network out there.</p>
    <p>But, good news. There are only two key things you need to remember once you're outside, facing down that fiery ball of hell in the sky and armies of IBGs.</p>
    <ol>
    <li>
    <p><strong>Never access anything but HTTPS websites.</strong></p>
    <p>If it isn't available over HTTPS, <em>don't go there!</em></p>
    <p>You might be OK with HTTP if you are not logging in to the website, just browsing it, but even then IBGs could inject malware in the page and potentially compromise your device. And never, ever enter anything over HTTP you aren't 100% comfortable with bad guys seeing and using against you somehow.</p>
    <p>We've made <a href="http://blog.codinghorror.com/should-all-web-traffic-be-encrypted/">tremendous progress in HTTPS Everywhere over the last 5 years</a>, and these days most major websites offer (or even better, force) HTTPS access. So if you just want to quickly check your GMail or Facebook or Twitter, you will be fine, because those services all force HTTPS.</p>
    </li>
    <li>
    <p><strong>If you must access non-HTTPS websites, or you are not sure, <em>always</em> use a VPN</strong>.</p>
    <p>A VPN encrypts all your traffic, so you no longer have to worry about using HTTPS. You do have to worry about <a href="https://torrentfreak.com/can-you-trust-your-vpn-provider-130929/">whether or not you trust your VPN provider</a>, but that's a much longer discussion than I want to get into right now.</p>
    </li>
    </ol>
    <p>It's a good idea to pick a go-to VPN provider so you have one ready and get used to how it works over time. Initially it will feel like a bunch of extra work, and it kinda is, but if you care about your security an encrypt-everything VPN is bedrock. And if you don't care about your security, well, why are you even reading this?</p>
    <p>If it feels like these are both variants of the same rule, <em>always strongly encrypt everything</em>, you aren't wrong. <a href="https://letsencrypt.org/">That's the way things are headed</a>. The math is as sound as it ever was – but unfortunately the people and devices, less so.</p>
    <h3 id="besafeoutthere">Be Safe Out There</h3>
    <p>Until I heard Damien's story and John's story, I had no idea router hardware could be such a huge point of compromise. I didn't realize that you could be innocently visiting a friend's house, and because he happens to be the parent of three teenage boys and the owner of an old, unsecured router that you connect to via WiFi … <em>your</em> life will suddenly get a lot more complicated.</p>
    <p>As the amount of stuff we connect to the Internet grows, we have to understand that <strong>the Internet of Things is a bunch of tiny, powerful computers, too</strong> – and they need the same strong attention to security that our smartphones, laptops, and servers already enjoy.</p>
    <table> 
    <tr><td class="welovecodinghorror"> 
    [advertisement] At Stack Overflow, we help developers learn, share, and grow. Whether you’re looking for your next dream job or looking to build out your team, <a href="http://careers.stackoverflow.com" rel="nofollow">we've got your back</a>.
    </td></tr> 
    </table> <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-08-08T09:59:26.000Z</pubDate>
    <guid>https://blog.codinghorror.com/welcome-to-the-internet-of-compromised-things/</guid>
    </item>
    <item>
    <title>I Tried VR and It Was Just OK</title>
    <link>https://blog.codinghorror.com/i-tried-vr-and-it-was-just-ok/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>It's been about a year and a half since I wrote <a href="http://blog.codinghorror.com/the-road-to-vr/">The Road to VR</a>, and a … few … things have happened since then.</p>
    <ul>
    <li>
    <p>Facebook bought Oculus for a skadillion dollars</p>
    </li>
    <li>
    <p>I have to continually read thinkpieces describing how the mere act of strapping a VR headset on your face is such a transformative, disruptive, rapturous experience that you'll never look at the world the same way again.</p>
    </li>
    </ul>
    <p>I am somewhat OK with the former, although the idea of my heroes John Carmack and Michael Abrash as Facebook employees still raises my hackles. But the latter is more difficult to stomach. And it just doesn't <em>stop</em>.</p>
    <p>For example, <a href="https://www.google.com/search?ie=UTF-8&amp;oe=UTF-8&amp;sourceid=navclient&amp;gfns=1&amp;q=%22Virtual+Reality+Isn%E2%80%99t+Just+About+Games%22">this recent WSJ piece</a>. (I can't link directly to it, you have to click through from Google search results to get past the paywall).</p>
    <blockquote>
    <p>I’ll spare you the rapturous account of the time I sculpted in three dimensions with light, fire, leaves and rainbows inside what felt like a real-life version of a holodeck from “Star Trek.” Writing about VR is like fiction about sex—seldom believable and never up to the task.</p>
    <p>If you really want to understand how compelling VR is, you just have to try it. And I guarantee you will. At some point in the next couple of years, one of your already-converted friends will insist you experience it, the same way someone gave you your first turn at a keyboard or with a touch screen. And it will be no less a transformative experience.</p>
    </blockquote>
    <p>I don't mean to call out the author here. There are a dozen other similarly breathless VR articles I could cite, where an amazing VR wonderland is looming right around the corner for all of us, any day now. And if you haven't tried it, boy, you just don't know! <em>It can't be explained, it must be experienced!</em> There are people who honestly believe that in 5 years nobody will make non-VR games any more. The hype levels are off the charts.</p>
    <p>Well, I <em>have</em> experienced modern VR. A lot. I've tried both the Oculus DK1, the Oculus DK2, and a 360° backpack-and-controllers Survios rig, which looks something like this:</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/N4leQRF3v4g" frameborder="0" allowfullscreen></iframe>
    <p>Based on those experiences, I can't reconcile these hype levels with what I felt. At all. Right now, <strong>VR is not something I'd unconditionally recommend to a fellow avid gamer, much less a casual gamer</strong>.</p>
    <p>To be honest, when I tried the DK1 and DK2, after a few hours of demos and exploration, I couldn't wait to get the headset off. Not because I was motion sick – I don't get motion sick, and never have – but because I was <em>bored</em>. And a little frustrated by control limitations. Not exactly the stuff transformative world-changing disruption is made of.</p>
    <p>Here's what that experience looks like, by the way. You can practically taste the gaming excitement dripping off me.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/jeff_oculus.jpg" alt=""></p>
    <p>And if you don't find watching me experience my virtual world fascinating (although I can't imagine why) I suppose you can enjoy what's on my screen:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/vr-screenshot.jpg" alt=""></p>
    <p>Chroma-shifted, stereographic, fisheye VR gibberish.</p>
    <p>I've always been the first kid on my block to recommend an awesome, transformative gaming experience, from the Atari 2600 to the Kinect. I mean, that's kind of who I am, isn't it? The alpha geek, the guy who owned a Vectrex and thought vector graphics were the cat's pajamas, the guy who bought one of the <a href="http://blog.codinghorror.com/guitar-hero-are-you-ready-to-rock/">first copies of Guitar Hero</a> in 2005 and <a href="http://blog.codinghorror.com/living-the-dream-rock-band/">would not shut up about it</a>. For that matter I dragged my buddies to a VR storefront in Boulder, Colorado circa 1993 <a href="http://blog.codinghorror.com/the-road-to-vr/">so we could play Dactyl Nightmare</a>. And I have to say, in my alpha geek opinion, <strong>modern VR has a <em>long</em> way to go before it'll be ready for the rapturous smartphone levels of adoption that media pundits imply is a few months away.</strong></p>
    <p>I apologize if this comes off as negative, and no, I haven't tried the <a href="https://www.oculus.com/en-us/rift/">magical new VR headset models that are Just Around The Corner and Will Change Everything</a>. I'll absolutely try them when they are available. Let me be clear that <strong>I think the technical challenges around VR are deep, hard, and fascinating</strong>, and I could not be happier that some of the best programmers of our generation are working on this stuff. But from what I've seen and experienced to date, there is just no way that VR is going to be remotely mainstream in 5 years. I'm doubtful that can happen in a decade or even two decades, to be honest, but a smart person always hedges their bets when trying to predict the future.</p>
    <p>I think the current state of VR, or at least the "strap a nice smartphone or two on your face" version of it, has quite a few fundamental physical problems to deal with before it has any chance of being mainstream.</p>
    <h4 id="itshouldbeasconvenientasapairofglasses">It should be as convenient as a pair of glasses</h4>
    <p>Nobody "enjoys" strapping two pounds of stuff on their face unless they are in a hazardous materials situation. We can barely get people to wear bicycle helmets, and yet they are going to be lining up around the block to slap this awkward, gangly VR contraption on their head? Existing VR headsets get awfully sweaty after 30 minutes of use, and they're also difficult to fit over glasses. The idea of gaming with a heavy, sweaty, uncomfortable headset on for hours at a time isn't too appealing – and that's coming from a guy who thinks nothing of spending 6 hours in a gaming jag with headphones on.</p>
    <p>For VR to be quick and easy and pervasive, the headset would need to be so miniaturized as to be basically invisible – akin to putting on a cool pair of sunglasses.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/JI8AMRbqY6w" frameborder="0" allowfullscreen></iframe>
    <p>Maybe current VR headsets are like the <a href="https://en.wikipedia.org/wiki/Motorola_DynaTAC">old brick cellphones</a> from the 90's. The question is, how quickly can they get from 1990 to 2007?</p>
    <h4 id="itshouldbewireless">It should be wireless</h4>
    <p>The world has been inexorably moving towards wireless everything, but in this regard VR headsets are a glorious throwback to science fiction movies from the 1970s. Your VR headset and everything else on it will be physically wired, in multiple ways, to a powerful computer. Wires, wires, everywhere, as far as your eyes … can't see.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/brainstorm-Walken.jpg" alt=""></p>
    <p>Even the cheaper VR headsets that let you drop a high end smartphone in for a limited VR experience have to be wired to power, as phone batteries are not built for the continuous heavy-duty CPU and GPU rendering that VR requires. Overheating is a very real problem, too.</p>
    <p>Wireless video is hard to do well, particularly at the 1440p resolutions that are the absolute minimum for practical VR. On top of that, good VR requires much higher framerates, ideally 120fps. That kind of ultra low latency, super high resolution video delivered wirelessly, is quite far off.</p>
    <h4 id="itshouldhave4kresolution">It should have 4k resolution</h4>
    <p>Since the VR device you're looking at is inches from your eyes – and the resolution is effectively divided in half for each eye (there are a few emerging VR headsets that use two smartphones here instead of one) – an <em>extremely</em> high resolution screen is needed to achieve effective visual resolutions that are ancient by modern computer standards.</p>
    <p>The Oculus DK1 at 720p was so low resolution that I consider it borderline unusable even as a demo unit. I'd estimate that it felt roughly DOOM resolution, or <strong>320×240</strong>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/doom-screenshot-2x.png" alt=""></p>
    <p>The DK2 at 1080p was marginally better, but the pixelation and shimmer was quite bad, a serious distraction from immersion. It felt roughly Quake resolution, or <strong>640×480</strong>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/quake-1-640x480.jpg" alt=""></p>
    <p>I know many upcoming VR devices are 1440p or 2560×1440. I strongly suspect that, in practice, is going to feel like yet another mild bump to effective <strong>1024×768</strong> resolution.</p>
    <p>I'm used to modern games and modern graphics resolutions. Putting on a VR headset shouldn't be a one-way ticket to jarring, grainy, pixelated graphics the like of which I haven't seen since 1999. There are definitely <a href="http://www.techradar.com/us/news/phone-and-communications/mobile-phones/is-this-the-world-s-first-4k-smartphone--1296316">4k smartphones out there</a> on the horizon which could solve this problem, but the power required to drive them, by that I mean the CPU, GPU, and literal battery power – is far from trivial.</p>
    <p>(And did I mention it needs to be a minimum of 60fps, ideally 120fps for the best VR experience? I'm pretty sure I mentioned that.)</p>
    <p>Still, the 4k resolution problem is probably the closest to being reasonably solved on current hardware trajectories in about five years or so, albeit driven by very high end hardware, not a typical smartphone, which brings me to …</p>
    <h4 id="itshouldnotrequireahighendgamingpcorfuturegenconsole">It should not require a high end gaming PC or future gen console</h4>
    <p>VR has <em>massive</em> CPU and GPU system requirements, somewhat beyond what you'd need for the latest videogames running at 4k resolutions. Which means by definition cutting edge VR is developed with, and best experienced on, a high end Windows PC.</p>
    <p>Imagine the venture capitalists who invested in Oculus, who have probably been Mac-only since the early aughts, trying to scrounge together a gaming PC so they can try this crazy new VR thing they just invested in. That's some culture shock.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/ugly-gaming-pc.jpeg" alt=""></p>
    <p>Current generation consoles such as the Xbox One and PS4 may be fine with (most) games running at 1080p, on the PS4 at least, but they are both <em>woefully</em> under-specced to do VR in both GPU and CPU power. That's bad news if you expect VR to be mainstream in the lifetime of these new consoles over the next 5-8 years, and were counting on the console market to get there.</p>
    <p>VR on current generation consoles will be a slow, crippled, low resolution affair, about on the level of the Oculus DK2 at best. You'll be waiting quite a while for the next generation of consoles beyond these to deliver decent VR.</p>
    <h4 id="handsglovesmustbesupported">Hands (Gloves?) must be supported</h4>
    <p>I was extremely frustrated by the lack of control options in the Oculus DK1 and DK2. Here I was looking around and exploring this nifty VR world, but to do <em>anything</em> I had to tap a key on my keyboard, or move and click my mouse. Talk about breaking immersion. They bundle an Xbox controller with the upcoming Rift, which is no better. Experiencing VR with a mouse is like playing Guitar Hero with a controller.</p>
    <p>The most striking thing about <a href="https://www.youtube.com/embed/N4leQRF3v4g">the Survios demo rig I tried</a> was the way I could use my hands to manipulate things in the VR world. <strong>Adding hands to VR was revelatory, the one bit of VR I've experienced to date that I can honestly say I was blown away by.</strong> I could reach out and grab objects, rotate things in my hands and move them close to my face to look at them, hold a shotgun and cock it with two hands, and so forth. With my hands, it was <em>amazing</em>.  The primary controllers you should need in VR are the ones you were born with: your hands.</p>
    <p><strong>A virtual world experienced with just your head is quite disappointing and passive, like a movie or an on-rails ride.</strong> But add hands, and suddenly <em>you are there</em> because you can now <em>interact</em> with that VR world in a profoundly human way: by touching it. I could see myself playing story exploration games like <a href="http://www.gonehomegame.com/">Gone Home</a> in VR, if I can use my hands – to manipulate things, to look at them and open them and turn them in my hands and check them out. It was incredible. Manipulating that world with my hands made it infinitely more real.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/oculus-touch1.jpg" alt=""></p>
    <p>The good news is that there are solutions like <a href="http://gizmodo.com/oculus-touch-hands-on-so-damn-good-1712031397">Oculus Touch</a>. The bad news is that's it's not bundled by default, but should be. This device tracks hand position, plus rotation, and adds some buttons for interaction. Even better would be simple gloves you could wear that visually tracked each finger – but sometimes you do need a button, because if you are holding a gun (or a flashlight) you need to indicate that you fired a gun (or turned on the flashlight) which would be quite hairy to track via finger movement alone.</p>
    <p>I'm optimistic that VR and hand control will hopefully become synonymous, otherwise we're locking ourselves into a "just look around you" mindset, which leads to crappy, passive VR that's little more than a different kind of IMAX 3D movie.</p>
    <h4 id="itmustcompetewithmature2dentertainment">It must compete with mature 2D entertainment</h4>
    <p>I get frustrated talking to people who act like VR exists in a vacuum, that there are suddenly no other experiences worth having unless they happen in glorious stereo 3D.</p>
    <p>I've experimented with stereo 3D on computers since the days of junky battery powered LCD shutter glasses. And we all know the world has experienced the glory of 3D television … and collectively turned its head and said <em>meh</em>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/3D-Technology.png" alt=""></p>
    <p><strong>Experiencing something in 3D, in and of itself, is just not that compelling.</strong> If it was, people would have scarfed up 3D TVs, see only 3D movies, and play only 3D video games on their PCs and consoles regularly. The technology to do it is there, battle tested, and completely mature. I know because I saw Captain EO at Epcot Center in 3D way back in 1985, and it was amazing <em>thirty years ago!</em></p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/MCXgORuMvyw" frameborder="0" allowfullscreen></iframe>
    <p>I recently saw Gravity in IMAX 3D and I liked it, but it didn't transform my moviegoing experience such that I could never imagine seeing another boring flat 2D movie ever again.</p>
    <p>People have so many wonderful social experiences gathered around common 2D screens. Watching a movie, watching a TV show, watching someone play a game. These are fundamentally joyous, shared human experiences. For this to work with VR is kinda-sorta possible, but difficult, because:</p>
    <ul>
    <li>
    <p>You need a proper flat 2D representation of what the VR user is seeing</p>
    </li>
    <li>
    <p>That 2D representation must be broadcast on the primary display device</p>
    </li>
    </ul>
    <p>VR is ultra resource intensive already, so rendering yet another copy of the scene at reasonable framerates (say, constant 60fps) isn't going to be easy. Or free.</p>
    <p>On top of that, the VR user is probably wearing headphones, holding a pair of hand controllers, and can't see anything, so they can't interact with anyone who is physically there very well.</p>
    <p>I've had <em>incredible</em> gaming experiences on 2D screens. I recently played <a href="http://www.alienisolation.com/">Alien: Isolation</a>, or as I like to call it, Pants Crapping Simulator 3000, and I thought it was one of the most beautiful, immersive, and downright goddamn terrifying gameplay experiences I've had in years. I was starring in a survival horror movie – it felt like I was <em>there</em> in every sense of the word.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/NPqtu_pJl1Q" frameborder="0" allowfullscreen></iframe>
    <p>At no point did I think to myself "this would be better in 3D". In many ways, it would have been <em>worse</em>.</p>
    <h4 id="goodgodmandoyouevershutup">Good God man, do you ever shut up?</h4>
    <p>Sorry. I had some things to get off my chest with regards to VR. I'll wrap it up.</p>
    <p>I apologize, again, if this post seems negative. Writing this, I actually got a little more excited about VR. I can see how far it has to come to match its potential, because the technical problems it presents are quite hard – and those are the most fun problems to attack.</p>
    <p>I guess I might be the only person left on Earth who said, hey, <strong>I tried VR and it was just OK</strong>. I think VR ought to be a hell of a lot better, and <em>has</em> to be if it wants to be truly pervasive.</p>
    <table> 
    <tr><td class="welovecodinghorror"> 
    [advertisement] At Stack Overflow, we put developers first. We already help you find answers to your tough coding questions; now let us help you <a href="http://careers.stackoverflow.com" rel="nofollow">find your next job</a>.
    </td></tr> 
    </table> <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-08-05T10:28:50.000Z</pubDate>
    <guid>https://blog.codinghorror.com/i-tried-vr-and-it-was-just-ok/</guid>
    </item>
    <item>
    <title>Doing Terrible Things To Your Code</title>
    <link>https://blog.codinghorror.com/doing-terrible-things-to-your-code/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>In 1992, I thought <a href="http://blog.codinghorror.com/why-im-the-best-programmer-in-the-world/">I was the best programmer in the world</a>. In my defense, I had just graduated from college, this was pre-Internet, and I lived in Boulder, Colorado working in small business jobs where I was lucky to even <em>hear</em> about other programmers much less meet them.</p>
    <p>I eventually fell in with a guy named Bill O'Neil, who hired me to do contract programming. He formed a company with the regrettably generic name of <em>Computer Research &amp; Technologies</em>, and we proceeded to work on various gigs together, building line of business CRUD apps in Visual Basic or FoxPro running on Windows 3.1 (and sometimes DOS, though we had a sense by then that this new-fangled GUI thing was here to stay).</p>
    <p>Bill was the first professional programmer I had ever worked with. Heck, for that matter, he was the first <em>programmer</em> I ever worked with. He'd spec out some work with me, I'd build it in Visual Basic, and then I'd hand it over to him for review. He'd then calmly proceed to utterly <em>demolish</em> my code:</p>
    <ul>
    <li>Tab order? Wrong.</li>
    <li>Entering a number instead of a string? Crash.</li>
    <li>Entering a date in the past? Crash.</li>
    <li>Entering too many characters? Crash.</li>
    <li>UI element alignment? Off.</li>
    <li>Does it work with unusual characters in names like, say, <code>O'Neil</code>? Nope.</li>
    </ul>
    <p>One thing that surprised me was that the code itself was rarely the problem. He occasionally had some comments about the way I wrote or structured the code, but <strong>what I clearly had no idea about is <em>testing</em> my code.</strong></p>
    <p>I dreaded handing my work over to him for inspection. I slowly, painfully learned that the truly difficult part of coding is dealing with the thousands of ways things can go wrong with your application at any given time – most of them user related.</p>
    <p><a href="http://www.mrlovenstein.com/comic/364"><img alt="https://blog.codinghorror.com/content/images/2015/07/364_placebo_effective.png" alt=""></a></p>
    <p>That was my first experience with <a href="http://blog.codinghorror.com/whos-your-coding-buddy/">the buddy system</a>, and thanks to Bill, I came out of that relationship with a deep respect for software craftsmanship. I have no idea what Bill is up to these days, but I tip my hat to him, wherever he is. I didn't always enjoy it, but learning to develop discipline around testing (and breaking) my own stuff unquestionably made me a better programmer.</p>
    <p>It's tempting to lay all this responsibility at the feet of the mythical QA engineer.</p>
    <blockquote class="twitter-tweet" lang="en">
    <p lang="nl" dir="ltr">QA Engineer walks into a bar. Orders a beer. Orders 0 beers. Orders 999999999 beers. Orders a lizard. Orders -1 beers. Orders a sfdeljknesv.</p>— Bill Sempf (@sempf) <a href="https://twitter.com/sempf/status/514473420277694465">September 23, 2014</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>If you are ever lucky enough to work with one, <a href="http://blog.codinghorror.com/making-developers-cry-since-1995/">you should have a very, <em>very</em> healthy fear of professional testers</a>. They are terrifying. Just scan this <a href="http://blogs.msdn.com/b/micahel/archive/2004/07/07/did-i-remember-to.aspx">"Did I remember to test" list</a> and you'll be having the worst kind of flashbacks in no time. And that's the <em>abbreviated</em> version of his list.</p>
    <p>I believe a key turning point in every professional programmer's working life is when you realize <a href="http://blog.codinghorror.com/on-the-meaning-of-coding-horror/">you are your own worst enemy</a>, and the only way to mitigate that threat is to embrace it. <em>Act</em> like your own worst enemy. <strong>Break your UI. Break your code. Do <em>terrible</em> things to your software.</strong></p>
    <p>This means programmers need a good working knowledge of at least the <em>common</em> mistakes, the frequent cases that average programmers tend to miss, to work against. You are tester zero. This is your responsibility.</p>
    <p>Let's start with Patrick McKenzie's classic <a href="http://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/">Falsehoods Programmers Believe about Names</a>:</p>
    <ol>
    <li>People have exactly one canonical full name.</li>
    <li>People have exactly one full name which they go by.</li>
    <li>People have, at this point in time, exactly one canonical full name.</li>
    <li>People have, at this point in time, one full name which they go by.</li>
    <li>People have exactly N names, for any value of N.</li>
    <li>People’s names fit within a certain defined amount of space.</li>
    <li>People’s names do not change.</li>
    <li>People’s names change, but only at a certain enumerated set of events.</li>
    <li>People’s names are written in ASCII.</li>
    <li>People’s names are written in any single character set.</li>
    </ol>
    <p>That's just the first 10. There are <a href="http://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/">thirty more</a>. Plus a lot in the comments if you're in the mood for extra credit. Or, how does <a href="http://infiniteundo.com/post/25326999628/falsehoods-programmers-believe-about-time">Falsehoods Programmers Believe About Time</a> grab you?</p>
    <ol>
    <li>There are always 24 hours in a day.</li>
    <li>Months have either 30 or 31 days.</li>
    <li>Years have 365 days.</li>
    <li>February is always 28 days long.</li>
    <li>Any 24-hour period will always begin and end in the same day (or week, or month).</li>
    <li>A week always begins and ends in the same month.</li>
    <li>A week (or a month) always begins and ends in the same year.</li>
    <li>The machine that a program runs on will always be in the GMT time zone.</li>
    <li>Ok, that’s not true. But at least the time zone in which a program has to run will never change.</li>
    <li>Well, surely there will never be a change to the time zone in which a program has to run in production.</li>
    <li>The system clock will always be set to the correct local time.</li>
    <li>The system clock will always be set to a time that is not wildly different from the correct local time.</li>
    <li>If the system clock is incorrect, it will at least always be off by a consistent number of seconds.</li>
    <li>The server clock and the client clock will always be set to the same time.</li>
    <li>The server clock and the client clock will always be set to around the same time.</li>
    </ol>
    <p>Are there more? Of <a href="http://infiniteundo.com/post/25326999628/falsehoods-programmers-believe-about-time">course there are</a>! There's even <a href="http://infiniteundo.com/post/25509354022/more-falsehoods-programmers-believe-about-time">a whole additional list of stuff <em>he</em> forgot</a> when he put that giant list together.</p>
    <p><a href="http://www.stilldrinking.org/programming-sucks"><img alt="https://blog.codinghorror.com/content/images/2015/07/code-horror-1.png" alt="Catastrophic Error - User attempted to use program in the manner program was meant to be used"></a></p>
    <p>I think you can see where this is going. This is programming. <a href="http://www.stilldrinking.org/programming-sucks">We do this stuff for fun, remember?</a></p>
    <p>But in true made-for-TV fashion, wait, there's more! Seriously, guys, where are you going? Get back here. We have more awesome failure states to learn about:</p>
    <ul>
    <li>
    <p><a href="http://wiesmann.codiferes.net/wordpress/?p=15187&amp;lang=en">Falsehoods Programmers Believe About Geography</a></p>
    </li>
    <li>
    <p><a href="https://www.mjt.me.uk/posts/falsehoods-programmers-believe-about-addresses/">Falsehoods Programmers Believe About Addresses</a></p>
    </li>
    <li>
    <p><a href="http://www.cscyphers.com/blog/2012/06/28/falsehoods-programmers-believe-about-gender/">Falsehoods Programmers Believe About Gender</a></p>
    </li>
    </ul>
    <p>At this point I wouldn't blame you if you decided to <a href="http://blog.codinghorror.com/so-you-dont-want-to-be-a-programmer-after-all/">quit programming altogether</a>. But I think it's better if we learn to do for each other what Bill did for me, twenty years ago — teach less experienced developers that <strong>a good programmer knows they <em>have</em> to do terrible things to their code</strong>. Do it because if you don't, I guarantee you other people will, and when they do, they will either walk away or create a support ticket. I'm not sure which is worse.</p>
    <table> 
    <tr><td class="welovecodinghorror"> 
    [advertisement] <a href="http://careers.stackoverflow.com" rel="nofollow">Find a better job the Stack Overflow way</a> - what you need when you need it, no spam, and no scams.
    </td></tr> 
    </table> 
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-07-30T08:31:49.000Z</pubDate>
    <guid>https://blog.codinghorror.com/doing-terrible-things-to-your-code/</guid>
    </item>
    <item>
    <title>What is Trolling?</title>
    <link>https://blog.codinghorror.com/what-is-trolling/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>If you engage in discussion on the Internet long enough, you're bound to encounter it: someone calling someone else a troll.</p>
    <p>The common interpretation of Troll is the Grimms' Fairy Tales, Lord of the Rings, "hangs out under a bridge" type of troll.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/04/obvious-troll-is-obvious.jpg" alt=""></p>
    <p>Thus, a troll is someone who exists to hurt people, cause harm, and break a bunch of stuff because that's something brutish trolls just … do, isn't it?</p>
    <p>In that sense, calling someone a Troll is not so different from the pre-Internet tactic of calling someone a monster – implying that they lack all the self-control and self-awareness a normal human being would have.</p>
    <p>Pretty harsh.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/04/no-trolls.png" alt=""></p>
    <p>That might be what the term is evolving to mean, but it's not the original intent.</p>
    <p>The <em>original</em> definition of troll was <a href="http://www.merriam-webster.com/dictionary/troll">not a beast, but a fisherman</a>:</p>
    <blockquote>
    <p><strong>Troll</strong></p>
    <p><em>verb</em> \ˈtrōl\</p>
    <ol>
    <li>
    <p>to fish with a hook and line that you pull through the water</p>
    </li>
    <li>
    <p>to search for or try to get (something)</p>
    </li>
    <li>
    <p>to search through (something)</p>
    </li>
    </ol>
    </blockquote>
    <p>If you're curious why the fishing metaphor is so apt, check out this interview:</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/GrsJDy8VjZk" frameborder="0" allowfullscreen></iframe>
    <p>There's so much fishing going on here someone should have probably applied for a permit first.</p>
    <ul>
    <li>
    <p><strong>He engages in the interview just enough to get the other person to argue.</strong> From there, he fishes for anything that can nudge the argument into some kind of car wreck that everyone can gawk at, generating lots of views and publicity.</p>
    </li>
    <li>
    <p><strong>He isn't interested in learning anything about the movie</strong>, or getting any insight, however fleeting, into this celebrity and how they approached acting or directing. Those are perfunctory concerns, quickly discarded on the way to their true goal: generating controversy, the more the better.</p>
    </li>
    </ul>
    <p>I almost feel sorry for Quentin Tarantino, who is so obviously passionate about what he does, because this guy is a classic troll.</p>
    <ol>
    <li>He came to generate argument.</li>
    <li>He doesn't truly care about the topic.</li>
    </ol>
    <p>Some trolls can <em>seem</em> to care about a topic, because they hold extreme views on it, and will hold forth at great length on said topic, in excruciating detail, to anyone who will listen. For days. Weeks. Months. But this is an illusion.</p>
    <p>The most striking characteristic of the worst trolls is that their position on a given topic is absolutely written in stone, immutable, and they will defend said position to the death in the face of any criticism, evidence, or reason.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/04/are-you-not-entertained.jpg" alt=""></p>
    <p>Look. I'm not new to the Internet. I know nobody has ever convinced anybody to change their mind about anything through mere online discussion before. It's unpossible.</p>
    <p>But I love discussion. And in any discussion that has a purpose other than gladiatorial opinion bloodsport, the most telling question you can ask of anyone is this:</p>
    <blockquote>
    <p><em>Why are you here?</em></p>
    </blockquote>
    <p>Did you join this discussion to learn? To listen? To understand other perspectives? Or are you here to berate us and recite your talking points over and over? Are you more interested in fighting over who is right than actually communicating?</p>
    <p>If you <em>really</em> care about a topic, you should want to learn as much as you can about it, to understand its boundaries, and the endless perspectives and details that make up any interesting topic. Heck, I don't even <em>want</em> anyone to change your mind. But you do have to demonstrate to us that you are at least <em>somewhat</em> willing to entertain other people's perspectives, and potentially evolve your position on the topic to a more nuanced, complex one over time.</p>
    <p>In other words, <strong>are you here in good faith?</strong></p>
    <p>People whose actions demonstrate that they are participating in bad faith – whether they are on the "right" side of the debate or not – <a href="http://blog.codinghorror.com/your-community-door/">need to be shown the door</a>.</p>
    <p>So now you know how to identify a troll, at least by the classic definition. But how do you handle a troll?</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/gYrporR9hHE" frameborder="0" allowfullscreen></iframe>
    <p><strong>You walk away.</strong></p>
    <p>I'm afraid I don't have anything uniquely insightful to offer over that old chestnut, "Don't feed the trolls." Responding to a troll just gives them evidence of their success for others to enjoy, and powerful incentive to try it again to get a rise out of the next sucker and satiate their perverse desire for opinion bloodsport. Someone has to break the chain.</p>
    <p>I'm all for giving people the benefit of the doubt. Just because someone has a controversial opinion, or seems kind of argumentative (<a href="http://blog.codinghorror.com/in-defense-of-the-smackdown-learning-model/">guilty</a>, by the way), doesn't automatically make them a troll. But their actions over time <em>might</em>.</p>
    <p>(I also recognize that in matters of social justice, <a href="http://www.dailydot.com/opinion/phillips-dont-feed-trolls-antisocial-web/">there is sometimes value in speaking out and speaking up</a>, versus walking away.)</p>
    <p>So the next time you encounter someone who can't stop arguing, who seems unable to generate anything other than heat and friction, whose actions amply demonstrate that they are no longer participating in the conversation in good faith … just walk away. Don't take the bait.</p>
    <p>Even if sometimes, that troll is you.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-04-30T08:11:15.000Z</pubDate>
    <guid>https://blog.codinghorror.com/what-is-trolling/</guid>
    </item>
    <item>
    <title>Your Password is Too Damn Short</title>
    <link>https://blog.codinghorror.com/your-password-is-too-damn-short/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I'm a <a href="https://www.google.com/webhp?ie=UTF-8#q=site:codinghorror.com+passwords">little tired of writing about passwords</a>. But like taxes, email, and pinkeye, they're not going away any time soon. Here's what I know to be true, and backed up by plenty of empirical data:</p>
    <ul>
    <li>
    <p>No matter what you tell them, users will always choose simple passwords.</p>
    </li>
    <li>
    <p>No matter what you tell them, users will re-use the same password over and over on multiple devices, apps, and websites. If you are lucky they might use a couple passwords instead of the same one.</p>
    </li>
    </ul>
    <p>What can we do about this as developers?</p>
    <ul>
    <li>
    <p><strong>Stop requiring passwords altogether</strong>, and let people log in with Google, Facebook, Twitter, Yahoo, or any other valid form of <a href="http://blog.codinghorror.com/your-internet-drivers-license/">Internet driver's license</a> that you're comfortable supporting. The best password is <a href="http://blog.codinghorror.com/the-god-login/">one you don't have to store</a>.</p>
    </li>
    <li>
    <p>Urge browsers to support <a href="http://blog.codinghorror.com/cutting-the-gordian-knot-of-web-identity/">automatic, built-in password generation and management</a>. Ideally supported by the OS as well, but this requires cloud storage and everyone on the same page, and that seems most likely to me per-browser. Chrome, at least, is <a href="https://www.chromium.org/developers/design-documents/password-generation">moving in this direction</a>.</p>
    </li>
    <li>
    <p>Nag users at the time of signup when they enter passwords that are …</p>
    <ul>
    <li>
    <p>Too short: <code>UY7dFd</code></p>
    </li>
    <li>
    <p>Lack sufficient entropy: <code>aaaaaaaaa</code></p>
    </li>
    <li>
    <p>Match common dictionary words: <code>anteaters1</code></p>
    </li>
    </ul>
    </li>
    </ul>
    <p>This is commonly done with <a href="https://blogs.dropbox.com/tech/2012/04/zxcvbn-realistic-password-strength-estimation/">an ambient password strength meter</a>, which provides real time feedback as you type.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/04/password-strength-meters.png" alt=""></p>
    <p>If you can't avoid storing the password – the first two items I listed above are both about <strong>avoiding the need for the user to select a 'new' password altogether</strong> – then showing an estimation of password strength as the user types is about as good as it gets.</p>
    <p>The easiest way to build a safe password is to make it long. All other things being equal, the law of exponential growth means a longer password is a better password. That's why I was <a href="http://blog.codinghorror.com/passphrase-evangelism/">always a fan of passphrases</a>, though they are exceptionally painful to enter via touchscreen in our brave new world of mobile – and that is an increasingly critical flaw. <strong>But how short is too short?</strong></p>
    <p>When we built <a href="http://www.discourse.org">Discourse</a>, I had to select an absolute minimum password length that we would accept. I chose a default of 8, based on what I knew from my <a href="http://blog.codinghorror.com/speed-hashing/">speed hashing research</a>. An eight character password isn't <em>great</em>, but as long as you use a reasonable variety of characters, it should be sufficiently resistant to attack.</p>
    <p>By attack, I don't mean an attacker automating a web page or app to repeatedly enter passwords. There is some of this, for <a href="http://arstechnica.com/security/2015/01/yes-123456-is-the-most-common-password-but-heres-why-thats-misleading/">extremely common passwords</a>, but that's unlikely to be a practical attack on many sites or apps, as they tend to have rate limits on how often and how rapidly you can try different passwords.</p>
    <p>What I mean by attack is <strong>a high speed offline attack on the hash of your password</strong>, where an attacker gains access to a database of leaked user data. This kind of leak happens all the time. And it will continue to happen forever.</p>
    <p>If you're really unlucky, the developers behind that app, service, or website stored the password in plain text. This thankfully doesn't happen too often any more, <a href="http://plaintextoffenders.com/">thanks to education efforts</a>. Progress! But even if the developers did properly store a hash of your password instead of the actual password, you better pray they used a really slow, complex, memory hungry hash algorithm, <a href="http://codahale.com/how-to-safely-store-a-password/">like bcrypt</a>. And that they selected a <a href="http://security.stackexchange.com/questions/3959/recommended-of-iterations-when-using-pkbdf2-sha256/3993">high number of iterations</a>. Oops, sorry, that was written in the dark ages of 2010 and is now out of date. I <a href="http://chargen.matasano.com/chargen/2015/3/26/enough-with-the-salts-updates-on-secure-password-schemes.html">meant to say scrypt</a>. Yeah, <a href="http://en.wikipedia.org/wiki/Scrypt">scrypt</a>, that's the ticket.</p>
    <p>Then we're safe? Right? Let's see.</p>
    <ul>
    <li>
    <p>Start with a <a href="https://www.random.org/passwords/">a truly random 8 character password</a>. Note that 8 characters is the default size of the generator, too. I got <code>U6zruRWL</code>.</p>
    </li>
    <li>
    <p>Plug it into the <a href="https://www.grc.com/haystack.htm">GRC password crack checker</a>.</p>
    </li>
    <li>
    <p>Read the "Massive Cracking Array" result, which is <strong>2.2 seconds</strong>.</p>
    </li>
    <li>
    <p>Go lay down and put a warm towel over your face.</p>
    </li>
    </ul>
    <p>You might read this and think that a massive cracking array is something that's hard to achieve. I regret to inform you that building an array of, say, 24 consumer grade GPUs that are optimized for speed hashing, is <em>well</em> within the reach of the average law enforcement agency and pretty much any small business that can afford a $40k equipment charge. No need to buy when you can rent – plenty of GPU equipped cloud servers these days. Beyond that, imagine what a motivated nation-state could bring to bear. The mind boggles.</p>
    <p><a href="https://fsfe.org/contribute/spreadtheword.html"><img alt="https://blog.codinghorror.com/content/images/2015/04/there-is-no-cloud.png" alt=""></a></p>
    <p>Even if you don't believe me, <em>but you should</em>, the offline fast attack scenario, much easier to achieve, was hardly any better at <strong>37 minutes</strong>.</p>
    <p>Perhaps you're a skeptic. That's great, <a href="http://skeptics.stackexchange.com/">me too</a>. What happens when we try a longer random.org password on the massive cracking array?</p>
    <table width="300px">
    <tr>
    <td>9 characters</td>
    <td>2 minutes</td>
    </tr>
    <tr>
    <td>10 characters</td>
    <td>2 hours</td>
    </tr>
    <tr>
    <td>11 characters</td>
    <td>6 days</td>
    </tr>
    <tr>
    <td>12 characters</td>
    <td>1 year</td>
    </tr>
    <tr>
    <td>13 characters</td>
    <td>64 years</td>
    </tr>
    </table>
    <p>The random.org generator is "only" uppercase, lowercase, and number. What if we add special characters, to <a href="http://blog.codinghorror.com/regex-use-vs-regex-abuse/">keep Q*Bert happy</a>?</p>
    <table width="300px">
    <tr>
    <td>8 characters</td>
    <td>1 minute</td>
    </tr>
    <tr>
    <td>9 characters</td>
    <td>2 hours</td>
    </tr>
    <tr>
    <td>10 characters</td>
    <td>1 week</td>
    </tr>
    <tr>
    <td>11 characters</td>
    <td>2 years</td>
    </tr>
    <tr>
    <td>12 characters</td>
    <td>2 centuries</td>
    </tr>
    </table>
    <p>That's a bit better, but you can't really feel safe until the 12 character mark even with a full complement of uppercase, lowercase, numbers, <em>and</em> special characters.</p>
    <p>It's unlikely that massive cracking scenarios will get any slower. While there is definitely a password length where all cracking attempts fall off an exponential cliff that is effectively unsurmountable, these numbers will only get <em>worse</em> over time, not better.</p>
    <p>So after all that, here's what I came to tell you, the poor, beleagured user:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/04/your-password-is-too-damn-short.jpg" alt=""></p>
    <p><strong>Unless your password is at <em>least</em> 12 characters, you are vulnerable.</strong></p>
    <p>That should be the minimum password size you use on any service. Generate your password with some kind of offline generator, <a href="http://world.std.com/~reinhold/diceware.html">with diceware</a>, or your own home-grown method of adding words and numbers and characters together – whatever it takes, but <em>make sure your passwords are all at least 12 characters</em>.</p>
    <p>Now, to be fair, as I alluded to earlier all of this does <a href="http://chargen.matasano.com/chargen/2015/3/26/enough-with-the-salts-updates-on-secure-password-schemes.html">depend heavily on the hashing algorithm that was selected</a>. But you have to assume that every password you use will be hashed with the lamest, fastest hash out there. One that is <a href="https://hashcat.net/forum/thread-3687.html">easy for GPUs to calculate</a>. There's a <em>lot</em> of old software and systems out there, and will be for a long, long time.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/04/gpu-tries-per-sec.png" alt=""></p>
    <p>And for developers:</p>
    <ol>
    <li>
    <p>Pick your new password hash algorithms carefully, and move all your old password hashing systems to much harder to calculate hashes. <strong>You need hashes that are <em>specifically designed to be hard to calculate on GPUs</em>, like scrypt.</strong></p>
    </li>
    <li>
    <p>Even if you pick the "right" hash, you may be vulnerable if your work factor isn't high enough. Matsano recommends the following:</p>
    </li>
    </ol>
    <ul>
    <li>
    <p>scrypt: <code>N=2^14, r=8, p=1</code></p>
    </li>
    <li>
    <p>bcrypt: <code>cost=11</code></p>
    </li>
    <li>
    <p>PBKDF2 with SHA256: <code>iterations=86,000</code></p>
    </li>
    </ul>
    <p>But those are just guidelines; <strong>you have to scale the hashing work to what's available and reasonable on <em>your</em> servers or devices.</strong> For example, we had a minor denial of service bug in Discourse where we allowed people to enter up to 20,000 character passwords in the login form, and calculating the hash on that took, uh … several seconds.</p>
    <p>Now if you'll excuse me, I need to go change my PayPal password.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-04-23T21:30:54.000Z</pubDate>
    <guid>https://blog.codinghorror.com/your-password-is-too-damn-short/</guid>
    </item>
    <item>
    <title>Given Enough Money, All Bugs Are Shallow</title>
    <link>https://blog.codinghorror.com/given-enough-money-all-bugs-are-shallow/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Eric Raymond, in <a href="http://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar">The Cathedral and the Bazaar</a>, famously wrote</p>
    <blockquote>
    <p>Given enough eyeballs, all bugs are shallow.</p>
    </blockquote>
    <p>The idea is that open source software, by virtue of allowing anyone and everyone to view the source code, is inherently less buggy than closed source software. He dubbed this "Linus's Law".</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/04/eyeballs.jpg" alt=""></p>
    <p>Insofar as it goes, I believe this is true. When only the 10 programmers who happen to work at your company today can look at your codebase, it's unlikely to be as well reviewed as a codebase that's public to the world's scrutiny on GitHub.</p>
    <p>However, the <a href="http://en.wikipedia.org/wiki/Heartbleed">Heartbleed SSL vulnerability</a> was a turning point for Linus's Law, a catastrophic exploit based on <a href="http://www.theregister.co.uk/2014/04/09/heartbleed_explained/">a severe bug in open source software</a>. How catastrophic? It affected about 18% of all the HTTPS websites in the world, and allowed attackers to view all traffic to these websites, unencrypted... <em>for two years</em>.</p>
    <p>All those websites you thought were secure? Nope. This bug went unnoticed for two full years.</p>
    <p><em>Two years!</em></p>
    <p>OpenSSL, the library with this bug, is <strong>one of the most critical bits of Internet infrastructure the world has</strong> – relied on by major companies to encrypt the private information of their customers as it travels across the Internet. OpenSSL was used on millions of servers and devices to protect the kind of important stuff you want encrypted, and hidden away from prying eyes, like passwords, bank accounts, and credit card information.</p>
    <p>This should be some of the most well-reviewed code in the world. What happened to our eyeballs, man?</p>
    <blockquote>
    <p>In reality, it's generally very, very difficult to fix real bugs in anything but the most trivial Open Source software. I know that I have rarely done it, and I am an experienced developer. Most of the time, what really happens is that you tell the actual programmer about the problem and wait and see if he/she fixes it – <a href="https://www.neilgunton.com/doc/?o=Sh&amp;doc_id=8585">Neil Gunton</a></p>
    <p>Even if a brave hacker communities to read the code, they're not terribly likely to spot one of the hard-to-spot problems. Why? Few open source hackers are security experts. – <a href="http://jeremy.zawodny.com/blog/archives/000028.html">Jeremy Zawodny</a></p>
    <p>The fact that many eyeballs are looking at a piece of software is not likely to make it more secure. It is likely, however, to make people believe that it is secure. The result is an open source community that is probably far too trusting when it comes to security. – <a href="http://www.developer.com/tech/article.php/626641/The-Myth-of-Open-Source-Security.htm">John Viega</a></p>
    </blockquote>
    <p>I think there are a couple problems with Linus's Law:</p>
    <ol start="0">
    <li>
    <p>There's a big difference between <em>usage</em> eyeballs and <em>development</em> eyeballs. Just because you pull down some binaries in a RPM, or compile something in Linux, or even report bugs back to the developers via their bug tracker, doesn't mean you're doing anything at all to contribute to the review of the underlying code. Most eyeballs are looking at the outside of the code, not the inside. And while you can discover bugs, even important security bugs, through usage, the hairiest security bugs require inside knowledge of how the code works.</p>
    </li>
    <li>
    <p>The act of <em>writing</em> (or cut-and-pasting) your own code is easier than understanding and <em>peer reviewing</em> someone else's code. There is a fundamental, unavoidable asymmetry of work here. The amount of code being churned out today – even if you assume only a small fraction of it is "important" enough to require serious review – far outstrips the number of eyeballs available to look at the code. (Yes, this is another argument in favor of <a href="http://blog.codinghorror.com/the-best-code-is-no-code-at-all/">writing less code</a>.)</p>
    </li>
    <li>
    <p>There are not enough <em>qualified</em> eyeballs to look at the code. Sure, the overall number of programmers is slowly growing, but what percent of those programmers are skilled enough, and have the right security background, to be able to audit someone else's code effectively? A tiny fraction.</p>
    </li>
    </ol>
    <p>Even if the code is 100% open source, utterly mission critical, and used by major companies in virtually every public facing webserver for customer security purposes, we end up with critical bugs that compromise everyone. For <em>two years!</em></p>
    <p>That's the lesson. If we <strong>can't naturally get enough eyeballs on OpenSSL</strong>, how does any other code stand a chance? What do we do? How do we get more eyeballs?</p>
    <p>The short term answer was:</p>
    <ul>
    <li>
    <p>Create <a href="http://www.libressl.org/">more alternatives to OpenSSL</a> for ecosystem diversity.</p>
    </li>
    <li>
    <p>Improve <a href="http://arstechnica.com/information-technology/2014/04/tech-giants-chastened-by-heartbleed-finally-agree-to-fund-openssl/">support and funding for OpenSSL</a>.</p>
    </li>
    </ul>
    <p>These are both very good things and necessary outcomes. We should be doing this for all the critical parts of the open source ecosystem people rely on.</p>
    <p>But what's the long term answer to the general problem of not enough eyeballs on open source code? It's something that will sound very familar to you, though I suspect Eric Raymond won't be too happy about it.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/04/pile-of-money-1.jpg" alt=""></p>
    <p><em>Money.</em> Lots and lots of money.</p>
    <p>Increasingly, companies are turning to <strong>commercial bug bounty programs</strong>. Either ones they create themselves, or run through third party services like <a href="https://bugcrowd.com/">Bugcrowd</a>, <a href="https://www.synack.com/">Synack</a>, <a href="https://hackerone.com/">HackerOne</a>, and <a href="https://www.crowdcurity.com/">Crowdcurity</a>. This means you pay per bug, with a larger payout the bigger and badder the bug is.</p>
    <p>Or you can attend a yearly event like <a href="http://en.wikipedia.org/wiki/Pwn2Own">Pwn2Own</a>, where there's a yearly contest and massive prizes, as large as <a href="http://www.eweek.com/security/hp-awards-240k-for-firefox-ie-chrome-and-safari-exploits.html">hundreds of thousands of dollars</a>, for exploiting common software. Staging a big annual event means a lot of publicity and interest, attracting the biggest guns.</p>
    <p>That's the message. If you want to find bugs in your code, in your website, in your app, you do it the old fashioned way: by paying for them. You buy the eyeballs.</p>
    <p>While I applaud any effort to make things more secure, and I completely agree that security is a battle we should be fighting on multiple fronts, both commercial and non-commercial, <strong>I am uneasy about some aspects of paying for bugs becoming the new normal.</strong> What are we incentivizing, exactly?</p>
    <h3 id="moneymakessecuritybugsgounderground">Money makes security bugs go underground</h3>
    <p>There's now a price associated with exploits, and the deeper the exploit and the lesser known it is, the more incentive there is to not tell anyone about it until you can collect a major payout. So you might wait up to a year to report anything, and meanwhile this security bug is out there in the wild – who knows who else might have discovered it by then?</p>
    <p>If your focus is the payout, who is paying more? The good guys, or the bad guys? Should you hold out longer for a bigger payday, or build the exploit up into something even larger? I hope for our sake the good guys have the deeper pockets, otherwise we are all screwed.</p>
    <p>I like that Google <a href="http://blog.chromium.org/2015/02/pwnium-v-never-ending-pwnium.html">addressed a few of these concerns</a> by making Pwnium, their Chrome specific variant of Pwn2Own, a) no longer a yearly event but all day, every day and b) increasing the prize money to "infinite". I don't know if that's enough, but it's certainly going in the right direction.</p>
    <h3 id="moneyturnssecurityintoamegoalinsteadofanusgoal">Money turns security into a "me" goal instead of an "us" goal</h3>
    <p>I first noticed this trend when one or two people reported minor security bugs in Discourse, and then seemed to hold out their hand, expectantly. (At least, as much as you can do something like that in email.) It felt really odd, and it made me uncomfortable.</p>
    <p>Am I now obligated, on top of providing a completely free open source project to the world, to pay people for contributing information about security bugs that make this open source project better? Believe me, I was very appreciative of the security bug reporting, and I sent them whatever I could, stickers, t-shirts, effusive thank you emails, callouts in the code and checkins. But open source isn't supposed to be about the money… is it?</p>
    <p>Perhaps the landscape is different for closed-source, commercial products, where there's no expectation of quid pro quo, and everybody already pays for the service directly or indirectly anyway.</p>
    <h3 id="nomoneynosecurity">No Money? No Security.</h3>
    <p>If all the best security researchers are working on ever larger bug bounties, and every major company adopts these sorts of bug bounty programs, what does that do to the software industry?</p>
    <p>It implies that unless you have a big budget, you can't expect to have great security, because nobody will want to report security bugs to you. Why would they? They won't get a payday. They'll be looking elsewhere.</p>
    <p>A ransomware culture of "pay me or I won't tell you about your terrible security bug" does not feel very far off, either. We've had mails like that already.</p>
    <h3 id="easymoneyattractsallskilllevels">Easy money attracts all skill levels</h3>
    <p>One unfortunate side effect of this bug bounty trend is that it attracts not just bona fide programmers interested in security, but anyone interested in <em>easy money</em>.</p>
    <p>We've gotten too many "serious" security bug reports that were extremely low value. And we have to follow up on these, because they are "serious", right? Unfortunately, many of them are a waste of time, because …</p>
    <ul>
    <li>
    <p>The submitter is more interested in scaring you about the massive, critical security implications of this bug than actually providing a decent explanation of the bug, so you'll end up doing all the work.</p>
    </li>
    <li>
    <p>The submitter doesn't understand what is and isn't an exploit, but knows there is value in anything <em>resembling</em> an exploit, so submits everything they can find.</p>
    </li>
    <li>
    <p>The submitter can't share notes with other security researchers to verify that the bug is indeed an exploit, because they might "steal" their exploit and get paid for it before they do.</p>
    </li>
    <li>
    <p>The submitter needs to convince you that this is an exploit in order to get paid, so they will argue with you about this. At length.</p>
    </li>
    </ul>
    <p>The incentives feel really wrong to me. As much as I know security is incredibly important, I view these interactions with an increasing sense of dread because they generate work for me and the returns are low.</p>
    <h3 id="whatcanwedo">What can we do?</h3>
    <p>Fortunately, we all have the same goal: <strong>make software more secure</strong>.</p>
    <p>So we should view bug bounty programs as an additional angle of attack, another aspect of "defense in depth", perhaps optimized a bit more for commercial projects where there is ample money. And that's OK.</p>
    <p>But I have some advice for bug bounty programs, too:</p>
    <ul>
    <li>
    <p>You should have someone vetting these bug reports, and making sure they are credible, have clear reproduction steps, and are repeatable, before we ever see them.</p>
    </li>
    <li>
    <p>You should build additional incentives in your community for some kind of collaborative work towards bigger, better exploits. These researchers need to be working together in public, not in secret against each other.</p>
    </li>
    <li>
    <p>You should have a reputation system that builds up so that only the better, proven contributors are making it through and submitting reports.</p>
    </li>
    <li>
    <p>Encourage larger orgs to fund bug bounties for common open source projects, not just their own closed source apps and websites. At Stack Exchange, we donated to open source projects we used every year. Donating a bug bounty could be a big bump in eyeballs on that code.</p>
    </li>
    </ul>
    <p>I am concerned that we may be slowly moving toward a world where <strong>given enough money, all bugs are shallow</strong>. Money does introduce some perverse incentives for software security, and those incentives should be watched closely.</p>
    <p>But I still believe that the people who will freely report security bugs in open source software because</p>
    <ul>
    <li>It is the right thing to do™</li>
    </ul>
    <p>and</p>
    <ul>
    <li>They want to contribute back to open source projects that have helped them, and the world</li>
    </ul>
    <p>… will hopefully not be going away any time soon.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-04-03T22:58:20.000Z</pubDate>
    <guid>https://blog.codinghorror.com/given-enough-money-all-bugs-are-shallow/</guid>
    </item>
    <item>
    <title>Toward a Better Markdown Tutorial</title>
    <link>https://blog.codinghorror.com/toward-a-better-markdown-tutorial/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>It's always surprised me when people, especially technical people, say they don't know <a href="http://en.wikipedia.org/wiki/Markdown">Markdown</a>. Do you not use GitHub? Stack Overflow? Reddit?</p>
    <p>I get that an average person may not understand how Markdown is based on simple old-school plaintext ASCII typing conventions. Like when you're *really* excited about something, you naturally put asterisks around it, and Markdown makes that automagically italic.</p>
    <p>But how can we expect them to know that, if they grew up with wizzy-wig editors where the only way to make italic is to click a toolbar button, like an animal?</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/03/classic-wysiwyg-toolbar.png" alt=""></p>
    <p>I am not advocating for WYSIWYG here. While there's certainly more than one way to make italic, I personally <a href="http://blog.codinghorror.com/invisible-formatting-tags-are-evil/">don't like invisible formatting tags</a> and I find that WYSIWYG is more like <a href="http://blog.codinghorror.com/what-you-cant-see-you-cant-get/">WYCSYCG</a> in practice. It's dangerous to be dependent on these invisible formatting codes you can't control. And they're especially bad if you ever plan to care about differences, revisions, and edit history. That's why I like to teach people simple, <em>visible</em> formatting codes.</p>
    <p>We can certainly debate <a href="http://blog.codinghorror.com/is-html-a-humane-markup-language/">which markup language is superior</a>, but in Discourse we tried to build a rainbow tool that satisifies everyone. We support:</p>
    <ul>
    <li>HTML (safe subset)</li>
    <li>BBCode (basic subset)</li>
    <li>Markdown (full)</li>
    </ul>
    <p>This makes coding our editor kind of hellishly complex, but it means that for you, the user, whatever markup language you're used to will probably "just work" on any Discourse site you happen to encounter in the future. But BBCode and HTML are supported mostly as bridges. What we view as our primary markup format, and what we want people to learn to use, is Markdown.</p>
    <p>However, one thing I have really struggled with is that <strong>there isn't any single great place to refer people to with a simple walkthrough and explanation of Markdown.</strong></p>
    <p>When we built Stack Overflow circa 2008-2009, I put together my best effort at the time which became <a href="http://www.stackoverflow.com/editing-help">the "editing help" page</a>:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/03/markdown-help.png" alt=""></p>
    <p>It's just OK. And GitHub has their <a href="https://help.github.com/articles/markdown-basics/">Markdown Basics</a>, and <a href="https://help.github.com/articles/github-flavored-markdown/">GitHub Flavored Markdown</a> help pages. They're OK.</p>
    <p>The <a href="https://ghost.org/">Ghost</a> editor I am typing this in has an OK Markdown help page too.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/03/ghost-markdown-help.png" alt=""></p>
    <p>But none of these are <em>great</em>.</p>
    <p><strong>What we really need is a <em>great</em> Markdown tutorial and reference page</strong>, one that we can refer anyone to, anywhere in the world, from someone who barely touches computers to the hardest of hard-core coders. I don't want to build another one for these kinds of help pages for Discourse, I want to build one for everyone. Since it is for everyone, I want to involve everyone. And by everyone, I mean you.</p>
    <p>After writing about <a href="http://blog.codinghorror.com/our-programs-are-fun-to-use/">Our Programs Are Fun To Use</a> – which I just updated with a bunch of great examples contributed in the comments, so go check that out even if you read it already – I am inspired by the idea that <strong>we can make a fun, <em>interactive</em> Markdown tutorial together.</strong></p>
    <p>So here's what I propose: <strong>a small contest</strong> to build an interactive Markdown tutorial and reference, which we will eventually host at the home page of <a href="http://commonmark.org/">commonmark.org</a>, and can be freely mirrored anywhere in the world.</p>
    <p>Some ground rules:</p>
    <ul>
    <li>
    <p>It should be <em>primarily</em> in JavaScript and HTML. Ideally entirely so. If you need to use a server-side scripting language, that's fine, but try to keep it simple, and make sure it's something that is reasonable to deploy on a generic Linux server anywhere.</p>
    </li>
    <li>
    <p>You can pick any approach you want, but it should be <a href="http://blog.codinghorror.com/our-programs-are-fun-to-use/">highly interactive</a>, and I suggest that you at minimum provide two tracks:</p>
    <ul>
    <li>
    <p>A gentle, interactive tutorial for absolute beginners who are asking "what the heck does Markdown even mean?"</p>
    </li>
    <li>
    <p>A dynamic, interactive reference for intermediates and experts who are asking more advanced usage questions, like "how do I make code inside a list, or a list inside a list?"</p>
    </li>
    </ul>
    </li>
    <li>
    <p>There's a lot of variance in Markdown implementations, so teach the most common parts of Markdown, and cover the optional / less common variations either in the advanced reference areas or in extra bonus sections. People do love their tables and footnotes! We recommend using a <a href="http://talk.commonmark.org/c/implementation">CommonMark compatible implementation</a>, but it is not a requirement.</p>
    </li>
    <li>
    <p>Your code must be MIT licensed.</p>
    </li>
    <li>
    <p>Judging will be completely at the whim of myself and John MacFarlane. Our decisions will be capricious, arbitrary, probably nonsensical, and above all, final.</p>
    </li>
    <li>
    <p>We'll run this contest for a period of one month, from today until April 28th, 2015.</p>
    </li>
    <li>
    <p>If I have hastily left out any clarifying rules I should have had, they will go here.</p>
    </li>
    </ul>
    <p>Of course, the real reward for building is the admiration of your peers, and the knowledge that an entire generation of people will grow up learning basic Markdown skills through your contribution to a global open source project.</p>
    <p>But on top of that, I am offering … <em>fabulous prizes!</em></p>
    <ol>
    <li>
    <p>Let's start with my <a href="http://blog.codinghorror.com/recommended-reading-for-developers/">Recommended Reading List</a>. I count sixteen books on it. As long as you live in a place Amazon can ship to, I'll send you all the books on that list. (Or the equivalent value in an Amazon gift certificate, if you happen to have a lot of these books already, or prefer that.)</p>
    </li>
    <li>
    <p>Second prize is a <a href="http://blog.codinghorror.com/the-code-keyboard/">CODE Keyboard</a>. This can be shipped worldwide.</p>
    </li>
    <li>
    <p>Third prize is <em>you're fired</em>. Just kidding. Third prize is your choice of any three books on my reading list. (Same caveats around Amazon apply.)</p>
    </li>
    </ol>
    <p>Looking for a place to get started? Check out:</p>
    <ul>
    <li>
    <p><a href="https://github.com/gjtorikian/markdowntutorial.com">https://github.com/gjtorikian/markdowntutorial.com</a> and <a href="http://markdowntutorial.com/">http://markdowntutorial.com/</a> by Garen Torikian</p>
    </li>
    <li>
    <p><a href="https://github.com/chrisalley/commonmark-website">https://github.com/chrisalley/commonmark-website</a> and <a href="http://chrisalley.github.io/commonmark-website/">http://chrisalley.github.io/commonmark-website/</a> by Chris Alley</p>
    </li>
    </ul>
    <p>If you want privacy, you can mail your entries to me directly (see the about page here for my email address), or if you are comfortable with posting your contest entry in public, I'll create a topic on <a href="http://talk.commonmark.org">talk.commonmark</a> for you to post links and gather feedback. Leaving your entry in the comments on this article is also OK.</p>
    <p>We desperately need a <em>great</em> place that we can send everyone to learn Markdown, and we need your help to build it. Let's give this a shot. Surprise and amaze us!</p>
    <blockquote>
    <p>Update: we selected <a href="http://talk.commonmark.org/t/markdown-tutorial-contest-feedback/1149/19?u=codinghorror">winners</a> in June 2015 and the final result is now permanently located at <a href="http://commonmark.org/help"><strong>commonmark.org/help</strong></a> – enjoy!</p>
    </blockquote>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-03-28T00:19:48.000Z</pubDate>
    <guid>https://blog.codinghorror.com/toward-a-better-markdown-tutorial/</guid>
    </item>
    <item>
    <title>Our Programs Are Fun To Use</title>
    <link>https://blog.codinghorror.com/our-programs-are-fun-to-use/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>These <a href="http://en.wikipedia.org/wiki/Beagle_Bros">two imaginary guys</a> influenced me heavily as a programmer.</p>
    <p><a href="http://en.wikipedia.org/wiki/Beagle_Bros"><img alt="https://blog.codinghorror.com/content/images/2015/03/beagle_bros_micro_software_.png" alt=""></a></p>
    <p>Instead of guaranteeing fancy features or compatibility or error free operation, Beagle Bros software promised something else altogether: <strong>fun</strong>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2020/04/beagle-bros-our-programs-are-fun-to-use.png" alt="beagle-bros-our-programs-are-fun-to-use"></p>
    <p>Playing with the Beagle Bros quirky Apple II floppies in middle school and high school, and the smorgasboard of oddball hobbyist ephemera collected on them, was a rite of passage for me.</p>
    <p><a href="http://beagle.applearchives.com/the_graphics/beagle_bros_graphics_1/disk_warnings_10.html"><img alt="https://blog.codinghorror.com/content/images/2015/03/beagle-bros-disk-donts.png" alt=""></a></p>
    <p>Here were a bunch of goofballs writing terrible AppleSoft BASIC code like me, but doing it for a living – and clearly having fun in the process. Apparently, the best way to create fun programs for users is to <a href="https://blog.codinghorror.com/remember-this-stuff-is-supposed-to-be-fun/">make sure you had fun writing them in the first place</a>.</p>
    <p>But more than that, they taught me <strong>how much more fun it was to learn by playing with an interactive, dynamic program</strong> instead of passively reading about concepts in a book.</p>
    <p><a href="https://archive.org/details/SiliconSalad"><img alt="https://blog.codinghorror.com/content/images/2015/03/beagle-bros-silicon-salad-menu.png" alt=""></a></p>
    <p>That experience is another reason I've <a href="https://blog.codinghorror.com/level-one-the-intro-stage/">always resisted</a> calls to add "intro videos", external documentation, walkthroughs and so forth.</p>
    <p>One of the programs on these Beagle Bros floppies, and I can't for the life of me remember which one, or in what context this happened, printed the following on the screen:</p>
    <blockquote>
    <p>One day, all books will be interactive and animated.</p>
    </blockquote>
    <p>I thought, wow. That's it. <em>That's</em> what these floppies were trying to be! Interactive, animated textbooks that taught you about programming and the Apple II! Incredible.</p>
    <p>This idea has been burned into my brain for twenty years, ever since I originally read it on that monochrome Apple //c screen. Imagine a world where textbooks didn't just present a wall of text to you, the learner, but actually engaged you, played with you, and invited experimentation. <em>Right there on the page.</em></p>
    <p>(Also, if you can find and screenshot the specific Beagle Bros program that I'm thinking of here, I'd be very grateful: there's a free <a href="https://blog.codinghorror.com/the-code-keyboard/">CODE Keyboard</a> with your name on it.)</p>
    <p>Between the maturity of JavaScript, HTML 5, and the latest web browsers, you can deliver exactly the kind of <strong>interactive, animated textbook experience</strong> the Beagle Bros dreamed about in 1985 to billions of people with nothing more than access to the Internet and a modern web browser.</p>
    <p>Here are a few great examples I've collected. Screenshots don't tell the full story, so click through and experiment.</p>
    <ul>
    <li>
    <p><a href="http://bost.ocks.org/mike/algorithms/">Visualizing Algorithms</a> – amazing dynamic visualizations of several interesting and popular algorithms.</p>
    </li>
    <li>
    <p><a href="http://ncase.me/polygons/">Parable of the Polygons</a> – a playable post on the shape of society.</p>
    </li>
    <li>
    <p><a href="http://ncase.me/sight-and-light/">Sight and Light</a> – interactive explanation of 2D visibility calculations.</p>
    </li>
    <li>
    <p><a href="http://jasmcole.com/2014/10/12/rolling-shutters/">Rolling Shutters</a> – an animated explanation of the visual glitches introduced in digital cameras by CMOS sensors when taking pictures of fast moving objects.</p>
    </li>
    <li>
    <p><a href="http://sorting.at/">Sorting.at</a> – a live visualization of common sorting algorithms.</p>
    </li>
    <li>
    <p><a href="http://www.polygon.com/2015/3/6/8158649/games-history-workplace-theft-internet-archive">The future of games history is workplace theft</a> – illustrates software history by embedding an emulated, fully playable version of Wolfenstein 3D right in the page.</p>
    </li>
    </ul>
    <p>As suggested in the comments, and also excellent:</p>
    <ul>
    <li>
    <p><a href="http://www.redblobgames.com/">Red Blob Games</a> – Fun, live demonstrations of computer game algorithm mechanics.</p>
    </li>
    <li>
    <p><a href="http://flukeout.github.io/">CSS Diner</a> – Learn about CSS by interactively playing a game.</p>
    </li>
    <li>
    <p><a href="https://scratch.mit.edu/">MIT's Scratch</a> –  A popular visual programming language for kids.</p>
    </li>
    <li>
    <p><a href="http://eloquentjavascript.net/">Eloquent Javascript</a> – This looks like a regular online book, but click the examples to activate a live sandbox! Type and use the little menu at the upper right (or control-enter) to run the code.</p>
    </li>
    <li>
    <p><a href="http://jackschaedler.github.io/circles-sines-signals/aliasing.html">Interpreting Discrete Signals</a> – Nice example of a signal processing textbook with interactive graphs.</p>
    </li>
    <li>
    <p><a href="http://maxgoldste.in/melkman/">Melkman's Algorithm</a> – Another approach at a textbook where you must interact to proceed to the next page.</p>
    </li>
    <li>
    <p><a href="https://tour.golang.org/welcome/1">A Tour of Go</a> – Places a live console side by side with examples of each concept in the Go programming language.</p>
    </li>
    <li>
    <p><a href="http://acko.net/blog/how-to-fold-a-julia-fractal/">How to Fold a Julia Fractal</a> – Another textbook, but this time using lots of detailed JavaScript animations that you can step through forward and back.</p>
    </li>
    <li>
    <p><a href="http://animagraffs.com/how-a-handgun-works-1911-45/">How a Handgun Works</a> – Visual explanations using a bunch of giant, traditional GIF animations.</p>
    </li>
    <li>
    <p><a href="http://507movements.com/">507 Mechanical Movements</a> – A 1908 primer on mechanical movements, animated for the Internet.</p>
    </li>
    <li>
    <p><a href="http://www.randalolson.com/2015/02/03/heres-waldo-computing-the-optimal-search-strategy-for-finding-waldo/">Here’s Waldo: Computing the optimal search strategy for finding Waldo</a> – Good example of explaining a visual search algorithm in a blog post with animated GIFs and graphcs.</p>
    </li>
    </ul>
    <p>(There are also native apps that do similar things; the well reviewed <a href="http://www.earthprimer.com/">Earth Primer</a>, for example. But when it comes to education, I'm not too keen on platform specific apps which seem replicable in common JavaScript and HTML.)</p>
    <p>In the bad old days, we learned programming by reading books. But instead of reading <a href="http://www.amazon.com/Learning-Ruby-Michael-James-Fitzgerald/dp/0596529864?tag=codihorr-20">this dry old text</a>:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/03/learning-ruby-excerpt.png" alt=""></p>
    <p>Now we can <a href="http://www.codecademy.com/en/tracks/ruby">learn the same concepts interactively</a>, by reading a bit, then experimenting with live code on the same page as the book, and watching the results as we type.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/03/codecademy-ruby.png" alt=""></p>
    <p>C'mon. Type something. <a href="https://blog.codinghorror.com/a-scripter-at-heart/">See what happens.</a></p>
    <p>I certainly want my three children to learn from other kids and their teachers, as humans have since time began. But I also want them to have access to a better class of books than I did. Books that are effectively <em>programs</em>. Interactive, animated books that let them play and experiment and create, not just passively read.</p>
    <p>I want them to learn, as I did, that <strong>our programs are fun to use.</strong></p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-03-09T10:49:39.000Z</pubDate>
    <guid>https://blog.codinghorror.com/our-programs-are-fun-to-use/</guid>
    </item>
    <item>
    <title>The God Login</title>
    <link>https://blog.codinghorror.com/the-god-login/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I graduated with a Computer Science minor from the University of Virginia in 1992. The reason it's a minor and not a major is because to major in CS at UVa you had to go through the Engineering School, and I was absolutely not cut out for that kind of hardcore math and physics, to put it mildly. The beauty of a minor was that I could cherry pick all the cool CS classes and skip everything else.</p>
    <p>One of my favorite classes, the one I remember the most, was Algorithms. I always told people my Algorithms class was the one part of my college education that influenced me most as a programmer. I wasn't sure exactly why, but a few years ago I had a hunch so I looked up <a href="http://www.cs.cmu.edu/~pausch/Randy/Randy/Vita.html">a certain CV</a> and realized that Randy Pausch – yes, <a href="http://en.wikipedia.org/wiki/The_Last_Lecture">the <em>Last Lecture</em> Randy Pausch</a> – taught that class. The timing is perfect: University of Virginia, Fall 1991, CS461 Analysis of Algorithms, 50 students.</p>
    <p>I was one of them.</p>
    <iframe width="480" height="360" src="//www.youtube.com/embed/ji5_MqicxSo" frameborder="0" allowfullscreen></iframe>
    <p>No wonder I was so impressed. Pausch was an incredible, charismatic teacher, a testament to the old adage that your should choose your teacher first and the class material second, if you bother to at all. It's so true.</p>
    <p>In this case, the combination of great teacher and great topic was extra potent, as algorithms are central to what programmers do. Not that we invent new algorithms, but we need to understand the code that's out there, grok why it tends to be fast or slow due to the tradeoffs chosen, and <a href="http://blog.codinghorror.com/everything-is-fast-for-small-n/">choose the <em>correct</em> algorithms</a> for what we're doing. That's essential.</p>
    <p>And one of the coolest things Mr. Pausch ever taught me was to ask this question:</p>
    <blockquote>
    <p>What's the God algorithm for this?</p>
    </blockquote>
    <p>Well, when sorting a list, obviously God wouldn't bother with a stupid Bubble Sort or Quick Sort or Shell Sort like us mere mortals, God would just immediately place the items in the correct order. Bam. One step. The <a href="http://bigocheatsheet.com/">ultimate lower bound on computation</a>, O(1). Not just fixed time, either, but literally one instantaneous step, <em>because you're freakin' God</em>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/god-you-asked-for-a-sign.jpg" alt=""></p>
    <p>This kind of blew my mind at the time.</p>
    <p>I always suspected that programmers became programmers because <a href="http://blog.codinghorror.com/bridges-software-engineering-and-god/">they got to play God</a> with the little universe boxes on their desks. Randy Pausch took that conceit and turned it into a really useful way of setting boundaries and asking yourself hard questions about what you're doing and why.</p>
    <p>So when we set out to build a login dialog for <a href="http://www.discourse.org">Discourse</a>, I went back to what I learned in my Algorithms class and asked myself:</p>
    <blockquote>
    <p>How would God build this login dialog?</p>
    </blockquote>
    <p>And the answer is, of course, <strong>God wouldn't bother to build a login dialog at all.</strong> Every user would already be logged into GodApp the second they loaded the page because God knows who they are. Authoritatively, even.</p>
    <p>This is obviously impossible for us, because God isn't one of our investors.</p>
    <p>But.. how <em>close can we get</em> to the perfect godlike login experience in Discourse? That's a noble and worthy goal.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/discourse-login-dialog.png" alt=""></p>
    <p>Wasn't it Bill Gates who <a href="https://www.commandprompt.com/community/pyqt/x3581">once asked</a> why the hell every programmer was writing the same File Open dialogs over and over? It sure feels that way for login dialogs. I've been saying for a long time that <a href="http://blog.codinghorror.com/cutting-the-gordian-knot-of-web-identity/">the best login is no login at all</a> and I'm a staunch supporter of <a href="http://blog.codinghorror.com/your-internet-drivers-license/">logging in with your Internet Driver's license</a> whenever possible. So we absolutely support that, if you've configured it.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/common-oauth-logins.png" alt=""></p>
    <p>But today I want to focus on the <strong>core, basic login experience: user and password.</strong> That's the default until you configure up the other methods of login.</p>
    <p>A login form with two fields, two buttons, and a link on it seems simple, right? Bog standard. It is, until you consider all the ways the simple act of logging in with those two fields can go wrong for the user. Let's think.</p>
    <h4 id="lettheuserenteranemailtologin">Let the user enter an email to log in</h4>
    <p>The critical fault of OpenID, as much as <a href="http://blog.codinghorror.com/openid-does-the-world-really-need-yet-another-username-and-password/">I liked it</a> as an early login solution, was its assumption that users could accept an URL as their "identity". This is flat out crazy, and in the long run this central flawed assumption in OpenID broke it as a future standard.</p>
    <p><strong>User identity is always email, plain and simple</strong>. What happens when you forget your password? You get an email, right? Thus, email is your identity. Some people even propose <a href="http://notes.xoxco.com/post/27999787765/is-it-time-for-password-less-login">using email as the only login method</a>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/discourse-log-in-email.png" alt=""></p>
    <p>It's fine to have a username, of course, but <em>always</em> let users log in with either their username or their email address. Because I can tell you with 100% certainty that when those users forget their password, and they will, all the time, they'll need that email anyway to get a password reset. Email and password are strongly related concepts and they belong together. Always!</p>
    <p>(And a fie upon services that don't allow me to use my email as a username or login.  I'm looking at you, Comixology.)</p>
    <h4 id="telltheuserwhentheiremaildoesntexist">Tell the user when their email doesn't exist</h4>
    <p>OK, so we know that email is de-facto identity for most people, and this is a logical and necessary state of affairs. But <em>which</em> of my 10 email addresses did I use to log into your site?</p>
    <p>This was the source of a <a href="https://meta.discourse.org/t/different-password-reset-for-wrong-username-email/15909">long discussion at Discourse</a> about whether it made sense to reveal to the user, when they enter an email address in the "forgot password" form, whether we have that email address on file. On many websites, here's the sort of message you'll see after entering an email address in the forgot password form:</p>
    <blockquote>
    <p>If an account matches <a href="mailto:name@example.com">name@example.com</a>, you should receive an email with instructions on how to reset your password shortly.</p>
    </blockquote>
    <p>Note the coy "if" there, which is a <a href="http://www.troyhunt.com/2012/05/everything-you-ever-wanted-to-know.html">hedge against all the security implications of revealing whether a given email address exists on the site</a> just by typing it into the forgot password form.</p>
    <p>We're deadly serious about picking safe defaults for Discourse, so out of the box you won't get exploited or abused or overrun with spammers.  But after experiencing the real world "which email did we use here again?" login state on dozens of Discourse instances ourselves, we realized that, in this specific case, being user friendly is <em>way</em> more important than being secure.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/forgot-password.png" alt=""></p>
    <p>The new default is to let people know when they've entered an email we don't recognize in the forgot password form. This will save their sanity, and yours. You can turn on the extra security of being coy about this, if you need it, via a site setting.</p>
    <h4 id="lettheuserswitchbetweenloginandsignupanytime">Let the user switch between Log In and Sign Up any time</h4>
    <p>Many websites have started to show login and signup buttons side by side. This perplexed me; aren't the acts of logging in and signing up very different things?</p>
    <p>Well, from the user's perspective, they don't appear to be. This Verge login dialog illustrates just how close the sign up and log in forms really are. Check out this animated GIF of it in action.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/login-vs-sign-up.gif" alt=""></p>
    <p>We've acknowledged that similarity by having either form accessible at any time from the two buttons at the bottom of the form, as a toggle:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/login-vs-create-new-account.png" alt=""></p>
    <p>And both can be kicked off directly from any page via the Sign Up and Log In buttons at the top right:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/sign-up-vs-log-in-discourse.png" alt=""></p>
    <h4 id="pickcommonwords">Pick common words</h4>
    <p>That's the problem with language, we have so many <em>words</em> for these concepts:</p>
    <ul>
    <li>Sign In</li>
    <li>Log In</li>
    <li>Sign Up</li>
    <li>Register</li>
    <li>Join &lt;site&gt;</li>
    <li>Create Account</li>
    <li>Get Started</li>
    <li>Subscribe</li>
    </ul>
    <p>Which are the "right" ones? <a href="http://ux.stackexchange.com/questions/1080/using-sign-in-vs-using-log-in">User research data isn't conclusive</a>.</p>
    <p>I tend to favor the shorter versions when possible, mostly because I'm a fan of the whole brevity thing, but there are valid <a href="http://uxmovement.com/buttons/why-sign-up-and-sign-in-button-labels-confuse-users/">cases to be made</a> for each depending on the circumstances and user preferences.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/bad-okay-good-login-buttons.png" alt=""></p>
    <p>Sign In may be slightly more common, though Log In has some <a href="http://www.designcult.org/2011/08/why-do-we-call-in-logging-in.html">nautical and historical computing basis</a> that makes it worthy:</p>
    <blockquote>
    <p>A couple of years ago I did a survey of top websites in the US and UK and whether they used “sign in”, “log in”, “login”, “log on”, or some other variant. The answer at the time seemed to be that if you combined “log in” and “login”, it exceeded “sign in”, but not by much. I’ve also noticed that the trend toward “sign in” is increasing, especially with the most popular services. Facebook seems to be a “log in” hold-out.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/log-in-vs-sign-in-graph.png" alt=""></p>
    </blockquote>
    <h4 id="workwithbrowserpasswordmanagers">Work with browser password managers</h4>
    <p>Every login dialog you create should be tested to work with the default password managers in …</p>
    <ul>
    <li><a href="http://windows.microsoft.com/en-us/internet-explorer/fill-in-forms-remember-passwords-autocomplete#ie=ie-11">Internet Explorer</a></li>
    <li><a href="https://support.google.com/chrome/answer/95606?hl=en">Chrome</a></li>
    <li><a href="https://support.mozilla.org/en-US/kb/password-manager-remember-delete-change-passwords">Firefox</a></li>
    <li><a href="http://support.apple.com/en-us/HT204085">Safari</a></li>
    </ul>
    <p>At an absolute minimum. Upon subsequent logins in that browser, you should see the username and password automatically autofilled.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/log-in-autofill.png" alt=""></p>
    <p>Users rely on these default password managers built into the browsers they use, and any proper modern login form should respect that, and be designed sensibly, e.g. the password field should have <code>type="password"</code> in the HTML and a name that's readily identifable as a password entry field.</p>
    <p>There's also <a href="https://lastpass.com/">LastPass</a> and so forth, but I generally assume if the login dialog works with the built in browser password managers, it will work with third party utilities, too.</p>
    <h4 id="handlecommonusermistakes">Handle common user mistakes</h4>
    <p>Oops, the user is typing their password with caps lock on? You should let them know about that.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/password-entry-caps-lock-is-on.png" alt=""></p>
    <p>Oops, the user entered their email as <a href="mailto:name@gmal.com">name@gmal.com</a> instead of <a href="mailto:name@gmail.com">name@gmail.com</a>? Or <a href="mailto:name@hotmail.cm">name@hotmail.cm</a> instead of <a href="mailto:name@hotmail.com">name@hotmail.com</a>? You should either fix typos in common email domains for them, or let them know about that.</p>
    <p>(I'm also a big fan of  <a href="http://answers.microsoft.com/en-us/ie/wiki/ie11-iewindows8_1/the-use-of-the-password-reveal-eye-button-in/19a9dee2-fb0c-4c26-a6bc-ac02cf98d80e">native browser "reveal password" support</a> for the password field, so the user can verify that she typed in or autofilled the password she expects. Only Internet Explorer and I <em>think</em> Safari offer this, but all browsers should.)</p>
    <h4 id="helpuserschoosebetterpasswords">Help users choose better passwords</h4>
    <p>There are many schools of thought on <s>forcing</s> helping users choose passwords that aren't unspeakably awful, e.g. <a href="http://blog.codinghorror.com/dictionary-attacks-101/">password123 and iloveyou and so on</a>.</p>
    <p>There's the common password strength meter, which updates in real time as you type in the password field.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/dropbox-password-strength-meters.png" alt=""></p>
    <p>It's clever idea, but it gets awful preachy for my tastes on some sites. The implementation also leaves a lot to be desired, as it's left up to the whims of the site owner to decide what password strength means. One site's "good" is another site's "get outta here with that Fisher-Price toy password". It's frustrating.</p>
    <p>So, with Discourse, rather than all that, I decided we'd default on a solid absolute minimum password length of 8 characters, and then verify the password to make sure it is not one of the <a href="http://thepasswordproject.com/">10,000 most common known passwords</a> by checking its hash.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/create-new-account-password-too-common.png" alt=""></p>
    <h4 id="dontforgetthekeyboard">Don't forget the keyboard</h4>
    <p>I feel like keyboard users are a dying breed at this point, but for those of us that, when presented with a login dialog, like to rapidly type</p>
    <p><kbd><a href="mailto:name@example.com">name@example.com</a></kbd>, <kbd>tab</kbd>, <kbd>p4$$w0rd</kbd>, <kbd>enter</kbd></p>
    <p>… <em>please</em> verify that this works as it should. Tab order, enter to submit, etcetera.</p>
    <h4 id="ratelimitallthethings">Rate limit all the things</h4>
    <p>You should be <a href="http://blog.codinghorror.com/rate-limiting-and-velocity-checking/">rate limiting everything users can do, everywhere</a>, and that's especially true of the login dialog.</p>
    <p>If someone forgets their password and makes 3 attempts to log in, or issues 3 forgot password requests, that's probably OK. But if someone makes a thousand attempts to log in, or issues a thousand forgot password requests, that's a little weird. Why, I might even venture to guess they're possibly … <em>not human</em>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/01/too-many-failed-log-in-attempts.png" alt=""></p>
    <p>You can do fancy stuff like temporarily disable accounts or start showing a CAPTCHA if there are too many failed login attempts, but this can easily become a griefing vector, so be careful.</p>
    <p>I think a nice middle ground is to insert standard pauses of moderately increasing size after repeated sequential failures or repeated sequential forgot password requests from the same IP address. So that's what we do.</p>
    <h4 id="stuffiforgot">Stuff I forgot</h4>
    <p>I tried to remember everything we went through when we were building our ideal login dialog for Discourse, but I'm sure I forgot something, or could have been more thorough. Remember, <a href="https://github.com/discourse/discourse">Discourse is 100% open source</a> and by definition a work in progress – so as my friend <a href="http://tirania.org/blog/">Miguel de Icaza</a> likes to say, when it breaks, you get to keep both halves. Feel free to test out our implementation and give us your feedback in the comments, or point to other examples of great login experiences, or cite other helpful advice.</p>
    <p>Logging in involves a simple form with two fields, a link, and two buttons. And yet, after reading all this, I'm sure you'll agree that it's deceptively complex. Your best course of action is not to build a login dialog at all, but instead rely on authentication from an outside source whenever you can.</p>
    <p>Like, say, God.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2015-01-09T11:32:19.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-god-login/</guid>
    </item>
    <item>
    <title>The Evolution of eInk</title>
    <link>https://blog.codinghorror.com/the-evolution-of-eink/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Sure, smartphones and tablets get all the press, and deservedly so. But if you place the original mainstream eInk device from 2007, the <a href="http://en.wikipedia.org/wiki/Amazon_Kindle#First_generation">Amazon Kindle</a>, side by side with today's model, the evolution of eInk devices is just as striking.</p>
    <p><a href="http://www.amazon.com/dp/B00IOY8XWQ?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2014/12/kindle-2007-vs-kindle-2014.jpg" alt=""></a></p>
    <p>Each of these devices has a 6 inch eInk screen. Beyond that they're worlds apart.</p>
    <table width="500px" cellpadding="4" cellspacing="4">
    <tr>
    <td valign="top">
    8" × 5.3" × 0.8"<br>
    10.2 oz
    </td>
    <td valign="top">
    6.4" × 4.5" × 0.3"<br>
    6.3 oz
    </td>
    </tr>
    <tr>
    <td valign="top">6" eInk display<br>167 PPI<br>4 level greyscale</td>
    <td valign="top">6" eInk display<br>300 PPI<br>16 level greyscale<br>
    backlight</td>
    </tr>
    <tr>
    <td valign="top">256 MB</td>
    <td valign="top">4 GB</td>
    </tr>
    <tr>
    <td valign="top">400 Mhz CPU</td>
    <td valign="top">1 GHz CPU</td>
    </tr>
    <tr>
    <td valign="top">$399</td>
    <td valign="top">$199</td>
    </tr>
    <tr>
    <td valign="top">7 days battery life<br>USB</td>
    <td valign="top">6 weeks battery life<br>
    WiFi / Cellular
    </td>
    </tr>
    </table>
    <p>They may seem awfully primitive compared to smartphones, but that's part of their charm – they are <a href="http://blog.codinghorror.com/geek-transportation-systems/">the scooter</a> to the motorcycle of the smartphone. Nowhere near as versatile, but as a form of basic transportation, radically simpler, radically cheaper, and more durable. There's an object lesson here in stripping things away to get to the core.</p>
    <p>eInk devices are also pleasant in a paradoxical way because <strong>they basically suck at everything that isn't reading</strong>. That doesn't sound like something you'd want, except when you notice you spend every fifth page switching back to Twitter or Facebook or Tinder or Snapchat or whatever. eInk devices let you tune out the world and truly immerse yourself in <em>reading</em>.</p>
    <p><a href="http://www.ashersarlin.com/archives/2011/11/post_1.php"><img alt="https://blog.codinghorror.com/content/images/2014/12/internetvsresearch.png" alt=""></a></p>
    <p>I believe in the broadest sense, <a href="http://blog.codinghorror.com/books-bits-vs-atoms/">bits &gt; atoms</a>. Sure, we'll always read on <em>whatever</em> device we happen to hold in our hands that can display words and paragraphs. And the advent of retina class devices sure made reading a heck of a lot more pleasant on tablets and smartphones.</p>
    <p>But this idea of ultra-cheap, pervasive eInk reading devices eventually replacing those ultra-cheap, pervasive paperbacks I used to devour as a kid has great appeal to me. I can't let it go. <a href="http://blog.codinghorror.com/because-reading-is-fundamental-2/">Reading is Fundamental</a>, man!</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/12/paperback-vs-eink.jpg" alt=""></p>
    <p>That's why I'm in this weird place where I will buy, sight unseen, every new Kindle eInk device. I wasn't quite crazy enough to buy the <em>original</em> Kindle (I mean, look at that thing) but I've owned every model since the third generation Kindle was introduced in 2010.</p>
    <p>I've also been tracking the Kindle prices to see when they can get them down to $49 or lower. We're not quite there yet – the <a href="http://www.amazon.com/dp/B00I15SB16?tag=codihorr-20">basic Kindle eInk reader</a>, which by the way is still pretty darn amazing compared to that original 2007 model pictured above – is currently on sale for $59.</p>
    <p>But this is mostly about their new flagship eInk device, the <a href="http://www.amazon.com/dp/B00IOY8XWQ?tag=codihorr-20">Kindle Voyage</a>. Instead of being cheap, it's trying to be upscale. The absolute first thing you need to know is <strong>this is the first 300 PPI (aka "retina") eInk reader from Amazon</strong>. If you're familiar with the smartphone world before and after the iPhone 4, then you should already be lining up to own one of these.</p>
    <p>When you experience 300 PPI in eInk, you really feel like you're looking at a high quality printed page rather than an array of RGB pixels. Yeah, it's still grayscale, but it is glorious. Here are some uncompressed <a href="http://goodereader.com/blog/electronic-readers/how-to-take-screenshots-on-the-kindle-paperwhite">screenshots</a> I made from mine at native resolution.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/12/kindle-voyage-screenshot-2.png" alt=""></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/12/kindle-voyage-screenshot-3.png" alt=""></p>
    <p>Note that the real device is eInk, so there's a natural paper-like fuzziness that makes it seem even more high resolution than these raw bitmaps would indicate.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/12/einkvsLCD-1.jpg" alt=""></p>
    <p>I <em>finally</em> have enough resolution to pick a thinner font than fat, sassy old <a href="http://www.myfonts.com/fonts/linotype/pmn-caecilia/">Caecilia</a>.</p>
    <p>The backlight was new to the original Paperwhite, and it definitely had some teething pains. The third time's the charm; they've nailed the backlight aspect for improved overall contrast and night reading. The Voyage also adds an ambient light sensor so it automatically scales the backlight to anything from bright outdoors to a pitch-dark bedroom. It's like automatic night time headlights on a car – one less manual setting I have to deal with before I sit down and get to my reading. It's nice.</p>
    <p>The Voyage also adds page turn buttons back into the mix, via pressure sensing zones on the left and right bezel. I'll admit I had some difficulty adjusting to these buttons, to the point that I wasn't sure I would, but I eventually did – and now I'm a convert. Not having to move your finger into the visible text on the page to advance, and being able to advance without moving your finger <em>at all</em>, just pushing it down slightly (which provides a little haptic buzz as a reward), does make for a more pleasant and efficient reading experience. But it is kind of subtle and it took me a fair number of page turns to get it down.</p>
    <p><a href="http://www.amazon.com/dp/B00KD7ZRJ4?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2014/12/kindle-voyage-case.jpg" alt=""></a></p>
    <p>In my experience eInk devices are a bit more fragile than tablets and smartphones. So you'll want a case for automatic on/off and basic "throw it in my bag however" paperback book level protection. Unfortunately, the official Kindle Voyage case is a disaster. Don't buy it.</p>
    <p>Previous Kindle cases were expensive, but they were actually very well designed. The Voyage case is expensive and just plain <em>bad</em>. Whoever came up with the idea of a weirdly foldable, floppy origami top opening case on a thing you expect to work like a typical <em>side-opening book</em> should be fired. I recommend something like <a href="http://www.amazon.com/dp/B00KD7ZRJ4?tag=codihorr-20">this basic $14.99 case</a> which works fine to trigger on/off and opens in the expected way.</p>
    <p>It's not all sweetness and light, though. The <a href="http://www.lunascafe.org/2011/04/typography-is-about-reading-and-so-are.html">typography issues that have plagued the Kindle</a> are still present in full force. It doesn't personally bother me that much, but it is reasonable to expect more by now from a big company that ostensibly cares about reading. And has a giant budget with lots of smart people on its payroll.</p>
    <blockquote class="twitter-tweet" lang="en">
    <p>This is what text
    looks like on
    a kindle.</p>— Justin Van Slembrou… (@jvanslem) <a href="https://twitter.com/jvanslem/status/431488285613891584">February 6, 2014</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>If you've dabbled in the world of eInk, or you were just waiting for a best of breed device to jump in, the <a href="http://www.amazon.com/dp/B00IOY8XWQ?tag=codihorr-20">Kindle Voyage is easy to recommend</a>. It's probably peak mainstream eInk. Would recommend, would buy again, will probably buy all future eInk models because I have an addiction. A reading addiction. Reading is fundamental. Oh, hey, $2.99 Kindle editions of <a href="http://www.amazon.com/dp/1451642598?tag=codihorr-20">The Rise and Fall of the Third Reich?</a> Yes, please.</p>
    <p>(At the risk of coming across as a total Amazon shill, I'll also mention that the new <a href="http://www.mcelhearn.com/how-to-set-up-kindle-family-library/">Amazon Family Sharing program</a> is amazing and lets me and my wife <em>finally</em> share books made of bits in a sane way, the way we used to share regular books: by throwing them at each other in anger.)</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-12-15T08:40:49.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-evolution-of-eink/</guid>
    </item>
    <item>
    <title>Because Reading is Fundamental</title>
    <link>https://blog.codinghorror.com/because-reading-is-fundamental-2/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Most discussions show a bit of information next to each user:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/11/forum-user-info-1.png" alt=""></p>
    <p>What message does this send?</p>
    <ul>
    <li>The only number you can control printed next to your name is post count.</li>
    <li>Everyone who reads this will see your current post count.</li>
    <li>The more you post, the bigger that number next to your name gets.</li>
    </ul>
    <p>If I have learned anything from the Internet, it is this: <a href="http://blog.codinghorror.com/for-a-bit-of-colored-ribbon/">be very, <em>very</em> careful when you put a number next to someone's name</a>. Because <strong>people will do whatever it takes to make that number go up</strong>.</p>
    <p>If you don't think deeply about exactly <em>what</em> you're encouraging, <em>why</em> you're encouraging it, and all the things that may happen as a result of that encouragement, you may end up with … something darker. <a href="https://web.archive.org/web/20071102022046/http://benbrown.com/says/2007/10/29/i-love-my-chicken-wire-mommy">A lot darker</a>.</p>
    <p>Printing a post count number next to every user's name implies that the more you post, the better things are. The more you talk, the better the conversations become. Is this the right message to send to everyone in a discussion? More fundamentally, <em>is this even true?</em></p>
    <p>I find that the value of conversations has little to do with how much people are talking. I find that too much talking has a <em>negative</em> effect on conversations. Nobody has time to listen to the resulting massive stream of conversation, they end up just waiting for their turn to pile on and talk, too. <strong>The best conversations are with people who spend most of their time listening</strong>. The number of times you've posted in a given topic is not a leaderboard; it's a record of failing to communicate.</p>
    <p>Consider the difference between a chat room and a discussion. Chat is a never-ending flow of disconnected, stream of consciousness sentences that you can occasionally dip your toes in to get the temperature of the water, and that's about it. Discussion is the process of lobbing paragraphs back and forth that results in an evolution of positions as your mutual understanding becomes more nuanced. We hope.</p>
    <h5 id="thearsbananaexperiment">The Ars Banana Experiment</h5>
    <p>Ars Technica ran a little experiment in 2011. When they posted <a href="http://arstechnica.com/science/2011/04/guns-in-the-home-lots-of-risk-ambiguity/">Guns at home more likely to be used stupidly than in self defense</a>, embedded in the last sentence of the seventh paragraph of the article was this text:</p>
    <blockquote>
    <p>If you have read this far, please mention Bananas in your comment below. We're pretty sure 90% of the respondants to this story won't even read it first.</p>
    </blockquote>
    <p>The first person to do this is on page 3 of the resulting discussion, <a href="http://arstechnica.com/science/2011/04/guns-in-the-home-lots-of-risk-ambiguity/?comments=1&amp;post=21585045#comment-21585045">comment number 93</a>. Or as helpfully visualized by <a href="http://thoughtcatalog.com/brandon-gorrell/2011/04/the-problem-with-having-a-serious-discussion-on-the-internet/">Brandon Gorrell</a>:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/11/ars-banana-experiment-graphic.jpg" alt=""></p>
    <p>Plenty of talking, but how many people actually read up to paragraph 7 (of 11) of the source article before they rushed to comment on it?</p>
    <h5 id="theslateexperiment">The Slate Experiment</h5>
    <p>In <a href="http://www.slate.com/articles/technology/technology/2013/06/how_people_read_online_why_you_won_t_finish_this_article.html">You Won't Finish This Article</a>, Farhad Manjoo dares us to read to the end.</p>
    <blockquote>
    <p>Only a small number of you are reading all the way through articles on the Web. I’ve long suspected this, because so many smart-alecks jump in to the comments to make points that get mentioned later in the piece.</p>
    </blockquote>
    <p>But most of us won't.</p>
    <p>He collected a bunch of analytics data based on real usage to prove his point:</p>
    <p><a href="http://www.slate.com/articles/technology/technology/2013/06/how_people_read_online_why_you_won_t_finish_this_article.html"><img alt="https://blog.codinghorror.com/content/images/2014/11/article-scroll-graph-slate.png" alt=""></a></p>
    <p>These experiments demonstrate that we don't need to incentivize talking. There's far too much talking already. <strong>We badly need to incentivize <em>listening</em></strong>.</p>
    <p>And online, listening = reading. That old school program from my childhood was right, so deeply fundamentally right. Reading. <a href="http://readingisfundamental.org/">Reading Is Fundamental</a>.</p>
    <p>Let's say you're interested in World War II. Who would you rather have a discussion with about that? The guy who just skimmed the <a href="http://en.wikipedia.org/wiki/World_War_II">Wikipedia article</a>, or the gal who read the entirety of <a href="http://www.amazon.com/dp/1451651686?tag=codihorr-20">The Rise and Fall of the Third Reich</a>?</p>
    <p>This emphasis on talking and post count also unnecessarily penalizes lurkers. If you've posted five times in the last 10 years, but you've read every single thing your community has ever written, I can guarantee that you, Mr. or Mrs. Lurker, are a far more important part of that community's culture and social norms than someone who posted 100 times in the last two weeks. Value to a community should be measured every bit by <em>how much you've read</em> as much as how much you talked.</p>
    <p><a href="http://readingisfundamental.org/"><img alt="https://blog.codinghorror.com/content/images/2014/11/rif-logo-blue-large.png" alt=""></a></p>
    <p>So how do we encourage reading, exactly?</p>
    <p>You could do crazy stuff like require commenters to enter some fact from the article, or pass a basic quiz about what the article contained, before allowing them to comment on that article. On some sites, I think this would result in a huge improvement in the quality of the comments. It'd add friction to talking, which <a href="http://blog.codinghorror.com/training-your-users/">isn't necessarily a bad thing</a>, but it's a negative, indirect way of <em>forcing</em> reading by denying talking. Not ideal.</p>
    <p>I have some better ideas.</p>
    <ol>
    <li>
    <p><strong>Remove interruptions to reading, primarily pagination</strong>.</p>
    <p>Here's a radical idea: when you get to the bottom of the page, <em>load the next damn page automatically</em>. Isn't that the most natural thing to want when you reach the end of the page, to read the next one? Is there any time that you've ever been on the Internet reading an article, reached the bottom of page 1, and <em>didn't</em> want to continue reading? Pagination is nothing more than <a href="http://blog.codinghorror.com/the-end-of-pagination/">an arbitrary barrier to reading</a>, and it needs to die a horrible death.</p>
    <p>There are sites that go even further here, such as The Daily Beast, which actually <em>loads the next article</em> when you reach the end of the one you are currently reading. <a href="http://www.thedailybeast.com/articles/2014/05/27/your-princess-is-in-another-castle-misogyny-entitlement-and-nerds.html">Try it out and see what you think</a>. I don't know that I'd go that far (I like to pick the next thing I read, thanks very much), but it's interesting.</p>
    </li>
    <li>
    <p><strong>Measure read times and display them</strong>.</p>
    <p>What I do not measure, I cannot display as a number next to someone's name, and cannot properly encourage. In Discourse we measure how long each post has been visible in the browser for every (registered) user who encounters that post. Read time is a key metric we use to determine who we trust, and the best posts that people do actually read. If you aren't willing to visit a number of topics and spend time actually <em>listening</em> to us, why should we talk to you – or trust you.</p>
    <p>Forget clicks, forget page loads, measure <em>read time!</em> We've been measuring read times extensively since launch in 2013 and it turns out we're in good company: <a href="https://medium.com/data-lab/mediums-metric-that-matters-total-time-reading-86c4970837d5">Medium</a> and <a href="http://blog.upworthy.com/post/75795679502/what-uniques-and-pageviews-leave-out-and-why-were">Upworthy</a> both recently acknowledged the intrinsic power of this metric.</p>
    </li>
    <li>
    <p><strong>Give rewards for reading</strong>.</p>
    </li>
    </ol>
    <p>I know, that old saw, gamification, but if you're going to reward someome, do it for the right things and the right reasons. For example, we created a badge for reading to the end of a long 100+ post topic. And our trust levels are based heavily on how often people are returning and how much they are reading, and virtually not at all on how much they post.</p>
    <p>To feel live reading rewards in action, try <a href="http://www.nytimes.com/2012/12/24/technology/all-the-worlds-a-game-and-business-is-a-player.html">this classic New York Times Article</a>. There's even a badge for reading half the article!</p>
    <ol start="4">
    <li>
    <p><strong>Update in real time</strong>.</p>
    <p>Online we tend to read these conversations as they're being written, as people are engaging in live conversations. So if new content arrives, figure out a way to dynamically rez it in <em>without</em> interrupting people's read position. Preserve the back and forth, real time dynamic of an actual conversation. Show votes and kudos and likes as they arrive. If someone edits their post, bring that in too. All of this goes a long way toward making a stuffy old debate feel like a living, evolving thing versus a long distance email correspondence.</p>
    </li>
    </ol>
    <p>These are strategies I pursued with <a href="http://www.discourse.org">Discourse</a>, because I believe Reading Is Fundamental. Not just in grade school, but in your life, in my life, in every aspect of online community. To the extent that Discourse can help people learn to be better listeners and better readers – not just <em>more talkative</em> – we are succeeding.</p>
    <p>If you want to become a true radical, if you want to have deeper insights and better conversations, <strong>spend less time talking and more reading</strong>.</p>
    <blockquote>
    <p>Update: There's a <a href="http://www.cbc.ca/radio/spark/spark-270-1.2889937/why-listening-is-more-important-than-talking-1.2890065">CBC interview with me</a> on the themes covered in this article.</p>
    </blockquote>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-11-26T01:21:51.000Z</pubDate>
    <guid>https://blog.codinghorror.com/because-reading-is-fundamental-2/</guid>
    </item>
    <item>
    <title>The Tablet Turning Point</title>
    <link>https://blog.codinghorror.com/the-tablet-turning-point/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Remember how people in the year 2000 used to say how crazy and ridiculous it was, the idea that Anyone Would Ever Run Photoshop in a Web Browser? I mean <em>come on</em>.</p>
    <p><a href="http://thenextweb.com/creativity/2014/02/24/9-browser-based-photo-editing-tools/">Oops</a>.</p>
    <p>One of my big bets with <a href="http://www.discourse.org">Discourse</a> is that eventually, <a href="http://blog.codinghorror.com/the-pc-is-over/"><em>all</em> computers will be tablets of varying size</a>, with performance basically indistinguishable from a two year old desktop or laptop.</p>
    <p>Apps are <a href="http://blog.codinghorror.com/app-pocalypse-now/">great and all</a>, but there has to be some place for this year's bumper crop of obscene amount of computing superpower to go. I like to use history as my guide, and I believe it's going exactly the same place it did on desktops and laptops — that no-installing-anything friend of every lazy user on the planet, the inevitable path of least resistance, the <strong>mobile web browser</strong>.</p>
    <p><a href="http://arstechnica.com/gadgets/2013/06/cupertinos-photocopiers-what-ios-7-borrowed-from-android/"><img alt="https://blog.codinghorror.com/content/images/2014/11/safarivschromemobile.jpg" alt=""></a></p>
    <p>For the last few years, I've been buying every significant tablet device in the run up to the big holiday sales season, and testing them all, to see how many years are left until mobile devices catch up to desktops on general web and JavaScript performance.</p>
    <p>How are we doing? Let's benchmark some Discourse client-side <a href="http://emberjs.com/">Ember</a> JavaScript code:</p>
    <table style="width:500px">
    <tr>
      <td>iPhone 4</td>
      <td>June 2011</td>
      <td>2031ms</td>
    </tr>
    <tr>
      <td>iPhone 5</td>
      <td>Sept 2012</td>
      <td>600ms</td>
    </tr>
    <tr>
      <td>iPhone 5s</td>
      <td>Sept 2013</td>
      <td>300ms</td>
    </tr>
    <tr>
      <td>iPhone 6</td>
      <td>Sept 2014</td>
      <td>250ms</td>
    </tr>
    <tr>
      <td>iPad Air 2</td>
      <td>Oct 2014</td>
      <td>225ms</td>
    </tr>
    </table>
    <p>My Core i4770k desktop machine scores <strong>180ms</strong> in the same benchmark on the latest version of Chrome x64. I'd say we're solidly within striking distance this year.</p>
    <p>I don't like to spend a lot of time talking about news and gadgets here, since the commentary will be irrelevant within a few years. But this year marks a key turning point for mobile and tablet performance, and I've lived with every iteration of these devices for the last couple of years, so I'll make an exception.</p>
    <p>Look at this <a href="http://www.anandtech.com/show/8666/the-apple-ipad-air-2-review/3">performance rampage</a> the <strong>iPad Air 2</strong> goes on:</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/11/69018.png" alt=""></p>
    <p>Just look at it! <a href="http://www.anandtech.com/show/8666/the-apple-ipad-air-2-review/3">All the graphs</a> are like this!</p>
    <p>It's hard to believe we now live in a world where the Apple "Premium" is no longer about aesthetics, but raw, unbridled, class-leading performance. And you know what? That's something I can totally get behind.</p>
    <p>Anyone who tells you the iPad Air 2 is some kind of incremental update must not actually use theirs. As someone who <em>does</em> regularly use his iPad, I can say without hesitation that this is a massively upgraded device. I grew to hate my old iPad Air because of the memory restrictions; I could barely have three tabs open in Mobile Safari without one of them paging out of memory. Thanks x64 and iOS7!</p>
    <p>The bonded screen, touchid, the now-adequate-for-x64 2GB of RAM, the amazingly fast triple core CPU, the GPU, and yeah, it's a little thinner. For performance, nothing else even comes close.</p>
    <p>It's so fast I sometimes forget I'm not using my <a href="http://www.microsoft.com/surface/en-us/products/surface-pro-3">Surface Pro 3</a> with its 4GB RAM and Core i5 CPU. I get hassled when I bring my Surface to meetings, but I patiently explain that it's a very nice third gen hardware design with a fully integrated keyboard cover, IE11 is a great touch browser, and that I'm mostly using the device as a tablet, as a sneak preview of what iPad 8 performance will look like. Based on today's benchmarks with the iPad Air 2 – chronologically, the iPad "6" – I believe that's about right.</p>
    <p>I also purchased a <a href="http://www.amazon.com/Google-Nexus-Tablet-8-9-Inch-Black/dp/B00M6UC5B4?tag=codihorr-20"><strong>Nexus 9</strong></a>. It's the first device to ship with Android 5 and the vaunted Nvidia Tegra K1.</p>
    <p><a href="https://blog.codinghorror.com/the-tablet-turning-point/(http://www.amazon.com/Google-Nexus-Tablet-8-9-Inch-Black/dp/B00M6UC5B4?tag=codihorr-20)"><img alt="https://blog.codinghorror.com/content/images/2014/11/nexus-9-1.jpg" alt=""></a></p>
    <p>I'm <em>very</em> impressed with Android 5.0; aesthetically I think it's superior to iOS 8 in a lot of ways, and it is a clear step forward over Android 4. Anyone on older Android devices should definitely upgrade to Android 5 at their first opportunity.</p>
    <p>Performance-wise, it is what I've come to expect from Android: <a href="http://www.anandtech.com/show/8670/google-nexus-9-preliminary-findings/2">erratic</a>. In our Discourse benchmarks, and the latest version of Chrome Android beta, it scores about 750ms, putting it somewhere between the 2011 iPhone 4s and the 2012 iPhone 5. That said, this is the fastest Android device I have ever laid hands on. I just wish it was consistently faster. A lot faster.</p>
    <p>To that end, I'd like to ask for your help. We've identified some <a href="https://code.google.com/p/v8/issues/detail?id=2935">deep bugs in the Android Chrome V8 engine</a> that cause fairly severe performance issues with JavaScript frameworks like Angular and Ember. (Desktop Chrome performance remains class leading; this is highly specific to the Android version of Chrome.) If you know anyone at Google, please ping them about this and see if it can be escalated. I'd love it if more Android users – including me – could have a better browser experience when using large JavaScript apps.</p>
    <p>I hope over the next year the remaining Android 5 performance bumps can be ironed out. I still like the Nexus 9; if you're a big fan of Google services like GMail, Docs, and Maps like I am, I definitely recommend it. The one I have will be a gift to my mom.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-11-11T01:36:03.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-tablet-turning-point/</guid>
    </item>
    <item>
    <title>What If We Could Weaponize Empathy?</title>
    <link>https://blog.codinghorror.com/what-if-we-could-weaponize-empathy/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>One of my favorite insights on the subject of online community is from <a href="http://en.wikipedia.org/wiki/Tom_Chick">Tom Chick</a>:</p>
    <blockquote>
    <p>Here is something I've never articulated because I thought, perhaps naively, it was understood:</p>
    <p>The priority for participating on this forum is not the quality of the content. I ultimately don't care how smart or funny or observant you are. Those are plusses, but they're never prerequisites. <em>The priority is on how you treat each other.</em> I expect spats, arguments, occasional insults, and even inevitable grudges. We've all done that. But in the end, I expect you to act like a group of friends who care about each other, no matter how dumb some of us might be, no matter what political opinions some of us hold, no matter what games some of us like or dislike. This community is small enough, intimate enough, that I feel it's a reasonable expectation.</p>
    </blockquote>
    <p>Indeed, disagreement and arguments are inevitable and even healthy parts of any community. The difference between a sane community and a terrifying warzone is the <em>degree</em> to which disagreement is pursued in the community, gated by <a href="http://slatestarcodex.com/2014/02/23/in-favor-of-niceness-community-and-civilization/">the level of respect community members have for each other</a>.</p>
    <blockquote>
    <p>In other words, if a fight is important to you, fight nasty. If that means lying, lie. If that means insults, insult. If that means silencing people, silence.</p>
    </blockquote>
    <p>I may be a fan of the <a href="http://blog.codinghorror.com/in-defense-of-the-smackdown-learning-model/">smackdown learning model</a> and <a href="http://en.wikipedia.org/wiki/Kayfabe">kayfabe</a>, but I am definitely <em>not</em> a fan of fighting nasty.</p>
    <blockquote>
    <p><strong>I expect you to act like a group of friends who care about each other</strong>, no matter how dumb some of us might be, no matter what political opinions some of us hold, no matter what games some of us like or dislike.</p>
    </blockquote>
    <p>There's a word for this: <em>empathy</em>.</p>
    <p>One of the first things I learned when I began researching discussion platforms two years ago is the importance of <strong>empathy as the fundamental basis of all stable long term communities</strong>. The goal of discussion software shouldn't be to teach you how to click the reply button, and how to make bold text, but how to engage in civilized online discussion with other human beings without that discussion inevitably breaking down into the collective howling of wolves.</p>
    <p>That's what the discussion software should be teaching you:  <em>Empathy.</em></p>
    <p>You. Me. Us. We can all <a href="http://blog.codinghorror.com/the-just-in-time-theory/">occasionally use a gentle reminder</a> that there is a real human being on the other side of our screen, a person <a href="http://sivers.org/real">remarkably like us</a>.</p>
    <p><a href="http://xkcd.com/438/"><img alt="https://blog.codinghorror.com/content/images/2014/10/internet_argument.png" alt=""></a></p>
    <p>I've been immersed in the world of social discussion for two years now, and I keep going back to the well of empathy, time and time again. The first thing we did was start with a <a href="http://blog.discourse.org/2013/03/the-universal-rules-of-civilized-discourse/">solid set of community guidelines</a> on civilized discussion, and I'm proud to say that we ship and prominently feature those guidelines with every copy of Discourse. They are bedrock. But these guidelines only work to the extent that they are understood, and the community helps enforce them.</p>
    <p>In <a href="http://blog.codinghorror.com/your-community-door/">Your Community Door</a>, I described the danger of allowing cruel and hateful behavior in your community – behavior so obviously corrosive that it should never be tolerated in any quantity. If your community isn't capable of regularly exorcising the most toxic content, and the people responsible for that kind of content, it's in trouble. Those rare bad apples are <a href="http://blog.codinghorror.com/the-bad-apple-group-poison/">group poison</a>.</p>
    <p>Hate is easy to recognize. Cruelty is easy to recognize. You <a href="http://blog.codinghorror.com/your-community-door/">do not tolerate these in your community</a>, full stop.</p>
    <p>But what about behavior that isn't so obviously corrosive? What about behavior patterns that seem sort of vaguely negative, but … nobody can show you exactly how this behavior is directly hurting anyone? What am I talking about? Take a look at the <a href="http://blog.codinghorror.com/which-online-discussion-archetype-are-you/">Flamewarriors Online Discussion Archetypes</a>, a bunch of discussion behaviors that never <em>quite</em> run afoul of the rules, per se, but result in discussions that degenerate, go in circles, or make people not want to be around them.</p>
    <p>What we're getting into is shades of grey, the really difficult part of community moderation. I've been working on Discourse long enough to identify some subtle dark patterns of community discussion that – while nowhere near as dangerous as hate and cruelty – are still <strong>harmful enough to the overall empathy level of a community</strong> that they should be actively recognized when they emerge, and interventions staged.</p>
    <h3 id="1endlesscontrarianism">1. Endless Contrarianism</h3>
    <p><a href="http://forlackofabettercomic.com/?id=173"><img alt="https://blog.codinghorror.com/content/images/2014/10/internet-contrarian.png" alt=""></a></p>
    <p>Disagreement is fine, even expected, provided people can disagree in an agreeable way. But when someone <strong>joins your community for the <em>sole purpose</em> of disagreeing</strong>, that's Endless Contrarianism.</p>
    <p>Example: As an athiest, Edward shows up on a religion discussion area to educate everyone there about the futility of religion. Is that really the purpose of the community? Does anyone in the community expect to defend the very concept of religion while participating there?</p>
    <p>If all a community member can seem to contribute is endlessly pointing out how wrong everyone else is, and how everything about this community is headed in the wrong direction – that's not building  constructive discussion – or the community. Edward is just arguing for the sake of argument. <a href="http://www.systemcomic.com/2011/08/03/so-youre-mad-about-something-on-the-internet/">Take it to debate school</a>.</p>
    <h3 id="2axegrinding">2. Axe-Grinding</h3>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/10/stock-footage-grinding-the-axe.jpg" alt=""></p>
    <p>Part of what makes discussion fun is that it's flexible; a variety of topics will be discussed, and those discussions may naturally meander a bit within the context defined by the site and whatever categories of discussion are allowed there. Axe-Grinding is when a user <strong>keeps constantly gravitating back to the same pet issue or theme for weeks or months on end</strong>.</p>
    <p>Example: Sara finds any opportunity to trigger up a GMO debate, no matter what the actual topic is. Viewing Sara's post history, GMO and Monsanto are constant, repeated themes in any context. Sara's negative review of a movie will mention eating GMO popcorn, because it's not really about the movie – it's always about her pet issue.</p>
    <p>This kind of inflexible, overbearing single-issue focus tends to drag discussion into strange, unwanted directions, and rapidly becomes tiresome to other participants who have probably heard everything this person has to say on that topic multiple times already. Either Sara needs to let that topic go, or she needs to find a dedicated place (e.g. GMO discussion areas) where others want to discuss it as much as she does, and take it there.</p>
    <h3 id="3griefing">3. Griefing</h3>
    <iframe width="640" height="360" src="//www.youtube.com/embed/84E7zzTqNtE" frameborder="0"></iframe>
    <p>In discussion, <a href="http://en.wikipedia.org/wiki/Griefer">griefing</a> is when someone <strong>goes out of their way to bait a particular person for weeks or months on end</strong>. By that I mean they pointedly follow them around, choosing to engage on whatever topic that person appears in, and needle the other person in any way they can, but always strictly by the book and not in violation of any rules… technically.</p>
    <p>Example: Whenever Joe sees George in a discussion topic, Joe now pops in to represent the opposing position, or point out flaws in George's reasoning. Joe also takes any opportunity to remind people of previous mistakes George made, or times when George was rude.</p>
    <p>When the discussion becomes more about the person than the topic, you're in deep trouble. It's not supposed to be about the participants, but <em>the topic at hand</em>. When griefing occurs, the discussion becomes a stage for personal conflict rather than a way to honestly explore topics and have an entertaining discussion. Ideally the root of the conflict between Joe and George can be addressed and resolved, or Joe can be encouraged to move on and leave the conflict behind. Otherwise, one of these users needs to find another place to go.</p>
    <h3 id="4persistentnegativity">4. Persistent Negativity</h3>
    <iframe width="512" height="288" src="https://www.hulu.com/embed.html?eid=ots_hph5c6luhcfwyxv9aw" frameborder="0"></iframe>
    <p>Nobody expects discussions to be all sweetness and light, but neverending vitriol and negativity are giant wet blankets. It's hard to enjoy anything when someone's constantly reminding you how terrible the world is. Persistent negativity is <strong>when someone's negative contributions to the discussion far outweigh their positive contributions.</strong></p>
    <p>Example: Even long after the game shipped, Fred mentions that the game took far too long to ship, and that it shipped with bugs. He paid a lot of money for this game, and feels he didn't get the enjoyment from the game that was promised for the price. He warns people away from buying expansions because this game has a bad track record and will probably fail. Nobody will be playing it online soon because of all the problems, so why bother even trying? Wherever topics happen to go, Fred is there to tell everyone this game is worse than they knew.</p>
    <p>If Fred doesn't have anything positive to contribute, what exactly is the purpose of his participation in that community? What does he hope to achieve? Criticism is welcome, but that shouldn't be the sum total of everything Fred contributes, and he should be reasonably constructive in his criticism. People join communities to build things and celebrate the enjoyment of those things, not have other people dump all over it and constantly describe how much they suck and disappoint them. If there isn't any silver lining in Fred's cloud, and he can't be encouraged to find one, he should be asked to find other places to haunt.</p>
    <h3 id="5ranting">5. Ranting</h3>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/10/scream-computer.jpg" alt=""></p>
    <p>Discussions are social, and thus emotional. You <em>should</em> feel something. But <strong>prolonged, extreme appeal to emotion</strong> is fatiguing and incites arguments. Nobody wants to join a dry, technical session at the Harvard Debate Club, because that'd be boring, but there is a big difference between a persuasive post and a straight-up rant.</p>
    <p>Example: Holly posts at the extremes – either something is the worst thing that ever happened, or the best thing that ever happened. She will post 6 to 10 times in a topic and state her position as forcefully as possible, for as long and as loud as it takes, to as many individual people in the discussion as it takes, to get her point across. The stronger the language in the post, the better she likes it.</p>
    <p>If Holly can't make her point in a reasonable way in one post and a followup, perhaps she should rethink her approach. Yelling at people, turning the volume to 11, and describing the situation in the most emotional, extreme terms possible to elicit a response – unless this really <em>is</em> the worst or best thing to happen in years – is a bit like yelling fire in a crowded theater. It's irresponsible. Either tone it down, or take it somewhere that everyone talks that way.</p>
    <h3 id="6grudges">6. Grudges</h3>
    <p>In any discussion, there is a general expectation that everyone there is participating in good faith – that they have an open mind, no particular agenda, and no bias against the participants or the topic. While short term disagreement is fine, it's important that the people in your community have the ability to reset and approach each new topic with a clean(ish) slate. When you don't do that, when people <strong>carry ill will from previous discussions toward the participants or topic into new discussions</strong>, that's a grudge.</p>
    <p>Example: Tad strongly disagrees with a decision the community made about not creating a new category to house some discussion he finds problematic. So he now views the other leaders in the community, and the moderators, with great distrust. Tad feels like the community has turned on him, and so he has soured on the community. But he has too much invested here to leave, so Tad now likes to point out all the consequences of this "bad" decision often, and cite it as an example of how the community is going wrong. He also follows another moderator, Steve, around because he views him as the ringleader of the original decision, and continually writes long, critical replies to his posts.</p>
    <p>Grudges can easily lead to every other dark community pattern on this list. I cannot emphasize enough how important it is to recognize grudges when they emerge so the community can intervene and point out what's happening, and all the negative consequences of a grudge. It's important in the broadest general life sense not to hold grudges; as the famous quote goes (as near as I can tell, attributed to <a href="http://www.fakebuddhaquotes.com/holding-onto-anger-is-like-drinking-poison/">Alcoholics Anonymous</a>)</p>
    <blockquote>
    <p>Holding a grudge is like drinking poison and expecting the other person to die.</p>
    </blockquote>
    <p>So your community should be educating itself about the danger of grudges, the root of so many other community problems. But it is <em>critically</em> important that moderators never, and I mean never <em>ever</em>, hold grudges. That'd be disastrous.</p>
    <h3 id="whatcanyoudo">What can <em>you</em> do?</h3>
    <p>I made a joke in the title of this post about weaponizing empathy. I'm not sure that's even possible. But you can start by having <a href="http://blog.discourse.org/2013/03/the-universal-rules-of-civilized-discourse/">clear community guidelines</a>, teaching your community to <a href="http://blog.codinghorror.com/your-community-door/">close the door on overt hate</a>, and watching out for any overall empathy erosion caused by the six dark community behavior patterns I outlined above.</p>
    <p>At the risk of sounding aspirational, here's one thing I know to be true, and I advise every community to take to heart: <strong>I expect you to act like a group of friends who care about each other</strong>, no matter how dumb some of us might be, no matter what political opinions some of us hold, no matter what things some of us like or dislike.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-10-23T17:43:25.000Z</pubDate>
    <guid>https://blog.codinghorror.com/what-if-we-could-weaponize-empathy/</guid>
    </item>
    <item>
    <title>Your Community Door</title>
    <link>https://blog.codinghorror.com/your-community-door/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>What are the real world consequences to signing up for a Twitter or Facebook account through Tor and spewing hate toward other human beings?</p>
    <blockquote class="twitter-tweet" lang="en">
    <p>Facebook reviewed the comment I reported and found it doesn't violate their Community Standards. <a href="http://t.co/p9syG7oPM1">pic.twitter.com/p9syG7oPM1</a></p>— Rob Beschizza (@Beschizza) <a href="https://twitter.com/Beschizza/status/522521187533201408">October 15, 2014</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>As far as I can tell, nothing. There are barely any <em>online</em> consequences, even if the content is reported.</p>
    <p><em>But there should be.</em></p>
    <p>The problem is that Twitter and Facebook aim to be discussion platforms for "everyone", where every person, no matter how hateful and crazy they may be, gets a turn on the microphone. They get to be heard.</p>
    <p><a href="http://xkcd.com/1357/"><img alt="https://blog.codinghorror.com/content/images/2014/10/free_speech.png" alt=""></a></p>
    <p>The hover text for this one is so good it deserves escalation:</p>
    <blockquote>
    <p>I can't remember where I heard this, but someone once said that defending a position by citing free speech is sort of the ultimate concession; <strong>you're saying that the most compelling thing you can say for your position is that it's not literally illegal to express.</strong></p>
    </blockquote>
    <p>If the discussion platform you're using aims to be a public platform for the whole world, there are some pretty terrible things people can do and say to other people there with no real consequences, under the noble banner of free speech.</p>
    <p><a href="http://wondermark.com/1k62/"><img alt="https://blog.codinghorror.com/content/images/2014/10/2014-09-19-1062sea.png" alt=""></a></p>
    <p>It can be challenging.</p>
    <p>How do we show people like this the door? You can block, you can hide, you can mute. But what you <em>can't</em> do is show them the door, because  <strong>it's not your house</strong>. It's Facebook's house. It's their door, and the rules say the whole world has to be accommodated within the Facebook community. So mute and block and so forth are the only options available. But they are anemic, barely workable options.</p>
    <p>As we build <a href="http://www.discourse.org">Discourse</a>, I've discovered that I am deeply opposed to mute and block functions. I think that's because the whole concept of Discourse is that <strong>it <em>is</em> your house</strong>. And mute and ignore, while arguably unavoidable for large worldwide communities, are actively dangerous for smaller communities. Here's why.</p>
    <ul>
    <li>
    <p><strong>It allows you to ignore bad behavior</strong>. If someone is hateful or harassing, why complain? Just mute. No more problem. Except everyone else still gets to see a person being hateful or harassing to another human being in public. Which means you are now sending a message to all other readers that this is behavior that is OK and accepted in your house.</p>
    </li>
    <li>
    <p><strong>It puts the burden on the user</strong>. A kind of victim blaming — if someone is rude to you, then "why didn't you just mute / block them?" The solution is right there in front of you, why didn't you learn to use the software right? Why don't you take some responsibility and take action to stop the person abusing you? Every single time it happens, over and over again?</p>
    </li>
    <li>
    <p><strong>It does not address the problematic behavior</strong>. A mute is invisible to everyone. So the person who is getting muted by 10 other users is getting <em>zero</em> feedback that their behavior is causing problems. It's also giving <em>zero</em> feedback to moderators that this person should probably get an intervention at the very least, if not outright suspended. It's so bad that people are building their own <a href="http://www.theblockbot.com/">crowdsourced block lists for Twitter</a>.</p>
    </li>
    <li>
    <p><strong>It causes discussions to break down</strong>. Fine, you mute someone, so you "never" see that person's posts. But then another user you like quotes the muted user in their post, or references their @name, or replies to their post. Do you then suppress just the quoted section? Suppress the @name? Suppress all replies to their posts, too? This leaves big holes in the conversation and presents many hairy technical challenges. Given enough personal mutes and blocks and ignores, all conversation becomes a <a href="http://www.darklegacycomics.com/424">weird patchwork</a> of partially visible statements.</p>
    </li>
    <li>
    <p><strong>This is your house and your rules</strong>. This isn't Twitter or Facebook or some other giant public website with an expectation that "everyone" will be welcome. This is your house, with your rules, and your community. If someone can't behave themselves to the point that they are consistently rude and obnoxious and unkind to others, you don't ask the other people in the house to please ignore it – <em>you ask them to leave your house</em>. Engendering some weird expectation of "everyone is allowed here" sends the wrong message.  Otherwise your house no longer belongs to you, and that's a very bad place to be.</p>
    </li>
    </ul>
    <p>I worry that people are learning the wrong lessons from the way Twitter and Facebook <a href="http://www.theatlantic.com/technology/archive/2014/10/the-unsafety-net-how-social-media-turned-against-women/381261/?single_page=true">poorly handle these situations</a>. Their hands are tied because they aspire to be these global communities where free speech trumps basic human decency and empathy.</p>
    <p>The greatest power of online discussion communities, in my experience, is that they <em>don't</em> aspire to be global. You set up a clubhouse with <a href="http://blog.discourse.org/2013/03/the-universal-rules-of-civilized-discourse/">reasonable rules your community agrees upon</a>, and <strong>anyone who can't abide by those rules needs to be gently shown the door.</strong></p>
    <p>Don't pull this wishy washy non-committal stuff that Twitter and Facebook do. Community rules are only meaningful if they are actively enforced. You need to be willing to say this to people, at times:</p>
    <blockquote>
    <p>No, your behavior is not acceptable in our community; "free speech" doesn't mean we are obliged to host your content, or listen to you being a jerk to people. This is our house, and our rules.</p>
    </blockquote>
    <p>If they don't like it, fortunately there's a whole Internet of other communities out there. They can go try a different house. Or <a href="http://blog.discourse.org/2014/04/install-discourse-in-under-30-minutes/">build their own</a>.</p>
    <p>The goal isn't to slam the door in people's faces – visitors should always be greeted in good faith, with a hearty smile – but simply to acknowledge that in those rare but inevitable cases where good faith breaks down, a well-oiled front door will save your community.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-10-20T18:32:00.000Z</pubDate>
    <guid>https://blog.codinghorror.com/your-community-door/</guid>
    </item>
    <item>
    <title>Level One: The Intro Stage</title>
    <link>https://blog.codinghorror.com/level-one-the-intro-stage/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Way back in 2007, before Stack Overflow was a glint in anyone's eye, I called software development a <a href="http://blog.codinghorror.com/software-development-as-a-collaborative-game/">collaborative game</a>. And perhaps Stack Overflow was the natural outcome of that initial thought – recasting online software development discussion into a collaborative game where the only way to "win" is to learn from each other.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/10/6a0120a85dcdae970b0120a86d6821970b-pi.png" alt=""></p>
    <p>That was <a href="http://blog.codinghorror.com/the-gamification/">before the word gamification existed</a>. But gamification is no longer the cool, hip concept it was back in 2011. Still, whether you call yourself a "gamer" or not, whether you believe in "gamification" or not, five years later <a href="http://blog.codinghorror.com/the-worlds-largest-mmorpg-youre-playing-it-right-now/">you're still playing the world's largest multiplayer game</a>.</p>
    <p>In fact, you're playing it right now.</p>
    <p>One of the most timeless aspects of games is how egalitarian they are, how easy it is for  anyone to get started. Men, women, children — people love games because everyone can play along. You don't have to take classes or go to college or be certified: <em>you just play</em>.  And this is, not so incidentally, how many of the programmers I know came to be programmers.</p>
    <p>Do you know anyone that bought the video game Halo, or Myst, then proceeded to open the box and read the manual before playing the game? <em>Whoa there guys, we can't play the game yet, we gotta read these instructions first!</em> No, they stopped making manuals for games a long time ago, unless you count the thin sheet of paper that describes how to download / install the game on your device. Because they found out <a href="http://idratherbewriting.com/2009/12/27/if-no-one-reads-the-manual-thats-okay/">nobody reads the manual</a>.</p>
    <blockquote>
    <p>The project I’m working on is critical, but it has only about 3 to 4 users, most of whom are already familiar the application. One of the users even drives the design. The manual I’m writing, which is nearly 200 pages, is mostly a safety measure for business continuity planning. I don’t expect anyone will ever read it.</p>
    <p>It’s a project I managed to procrastinate for months, working on other projects, even outside the scope of my regular assignments. The main deterrent, I believe, was my perception that no one needed the manual. The users seemed to be getting along fine without it.</p>
    <p>And so as the year ticked to a close, instead of learning more about Mediawiki and screencasting and After Effects, I spent my time updating a 200-page manual that I don’t think anyone will ever read. It will be printed out, three-hole punched, and placed in a binder to collect dust on a shelf.</p>
    </blockquote>
    <p>I guess that's not surprising for games. Games are supposed to be fun, and reading manuals isn't fun; it's pretty much the opposite of fun. But it is also true for software in general. Reading manuals isn't <em>work</em>, at least, it isn't whatever specific thing you set out to do when you fired up that bit of software on your phone, tablet, or laptop.</p>
    <p>Games have another clever trick up their sleeve, though. Have you ever noticed that in most of today's games, the first level is kind of easy. Like… <em>suspiciously</em> easy?</p>
    <p>That's because level one, the intro stage, isn't really part of the game. <strong>It's the manual.</strong></p>
    <iframe width="640" height="360" src="//www.youtube.com/embed/8FpigqfcvlM" frameborder="0" allowfullscreen></iframe>
    <p>As MegaMan X illustrates, manuals are pointless when we can learn about the game in the best and most natural way imaginable: by <em>playing the actual game</em>. You learn by doing, provided you have a well designed sandbox that lets you safely experiment as you're starting out in the game.</p>
    <p>(The above video does contain some slightly NSFW language, as well as abuse of cartoon female avatars that I don't endorse, but it is utterly brilliant, applies to every app, software and website anyone has ever built, and I strongly recommend watching it all.)</p>
    <p>This same philosophy applies to today's software and websites. Don't bother with all the manuals, video introductions, tutorials, and pop-up help dialogs. Nobody's going to read that stuff, at least, not the people who need it.</p>
    <p>Instead, follow the lesson of MegaMan: if you want to teach people about your software, consider how you can <strong>build a great intro stage</strong> and let them start playing with it immediately.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-10-09T21:21:16.000Z</pubDate>
    <guid>https://blog.codinghorror.com/level-one-the-intro-stage/</guid>
    </item>
    <item>
    <title>Standard Markdown is now Common Markdown</title>
    <link>https://blog.codinghorror.com/standard-markdown-is-now-common-markdown/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Let me open with an apology to John Gruber for <a href="http://blog.codinghorror.com/standard-flavored-markdown/">my previous blog post</a>.</p>
    <p>We've been working on the Standard Markdown project for about two years now. We invited John Gruber, the original creator of Markdown, to join the project via email in November 2012, but never heard back. As we got closer to being ready for public feedback, we emailed John on August 19th with a link to the Standard Markdown spec, asking him for his feedback. Since John MacFarlane was the primary author of most of the work, we suggested that he be the one to reach out.</p>
    <p>We then waited two weeks for a response.</p>
    <p>There was no response, so we assumed that John Gruber was either OK with the project (and its name), or didn't care. So we proceeded.</p>
    <p>There was lots of internal discussion about what to name our project. Strict Markdown? XMarkdown? Markdown Pro? Markdown Super Hyper Turbo Pro Alpha Diamond Edition?</p>
    <p>As we were finalizing the name, we noticed on this podcast, at 1:15 …</p>
    <iframe width="100%" height="450" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/159439009&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;visual=true"></iframe>
    <p>… that John seemed OK with the name "GitHub Flavored Markdown". So I originally wrote the blog post and the homepage using that terminology – "Standard Flavored Markdown" – and even kept that as the title of the blog post to signify our intent. We were building Yet Another Flavor of Markdown, one designed to remove ambiguity by specifying a standard, while preserving as much as possible the spirit of Markdown and compatibility with existing documents.</p>
    <p>Before we went live, I asked for feedback internally, and one of the bits of feedback I got was that it was inconsistent to say Standard Flavored Markdown on the homepage and blog when the spec says Standard Markdown throughout. So I changed them to match Standard Markdown, and that's what we launched with.</p>
    <p>It was a bit of a surprise to get an email last night, addressed to both me and John MacFarlane, from John Gruber indicating that the name Standard Markdown was "infuriating".</p>
    <p>I'm sorry the name is so infuriating. <strong>I assure you that we did <em>not</em> choose the name to make you, or anyone else, angry.</strong> We were simply trying to pick a name that correctly and accurately reflected our goal – to build an unambiguous flavor of Markdown. If the name we chose made inappropriate overtures about Standard Markdown being anything more than a highly specified flavor of Markdown, I apologize. Standard does have certain particular computer science meanings, as in IETF Standard, ECMA Standard. That was not our intent, it was more of an aspirational element of "what if, together, we could eventually..". What can I say? We're programmers. We name things literally. And <a href="http://blog.codinghorror.com/i-shall-call-it-somethingmanager/">naming is hard</a>.</p>
    <p>John Gruber was also very upset, and I think rightfully so, that the word Markdown was not capitalized throughout the spec. This was an oversight on our part – and also my fault because I <em>did</em> notice Markdown wasn't capitalized as I copied snippets of the spec to the homepage and blog post, and I definitely thought it was odd, too. You'll note that I took care to manually capitalize Markdown in the parts of the spec I copied to the blog post and home page – but I neglected to mention this to John MacFarlane as I should have. We corrected this immediately when it was brought to our attention.</p>
    <p>John then made three requests:</p>
    <ol>
    <li>
    <p>Rename the project.</p>
    </li>
    <li>
    <p>Shut down the standardmarkdown.com domain, and don't redirect it.</p>
    </li>
    <li>
    <p>Apologize.</p>
    </li>
    </ol>
    <p>All fair. Happy to do all of those things.</p>
    <p>Starting with the name. In his email John graciously indicated that he would "probably" approve a name like "Strict Markdown" or "Pedantic Markdown". Given the very public earlier miscommunication about naming, that consideration is appreciated.</p>
    <p>We replied with the following suggestions:</p>
    <ul>
    <li>Compatible Markdown</li>
    <li>Regular Markdown</li>
    <li>Community Markdown</li>
    <li>Common Markdown</li>
    <li>Uniform Markdown</li>
    <li>Vanilla Markdown</li>
    </ul>
    <p>We haven't heard back after replying last night, and I'm not sure we ever will, so in the interest of moving ahead and avoiding conflict, we're immediately renaming the project to <strong>Common Markdown</strong>.</p>
    <p>We hope that is an acceptable name; it was independently suggested to us several times in several different feedback areas. The intention is to avoid any unwanted overtones of ownership; we have only ever wanted to be Yet Another Flavor of Markdown.</p>
    <ol>
    <li>
    <p>The project name change is already in progress.</p>
    </li>
    <li>
    <p>This is our public apology.</p>
    </li>
    <li>
    <p>I'll shut down the standardmarkdown.com domain as soon as I can, probably by tomorrow.</p>
    </li>
    </ol>
    <p>John, we deeply apologize for the miscommunication. It's our fault, and we want to fix it. But even though we made mistakes, I hope it is clear that everything we've done, we did solely out of a shared love of Markdown (and its simple, unencumbered old-school ASCII origins), and the desire to ensure the success of Markdown as a stable format for future generations.</p>
    <p>Edit: after a long and thoughtful email from John Gruber – which is greatly appreciated – he indicated that no form of the word "Markdown" is acceptable to him in this case. We are now using the name <a href="http://commonmark.org"><strong>CommonMark</strong></a>.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-09-04T23:23:57.000Z</pubDate>
    <guid>https://blog.codinghorror.com/standard-markdown-is-now-common-markdown/</guid>
    </item>
    <item>
    <title>Standard Flavored Markdown</title>
    <link>https://blog.codinghorror.com/standard-flavored-markdown/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>In 2009 I <a href="http://blog.codinghorror.com/responsible-open-source-code-parenting/">lamented the state of Markdown</a>:</p>
    <blockquote>
    <p>Right now we have the worst of both worlds. Lack of leadership from the top, and a bunch of fragmented, poorly coordinated community efforts to advance Markdown, none of which are officially canon. This isn't merely incovenient for anyone trying to find accurate information about Markdown; it's actually harming the project's future.</p>
    </blockquote>
    <p>In late 2012, David Greenspan from <a href="https://www.meteor.com/">Meteor</a> approached me and proposed we move forward, and <a href="http://blog.codinghorror.com/the-future-of-markdown/">a project crystallized</a>:</p>
    <blockquote>
    <p>I propose that Stack Exchange, GitHub, Meteor, Reddit, and any other company with lots of traffic and a strategic investment in Markdown, all work together to <strong>come up with an official Markdown specification, and standard test suites to validate Markdown implementations</strong>. We've all been working at cross purposes for too long, accidentally fragmenting Markdown while popularizing it.</p>
    </blockquote>
    <p>We formed a small private working group with key representatives from GitHub, from Reddit, from Stack Exchange, from the open source community. We spent months hashing out the details and agreeing on the necessary changes to turn Markdown into a language you can parse without feeling like you just walked through a sewer – while preserving the simple, clear, ASCII email inspired spirit of Markdown.</p>
    <p>We really struggled with this at <a href="http://www.discourse.org">Discourse</a>, which is also based on Markdown, but an even more complex dialect than the one we built at Stack Overflow. In Discourse, you can mix <em>three</em> forms of markup interchangeably:</p>
    <ul>
    <li>Markdown</li>
    <li>HTML (safe subset)</li>
    <li>BBCode (subset)</li>
    </ul>
    <p>Discourse is primarily a JavaScript app, so naturally we needed a nice, compliant implementation of Markdown in JavaScript. Surely such a thing exists, yes? Nope. Even in 2012, we found <em>zero</em> JavaScript implementations of Markdown that could pass the only Markdown test suite I know of, <a href="https://github.com/michelf/mdtest/">MDTest</a>. It isn't authoritative, it's a community created initiative that embodies its own decisions about rendering ambiguities in Markdown, but it's all we've got. We contributed many <a href="https://github.com/evilstreak/markdown-js/commits/master">upstream fixes to markdown.js</a> to make it pass MDTest – but it still only passes in our locally extended version.</p>
    <p>As an open source project ourselves, we're perfectly happy contributing upstream code to improve it for everyone. But it's an indictment of the state of the Markdown ecosystem that any remotely popular implementation wasn't already testing itself against a formal spec and test suite. But who can blame them, because <i>it didn't exist!</i></p>
    <p>Well, now it does.</p>
    <p>It took a while, but I'm pleased to announce that <a href="http://standardmarkdown.com"><strong>Standard Markdown</strong></a> is now finally ready for public review.</p>
    <p><strong><a href="http://standardmarkdown.com">standardmarkdown.com</a></strong></p>
    <p>It's a spec, including embedded examples, and implementations in portable C and JavaScript. We strived mightily to stay true to the spirit of Markdown in writing it. The primary author, John MacFarlane, <a href="http://spec.standardmarkdown.com">explains in the introduction to the spec</a>:</p>
    <blockquote>
    <p>Because Gruber’s syntax description leaves many aspects of the syntax undetermined, writing a precise spec requires making a large number of decisions, many of them somewhat arbitrary. In making them, I have appealed to existing conventions and considerations of simplicity, readability, expressive power, and consistency. I have tried to ensure that “normal” documents in the many incompatible existing implementations of markdown will render, as far as possible, as their authors intended. And I have tried to make the rules for different elements work together harmoniously. In places where different decisions could have been made (for example, the rules governing list indentation), I have explained the rationale for my choices. In a few cases, I have departed slightly from the canonical syntax description, in ways that I think further the goals of markdown as stated in that description.</p>
    </blockquote>
    <p>Part of my contribution to the project is to host the discussion / mailing list for Standard Markdown in a Discourse instance.</p>
    <p><strong><a href="http://talk.standardmarkdown.com">talk.standardmarkdown.com</a></strong></p>
    <p>Fortunately, Discourse itself <a href="http://blog.discourse.org/2014/08/introducing-discourse-1-0/">just reached version 1.0</a>. If the only thing Standard Markdown does is help save a few users from the continuing horror that is mailing list web UI, we all win.</p>
    <p>What I'm most excited about is that we got a massive contribution from the one person who, in my mind, was the most perfect person in the world to work on this project: <a href="http://johnmacfarlane.net/">John MacFarlane</a>. He took our feedback and wrote the entire Standard Markdown spec and both implementations.</p>
    <p><a href="http://johnmacfarlane.net/"><img alt="https://blog.codinghorror.com/content/images/2014/Sep/JohnPinhole.jpg" alt=""></a></p>
    <p>A lot of people know of John through his <a href="http://johnmacfarlane.net/pandoc/">Pandoc</a> project, which is amazing in its own right, but I found out about him because he built <a href="http://johnmacfarlane.net/babelmark2/faq.html">Babelmark</a>. I learned to refer to Babelmark extensively while working on Stack Overflow and MarkdownSharp, a C# implementation of Markdown.</p>
    <p>Here's how crazy Markdown is: to decide what the "correct" behavior is, you provide sample Markdown input to 20+ different Markdown parsers … and then pray that some consensus emerges in all their output. That's what Babelmark does.</p>
    <p>Consider this simple Markdown example:</p>
    <pre><code># Hello there
    
    This is a paragraph.
    
    - one
    - two
    - three
    - four
    
    1. pirate
    2. ninja
    3. zombie
    </code></pre>
    <p>Just for that, I count <a href="http://johnmacfarlane.net/babelmark2/?text=%23+Hello+there%0A%0AThis+is+a+paragraph.%0A%0A-+one%0A-+two%0A-+three%0A-+four%0A%0A1.+pirate%0A2.+ninja%0A3.+zombie"><em>fifteen</em> different rendered outputs</a> from 22 different Markdown parsers.</p>
    <p><a href="http://en.wikipedia.org/wiki/Tower_of_Babel"><img alt="https://blog.codinghorror.com/content/images/2014/Sep/Confusion_of_Tongues.png" alt=""></a></p>
    <p>In Markdown, we <em>literally</em> built a <a href="http://en.wikipedia.org/wiki/Tower_of_Babel">Tower of Babel</a>.</p>
    <p>Have I mentioned that it's a good idea for a language to have a formal specification and test suites? Maybe now you can see why that is.</p>
    <p>Oh, and in his spare time, John is also the chair of the department of philosophy at the University of California, Berkeley. <em>No big deal.</em> While I don't mean to minimize the contributions of anyone to the Standard Markdown project, we all owe a special thanks to John.</p>
    <p>Markdown is indeed everywhere. And that's a good thing. But it needs to be sane, parseable, and standard. That's the goal of <a href="http://standardmarkdown.com/">Standard Markdown</a> — but we need your help to get there. If you use Markdown on a website, <strong>ask what it would take for that site to become compatible with Standard Markdown</strong>; when you see the word "Markdown" you have the right to expect consistent rendering across all the websites you visit. If you implement Markdown, <a href="http://spec.standardmarkdown.com">take a look at the spec</a>, try to <strong>make your parser compatible with Standard Markdown</strong>, and <a href="http://talk.standardmarkdown.com">discuss improvements or refinements</a> to the spec.</p>
    <p><span style="color:red;">Update:</span> The project was renamed <a href="http://commonmark.org">CommonMark</a>. See <a href="http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/">my subsequent blog post</a>.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-09-03T19:06:30.000Z</pubDate>
    <guid>https://blog.codinghorror.com/standard-flavored-markdown/</guid>
    </item>
    <item>
    <title>The "Just In Time" Theory of User Behavior</title>
    <link>https://blog.codinghorror.com/the-just-in-time-theory/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I've long believed that the design of your software has a profound impact on how users <em>behave</em> within your software. But there are two sides to this story:</p>
    <ul>
    <li>
    <p>Encouraging the "right" things by making those things intentionally easy to do.</p>
    </li>
    <li>
    <p>Discouraging the "wrong" things by making those things intentionally difficult, complex, and awkward to do.</p>
    </li>
    </ul>
    <p>Whether the software is doing this intentionally, or completely accidentally, it's a fact of life: <a href="http://blog.codinghorror.com/training-your-users/">the path of least resistance is everyone's best friend</a>. Learn to master this path, or others will master it for you.</p>
    <p>For proof, consider Dan Ariely's new and amazing book, <a href="http://www.amazon.com/dp/0062183613?tag=codihorr-20">The (Honest) Truth About Dishonesty: How We Lie to Everyone – Especially Ourselves</a>.</p>
    <p><a href="http://www.amazon.com/dp/0062183613?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2014/Jul/the-honest-truth-about-dishonesty-cover.png" alt=""></a></p>
    <p>Indeed, let's be honest: <a href="http://blog.codinghorror.com/every-user-lies/">we all lie, all the time</a>. Not because we're bad people, mind you, but because we <em>have</em> to regularly lie to ourselves as <a href="http://blog.codinghorror.com/the-trap-you-set-for-yourself/">a survival mechanism</a>. You think we should be completely honest all the time? Yeah. <a href="http://blog.codinghorror.com/trust-me-im-lying/">Good luck with that</a>.</p>
    <p>But these healthy little white lies we learn to tell ourselves have a darker side. Have you ever heard <a href="http://online.wsj.com/news/articles/SB10001424052702304840904577422090013997320?mod=wsj_share_tweet">this old adage?</a></p>
    <blockquote>
    <p>One day, Peter locked himself out of his house. After a spell, the locksmith pulled up in his truck and picked the lock in about a minute.</p>
    <p>“I was amazed at how quickly and easily this guy was able to open the door,” Peter said. The locksmith told him that locks are on doors only to keep honest people honest. One percent of people will always be honest and never steal. Another 1% will always be dishonest and always try to pick your lock and steal your television; locks won’t do much to protect you from the hardened thieves, who can get into your house if they really want to.</p>
    <p><strong>The purpose of locks, the locksmith said, is to protect you from the 98% of mostly honest people who might be tempted to try your door if it had no lock.</strong></p>
    </blockquote>
    <p>I had heard this expressed less optimistically before as</p>
    <blockquote>
    <p>10% of people will <em>never</em> steal, 10% of people will <em>always</em> steal, and for everyone else … it depends.</p>
    </blockquote>
    <p>The "it depends" part is crucial to understanding human nature, and that's what Ariely spends most of the book examining in various tests. If for most people, honesty depends, what exactly does it depend on? The experiments Ariely conducts prove again and again that <strong>most people will consistently and reliably cheat "just a little", to the extent that they can still consider themselves honest people.</strong> The gating factor isn't laws, penalties, or ethics. Surprisingly, that stuff has virtually no effect on behavior. What does, though, is whether they can personally still <em>feel</em> like they are honest people.</p>
    <p>This is because they don't even consider it cheating – they're just taking a little extra, giving themselves a tiny break, enjoying a minor boost, because well, haven't they been working extra specially hard lately and earned it? Don't they of all people deserve something nice once in a while, and who would even miss this tiny amount? There's so much!</p>
    <p>These little white lies are the path of least resistance. They are everywhere. If laws don't work, if ethics classes don't work, if severe penalties don't work, how do you encourage people to behave in a way that "feels" honest that is actually, you know, <em>honest?</em> Feelings are some pretty squishy stuff.</p>
    <p>It's <a href="http://online.wsj.com/news/articles/SB10001424052702304840904577422090013997320?mod=wsj_share_tweet">easier than you think</a>.</p>
    <blockquote>
    <p>My colleagues and I ran an experiment at the University of California, Los Angeles. We took a group of 450 participants, split them into two groups and set them loose on our usual matrix task. We asked half of them to recall the Ten Commandments and the other half to recall 10 books that they had read in high school.</p>
    <p>Among the group who recalled the 10 books, we saw the typical widespread but moderate cheating. But in the group that was asked to recall the Ten Commandments, we observed no cheating whatsoever. We reran the experiment, reminding students of their schools' honor codes instead of the Ten Commandments, and we got the same result. We even reran the experiment on a group of self-declared atheists, asking them to swear on a Bible, and got the same no-cheating results yet again.</p>
    </blockquote>
    <p>That's the good news: <strong>a simple reminder <em>at the time of the temptation</em></strong> is usually all it takes for people to suddenly "remember" their honesty.</p>
    <p>The bad news is Clippy was right.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/Jul/clippy-suicide.png" alt=""></p>
    <p>In my experience, nobody reads manuals, nobody reads FAQs, and nobody reads tutorials. I am exaggerating a little here for effect, of course. Some A+ students will go out of their way to read these things. That's how they became A+ students, by naturally going the extra mile, and generally being the kind of users who teach themselves perfectly well without needing special resources to get there. When I say "nobody" I mean the vast overwhelming massive majority of people you would really, <em>really</em> want to <a href="http://blog.codinghorror.com/treating-user-myopia/">read things like that</a>. People who don't have the time or inclination to expend any effort at all other than the absolute minimum required, people who are most definitely <em>not</em> going to go the extra mile.</p>
    <p>In other words, the whole world.</p>
    <p>So how do you help people who, like us, just never seem to have the time to figure this stuff out becase they're, like, <em>suuuuper</em> busy and stuff?</p>
    <p>You do it by showing them …</p>
    <ul>
    <li>the minumum helpful reminder</li>
    <li>at exactly the right time</li>
    </ul>
    <p>This is what I've called the  "Just In Time" theory of user behavior for years. Sure, FAQs and tutorials and help centers are great and all, but who has the time for that? We're <a href="http://blog.codinghorror.com/defending-perpetual-intermediacy/">all perpetual intermediates here</a>, at best.</p>
    <p>The closer you can get your software to practical, useful "Just In Time" reminders, the better you can help the users who are most in need. Not the A+ students who already read the FAQ, and studied the help center intently, but those users who <em>never read anything</em>. And now, thanks to Dan Ariely, I have the science to back this up. Even something as simple as putting your name on the top of a form to report auto insurance milage, rather than the bottom, resulted in a mysterious 10% increase in average miles reported. Having that little reminder <em>right at the start</em> that hey, your name is here on this form, inspired additional honesty. It works.</p>
    <p>Did we use this technique on Stack Overflow and Stack Exchange? Indeed we did. Do I use this technique on <a href="http://www.discourse.org">Discourse</a>? You bet, in even more places, because this is social discussion, not technical Q&amp;A. We are rather <a href="http://blog.discourse.org/2013/03/the-universal-rules-of-civilized-discourse/">big on civility</a>, so we like to remind people when they post on Discourse they aren't talking to a computer or a robot, but <a href="http://sivers.org/real">a real person, a lot like you</a>.</p>
    <p>When's the natural time to remind someone of this? Not when they sign up, not when they're reading, but <em>at the very moment they begin typing their first words in their first post</em>. This is the moment of temptation when you might be super mega convinced that <a href="http://xkcd.com/386/">someone is Wrong on the Internet</a>. So we put up a gentle little reminder Just In Time, right above where they are typing:</p>
    <p><a href="http://discourse.soylent.me/"><img alt="https://blog.codinghorror.com/content/images/2014/Jul/discourse-new-user-civility-reminder.png" alt=""></a></p>
    <p>Then hopefully, as Dan Ariely showed us with honesty, this little reminder will tap into people's natural reserves of friendliness and civility, so cooler heads will prevail – and a few people are inspired to get along a little better than they did yesterday. Just because you're on the Internet doesn't mean you need to be yelling at folks 24/7.</p>
    <p>We use this same technique a bunch of other places: if you are posting a lot but haven't set an avatar, if you are adding a new post to a particularly old conversation, if you are replying a bunch of times in the same topic, and so forth. Wherever we feel a gentle nudge might help, at the exact time the behavior is occurring.</p>
    <p>It's important to understand that we use these reminders in <a href="http://www.discourse.org">Discourse</a> not because we believe people are dumb;  quite the contrary, we use them because <strong>we believe people are smart, civil, and interesting.</strong> Turns out everyone just needs to be reminded of that once in a while for it to continue to be true.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-07-17T23:05:23.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-just-in-time-theory/</guid>
    </item>
    <item>
    <title>The Infinite Space Between Words</title>
    <link>https://blog.codinghorror.com/the-infinite-space-between-words/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Computer performance is <a href="http://blog.codinghorror.com/the-computer-performance-shell-game/">a bit of a shell game</a>. You're always waiting for one of four things:</p>
    <ul>
    <li>Disk</li>
    <li>CPU</li>
    <li>Memory</li>
    <li>Network</li>
    </ul>
    <p>But which one? How long will you wait? And what will you do while you're waiting?</p>
    <p>Did you see <a href="http://www.imdb.com/title/tt1798709">the movie "Her"</a>? If not, you should. It's great. One of my favorite scenes is the AI describing just how difficult it becomes to communicate with humans:</p>
    <blockquote>
    <p>It's like I'm reading a book… and it's a book I deeply love. But I'm reading it slowly now. So the words are really far apart and the spaces between the words are almost infinite. I can still feel you… and the words of our story… but it's in this endless space between the words that I'm finding myself now. It's a place that's not of the physical world. It's where everything else is that I didn't even know existed. I love you so much. But this is where I am now. And this who I am now. And I need you to let me go. As much as I want to, I can't live your book any more.</p>
    </blockquote>
    <p>I have some serious reservations about the work environment pictured in Her where everyone's spending all day creepily whispering to their computers, but there is deep fundamental truth in that one pivotal scene. That infinite space "between" what we humans feel as time is where computers spend <em>all</em> their time. It's an entirely different timescale.</p>
    <p>The book <a href="http://www.amazon.com/dp/0133390098/?tag=codihorr-20">Systems Performance: Enterprise and the Cloud</a> has a great table that illustrates just how enormous these time differentials are. Just translate computer time into arbitrary seconds:</p>
    <table width="600px">
    <tr>
    <td>1 CPU cycle</td>
    <td>0.3 ns</td>
    <td>1 s</td>
    </tr>
    <tr>
    <td>Level 1 cache access</td>
    <td>0.9 ns</td>
    <td>3 s</td>
    </tr>
    <tr>
    <td>Level 2 cache access</td>
    <td>2.8 ns</td>
    <td>9 s</td>
    </tr>
    <tr>
    <td>Level 3 cache access</td>
    <td>12.9 ns</td>
    <td>43 s</td>
    </tr>
    <tr>
    <td>Main memory access</td>
    <td>120 ns</td>
    <td>6 min</td>
    </tr>
    <tr>
    <td>Solid-state disk I/O</td>
    <td>50-150 μs</td>
    <td>2-6 days</td>
    </tr>
    <tr>
    <td>Rotational disk I/O</td>
    <td>1-10 ms</td>
    <td>1-12 months</td>
    </tr>
    <tr>
    <td>Internet: SF to NYC</td>
    <td>40 ms</td>
    <td>4 years</td>
    </tr>
    <tr>
    <td>Internet: SF to UK</td>
    <td>81 ms</td>
    <td>8 years</td>
    </tr>
    <tr>
    <td>Internet: SF to Australia</td>
    <td>183 ms</td>
    <td>19 years</td>
    </tr>
    <tr>
    <td>OS virtualization reboot</td>
    <td>4 s</td>
    <td>423 years</td>
    </tr>
    <tr>
    <td>SCSI command time-out</td>
    <td>30 s</td>
    <td>3000 years</td>
    </tr>
    <tr>
    <td>Hardware virtualization reboot</td>
    <td>40 s</td>
    <td>4000 years</td>
    </tr>
    <tr>
    <td>Physical system reboot</td>
    <td>5 m</td>
    <td>32 millenia</td>
    </tr>
    </table>
    <p>The above Internet times are kind of optimistic. If you look at <a href="http://ipnetwork.bgtmo.ip.att.net/pws/network_delay.html">the AT&amp;T real time US internet latency chart</a>, the time from SF to NYC is more like 70ms. So I'd double the Internet numbers in that chart.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/May/internet-latency-usa.png" alt=""></p>
    <p>Latency is one thing, but it's also worth considering <a href="http://blog.codinghorror.com/the-economics-of-bandwidth/">the cost of that bandwidth</a>.</p>
    <p>Speaking of the late, great <a href="http://en.wikipedia.org/wiki/Jim_Gray_(computer_scientist)">Jim Gray</a>, he also <a href="http://loci.cs.utk.edu/dsi/netstore99/docs/presentations/keynote/sld023.htm">had an interesting way of explaining this</a>. If the CPU registers are how long it takes you to fetch data from your brain, then <strong>going to disk is the equivalent of fetching data from Pluto.</strong></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/May/storage-latency-how-far-away-is-the-data.png" alt=""></p>
    <p>He was probably referring to traditional spinning rust hard drives, so let's adjust that extreme endpoint for today:</p>
    <ul>
    <li>Distance to Pluto: 4.67 billion miles.</li>
    <li>Latest fastest spinning HDD performance (<a href="http://www.anandtech.com/show/5729/western-digital-velociraptor-1tb-wd1000dhtz-review/3">49.7</a>) versus latest fastest PCI Express SSD (<a href="http://anandtech.com/show/8006/samsung-ssd-xp941-review-the-pcie-era-is-here/6">506.8</a>). That's an improvement of 10x.</li>
    <li>New distance: 467 million miles.</li>
    <li>Distance to Jupiter: 500 million miles.</li>
    </ul>
    <p>So instead of travelling to Pluto to get our data from disk in 1999, <strong>today we only need to travel to … Jupiter</strong>.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/May/solar-system-distances.png" alt=""></p>
    <p>That's disk performance over the last decade. How much faster did CPUs, memory, and networks get in the same time frame? Would a 10x or 100x improvement really make a dent in these vast infinite spaces in time that computers deal with?</p>
    <p>To computers, we humans work on a completely different time scale, practically <a href="http://en.wikipedia.org/wiki/Timeline_of_the_far_future">geologic time</a>. Which is completely mind-bending. The faster computers get, the bigger this time disparity grows.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-05-16T19:42:56.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-infinite-space-between-words/</guid>
    </item>
    <item>
    <title>What Can Men Do?</title>
    <link>https://blog.codinghorror.com/what-can-men-do/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>(The title references Shanley Kane's <a href="https://medium.com/tech-culture-briefs/a1e93d985af0">post by the same name</a>. This post represents my views on what men can do.)</p>
    <p>It's no secret that programming is an <a href="http://en.wikipedia.org/wiki/Women_in_computing#The_Gender_Gap">incredibly male dominated field</a>.</p>
    <ul>
    <li>
    <p>Figures vary, but somewhere from 20% to 29% of currently working programmers are female.</p>
    </li>
    <li>
    <p>Less than 12% of Computer Science bachelor's degrees were awarded to women at US PhD-granting institutions in 2010.</p>
    </li>
    </ul>
    <p>So, on average, only about 1 out of every 5 working programmers you'll encounter will be female. You could say <a href="http://www.nytimes.com/2014/04/06/technology/technologys-man-problem.html?_r=0">technology has a man problem</a>.</p>
    <p>In an earlier post I noted that <a href="http://blog.codinghorror.com/software-developers-and-aspergers-syndrome/">many software developers I've known have traits of Aspergers</a>. Aspergers is a spectrum disorder; the more severe the symptoms, the closer it is to autism. And did you know that autism <a href="http://en.wikipedia.org/wiki/Epidemiology_of_autism">skews heavily towards males at a 4:1 ratio</a>?</p>
    <p>Interesting. I might even go so far as to say some of those traits are <a href="http://www.amazon.com/dp/046500556X?tag=codihorr-20">what makes one good at programming</a>.</p>
    <p>That's the way it currently is. But is that the way it <em>should be?</em> I remember noticing that the workforce of the maternity ward at the hospital where our children were born was incredibly female dominated. Is there something inherently wrong with professions that naturally skew heavily male or female?</p>
    <p><a href="http://www.cbs.nl/en-GB/menu/themas/arbeid-sociale-zekerheid/publicaties/artikelen/archief/2005/2005-1825-wm.htm"><img alt="https://blog.codinghorror.com/content/images/2014/Apr/male-vs-female-dominated-fields-2004.png" alt=""></a></p>
    <p>Consider <a href="http://www.cbs.nl/en-GB/menu/themas/arbeid-sociale-zekerheid/publicaties/artikelen/archief/2005/2005-1825-wm.htm">this list</a> of the most male and female dominated occupations in the Netherlands from 2004. It notes that:</p>
    <blockquote>
    <p>In higher and academic level positions, men and women are more often represented equally. This pattern of employment has hardly changed over the last years.</p>
    </blockquote>
    <p>Is programming a higher and academic level occupation? I'm not so sure, given that <a href="http://blog.codinghorror.com/please-dont-learn-to-code/">I've compared programmers to auto mechanics and plumbers in the past</a>. And you'll notice squarely where those occupations are on the above graphs. There's nothing wrong with being an auto mechanic or a plumber (or a programmer, for that matter), but is there anything about those particular professions that demands, in the name of social justice, that there must be 50% male plumbers and 50% female plumbers?</p>
    <p>For a counterpoint, here's a blog post from Sara J. Chipps. When I've e-mailed her in the past with my stupid questions on topics like this, she tries her best to educate me with empathy and compassion. That's why I love her.</p>
    <p>This is an <a href="http://sarajchipps.com/post/55986333661/in-which-i-answer-all-of-the-questions">excerpt from a blog post she wrote in 2012</a> which answered my question:</p>
    <blockquote>
    <p>Many people I meet ask me a variant of the question “I understand we want more women in technology, but why?” It’s a great question, and not at all something we should be offended by. Often men are afraid to ask questions like this for fear there will be backlash, and I think that fear can lead to stifling an important conversation.</p>
    <p>Frankly, the Internet is thriving without women building it, why should that change? Three reasons:</p>
    <p><strong>1) Diversity leads to better products and results</strong></p>
    <p>As illustrated in <a href="http://web.mit.edu/cortiz/www/Diversity/PDFs/Jehn%20et%20al%201999.pdf">this Cornell study</a> along with many others, diversity improves performance, morale, and end product. More women engineers means building a better internet, and improving software that can service society as a whole. Building a better Internet is why I started doing software development in the first place. I think we can all agree this is of utmost importance.</p>
    <p><strong>2) The Internet is the largest recording of human history ever built</strong></p>
    <p>Right now the architecture for that platform is being built disproportionally by white and asian males. You’ve heard the phrase “he who writes history makes history”? We don’t yet know how this will affect future generations.</p>
    <p>How can architecture be decidedly male? I like to refer to the anecdotal story of the Apple Store glass stairs. While visually appealing, there was one unforeseen consequence to their design: the large groups of strange men that spend hours each day standing under them looking up. As a woman, the first time I saw them I thought “thank god I’m not wearing a skirt today.” Such considerations were not taken in designing these stairs. I think it’s probable, if not easily predictable, that in a few years we will see such holes in the design of the web.</p>
    <p><strong>3) Women in 10 years need to be able to provide for themselves, and their families</strong></p>
    <p>Now, this reason is purely selfish on the part of women, but we all have mothers, and sisters, so I hope we can relate.</p>
    <p>This year there are 6 million information technology jobs in the US, up from 628,600 in 1987 and 1.34 million in 1997. Right now jobs in technology have half the unemployment rate of the rest of the workforce. There is no sign this will change anytime soon. If growth continues at the current rate, it will not be long until women will not be able to sustain themselves if not involved in a technical field.</p>
    <p>We have to start educating young girls about this now, or they may ultimately become the poorest demographic among us.</p>
    </blockquote>
    <p>These are good reasons. I'm particularly fond of #1. Diversity in social perspectives is hugely valuable when building social software intended for, y'know, human beings of all genders, like <a href="http://www.discourse.org">Discourse</a> and <a href="http://www.stackexchange.com">Stack Exchange</a>. Also, I get really, really tired of all the aggressive mansplaining in software development. Yes, even my own. Sometimes it would be good to get some ladysplaining all mixed up in there for variety.</p>
    <p>I suppose any effort to encourage more women to become software engineers should ideally start in childhood.</p>
    <p><a href="http://www.smbc-comics.com/?id=1883"><img alt="https://blog.codinghorror.com/content/images/2014/Apr/boy-toys-vs-girl-toys.png" alt="boy toys vs girl toys"></a></p>
    <p>Dolls? Pshaw. In our household, every child, male or female, is issued a regulation iPad at birth. You know, the best, most complex toy there is: a computer. And, shocker, I'm kind of weird about it – I <em>religiously</em> refer to it as <strong>a computer</strong>, never as an iPad. Never. Not once. Not gonna happen in my house. Branding is for marketing weasels.  So the twin girls will run around, frantically calling out for their so-called "'puter". It puts a grin on my face every time. And when anything isn't here, Maisie has gotten in the habit of saying "dada chargin'". Where's the milk, Maisie? "dada chargin'".</p>
    <p>But not everyone has the luxury of spawning their own processes and starting from boot. (You really should, though. It will <a href="http://blog.codinghorror.com/on-parenthood/">kick your ass</a>.)</p>
    <h3 id="whatcanyoudo">What can you do?</h3>
    <p>If you're reading this, there's about an 80% chance that you're a man. So after you give me the secret man club handshake, let's talk about what we men can do, right now, today, to make programming a more welcoming profession for women.</p>
    <ol>
    <li><strong>Abide by the Hacker School Rules</strong></li>
    </ol>
    <p>Let's start with the <a href="https://www.hackerschool.com/manual#sec-environment">freaking brilliant Hacker School rules</a>. This cuts directly to the unfortunate but oh-so-common Aspergers tendencies in programmers I mentioned earlier:</p>
    <ul>
    <li>No feigning surprise. "I can't believe you don't know what the <em>stack</em> is!"</li>
    <li>No <a href="http://tirania.org/blog/archive/2011/Feb-17.html">well-actuallys</a>. "Well, actually, you can do that without a regular expression."</li>
    <li>No back seat driving. Don't intermittently lob advice across the room.</li>
    <li>No subtle sexism via public debate.</li>
    </ul>
    <p>Does any of this sound familiar? Because it should. Oh <em>God</em> does this sound familar. Just read the whole set of Hacker School guidelines and recognize your natural tendencies, and try to rein them in. That's all I'm proposing.</p>
    <p>Well, actually, I'll be proposing a few more things.</p>
    <ol start="2">
    <li><strong>Really listen. What? I SAID LISTEN.</strong></li>
    </ol>
    <p>Remember <a href="https://www.youtube.com/watch?v=UHJdCO6Aa6s">this scene</a> in Fight Club?</p>
    <blockquote>
    <p>This is why I loved the support groups so much, if people thought you were dying, they gave you their full attention. If this might be the last time they saw you, they really saw you. Everything else about their checkbook balance and radio songs and messy hair went out the window. You had their full attention. <strong>People listened instead of just waiting for their turn to speak.</strong> And when they spoke, they weren't just telling you a story. When the two of you talked, you were building something, and afterward you were both different than before.</p>
    </blockquote>
    <p>Guilty as charged.</p>
    <p>My wife is a scientist, and she complains about this happening a lot at her work. I don't even think this one is about sexism, it's about basic respect. What does respect mean? Well, a bunch of things, but let's start with openly listening to people and giving them our full attention when they talk to us – rather than just waiting for our turn to speak.</p>
    <p>Let's shut up and listen quietly with the same thoughtfulness that we wish others would listen to us. We'll get our turn. We always do, don't we?</p>
    <ol start="3">
    <li><strong>If you see bad behavior from other men, speak up.</strong></li>
    </ol>
    <p>It's not other people's job to make sure that everyone enjoys a safe, respectful, civil environment at work and online.</p>
    <p>It's my job. It's your job. It is <em>our job</em>.</p>
    <p>There is no mythical men's club where it is OK to be a jerk to women. If you see any behavior that gives you pause, behavior that makes you wonder "is that OK?", behavior that you'd be uncomfortable with directed toward your sister, your wife, your daughter – speak up. Honestly, as one man to another. And if that doesn't work for whatever reason, escalate.</p>
    <ol start="4">
    <li><strong>Don't attempt romantic relationships at work.</strong></li>
    </ol>
    <p>Do you run a company? Institute a no-dating rule as policy. Yeah, I know, you can't truly enforce it, but it should still be the official company policy.   And whether the place where you work has this policy or not, <em>you</em> should have it on a personal level.</p>
    <p>I'm sorry I have to be that guy who dumps on true love, but let's be honest: the odds of any random office romance working out are pretty slim. And when it doesn't, how will you handle showing up to work every day and seeing this person? Will there be Capulet vs Montague drama? The women usually get the rough end of this deal, too, because men aren't good at handling the inevitable rejection.</p>
    <p>Just don't do it. Have all the romantic relationships you want outside work, but do not bring it to work.</p>
    <ol start="5">
    <li><strong>No drinking at work events.</strong></li>
    </ol>
    <p>I think it is very, very unwise for companies to have a culture associated with drinking and the lowered inhibitions that come with drinking. I've heard some terrifyingly awful stories that I don't even want to link to here. Men, plus women, plus alcohol is a great recipe for college. That's about all I remember from college, in fact. But as a safe work environment for women? Not so much.</p>
    <p>If you want to drink, be my guest. Drink. You're a grown up. I'm not the boss of you. But don't drink in a situation or event that is officially connected with work in <em>any</em> way. That should absolutely be your personal <em>and</em> company policy – no exceptions.</p>
    <p>There you have it. Five relatively simple things you, I, and all other working male programmers can do to help encourage a better environment for men <em>and</em> women in software plumbing. I mean engineering.</p>
    <p>So let's get to it.</p>
    <p>(I haven't listed anything here about mentoring. That's because <a href="https://twitter.com/codinghorror/status/25955094175">I am an awful mentor</a>. But please <em>do</em> feel free to mention good resources, like <a href="http://www.girldevelopit.com/">Girl Develop It</a>, that encourage mentoring of female software engineers by people that <em>are</em> actually good at it, in the comments.)</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-04-25T07:06:10.000Z</pubDate>
    <guid>https://blog.codinghorror.com/what-can-men-do/</guid>
    </item>
    <item>
    <title>Three Things</title>
    <link>https://blog.codinghorror.com/three-things/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I've <a href="http://blog.codinghorror.com/todont/">expressed my disillusionment with to-do lists</a> before.</p>
    <p>But let's try something simpler, a little experiment. <strong>What do you use to keep track of what you need to do?</strong> Hold it up, so I can see it. Humor me.</p>
    <p>Seriously! No no no, hold it closer, near the screen here. Let me look at it. Let me get a <em>good, long</em> look at it.</p>
    <p>Now imagine me slapping this thing out of your hand.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/Apr/dont-go-there.png" alt="don't go there"></p>
    <p>I just want to make a point, not break your fancy whatchamacallit. So pretend I slapped it into a soft fluffy pillow on the ground, not the hard concrete of the sidewalk. Though I probably should have.</p>
    <p>Whatever that thing is, it's a crutch. You don't need it. It's <a href="http://blog.codinghorror.com/todont/">hurting you more than it is helping</a>. Get rid of it.</p>
    <p>Instead, ask yourself this:</p>
    <h2 id="whatthreethingsdoyouneedtodotoday">What three things do you need to do today?</h2>
    <p>You should be able to instantly answer this simple question, each day, every day, for the rest of your life. <em>Without</em> any tools other than the brain you were born with.</p>
    <p>If you don't have this skill, develop it. Practice, starting today. Right now.</p>
    <p>What <em>are</em> you doing right now? Is it going to somehow result in one of those three things getting done today? Will this you get you to where you need to be by the end of the day?</p>
    <p>I'm not asking you to admonish yourself or to make any changes to your routine. Just keep it simple, focus on the important things, and add a little layer of awareness.</p>
    <p>So. Two items left. I'm doing <a href="https://www.youtube.com/watch?v=O_05qJTeNNI">pretty good</a> today.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-04-16T16:22:18.000Z</pubDate>
    <guid>https://blog.codinghorror.com/three-things/</guid>
    </item>
    <item>
    <title>Please Read The Comments</title>
    <link>https://blog.codinghorror.com/please-read-the-comments/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I find the <a href="https://www.google.com/?q=don't+read+the+comments">Don't Read The Comments</a> movement kind of sad.</p>
    <blockquote class="twitter-tweet" lang="en">
    <p>Comments sections are frequently misogynistic, homophobic, racist, and very often POORLY WRITTEN. Why bother reading them?</p>— Don't Read Comments (@AvoidComments) <a href="https://twitter.com/AvoidComments/statuses/442351550217068544">March 8, 2014</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>In 2006 I said that <a href="http://blog.codinghorror.com/a-blog-without-comments-is-not-a-blog/">a blog without comments is not a blog</a> and I stand behind that statement. There have been brief periods where my own blog has been <a href="http://blog.codinghorror.com/welcome-back-comments/">temporarily without comments</a>, but they will always come back as long as I'm in charge here.</p>
    <p>I'm a fan of comments, warts and all. They're noisy, sure, but in my experience they reliably produce crowdsourced knowledge in aggregate. I understand being pressed for time, but if you want the complete picture, in the same way that you should follow all those little citation links in Wikipedia articles, <strong>you should read the comments</strong>.</p>
    <p>I empathize with the <a href="http://www.salon.com/2012/10/25/im_never_reading_the_comments_again/">complaint</a>, believe me:</p>
    <blockquote>
    <p>I used to believe that as an online writer, I had an obligation to read the comments. I thought that it was important from a fact-checking perspective, that it somehow would help me grow as a writer. What I’ve learned is that if there’s something wrong or important or even, sometimes, good about a story, someone will let you know. I’ve over the years amassed an amazing community of Salon readers who engage via email, who challenge me, who inspire new stories, who are decent people and treat me like one in return. What I was getting in the comments was a lot of anonymous “You suck, bitch.”</p>
    <p>I admit it’s depressing for one who’s invested almost her entire career in online community to throw in the towel on it in this way. I want it to be better. But it’s just not. As a colleague once observed, “I just can’t take another letter from Angry Bad Divorce Guy.”</p>
    </blockquote>
    <p>But that's so many pesky <em>words</em>, isn't it? TL;DR. Allow me to illustrate with a graph that your brain can absorb in milliseconds:</p>
    <p><a href="http://www.smbc-comics.com/?id=2696"><img alt="https://blog.codinghorror.com/content/images/2014/Mar/esteem_for_humanity_comments.png" alt="comments and esteem for humanity"></a></p>
    <p>What is <em>wrong</em> with people, amirite?</p>
    <p>I humbly submit that this is asking the wrong question.</p>
    <p><em>What is wrong with us?</em></p>
    <p>I agree with Anil Dash. If your website is full of assholes, <a href="http://dashes.com/anil/2011/07/if-your-websites-full-of-assholes-its-your-fault.html">it's your fault</a>.</p>
    <blockquote>
    <p>As it turns out, we have a way to prevent gangs of humans from acting like savage packs of animals. In fact, we've developed entire disciplines based around this goal over thousands of years. We just ignore most of the lessons that have been learned when we create our communities online. But, by simply learning from disciplines like urban planning, zoning regulations, crowd control, effective and humane policing, and the simple practices it takes to stage an effective public event, we can come up with a set of principles to prevent the overwhelming majority of the worst behaviors on the Internet.</p>
    <p>If you run a website, you need to follow these steps. if you don't, you're making the web, and the world, a worse place. And it's your fault. Put another way, take some goddamn responsibility for what you unleash on the world.</p>
    </blockquote>
    <p>In other words, <strong>if you are unwilling to moderate your online community, you don't deserve to have an online community.</strong> There's no end of websites recreating the glorious "no stupid rules" libertarian paradise documented in the <a href="http://en.wikipedia.org/wiki/Lord_of_the_Flies">Lord of the Flies</a> in their comment sections, from scratch, each and every day. This ends exactly as you would expect it to.</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/Mar/libertarian_lifeguard.jpg" alt="Libertarians make bad lifeguards"></p>
    <p>However, demanding that every online community, every comment section, have active moderation is a tough sell:</p>
    <ul>
    <li>Skilled moderators are difficult to find. A bad moderator is often <em>worse</em> than no moderator.</li>
    <li>Do you have the budget to pay full time moderators?</li>
    <li>Are your moderators around 24/7?</li>
    <li>If you have a single moderator making unilateral decisions, who appeals their decisions? If you have multiple moderators, how do they resolve disagreements?</li>
    <li>What happens when your moderators inevitably burn out or move on?</li>
    </ul>
    <p>One of the reasons I <a href="http://www.discourse.org/about/">launched the Discourse project</a> was due to the utter lack of understanding of how you build software to help online discussion communities moderate themselves. Their survival depends on it.</p>
    <p>What I learned building Stack Overflow, more than anything else, is this: <strong>the only form of moderation that scales with the community is the community itself.</strong> We became quite skilled at building <a href="http://blog.stackoverflow.com/2011/01/trilogy-2011-elections-begin/">systems</a> for self governance of online communities, and one of the things I'm proudest of is that – if we did our jobs well – decades from now <a href="http://www.stackexchange.com">Stack Exchange</a> will still be a network of viable, functioning, entirely self-governing communities.</p>
    <p><a href="http://blog.codinghorror.com/no-matter-what-they-tell-you-its-a-people-problem/">It's always a people problem</a>. This is absolutely true. But it's also true that software can <em>profoundly</em> affect people's behavior, and provide tools for <a href="http://blog.codinghorror.com/training-your-users/">encouraging positive behaviors</a> while modifying and mitigating negative behaviors. All that stuff Anil Dash described as <a href="http://dashes.com/anil/2011/07/if-your-websites-full-of-assholes-its-your-fault.html">your responsibility?</a> Discourse handles it automatically, even if the owner installs and then walks away forever.</p>
    <p>These are <a href="http://blog.discourse.org/2013/03/the-universal-rules-of-civilized-discourse/">the principles of civilized discourse</a> that Discourse is founded on, that our discussion software is designed around. Civilization begins with software that actively works to help you create safe environments for having reasonable conversations with other human beings. On the <em>Internet</em>, even!</p>
    <p><a href="http://www.discourse.org/"><img alt="https://blog.codinghorror.com/content/images/2014/Mar/logo_smaller.png" alt="discourse"></a></p>
    <p>This is all a very long winded way of saying that effective immediately, <strong>Coding Horror is using <a href="http://www.discourse.org/">Discourse</a> to power its discussions.</strong></p>
    <p>You may have questions, so I will attempt to answer them:</p>
    <ul>
    <li>
    <p>This blog is <a href="http://blog.codinghorror.com/10-years-of-coding-horror/">now hosted on Ghost</a>, which doesn't natively support comments. All previous TypePad comments were converted into Discourse. To the best of our ability, nothing was lost.</p>
    </li>
    <li>
    <p>Discourse is still beta, but <a href="http://blog.discourse.org/2014/01/the-road-to-discourse-1-0-2/">late beta</a>. Expect changes and improvements as we make our way to 1.0.</p>
    </li>
    <li>
    <p>Discourse is a <em>companion</em> area to this blog, a clubhouse for the community. You can visit there directly at <a href="http://discourse.codinghorror.com">discourse.codinghorror.com</a></p>
    </li>
    <li>
    <p>Every new blog post here results in a corresponding topic being automatically created in the Discourse discussion area.</p>
    </li>
    <li>
    <p>I do not, and will not, offer in-page commenting here. If you want to reply with a comment, you go <a href="http://blog.discourse.org/2013/05/your-online-clubhouse/">next door to the community clubhouse</a>. There's a fairly strong, but permeable, membrane between the editorial area <em>here</em> and the community area <em>there</em>. This is intentional.</p>
    </li>
    <li>
    <p>At the bottom of each blog entry here you will find read only versions of all replies to the Discourse topic associated with this blog entry. I might eventually switch that to a "best of" algorithm so readers see the best comments without having to wade through dozens or hundreds of replies.</p>
    </li>
    </ul>
    <p>If you like what you see, Discourse is <a href="http://github.com/discourse/discourse">100% free open source software</a>, so you can easily <a href="http://eviltrout.com/2014/01/22/embedding-discourse.html">set up the same system</a> for your own blog. We even have a <a href="https://github.com/discourse/wp-discourse">WordPress plugin</a> to assist.</p>
    <p>Now who's <a href="http://blog.codinghorror.com/the-ultimate-dogfooding-story/">ready for some dogfooding?</a></p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-03-19T21:31:40.000Z</pubDate>
    <guid>https://blog.codinghorror.com/please-read-the-comments/</guid>
    </item>
    <item>
    <title>The Trap You Set For Yourself</title>
    <link>https://blog.codinghorror.com/the-trap-you-set-for-yourself/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>The Dan Ariely books <a href="http://www.amazon.com/dp/0061854549/?tag=codihorr-20">Predictably Irrational</a> and <a href="http://www.amazon.com/gp/product/B003JBHVZY?tag=codihorr-20">The Upside of Irrationality</a> profoundly influenced the way I design my massively multiplayer <a href="http://www.discourse.org">typing</a> <a href="http://www.stackexchange.com">games</a>. These books offer science in the small about human behavior, and stark insights into user behavior — and by that I mean our <em>own</em> behavior.</p>
    <p><a href="http://www.amazon.com/The-Long-Goodbye-Raymond-Chandler/dp/0394757688?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2014/Mar/the_long_goodbye.png" alt="The Long Goodbye"></a></p>
    <p>All detectives are by definition students of human nature. As the famous fictional detective Philip Marlowe is <a href="http://www.amazon.com/The-Long-Goodbye-Raymond-Chandler/dp/0394757688?tag=codihorr-20">fond of noting</a>:</p>
    <blockquote>
    <p>There is no trap so deadly as the trap you set for yourself.</p>
    </blockquote>
    <p>We're born pretty darn great at lying to ourselves, and we get progressively better and better at it the older we become. In software development terms, <a href="http://blog.codinghorror.com/every-user-lies/">every user lies</a>.</p>
    <p>We become experts at lying to ourselves to avoid being functionally crippled on a daily basis by the ongoing fears that:</p>
    <ul>
    <li>
    <p>your work does not matter.</p>
    </li>
    <li>
    <p>your life does not matter.</p>
    </li>
    <li>
    <p>nobody cares about you.</p>
    </li>
    <li>
    <p>you aren't good enough.</p>
    </li>
    <li>
    <p>you aren't smart enough.</p>
    </li>
    </ul>
    <p>Thus, lying to yourself is part of the human condition. Otherwise nobody would be able to get out of bed in the morning.</p>
    <p>However, if you have daily internal struggles with self doubt and indecision, you are almost certainly not going to achieve your mission, whatever it may be. I have found that, <strong>to a disturbing degree in this world, you have to <em>believe your own hype to succeed</em></strong>.</p>
    <p>Unfortunately, this is something that <a href="http://www.shirky.com/weblog/2010/01/a-rant-about-women/">men are better than women at</a>.</p>
    <blockquote>
    <p>And it looks to me like women in general, and the women whose educations I am responsible for in particular, are often lousy at those kinds of behaviors, even when the situation calls for it. <strong>They aren’t just bad at behaving like arrogant self-aggrandizing jerks. They are bad at behaving like self-promoting narcissists, anti-social obsessives, or pompous blowhards, even a little bit, even temporarily, even when it would be in their best interests to do so.</strong> Whatever bad things you can say about those behaviors, you can’t say they are underrepresented among people who have changed the world.</p>
    </blockquote>
    <p>So how exactly do you suppress your self doubt without eventually becoming an overbearing, axe-grinding … male … zealot? Or, even worse, a character from <a href="http://www.amazon.com/Wolf-Wall-Street-Blu-ray-Digital/dp/B00H9KKKAY?tag=codihorr-20">The Wolf of Wall Street</a>?</p>
    <p>One of the odder asides in <a href="http://www.amazon.com/gp/product/B003JBHVZY?tag=codihorr-20">The Upside of Irrationality</a> is about the 1995 movie First Knight. Which is quite frankly <em>terrible</em>. Don't see it. I'm not even going to link to it. But you should watch the first few minutes of this particular swordfight scene that Ariely highlights:</p>
    <video poster="/content/images/2015/09/first-knight-swordfight-poster.jpg" width="100%" preload="none" controls>
    <source src="http://discourse-cdn.codinghorror.com/uploads/default/original/3X/3/7/37888ce437da7c49354190bbc8b53e1a0ab83d80.mp4">
    </source></video>
    <blockquote>
    <p><strong>Mark</strong>: How did you do that? How did he <em>do that?</em> Was that a trick?</p>
    <p><strong>Lancelot</strong>: No. No trick. It's the way I fight.</p>
    <p><strong>Mark</strong>: Could I do it? Tell me. I can learn.</p>
    <p><strong>Lancelot</strong>: You have to study your opponent, how he moves, so you know what he's going to do before he does it.</p>
    <p><strong>Mark</strong>: I can do that.</p>
    <p><strong>Lancelot</strong>: You have to know that one moment in one fight, when you win or lose. And you have to know how to wait for it.</p>
    <p><strong>Mark</strong>: I can do that.</p>
    <p><strong>Lancelot</strong>: And you have to not care whether you live or die.</p>
    <p><strong>Mark</strong>: (stunned silence)</p>
    </blockquote>
    <p>The way Lancelot motivates himself to get past self-doubt in combat is <em>not to care whether he lives or dies</em>.</p>
    <p>I don't mean this in the glib way of saying you should stop caring what anyone else thinks. Obviously we care what other people think. Not caring what other people think of us and what we do is the path of the narcissist, the sociopath, and the insane. That's giving up.</p>
    <p>As Ariely says:</p>
    <blockquote>
    <p>Lancelot fights better than anyone else because he found a way to bring the stress of the situation to zero. If he doesn’t care whether he lives or dies, nothing rides on his performance. He doesn’t worry about living past the end of the fight, so nothing clouds his mind and affects his abilities — he is pure concentration and skill.</p>
    </blockquote>
    <p>The opinions of other people matter, but they are the traps we set for ourselves. To get past our collective prison of self doubt – <em>am I doing the right thing? Do I even know what the right thing is any more?</em> – concentrate on the daily routine of doing what <em>you</em> enjoy, what <em>you</em> believe in, what <em>you</em> find intrinsically satisfying.</p>
    <p>This is what your life is: whatever it is you get up to do every single day. Stop stressing out about the long term stuff and focus on improving <em>that</em>, and you too might eventually find <a href="http://blog.codinghorror.com/how-to-stop-sucking-and-be-awesome-instead/">you don't want to live forever</a>.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-03-17T07:58:34.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-trap-you-set-for-yourself/</guid>
    </item>
    <item>
    <title>10 Years of Coding Horror</title>
    <link>https://blog.codinghorror.com/10-years-of-coding-horror/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>In 2007, I was offered $120,000 to buy this blog outright.</p>
    <p>I was sorely tempted, because that's a lot of money. I had to think about it for a week. Ultimately I decided that my blog was an integral part of who I was, and who I eventually might become. How can you sell <em>yourself</em>, even for $120k?</p>
    <p>I sometimes imagine how different my life would have been if I had taken that offer. Would Stack Overflow exist? Would Discourse? It's easy to look back now and say I made the right decision, but it was <a href="http://blog.codinghorror.com/choosing-your-own-adventure/">far less clear at the time</a>.</p>
    <p>One of my philosophies is to <strong>always pick the choice that scares you a little</strong>. The status quo, the path of least resistance, the everyday routine — that stuff is easy. Anyone can do that. But the right decisions, the decisions that challenge you, the ones that push you to evolve and grow and learn, are always a little scary.</p>
    <p>I'm thinking about all this because this month marks the <strong>10 year anniversary of Coding Horror</strong>. I am officially old school. I've been blogging for a full decade now. Just after the "wardrobe malfunction" Janet Jackson had on stage at Super Bowl XXXVIII in February 2004, I began with <a href="http://blog.codinghorror.com/recommended-reading-for-developers/">a reading list</a> and a new year's resolution to write one blog entry every weekday. I was even able to keep that pace up for a few years!</p>
    <p><a href="https://www.youtube.com/watch?v=ITy6DZ1adtA"><img alt="https://blog.codinghorror.com/content/images/2014/Feb/janet_jackson_2004_clothing_malfunction.jpg" alt="Janet Jackson clothing malfunction"></a></p>
    <p>The ten year mark is a time for change. As of today, I'm pleased to announce that Coding Horror is now proudly hosted on <a href="https://ghost.org/">the Ghost blog platform</a>. I've been a blog minimalist from the start, and finding a truly open source platform which reflects that minimalism and focus is incredibly refreshing. Along with the new design, you may also notice that comments are no longer present. Don't worry. <a href="http://blog.codinghorror.com/welcome-back-comments/">I love comments</a>. They'll all be back. This is only a temporary state, as there's <a href="http://eviltrout.com/2014/01/22/embedding-discourse.html">another notable open source project</a> I want to begin supporting here.</p>
    <p>It is odd to meet developers that tell me they "grew up" with Coding Horror. But I guess that's what happens when you <a href="http://blog.codinghorror.com/how-to-achieve-ultimate-blog-success-in-one-easy-step/">keep at something for long enough</a>, given a modest amount of talent and sufficient resolve. You become recognized. Maybe even influential. Now, after 10 years, <a href="http://blog.codinghorror.com/overnight-success-it-takes-years/">I am finally an overnight success</a>. And: old.</p>
    <p>So, yeah, it's fair to say that <strong>blogging quite literally changed my life</strong>. But I also found that as the audience grew, I felt more pressure to write deeply about topics that are truly worthy of everyone's time, <em>your</em> time, rather than frittering it away on talking head opinions on this week's news. So I wrote less. And when things got extra busy at Stack Exchange, and now at Discourse, I didn't write at all.</p>
    <p>I used to tell people who asked me for advice about blogging that if they couldn't think about one interesting thing to write about every week, they weren't trying hard enough. The world is full of so many amazing things and incredible people. As Albert Einstein once said, there are two ways to live your life. One is as though nothing is a miracle. The other is as though everything is a miracle.</p>
    <p><a href="http://www.comixology.com/Watchmen/comics-collection/403"><img alt="https://blog.codinghorror.com/content/images/2014/Mar/watchmen_page_27.jpg" alt="Watchmen page"></a></p>
    <p>I wasn't trying hard enough. I had forgotten.  I can't fully process all the things that are happening to me until I write about them. I have to be able to tell the story to understand it myself. <a href="http://blog.codinghorror.com/on-the-meaning-of-coding-horror/">My happiness only becomes real when I share it with all of you</a>.</p>
    <p>This is the philosophy that <a href="http://blog.codinghorror.com/stack-overflow-none-of-us-is-as-dumb-as-all-of-us/">underlies Stack Overflow</a>. This is the philosophy that <a href="http://blog.codinghorror.com/civilized-discourse-construction-kit/">underlies Discourse</a>. These are all projects based on large scale, communal shared happiness. Love of learning. Love of teamwork. Love of community.</p>
    <p>Love.</p>
    <p>For the next decade of Coding Horror, I resolve to remember how miraculous that is.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-02-28T09:01:29.000Z</pubDate>
    <guid>https://blog.codinghorror.com/10-years-of-coding-horror/</guid>
    </item>
    <item>
    <title>App-pocalypse Now</title>
    <link>https://blog.codinghorror.com/app-pocalypse-now/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I'm getting pretty sick of being nagged to install your damn apps.
    </p>
    <p>
    <img alt="This-website-has-an-ipad-app" title="This-website-has-an-ipad-app" src="https://blog.codinghorror.com/content/images/uploads/2014/02/6a0120a85dcdae970b01a3fcc4a231970b-pi.jpg" width="669" height="279"><br>
    </p>
    <p>
    XKCD helpfully <a href="http://xkcd.com/1174/">translates</a>:
    </p>
    <p>
    <a href="http://xkcd.com/1174/"><img alt="Xkcd-download-our-app" title="Xkcd-download-our-app" src="https://blog.codinghorror.com/content/images/uploads/2014/02/6a0120a85dcdae970b01a73d7faa6b970d-pi.png" width="474" height="318"></a>
    </p>
    <p>
    Yeah, there are <a href="https://developer.apple.com/library/ios/documentation/AppleApplications/Reference/SafariWebContent/PromotingAppswithAppBanners/PromotingAppswithAppBanners.html">smart app banners</a>, which are marginally less annoying, but it's amazing how quickly we went from "Cool! Phone apps that <a href="http://www.codinghorror.com/blog/2009/06/the-iphone-software-revolution.html">finally don't suck!</a>" to this sad, eye rolling, oh-great-of-<i>course</i>-you-have-an-app-too state of affairs.
    </p>
    <p>
    </p>
    <blockquote class="twitter-tweet" lang="en">
    <p>"Would you like to install our free app?!?" is the new "It looks like you're writing a letter!"</p>— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/statuses/288918388141617152">January 9, 2013</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    
    <p>
    Four years, give or take a few months, if you were counting. So what happened?
    </p>
    <h2>Millions of pointless apps</h2>
    <p>Your platform now has a <i>million</i> apps? Amazing! Wonderful! What they don't tell you is that 99% of them are awful junk that nobody would ever want.
    </p>
    <p>
    Let's start with the basics. How do you know which apps you need? How do you get them installed? How do you keep them updated? How many apps can you reasonably keep track of on a phone? On a tablet? Just the home screen? A few screens? A dozen screens? When you have millions of apps out there, this rapidly becomes less of a "slap a few icons on the page" problem and more of a search problem like the greater web. My son's iPad has more than 10 pages of apps now, we don't even bother with the pretense of scrolling through pages of icons, we just go straight to search every time.
    </p>
    <p>
    <a href="http://solveforinteresting.com/facebooks-rocks-and-hard-places/"><img alt="Walledgarden-cover" title="Walledgarden-cover" src="https://blog.codinghorror.com/content/images/uploads/2014/02/6a0120a85dcdae970b01a73d7fadee970d-pi.jpg" width="610" height="251"></a>
    </p>
    <p>
    The more apps out there, the more the app stores are clogged with mediocre junk, the more the overall noise level keeps going up, which leads directly to this profligate nagging. Companies keep asking <i>how can we get people to find and install our amazing app</i> instead of the one question they really should have asked.
    </p>
    <p>
    <i>Why the hell are we building an app in the first place?</i></p>
    <p>
    I want to know who exactly is going to all the trouble of installing the McDonalds app on their device instead of simply visiting the McDonalds website in the browser as needed. What problem does that app solve for <a href="http://aht.seriouseats.com/archives/2010/05/the-burger-lab-how-to-make-perfect-mcdonalds-style-french-fries.html">french fry enthusiasts</a> that it needs to be permanently installed on your device? Why are they <a href="http://slickdeals.net/f/5437442-free-mcdonald-s-sandwich-with-app">giving away free Big Macs</a> just to get people to install this thing?
    </p>
    <h2>Fragmentation into parallel and incompatible app worlds</h2>
    <p>It was so much easier when iOS was totally dominant and the iPhone was the only player. Before the iPad and tablets. Before Android got decent in 4.0 and Google standardized the Play store. Now there are, at minimum, <i>four</i> radically different mobile platforms that every serious app player has to support:
    </p>
    <ol>
    <li>Android phone
    </li>
    <li>iOS phone
    </li>
    <li>iOS tablet
    </li>
    <li>Android tablet
    </li>
    </ol>
    <p>(For extra credit: how many of these are actually "mobile"?)</p>
    <p>
    Unless you're careful to build equivalent apps in all those places, it's like having multiple parallel Internets. "No, sorry, it's not available on that Internet, only the iOS phone Internet." Or even worse, only on the United States iOS phone Internet.</p>
    <p>
    If you're feeling generous, we should technically include Windows 8 and Windows Phone in here too. All with different screen dimensions, development stacks, UI guidelines, and usage patterns. Oh and by the way, that's assuming no other players emerge as serious contenders in the computing device market. <i>Ever.</i></p>
    <p>At the point where you find yourself praying for a duopoly as one of the better possible outcomes, that's … not a good sign.</p>
    <h2>Paying for apps became a race to the bottom</h2>
    <p>Buying an app is the modern <a href="http://www.codinghorror.com/blog/2006/12/today-is-support-your-favorite-small-software-vendor-day.html">Support Your Favorite Small Software Vendor Day</a>. I was always fine with dropping ten or twenty bucks on software I loved. I'm a software engineer by profession; apps are cheaper so I can buy even more of them.</p>
    <p>Have you ever noticed that the people complaining about apps that cost $3.99 are the same people dropping five bucks on a cup of fancy coffee without batting an eyelash? Me too, and <a href="http://www.joshlehman.com/thoughts/stop-using-the-cup-of-coffee-vs-0-99-cent-app-analogy/">I'm with the coffee people</a>. $3.99 for your app? <i>Outraaageous!</i></p>
    <blockquote>
    Now, contrast this with your app, Mr. Developer. I don’t know you from Adam. You’re pitching digital Instant Refresher Juice 1.0 to me in the form of a new app. The return I’m going to get is questionable at best. I already have 30 apps on my phone, some of them very good. Do I need another one? I don’t use the 30 I have. The experience I’m going to get from adding one more app is not trustable. I’m assured of nothing. Last week I bought an app for 99 cents and it was terrible. I used it once, for 15 seconds. I could be shoving $1 straight down the toilet again for all I know. Your app, good sir, is a total gamble. Sure, it’s only a $1 gamble… but it’s a gamble and that fact matters more than any price you might place on it.
    </blockquote>
    <p>For some reason I don't completely understand, mobile app review systems are frequently of questionable value, so all you really have to go on are the screenshots and a bit of text provided by the developer.</p>
    <p>Imagine you bought your coffee, only to open the lid and find it was only half full, or that it wasn't coffee at all but lemonade. If only 1 in 5 cups of coffee you bought actually contained coffee, a $3.99 price for that coffee starts to seem <a href="http://struct.ca/2010/how-to-price-your-game/">unreasonably high</a>. <b>When you buy an app, you don't really know what you're going to get.</b></p>
    <p>Turns out, the precious resource here isn't the money after all. <i>It's your time.</i> In a world of millions of apps, free is the correct and only price for most apps except those rare few of extreme, easily demonstrable value – probably from well known brands of websites you already use daily. So hey, everything is <i>free!</i> Awesome! Right? Well…
    </p>
    <h2>When apps are free, you're the product</h2>
    <p>I know, I know, I'm sick of this trite phrase too. But if the market is emphatically proving that free is the only sustainable model for apps, then this is the new reality we have to acknowledge.</p>
    <p>
    <a href="http://geekandpoke.typepad.com/geekandpoke/2010/12/the-free-model.html"><img alt="Geek-and-poke-pigs-free" title="Geek-and-poke-pigs-free" src="https://blog.codinghorror.com/content/images/uploads/2014/02/6a0120a85dcdae970b01a3fcc55683970b-800wi.png" width="521" height="454"></a>
    </p>
    <p>Nothing terrifies me more than an app with no moral conscience in the desperate pursuit of revenue that has full access to everything on my phone: contacts, address book, pictures, email, auth tokens, you name it. I'm not excited by the prospect of installing an app on my phone these days. It's more like a vague sense of impending dread, with my finger shakily hovering over the uninstall button the whole time. All I can think is <b>what shitty thing is this "free" app going to do to me so they can satisfy their investors?</b></p>
    <p>For the sake of argument, let's say the app is free, and the developers are ethical, so you trust that they won't do anything sketchy with the personal information on your device to make ends meet. Great!  But they still have to make a living, don't they? Which means doing anything <i>useful</i> in the app requires buying three "optional" add-ons that cost $2.99 each. Or there are special fees for performing certain actions. Isn't this stuff you would want to know before installing the app? You betcha. Maybe the app is properly tagged as "offering in-app purchases" but <b>the entire burden of discovering exactly what "in-app purchases" means, and how much the app will ultimately cost you, is placed completely on your shoulders.</b> You, the poor, bedraggled user.
    </p>
    <h2>The app user experience is wildly inconsistent</h2>
    <p>Have you ever tried actually <i>using</i> the Amazon app on iOS, Android, and Windows? iOS does the best, mostly because it's been an app platform for longer than the others, but even there, the Amazon app is a frustrating morass of missing and incomplete functions from the website. Sure, maybe you don't need the full breadth of Amazon functions on your phone, though that's debatable on a tablet. But natural web conveniences like opening links in new tabs, sharing links, the back button, searching within the page, and zooming in and out are available inconsistently, if at all.
    </p>
    <p>The minute you begin switching between platforms – say you use an iOS tablet and an Android phone and a Windows 8 touch laptop, like I do – you'll find there are <i>massive</i> differences between the Amazon apps (and the eBay apps, and the Netflix apps, and the..) on these different platforms. At some point, you just get fed up with all the inconsistencies and oddities and quirks and say to hell with these apps, <b>can I please just use the website instead?</b></p>
    <p>
    Now, if your website is an awful calcified throwback to 2003, like eBay, then the <a href="http://www.codinghorror.com/blog/2012/04/will-apps-kill-websites.html">mobile apps can be a valuable opportunity to reinvent your user interface</a> without alienating all your existing users. If there's one thing I love about tablet and phone design it's that their small screens and touch interfaces force people to <a href="http://www.codinghorror.com/blog/2006/03/in-pursuit-of-simplicity.html">think simpler</a>. This is a good thing. But if you don't eventually take those improvements home to the mothership, you're creating two totally different and incompatible UIs for doing the same things.
    </p>
    <p>It seems like a fool's errand to dump millions of dollars of development time into these radically different, siloed app platforms when Amazon could have spent it improving their website and making that experience scale a bit better to every device out there.
    </p>
    <h2>The World Wide App</h2>
    <p>But that's not an option, because apparently <a href="https://twitter.com/rabois/status/406519032624320512">the web is dead</a>, and mobile apps are the future. I'm doing my best to resist a sudden uncontrollable urge to use my Ledge Finder app to find the nearest ledge to jump from right now.</p>
    <p>The tablet and phone app ecosystem is slowly, painstakingly reinventing everything I hated about the computer software industry before the web blew it all up. Even fans <a href="http://parislemon.com/post/77357979234/a-new-glue-for-a-new-kingdom">are concerned</a>:</p>
    <blockquote>
    I’m waiting for something that will unify the world of apps and make manually going to an App Store to find a new app as weird as typing in a URL to find a new website. My bet is that this won’t be Facebook. Instead, I would not bet against some young upstart, perhaps one inspired upon reading about a $19 billion deal, to go heads-down and come up with something crazy.
    </blockquote>
    <p>
    I'll have more to say about this soon, but I expect there to be an explosion of new computing devices all over the world in the next few decades, not a contraction. Sometimes the craziest solution is the one that's been right there in front of you the whole time.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-02-24T22:12:30.000Z</pubDate>
    <guid>https://blog.codinghorror.com/app-pocalypse-now/</guid>
    </item>
    <item>
    <title>Complaint-Driven Development</title>
    <link>https://blog.codinghorror.com/complaint-driven-development/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    If I haven't blogged much in the last year, it's because we've been busy building that <a href="http://www.codinghorror.com/blog/2013/02/civilized-discourse-construction-kit.html">civilized discourse construction kit thing</a> I talked about.
    </p>
    <p>
    <a href="http://www.codinghorror.com/blog/2013/02/civilized-discourse-construction-kit.html"><img alt="Civilized-discourse-construction-kit-inc" title="Civilized-discourse-construction-kit-inc" src="https://blog.codinghorror.com/content/images/uploads/2014/02/6a0120a85dcdae970b01a3fcbebaf4970b-800wi.jpg" width="720" height="210"></a>
    </p>
    <p>
    (Yes, that's actually the name of the company. This is what happens when you put me in charge of naming things. <a href="http://en.wikipedia.org/wiki/Pinball_Construction_Set">Pinball machines</a>, people, what's the difference? I've apologized to <a href="https://twitter.com/BillB">Bill Budge</a> already.)
    </p>
    <p>
    So if you, like my investors, are wondering why this process took <a href="http://blog.discourse.org/2014/02/one-year-of-discourse/">a whole entire year</a>, I should explain <b>how I build things</b>, or at least, how we built Stack Overflow and <a class="zem_slink" href="http://stackexchange.com/" title="Stack Exchange Network" rel="homepage" target="_blank">Stack Exchange</a> and now <a href="http://www.discourse.org">Discourse</a>:
    </p>
    <ol>
    <li>Do a ton of detailed research on everything out there in your space. The successes: what are they getting wrong? The failures: what did they get right? Nobody should know more about the history of your area than you do. Have a story that makes sense, something you believe in, and more importantly, a story you can get others to believe in.<br><br>
    </li>
    <li>Based on this research, assemble a team and build the minimum viable product that does something useful. If you need seed funding, this is the time to get it, so I hope you're pretty good at all that stuff in step 1, and maybe famous too, and ideally already successful as well, otherwise you are screwed.<br><br>
    </li>
    <li>Have your team and yourself start using that minimum viable product, every day, all day long. This is way more than mere software development: <i>it's your whole life</i>. If you aren't living in the software you're building, each day, every day, all day … things are inevitably going to end in tears for everyone involved. And honestly, if I have to explain this to you, guess what? You're screwed.<br><br>
    </li>
    <li>Launch a brief closed beta and get feedback from your Special Internet Friends™ on what you've built so far. I know what you're thinking: <i>Friends! Damn it! I knew those things would be useful to me at some point!</i> Listen to all their feedback with an open mind, no matter how dumb it probably is. Identify and fix everything major that comes up. Your product will still be terrible, but it'll be slightly marginally <i>less</i> terrible, and you'll now be slightly marginally less screwed than you otherwise would. (This is what we business experts call a "competitive advantange". Look it up.)<br><br>
    </li>
    <li>Rapidly get to a public launch. <a href="http://www.codinghorror.com/blog/2009/12/version-1-sucks-but-ship-it-anyway.html">It will suck, but you will ship it anyway.</a> Don't screw up the basic logistics of the launch. You know what I'm talking about because you've seen those sad launches. Don't be those companies. Don't be those teams. Don't worry, you'll have ample time to screw everything up royally in the next step. <br><br>
    </li>
    <li>Hey, remember all those brilliant ideas you had based on all that painstaking, detailed research you did in step 1? Turns out once you put them in front of actual honest-to-god real world users they were <i>all … completely … wrong</i>. Now spend the next year doing nothing but fixing all your idiotic screwups and stupid mistakes.<br><br>
    </li>
    <li>???<br><br>
    </li>
    <li>Profit!</li>
    </ol>
    <p>I never said it was a <i>good</i> plan for building software, but hey. Y'know. <a href="http://www.codinghorror.com/blog/2013/07/rule-of-three.html">It's a plan</a>.
    </p>
    <p>
    <img alt="I-love-it-when-a-plan-comes-wait" title="I-love-it-when-a-plan-comes-wait" src="https://blog.codinghorror.com/content/images/uploads/2014/02/6a0120a85dcdae970b01a73d79c563970d-800wi.jpg" width="528" height="396">
    </p>
    <p>
    Each one of those steps is worthy of a blog entry in its own right, but it's step six that I want to focus on today because in my opinion that's the most critical part of this whole so-called "plan". I like to refer to this phase as <b>complaint driven development</b>:
    </p>
    <ul>
    <li>Get your software in front of as many real users as you can.
    </li>
    <li>Listen to all the things they complain about. It will be… a lot.
    </li>
    <li>Identify and fix the top 3 things people keep repeatedly complaining about.
    </li>
    <li>Do it again.
    </li>
    </ul>
    <p>
    Now, we have a bit of an unfair advantage here because <a href="http://www.discourse.org/faq/">Discourse is discussion software</a>. We host the discussions about all the things that are wrong with Discourse … on Discourse itself. But that's also why we built an open source discussion platform in the first place – my deeply held belief that <b>actually listening to your customers should matter to your business</b>.
    </p>
    <p>
    Provided you're equipped to listen to your customers, complaint driven development isn't that difficult. Until you get deep into a multi-year design, you're dealing with <b>fairly obvious, easy to fix complaints from users</b>. You just have to be out there listening. As Steve Krug says in <a href="http://www.amazon.com/dp/0321965515/?tag=codihorr-20">Don't Make Me Think</a>:
    </p>
    <blockquote>
    You don't need to find all the problems. In fact, you'll <i>never</i> find all of the problems in anything you test. And it wouldn't help if you did, because of this fact:
    <blockquote>
    <i>You can find more problems in half a day than you can fix in a month.</i>
    </blockquote>
    You'll always find more problems than you have the resources to fix, so it's very important that you focus on fixing the most serious ones first. And three users are very likely to encounter many of the most significant problems related to the tasks that you're testing.
    </blockquote>
    <p>
    For example, we launched Discourse with a requirement that all topic titles and bodies be above a certain minimum character length, because we believe that extremely short posts and particularly titles aren't conducive to actual conversation. Philosophically, this is an important default for us, because it strongly relates to our core mission of building software that helps cultivate meaningful conversation on the Internet.
    </p>
    <p>
    Unfortunately, users <i>hated</i> it:
    </p>
    <blockquote>
    I think it's especially annoying that there's no indicator of how many characters that you have to type. You only have whether or not the "Reply" button is greyed out or not, and not all users will realize that it's greyed out at first. Even then, if you click on the reply button it can bounce back on you if your post was mostly white-space. It's annoying as hell.
    </blockquote>
    <p>
    This was one of the consistently strongest bits of early feedback we got. So in the first 7 days after launch we  quickly added a real time character count to the bottom right of the editor.
    </p>
    <p>
    <img alt="Discourse-character-count-1" title="Discourse-character-count-1" src="https://blog.codinghorror.com/content/images/uploads/2014/02/6a0120a85dcdae970b01a5116e7f3e970c-800wi.png" width="605" height="186">
    </p>
    <p>
    I thought that'd help. It didn't. The complaints about our terrible, awful, onerous default title and body length restrictions kept pouring in. So we experimented with ways to make these requirements clearer, by using a red border, or a red background on the fields.
    </p>
    <p>
    <img alt="Discourse-character-count-2" title="Discourse-character-count-2" src="https://blog.codinghorror.com/content/images/uploads/2014/02/6a0120a85dcdae970b01a5116e7fb6970c-800wi.png" width="639" height="176"><br>
    </p>
    <p>
    <img alt="Discourse-character-count-3" title="Discourse-character-count-3" src="https://blog.codinghorror.com/content/images/uploads/2014/02/6a0120a85dcdae970b01a73d79d036970d-800wi.png" width="628" height="176"><br>
    </p>
    <p>
    We deployed all of the above and more. Complaints did not abate one bit. Now this is a configuration setting, if you want the minimum title and body length to be 1 character in your community, it's trivially settable via a web browser in about 15 seconds. Frankly I started getting really sick of hearing all the complaints about the setting. </p>
    <p>
    So we finally deployed the nuclear option: <b>bouncy error dialogs right next to the field</b> as soon as they lose focus.
    </p>
    <p>
    <img alt="Discourse-character-count-4" title="Discourse-character-count-4" src="https://blog.codinghorror.com/content/images/uploads/2014/02/6a0120a85dcdae970b01a73d79d0b2970d-800wi.png" width="610" height="172"><br>
    </p>
    <p>
    Since that change, I haven't heard word one about our terrible, onerous, awful default body and title character limit policies. Not one. Single. Complaint.
    </p>
    <p>
    So <i>that's</i> the sort of thing we've been doing post launch, each day, every week, for the last year. <b>It took us a full year of complaint driven development to get to software worth using.</b> And even though we are now <a href="http://www.discourse.org/buy/">cautiously accepting customers</a>, we're still practicing complaint driven development every day, just perhaps weighted a bit more heavily towards the people actually paying us money.
    </p>
    <p>
    It's true that <a href="http://www.codinghorror.com/blog/2012/02/listen-to-your-community-but-dont-let-them-tell-you-what-to-do.html">gathering feedback from your community can be hard work</a>. And 90% of the feedback you'll get will be terrible for a whole host of reasons. It's a lot easier to imagine some heroic expert swooping in and magically blessing you with the correct answer. Well, <a href="http://www.codinghorror.com/blog/2009/02/are-you-an-expert.html">good luck with that fantasy</a>. The only thing I've ever seen work is <b>getting down deep and dirty in the trenches with your users, communicating with them and cultivating relationships</b>. That's how you suss out the rare 10% of community feedback that is amazing and transformative. <i>That's</i> how you build a community that gives a damn about what you're doing – by caring enough to truly listen to them and making changes they care about.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-02-18T06:00:00.000Z</pubDate>
    <guid>https://blog.codinghorror.com/complaint-driven-development/</guid>
    </item>
    <item>
    <title>The Road to VR</title>
    <link>https://blog.codinghorror.com/the-road-to-vr/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    A month after I <a href="http://www.codinghorror.com/blog/2013/10/you-dont-need-millions-of-dollars.html">wrote about</a> John Carmack, he <a href="http://www.gamasutra.com/view/news/205539/John_Carmack_officially_leaves_id_Software.php">left id Software</a> to become the CTO of Oculus. This was big news for two reasons:
    </p>
    <ol>
    <li>Carmack <i>founded</i> id in the early 90s. An id Software without Carmack is like an Apple without Woz and Jobs. You wouldn't leave the prestigious company you founded unless you had some pretty compelling new dreams to pursue. <br><br>
    </li>
    <li>
    <a href="http://www.oculusvr.com/">Oculus</a> is the company many are betting will break VR headsets into the mainstream. And even if they don't manage to pull that off, they are now the most credible contender to make serious headway towards consumer VR the industry has ever seen.
    </li>
    </ol>
    
    <p>
    Virtual reality is the stuff of programmer legend. Every software engineer that's ever read <a href="http://www.amazon.com/dp/B000FBJCJE/?tag=codihorr-20">Snow Crash</a> (or more recently, the excellent <a href="http://www.amazon.com/dp/0307887448/?tag=codihorr-20">Ready Player One</a>) has dreamed of jacking into the metaverse. But why <i>now?</i> Well, if you think of it in very coarse terms as strapping two smartphones on your face and writing clever glue software, modern consumer VR is a natural outcome of what Chris Anderson <a href="http://www.foreignpolicy.com/articles/2013/04/29/epiphanies_from_chris_anderson">calls</a> the "peace dividend of the smartphone wars":
    </p>
    <blockquote>
    It's hard to argue that we're not in an exponential period of technological innovation. The personal drone is basically <b>the peace dividend of the smartphone wars, which is to say that the components in a smartphone – the sensors, the GPS, the camera, the ARM core processors, the wireless, the memory, the battery – all that stuff, which is being driven by the incredible economies of scale and innovation machines at Apple, Google, and others, is available for a few dollars.</b> They were essentially "unobtainium" 10 years ago. This is stuff that used to be military industrial technology; you can buy it at RadioShack now. I've never seen technology move faster than it's moving right now, and that's because of the supercomputer in your pocket.
    </blockquote>
    <p>
    It's no coincidence that <a href="http://www.codinghorror.com/blog/2009/04/i-happen-to-like-heroic-coding.html">another programming legend</a>, Michael Abrash, is also head over heels in love with VR. He worked with Carmack on Quake, and joined Valve software in 2011. His recent treatises on VR are practically religious tomes – "excited" doesn't even begin to cover it:
    </p>
    <ul>
    <li>
    <a href="http://media.steampowered.com/apps/valve/2013/MAbrashGDC2013.pdf">Why Virtual Reality Is Hard, and Where it Might be Going</a> (2013, pdf)
    </li>
    <li>
    <a href="http://media.steampowered.com/apps/abrashblog/Abrash%20Dev%20Days%202014.pdf">What VR Could, Should, and Almost Certainly Will Be Within Two Years</a> (2014, pdf)
    </li>
    </ul>
    <p>
    I apologize that these are both PDFs, but like everything else Abrash writes, they are amazing. <b>You should read them. Closely.</b> I don't call him <a href="http://www.codinghorror.com/blog/2008/02/there-aint-no-such-thing-as-the-fastest-code.html">one of the best technical writers I've ever encountered</a> for nothing. If you find these interesting – and if you don't, I will personally drive to your house and pull your damn geek card myself – you should also dip into <a href="http://blogs.valvesoftware.com/abrash">his blog</a>, which drills into the specific challenges VR presents.
    </p>
    <p>
    I thought VR would be at best a novelty in my lifetime. I remember playing Dactyl Nightmare at a storefront in Boulder, Colorado in the mid 90s.
    </p>
    <iframe width="480" height="360" src="//www.youtube.com/embed/L60wgPuuDpE" frameborder="0" allowfullscreen></iframe>
    <p>
    If nothing else, it is abundantly clear that even after all these years, VR presents deep, hairy technical challenges even on today's insanely fast, crazily powerful hardware. That's exactly the sort of problem suited to the off-the-charts skill level of legendary programmers like Abrash and Carmack. Having both of these guys working on the newest Oculus Rift prototype with an enthusiasm I haven't felt since the early 90's means <b>we could be on the verge of a Doom or Quake style killer app breakthrough in VR.</b>
    </p>
    <p>
    <a href="http://www.oculusvr.com/"><img alt="Oculus-rift-crystal-cove" title="Oculus-rift-crystal-cove" src="https://blog.codinghorror.com/content/images/uploads/2014/02/6a0120a85dcdae970b01a73d7920bd970d-800wi.jpg" width="720" height="353"></a>
    </p>
    <p>
    There's no shortage of breathless previews, such as <a href="http://gizmodo.com/i-wore-the-new-oculus-rift-and-i-never-want-to-look-at-1496569598">this one at Gizmodo</a> which ends with
    </p>
    <blockquote>
    But if the original Oculus was a proof of concept, this model is proof that the concept is genius. There's zero doubt in my mind that when the final version of this device comes out it is going to change the world. For me, today, already has.
    </blockquote>
    <p>
    I'm optimistic about the next generation of Oculus Rift. But cautiously so.
    </p>
    <p>
    Thanks to a friend, I had an opportunity to borrow the older Oculus Rift developer kit. And to be honest … I wasn't that impressed.
    </p>
    <ul>
    <li>It's a big commitment to strap a giant, heavy device on your face with 3+ cables to your PC. You don't just casually fire up a VR experience. It takes substantial setup and configuration to get it ready. And even after configuring it, entering and exiting that VR experience is a far cry from quickly sitting down in front of a TV and grabbing that extra controller, or turning on a tablet.<br><br>
    </li>
    <li>Demos are great, but there aren't many games in the Steam Store that support VR today, and the ones that do support VR can feel like artificially tacked on novelty experiences. I did try <a href="http://www.surgeonsimulator2013.com/">Surgeon Simulator 2013</a> which was satisfyingly hilarious.<br><br>
    </li>
    <li>Having your eyes so close to the screens means the display is effectively very low resolution. And I mean <i>extremely</i> low resolution; I'm talking literally 320x200 type stuff. Everyone talks about the "screen door effect" which is the actual matrix of pixels. I personally found it very distracting, probably the number one thing that bothered me about the experience. Any kind of text was basically unreadable. The prototype is only 720p though, whereas the newer models will be 1080p. That will help, but the resolution problem was so severe to me that I'm not sure it'll be enough.<br><br>
    </li>
    <li>VR is a surprisingly anti-social hobby, even by gamer standards, which are, uh … low. Let me tell you, nothing is quite as boring as watching another person sit down, strap on a headset, and have an extended VR "experience". I'm stifling a yawn just thinking about it. I suppose games could present a friendlier set of data on the screen for others to spectate while sending a different set of data to the VR headset, but most of the games we played showed the actual VR screen, which is extreme distort-o-vision to the naked eye. Not really something you can watch or enjoy.<br><br>
    </li>
    <li>Wearing a good VR headset makes you suddenly realize how many other systems you need to add to the mix to get a truly <i>great</i> VR experience: headphones and awesome positional audio, some way of tracking your hand positions, perhaps an <a href="http://shop.virtuix.com/Omni-Natural-Motion-Interface-p/virtuix-omni-0002.htm">omnidirectional treadmill</a>, and as we see with the Crystal Cove prototype, an external Kinect style camera to track your head position at absolute minimum. Eventually maybe even <a href="https://www.kickstarter.com/projects/yeitechnology/priovr-suit-up-game-on">wear a suit</a> to track your whole body. Notice how quickly we get into geez-this-is-a-lot-of-equipment territory.
    </li>
    </ul>
    <p>
    The Oculus Rift prototype was an excellent and interesting and worthwhile experience, don't get me wrong, but it was more of a tech demo than anything else. It felt a long way from something that I'd be comfortable donning on a regular basis.
    </p>
    <p>
    I'll leave you with Michael Abrash's summary:
    </p>
    <blockquote>
    <ul>
    <li>Compelling consumer-priced VR hardware is coming, probably within two years
    </li>
    <li>It’s for real this time – we’ve built prototypes, and it’s pretty incredible
    </li>
    <li>Our technology should work for consumer products
    </li>
    <li>VR will be best and will evolve most rapidly on the PC
    </li>
    <li>Steam will support it well
    </li>
    <li>And we think it’s possible that it could transform the entire entertainment industry
    </li>
    </ul>
    </blockquote>
    <p>
    But that hardly does it justice; <a href="http://media.steampowered.com/apps/abrashblog/Abrash%20Dev%20Days%202014.pdf">read the entire presentation</a> (pdf).
    </p>
    <p>
    If you want some of the hardest practical problems in computer science to work on, bringing VR to the world is as ambitious (and fun!) a goal in software and hardware engineering I can think of. So like any proper card-carrying geek, I'll certainly be ordering the new Crystal Cove model of Oculus Rift as soon as it's available.
    </p>
    <p>
    It's a start. Maybe a big one.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2014-02-16T01:48:40.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-road-to-vr/</guid>
    </item>
    <item>
    <title>Why Does Windows Have Terrible Battery Life?</title>
    <link>https://blog.codinghorror.com/why-does-windows-have-terrible-battery-life/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I've become a <a href="http://www.codinghorror.com/blog/2012/11/do-you-wanna-touch.html">huge fan of touch computing</a>. I believe that most things we think of as "computers" will be <a href="http://www.codinghorror.com/blog/2012/03/welcome-to-the-post-pc-era.html">de-facto tablets</a>, either in our pocket, in our hands, possibly even mounted on our wrists or forearms.
    </p>
    <p>
    I can't wait for the iPad 5 this week (I'll be ordering three), and my Surface Pro 2 should arrive this week too. Because it is a blazingly fast, modern Intel machine, I like to use the Surface Pro to predict where tablet performance <i>ought to be</i> for everyone in 2 to 3 years. I think of it as an iPad 7.
    </p>
    <p>
    My main complaint with the Surface Pro is <b>the incredibly lackluster battery life</b>. Granted, this is a classic Intel x86 box we're talking about, not some efficient ARM system-on-a-chip designed to run on a tiny battery. Still, I was hopeful that the first Surface Pro with Haswell inside would produce giant gains in battery life as Intel promised. Then I saw <a href="http://anandtech.com/show/7440/microsoft-surface-pro-2-review/4">this graph</a>:
    </p>
    <p>
    <img alt="Web browsing battery life, Surface Pro vs Surface Pro 2" title="Web browsing battery life, Surface Pro vs Surface Pro 2" src="https://blog.codinghorror.com/content/images/uploads/2013/10/6a0120a85dcdae970b019b002f13a6970d-800wi.png" width="600" height="500">
    </p>
    <p>
    So WiFi web browsing battery life, arguably the most common user activity there is on a computer these days, goes from 4.7 hours on the Surface Pro to 6.7 hours on the Surface Pro 2, a 42% increase. That's a decent increase, I suppose, but I was hoping for something more like 8 hours, something closer to doubling of battery life – to bring the Surface Pro in line with other tablets.
    </p>
    <p>
    Nearly 7 whole hours of WiFi web browsing for a real computer in tablet form factor … that's not bad, right? Let's see <a href="http://www.anandtech.com/show/7180/apple-macbook-air-11-2013-review/2">how the 2013 MacBook Air does</a>, which spec-wise is about as close as we can get to the Surface Pro 2. The screen is somewhat lower resolution and not touch capable, of course, but under the hood, the i5-4200u CPU and LPDDR3 RAM are nearly the same. It's a real computer, too, using the latest Intel technology.
    </p>
    <p>
    <img alt="Macbook-air-2013-web-browsing" title="Macbook-air-2013-web-browsing" src="https://blog.codinghorror.com/content/images/uploads/2013/10/6a0120a85dcdae970b019b002f2524970d-800wi.png" width="600" height="176">
    </p>
    <p>
    The Surface Pro 2 has a 42 Wh battery, which puts it closer to the 11 inch Air in capacity. Still, over 11 hours of battery life browsing the web on WiFi? That means the Air is somehow producing <b>nearly two times the battery efficiency of the best hardware and software combination Microsoft can muster</b>, for what I consider to be the most common usage pattern on a computer today. That's shocking. Scandalous, even.
    </p>
    <p>
    <span style="color:red">UPDATE:</span> Turns out the Surface 2 Pro was shipped with bad firmware. Once updated, the WiFi adapter enters lower idle power states and <a href="http://www.anandtech.com/show/7460/apple-ipad-air-review">this helps a lot</a>, going from 6.6 hours of browsing time to 8.3 hours, a 25% improvement! That puts it much more in line with the rest of the field, at least, even if it doesn't achieve Mac like runtime.
    </p>
    <p>
    It's not exactly news that Windows historically doesn't do as well as OS X on battery life. Way back in 2009, <a href="http://www.anandtech.com/show/2785/the-new-macbook-pro-part-ii-lower-battery-life-under-vista-sata-issues">AnandTech tested a MacBook Pro with multiple operating systems</a>:
    </p>
    <p>
    </p>
    <table cellpadding="4" width="600px" style="border: 1px solid silver">
    <tr>
    <td valign="top" style="border-right: 1px solid silver">2009 15-inch MacBook Pro (73WHr battery)</td>
    <td valign="top" style="border-right: 1px solid silver">OS X 10.5.7</td>
    <td valign="top" style="border-right: 1px solid silver">Windows Vista x64 SP1</td>
    <td valign="top">Windows 7 RC1</td>
    </tr>
    <tr>
    <td style="border-right: 1px solid silver">Wireless Web Browsing (No Flash) Battery Life</td>
    <td width="100px" style="border-right: 1px solid silver">8.13 hours</td>
    <td width="100px" style="border-right: 1px solid silver">6.02 hours</td>
    <td width="100px">5.48 hours</td>
    </tr>
    </table>
    
    <p>
    That's fine, I knew about this discrepancy, but here's what really bothers me:
    </p>
    <ol>
    <li>
    <b>The Windows light usage battery life situation has not improved at all since 2009.</b> If anything the disparity between OS X and Windows light usage battery life has gotten <i>worse</i>.<br><br>
    </li>
    <li>Microsoft positions Windows 8 as an operating system that's great for tablets, which are designed for casual web browsing and light app use – but how can that possibly be true when <b>Windows idle power management is so much worse than the competition's <i>desktop</i> operating system in OS X</b> – much less their tablet and phone operating system, iOS?</li>
    </ol>
    
    <p>
    (It's true that Bay Trail, Intel's new lower power CPU from the Atom family, achieves <a href="http://www.anandtech.com/show/7428/asus-transformer-book-t100-review/5">8.6 hours of WiFi web browsing</a>. That's solidly in the middle of the tablet pack for battery life. But all the evidence tells me that the very same hardware would do a <i>lot</i> better in OS X, or even iOS. At least Intel has finally produced something that's reasonably competitive with the latest ARM chips.)
    </p>
    <p>
    Perhaps most damning of all, if you take the latest and greatest 13" MacBook Air, and install Windows 8 on it, <a href="http://www.digitalversus.com/laptop/apple-13-macbook-air-2013-running-windows-8-p16624/test.html">guess what happens to battery life?</a>
    </p>
    <blockquote>
    One of the best things about the standard 2013 MacBook Air 13" is that it has record-breaking battery life of 14 hrs 25 min (with the screen brightness at 100 cd/m², headphones plugged in and the Wi-Fi, Bluetooth and keyboard backlighting turned off). <b>Under Windows 8 the results are more mixed [..] in the same conditions it lasts only 7 hrs 40 min</b>. That's still very high—it's better than the Asus Zenbook Prime UX31A's 6 hours and the Samsung Series 7 Ultra's 5 hours—but it's only half the astronomical 14 hours + that the 13" MacBook Air is capable of.
    </blockquote>
    <p>
    Instead of the 26% less battery life in Windows that Anand measured in 2009, <b>we're now seeing <i>50%</i> less battery life.</b> This is an <i>enormous</i> gap between Windows and OS X in what is arguably the most common form of computer usage today, basic WiFi web browsing. That's shameful. Embarrassing, even.
    </p>
    <p>
    I had a <a href="https://twitter.com/anandshimpi/status/392158669367803904">brief Twitter conversation with Anand Shimpi of Anandtech about this</a>, and he was as perplexed as I was. Nobody could explain the technical basis for this vast difference in idle power management on the same hardware. None of the PC vendors he spoke to could justify it, or produce a Windows box that managed similar battery life to OS X. And that battery life gap is worse today – even when using Microsoft's own hardware, designed in Microsoft's labs, running Microsoft's latest operating system released <i>this week</i>. Microsoft can no longer hand wave this vast difference away based on vague references to "poorly optimized third party drivers".
    </p>
    <p>
    Apple is clearly doing a great job here. Kudos. If you want a device that delivers maximum battery life for light web browsing, there's no question that you should get something with an Apple logo on it. <b>I just wish somebody could explain to me and Anand why Windows is so awful at managing idle power.</b> We're at a loss to understand why Windows' terrible – and worsening! – idle battery life performance isn't the source of far more industry outrage.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2013-10-21T03:06:12.000Z</pubDate>
    <guid>https://blog.codinghorror.com/why-does-windows-have-terrible-battery-life/</guid>
    </item>
    <item>
    <title>You Don't Need Millions of Dollars</title>
    <link>https://blog.codinghorror.com/you-dont-need-millions-of-dollars/</link>
    <content>
                    <!--kg-card-begin: markdown--><p><a href="http://www.amazon.com/exec/obidos/ASIN/0812972155/codihorr-20">Masters of Doom</a> is the story of John Carmack and John Romero creating the seminal games Wolfenstein 3D, Doom, and Quake.</p>
    <p><a href="http://www.amazon.com/exec/obidos/ASIN/0812972155/codihorr-20"><img title="Masters-of-doom-book-cover" src="https://blog.codinghorror.com/content/images/uploads/2013/10/6a0120a85dcdae970b019b001c3833970b-800wi.jpg" width="300" height="461" alt="Masters-of-doom-book-cover"></a></p>
    <p>It's an amazing work on so many levels – but primarily because of the exhaustive research the author undertook to tell this story.</p>
    <blockquote>
    <p>To re-create the story of the Two Johns, I conducted hundreds of interviews over six years, often with each person on multiple occasions. After moving to Dallas in the fall of 2000 for research, I became known in offices, barbecue joints, and bars around town as “the guy writing the Book.” John Romero and John Carmack each spent dozens of hours in person answering my most picayune questions: how they were feeling, what they were thinking, what they were saying, hearing, seeing, playing. What they and others couldn’t recall, I unearthed from websites, newsgroups, e-mails, chat transcripts, and magazines (though I drew from some of these articles, I made a point of getting the gamers’ own versions of what happened as well). I also played a delirious amount of games: at home, online, and at a couple tournaments (yeah, I lost).</p>
    <p>I spent six months transcribing all my taped interviews. From this material, I assembled a narrative of dialogue and description that re-creates the events as faithfully and accurately as possible. As often as appropriate, I told the story from each person’s point of view to give readers the different perspectives.</p>
    </blockquote>
    <p>It's unusual to find a book about a contentious, complex friendship and business relationship that both parties sign off on – and even a decade later, regularly recommend to people interested in their personal back stories. But it is a testament to just how <i>right</i> Kushner got this story that both Romero and Carmack do. This is <b>exactly the sort of meticulously researched, multiple viewpoint biography that you'd want to read about important people in your industry</b>. In that sense, it's kind of the opposite of the <a href="http://www.amazon.com/exec/obidos/ASIN/B004W2UBYW/codihorr-20">Jobs biography</a>, which I liked well enough, but it presented one viewpoint, and often in a very incomplete, sloppily researched way. I would <i>kill</i> to read a book this good about Jobs.</p>
    <p>In a way, I grew up with these guys. I am almost exactly the same age they are. I missed the Wolfenstein 3D release because I was still in college, but come December 1993, there I was, bursting with anticipation waiting for the release of Doom along with every other early PC gamer. And who gave Doom its name? Oddly enough, Tom Cruise did.</p>
    <iframe width="640" height="360" src="//www.youtube.com/embed/xa2OAhf0R_g" frameborder="0" allowfullscreen></iframe>
    <p>I've had a lifelong love affair with first person shooters since encountering Wolf3D and Doom. I played about every Doom engine game there was to death. I even had a brief encounter with Romero himself on the modem based multiplayer hub DWANGO where I proverbially "sucked it down". And after the Internet hit around '95, I continued to follow Quake development obsessively online, poring over every .plan file update, and living the drama of the inevitable breakup, the emergence of GLQuake and 3D accelerators, and the road to Quake 3.</p>
    <p>It is also an incredibly inspiring story. Here's a stereotypical group of geeky programmers from sketchy home backgrounds who went on to … basically create an entire industry from scratch on their own terms.</p>
    <blockquote>
    Shareware. Romero was familiar with the concept. It dated back to a guy named Andrew Fluegelman, founding editor of PC World magazine. In 1980, Fluegelman wrote a program called PC-Talk and released it online with a note saying that anyone who liked the wares should feel free to send him some “appreciation” money. Soon enough he had to hire a staff to count all the checks. Fluegelman called the practice “shareware,” “an experiment in economics.” Over the eighties other hackers picked up the ball, making their programs for Apples, PCs, and other computers available in the same honor code: Try it, if you like it, pay me. The payment would entitle the customer to receive technical support and updates.
    <p>The Association of Shareware Professionals put the business, largely domestic, between $10 and $20 million annually—even with only an estimated 10 percent of customers paying to register a shareware title. Forbes magazine marveled at the trend, writing in 1988 that “if this doesn’t sound like a very sound way to build a business, think again.” Shareware, it argued, relied not on expensive advertising but on word of mouth or, as one practitioner put it, “word of disk.” Robert Wallace, a top programmer at Microsoft, turned a shareware program of his called PC-Write into a multimillion-dollar empire. Most authors, however, were happy to break six figures and often made little more than $25,000 per year. Selling a thousand copies of a title in one year was a great success. Shareware was still a radical conceit, one that, furthermore, had been used only for utility programs, like check-balancing programs and word-processing wares. [Shareware] had never been exploited for games.</p>
    </blockquote>
    <p><b>Does anyone even remember what shareware is?</b> What is the equivalent to shareware today? Distributing software yourself on the Internet? Sort of. I'd say it's more analogous to the various app stores: Google Play, Apple App Store, Windows Store. Going directly to the users. But they found shareware games didn't work, at least initially:</p>
    <blockquote>
    <p>When it came time to distribute the games, Scott took a long, hard look at the shareware market. He liked what he saw: the fact that he could run everything himself without having to deal with retailers or publishers. So he followed suit, putting out two text-based games in their entirety and waiting for the cash to roll in. But the cash didn’t roll; it didn’t even trickle. Gamers, he realized, might be a different breed from those consumers who actually paid for utility shareware. They were more apt simply to take what they could get for free. Scott did some research and realized he wasn’t alone; other programmers who had released games in their entirety as shareware were broke too. People may be honest, he thought, but they’re also generally lazy. They need an incentive.</p>
    <p>Then he got an idea. <i>Instead of giving away the entire game, why not give out only the first portion, then make the player buy the rest of the game directly from him?</i> No one had tried it before, but there was no reason it couldn’t work. The games Scott was making were perfectly suited to such a plan because they were broken up into short episodes or “levels” of play. He could simply put out, say, fifteen levels of a game, then tell players that if they sent him a check he would send them the remaining thirty.</p>
    </blockquote>
    <p>You know how game companies spent the last 5 years figuring out that <b>free games with 100% in-app purchases</b> are the optimum (and maybe, only) business model for games today? The guys at id had figured that all out <i>twenty seven years ago</i>. Those sounds you hear in the distance are a <a href="http://www.youtube.com/watch?v=bE_1tCasi_Q">little bit of history repeating</a>.</p>
    <p>Id Software was more than a unique business model that gave almost all the power to the programmers. It was the explosive combination of shareware delivery with a particular genius programmer inventing new techniques for PC games that nobody had seen before: <a href="http://en.wikipedia.org/wiki/John_D._Carmack">John Carmack</a>. It may sound prosaic and banal now, but smooth scrolling platforming, texture mapped walls, lighting models, and high speed software 3D rendering on a PC were all virtually unheard of at the time Carmack created the engines that made them commonplace.</p>
    <img alt="Carmack_Headshot_PR_660" title="Carmack_Headshot_PR_660" src="https://blog.codinghorror.com/content/images/uploads/2013/10/6a0120a85dcdae970b019b001ca1e5970c-800wi.jpg" width="660" height="566">
    <p>Carmack, <a href="http://www.codinghorror.com/blog/2009/04/i-happen-to-like-heroic-coding.html">like Abrash</a>, is a legend in programming circles, and for good reason. The stories in this book about him are, frankly, a little scary. His devotion to the machine borders on fanatical; he regularly worked 80 hour weeks and he'd take "vacations" where it was just him and a computer alone in a hotel room for a whole week – just for <i>fun</i>, to <i>relax</i>. His output is herculean. But he also realizes that all his hard work is made possible by a long line of other programmers who came before him.</p>
    <blockquote>
    Al had never seen a side scrolling like this for the PC. “Wow,” he told Carmack, “you should patent this technology.
    <p>Carmack turned red. “If you ever ask me to patent anything,” he snapped, “I’ll quit.” Al assumed Carmack was trying to protect his own financial interests, but in reality he had struck what was growing into an increasingly raw nerve for the young, idealistic programmer. It was one of the few things that could truly make him angry. It was ingrained in his bones since his first reading of the Hacker Ethic. All of science and technology and culture and learning and academics is built upon using the work that others have done before, Carmack thought. But to take a patenting approach and say it’s like, well, this idea is my idea, you cannot extend this idea in any way, because I own this idea—it just seems so fundamentally wrong. Patents were jeopardizing the very thing that was central to his life: writing code to solve problems. If the world became a place in which he couldn’t solve a problem without infringing on someone’s patents, he would be very unhappy living there.</p>
    </blockquote>
    <p>In that spirit, Carmack regularly <a href="https://github.com/id-Software">releases his old engines under GPL</a> for other programmers to learn from. Don't miss Fabien Sanglard's <a href="http://fabiensanglard.net/doom3/">epic deconstruction of the Doom 3 codebase</a>, for example. That's only one iteration behind <a href="http://en.wikipedia.org/wiki/Id_Tech_5">the current id engine</a> which was used for Rage and (apparently) will be used for the upcoming Doom 4.</p>
    <p>One of my very favorite quotes of all time comes at the end of the book.</p>
    <blockquote>
    <p>Carmack disdained talk of highfalutin things like legacies but when pressed would allow at least one thought on his own. “In the information age, the barriers just aren’t there,” he said. “The barriers are self-imposed. If you want to set off and go develop some grand new thing, you don’t need millions of dollars of capitalization. You need enough pizza and Diet Coke to stick in your refrigerator, a cheap PC to work on, and the dedication to go through with it. We slept on floors. We waded across rivers.”</p>
    </blockquote>
    <p>And indeed they did, as the book will attest. Both <a href="https://twitter.com/ID_AA_Carmack">@ID_AA_Carmack</a> and <a href="https://twitter.com/romero">@romero</a> are still lifelong, influential, inspiring members of the game and programming communities. They are here for the long haul because they love this stuff and always have.</p>
    <p>The ultimate point of <a href="http://www.amazon.com/exec/obidos/ASIN/0812972155/codihorr-20">Masters of Doom</a> is that <b>today you no longer <i>need</i> to be as brilliant as John Carmack to achieve success</b>, and John Carmack himself will be the first to tell you that.  Where John was sitting in a cubicle by himself in Mesquite, Texas for 80 hours a week painstakingly inventing all this stuff from first principles, on hardware that was barely capable, you have a supercomputer in your pocket, another supercomputer on your desk, and two dozen open source frameworks and libraries that can do 90% of the work for you. You have GitHub, Wikipedia, Stack Overflow, and the whole of the Internet.</p>
    <p>All you have to do is get <a href="http://www.codinghorror.com/blog/2004/11/good-programmers-get-off-their-butts.html">off your butt</a> and <a href="http://www.codinghorror.com/blog/2007/07/yes-but-what-have-you-done.html">use them</a>.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2013-10-18T00:55:55.000Z</pubDate>
    <guid>https://blog.codinghorror.com/you-dont-need-millions-of-dollars/</guid>
    </item>
    <item>
    <title>Updating Your Utility Belt</title>
    <link>https://blog.codinghorror.com/updating-your-utility-belt/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I just updated <a href="http://www.codinghorror.com/blog/2010/08/whats-on-your-utility-belt.html">my utility belt</a>.
    </p>
    <p>
    <img alt="Batman Utility Belt" title="Batman Utility Belt" src="https://blog.codinghorror.com/content/images/uploads/2013/10/6a0120a85dcdae970b019b00073b4b970b-800wi.jpg" width="550" height="337">
    </p>
    <p>
    Well, metaphorically speaking – every self-respecting geek has one.
    </p>
    <p>
    Lately I've been trying to <i>minimize</i> what I carry around even further. After having children I've come to appreciate <a href="http://www.codinghorror.com/blog/2011/12/gifts-for-geeks-2011-edition.html">the value of less stuff in my life</a>. So here's my <a href="http://en.wikipedia.org/wiki/Everyday_carry">everyday carry</a> in 2013:
    </p>
    <p>
    <img alt="Keychain-edc-2013" title="Keychain-edc-2013" src="https://blog.codinghorror.com/content/images/uploads/2013/10/6a0120a85dcdae970b019b00075b01970c-800wi.jpg" width="500" height="495"><br>
    </p>
    <p>
    Compared to <a href="http://www.codinghorror.com/blog/2010/08/whats-on-your-utility-belt.html">my 2011 everyday carry</a>, I have managed to reduce in size almost everything on it:
    </p>
    <ul>
    <li>
    <a href="http://www.amazon.com/exec/obidos/ASIN/B0032XVNNA/codihorr-20">Leatherman Style</a> (smaller)
    </li>
    <li>
    <a href="http://www.amazon.com/exec/obidos/ASIN/B002MD01KC/codihorr-20">Nite Ize S-Biner #0 size</a> (smaller)
    </li>
    <li>
    <a href="http://www.amazon.com/dp/B006K5C2EG/?tag=codihorr-20">iTP EOS AAA flashlight</a> (smaller)
    </li>
    <li>
    <s>USB flash drive</s> (removed)
    </li>
    </ul>
    <p>
    I have no idea why I was using a size #1 S-Biner for so long when the smaller size #0 model does the job just fine. And I gave up the USB flash drive altogether in favor of storing files on whatever smartphone I'm always carrying around with me anyway. (But if you need one, look at the USB 3.0 models, which are almost like <a href="http://www.codinghorror.com/blog/2012/11/a-ssd-in-your-pocket.html">little SSD drives in your pocket</a>.)
    </p>
    <p>
    I also flirted with the idea of dropping the standalone flashlight and relying on my smartphone camera flash as a flashlight, but in my testing smartphones make weak flashlights. It might replace one of those button battery style LEDs in an emergency, but it's not even <i>close</i> to what a decent AAA LED flashlight can do for actual nighttime navigation. It is interesting that LEDs haven't advanced much in the last few years on AAA flashlights. There are somewhat newer <a href="http://www.amazon.com/exec/obidos/ASIN/B00AV4YZO2/codihorr-20">Cree XP-G2 models</a> which I also experimented with, but I ended up preferring the minimalist, compact form factor of the iTP EOS. Don't forget the <a href="http://www.amazon.com/exec/obidos/ASIN/B0002DUQDQ/codihorr-20">lithium AAA batteries</a> to keep the weight down and runtime up, though!
    </p>
    <p>
    The <a href="http://www.amazon.com/exec/obidos/ASIN/B0032XVNNA/codihorr-20">Leatherman Style</a> is a <i>fantastic</i> new addition, because it keeps the core functions I used the most on the Leatherman Squirt and removes the extra stuff I didn't. Here's an expanded view of the other side.
    </p>
    <p>
    <a href="http://www.amazon.com/exec/obidos/ASIN/B0032XVNNA/codihorr-20"><img alt="Leatherman-style-red" title="Leatherman-style-red" src="https://blog.codinghorror.com/content/images/uploads/2013/10/6a0120a85dcdae970b019b00075b77970c-800wi.jpg" width="500" height="355"></a>
    </p>
    <p>
    So: <b>scissors, knife, screwdriver</b>. Hard to see, but detachable tweezers are also wedged in on the corner. That works for me. These are the functions I used the most on my Leatherman Squirt, by far. The Style is leaner, smaller, lighter … <i>meaner</i>.
    </p>
    <p>
    (And there's also a nail file, on the other side of the screwdriver, but <i>what is this obsession with nail files on multi-tools?</i> Who are these people filing their nails all the damn time? I've never filed my nails once in my entire life! Can anyone mansplain this to me?)
    </p>
    <p>
    I also purchased an updated <a href="http://www.amazon.com/exec/obidos/ASIN/B0032XZW9G/codihorr-20">Leatherman Squirt PS4</a>, the one with the integrated scissors as well as the pliers. I'm showing it here fully expanded, next to my old red Squirt that didn't have the scissors.
    </p>
    <a href="http://www.amazon.com/exec/obidos/ASIN/B0032XZW9G/codihorr-20"><img alt="Leatherman Squirt p4 old vs new" title="Leatherman Squirt p4 old vs new" src="https://blog.codinghorror.com/content/images/uploads/2013/10/6a0120a85dcdae970b019b0007cad7970d-800wi.jpg" width="720" height="321"></a>
    
    <p>
    The pliers are great, and probably the only reason to carry this slightly larger multitool if you need it. But I hardly ever did. The physical dimensions aren't terribly different, but the Squirt PS4 is 56.4 grams, versus the Style at 23.1 grams. Quite a weight savings.
    </p>
    <p>
    (I would be remiss if I didn't point out that the Squirt and Style are only two of the literally dozens of great Leatherman utility tool choices, from <a href="http://www.leatherman.com/pockettools">pocket</a> to <a href="http://www.leatherman.com/multi-tools">multi-tool</a>. I like the smallest ones in the model range for my minimalist EDC needs, but you might want more. Of particular note is the <a href="http://www.amazon.com/exec/obidos/ASIN/B0032XVNMQ/codihorr-20">Style CS</a> which adds an integrated clip and bottle opener, but bulks up to 41.1g)
    </p>
    <p>
    So that's my updated utility belt in 2013. Less is more, folks.
    </p>
    <p>
    But there is one more thing…
    </p>
    <p>
    If you were worried that <a href="http://en.wikipedia.org/wiki/Haitz's_law">Haitz's Law</a> wasn't working for us on these LED flashlights, have no fear. Because for $75, you can now own a compact, roughly AA-sized LED flashlight that produces an astonishing <b>850 lumens</b>. (For context, the AAA flashlight pictured above produces around 90 lumens on its highest setting.)
    </p>
    <p>
    <a href="http://www.amazon.com/exec/obidos/ASIN/B00DR9GWX0/codihorr-20"><img alt="Pd35-led-flashlight" title="Pd35-led-flashlight" src="https://blog.codinghorror.com/content/images/uploads/2013/10/6a0120a85dcdae970b019b0007b6e7970b-800wi.jpg" width="555" height="313"></a>
    </p>
    I got this <a href="http://www.amazon.com/exec/obidos/ASIN/B00DR9GWX0/codihorr-20">Fenix PD35 flashlight</a> to play with, along with some rechargeable 18650 Li-ion batteries (think fatter AA, two CR123A batteries stacked on top of each other), and it is nuts. It's actually painful to look at when lit, and it gets pretty warm in your hands on the high and turbo settings. If you've ever dreamed of carrying a lightsaber, <i>and I know you have</i>, wielding this baby will make you realize that dream is closer today than ever before.
    
    <p>
    It's also a pretty nice flashlight. Just try to resist making lightsaber noises while using it.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2013-10-14T16:20:18.000Z</pubDate>
    <guid>https://blog.codinghorror.com/updating-your-utility-belt/</guid>
    </item>
    <item>
    <title>The 2013 HTPC Build</title>
    <link>https://blog.codinghorror.com/the-2013-htpc-build/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I no longer own any laptops. Everything in our house is a tablet: multiple Nexus 7s, multiple iPad 4s, and a Surface Pro. In fact, the only traditional computers I own are my triple-monitor <a href="http://www.codinghorror.com/blog/2011/07/building-a-pc-part-vii-rebooting.html">desktop home office beast</a>, and the small Home Theater PC (HTPC) that drives all our home entertainment in the living room.
    </p>
    <p>
    <img alt="Htpc-2013-4" title="Htpc-2013-4" src="https://blog.codinghorror.com/content/images/uploads/2013/09/6a0120a85dcdae970b019aff7661cf970d-800wi.jpg" width="600" height="424">
    </p>
    <p>
    It's a Mini-ITX <a href="http://doityourselfhtpc.wordpress.com/2010/09/05/antec-isk-310-150-mini-itx-case-review/">case</a> with compact, console-like 3.8" × 8.7" × 12.9" dimensions. It is a class act, totally at home in any civilized home theater environment.
    </p>
    <p>
    I love that little HTPC to death. It is <i>such</i> a versatile, flexible, always-on box. The longer I work on my HTPC project, the more I believe the evolution of the HTPC is a nice metaphor for the overall future direction of the PC. In summary:
    </p>
    <table cellpadding="4" cellspacing="4" width="550px">
    <tr>
    <td><a href="http://www.codinghorror.com/blog/2005/02/pentium-m-home-theater-pc.html">2005</a></td>
    <td>~$1000</td>
    <td>512 MB RAM, single core CPU</td>
    <td>80 watts idle
    </td>
    </tr>
    <tr>
    <td><a href="http://www.codinghorror.com/blog/2008/04/building-your-own-home-theater-pc.html">2008</a></td>
    <td>~$520</td>
    <td>2 GB RAM, dual core CPU</td>
    <td>45 watts idle
    </td>
    </tr>
    <tr>
    <td><a href="http://www.codinghorror.com/blog/2011/03/revisiting-the-home-theater-pc.html">2011</a></td>
    <td>~$420</td>
    <td>4 GB RAM, dual core CPU + GPU</td>
    <td>22 watts idle
    </td>
    </tr>
    <tr>
    <td><b>2013</b></td>
    <td><b>~$300*</b></td>
    <td><b>8 GB RAM, dual core CPU + GPU×2</b></td>
    <td>
    <font color="red"><b>15 watts idle</b></font>
    </td>
    </tr>
    </table>
    <p>
    <i>15 watts at idle!</i> Incredible, isn't it? But you probably also noticed how some of these stats aren't improving so much. Basically, they don't need to – we've reached such <a href="http://www.codinghorror.com/blog/2012/10/the-pc-is-over.html">an absurd overabundance of computing power</a> that slathering more on top no longer gets us much. It's been about 2&amp;half; years since my last HTPC build, and (*) all I did this year is swap out the motherboard, CPU, and RAM:
    </p>
    <ul>
    <li>
    <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16819116947&amp;nm_mc=AFC-C8Junction&amp;cm_mmc=AFC-C8Junction-_-Processors%20-%20Desktops-_-Intel-_-19116947">Intel Core i3-4130T</a> ($139)</li>
    <li>
    <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16813157390&amp;nm_mc=AFC-C8Junction&amp;cm_mmc=AFC-C8Junction-_-Motherboards%20-%20Intel-_-ASRock-_-13157390">ASRock B85M-ITX motherboard</a> ($79)</li>
    <li>
    <a href="http://www.amazon.com/gp/product/B0037TO5C0/?tag=codihorr-20">8GB DDR3-1600</a> ($69)</li>
    </ul>
    <p>
    I started by removing the overhead drive tray, then pulling out the motherboard and anything attached to it. Notice there's a <i>ton</i> of room in the front of the case where the old power supply used to be. No need for it. We're using a more efficient and <i>way</i> smaller <a href="http://www.amazon.com/gp/product/B0035UETHW/?tag=codihorr-20">PicoPSU</a>. That space is now available for an extra 2TB 2.5" drive, sitting there on some mildly sticky sheets of sorbothane. Once you factor in the PicoPSU, it's a roomy build despite the compact dimensions.
    </p>
    <p>
    <img alt="Htpc-2013-2" title="Htpc-2013-2" src="https://blog.codinghorror.com/content/images/uploads/2013/09/6a0120a85dcdae970b019aff7658a4970d-800wi.jpg" width="720" height="342">
    </p>
    <p>
    Then I mounted the motherboard, attached the front USB and eSATA headers, the power/reset switches, and the aforementioned PicoPSU, which you can see sticking out of the motherboard's power header near the hard drive. Note that everything not directly attached to the motherboard is driven off a single power connector, so there are two SATA splitters in use. This particular PicoPSU and power brick are rated to 60 watts which is enough for what we're doing.
    </p>
    <p>
    <img alt="Htpc-2013-3" title="Htpc-2013-3" src="https://blog.codinghorror.com/content/images/uploads/2013/09/6a0120a85dcdae970b019aff75ed68970c-800wi.jpg" width="720" height="391">
    </p>
    <p>
    The top drive tray slides in with 3 screws. There's also a place just underneath the two drives above for a slimline Blu-ray or DVD drive, but I found I have virtually no use for optical media any more, so I've skipped it.
    </p>
    <p>
    <img alt="Htpc-2013-1" title="Htpc-2013-1" src="https://blog.codinghorror.com/content/images/uploads/2013/09/6a0120a85dcdae970b019aff75ae64970b-800wi.jpg" width="720" height="397">
    </p>
    <p>
    The main motivation for this upgrade is <b>the lower power usage and better GPU performance of the Haswell CPU</b>, versus the Sandy Bridge CPU that was in there. Everything else remains the same, though I have been selectively upgrading bits and pieces since 2011:
    </p>
    <ul>
    <li>
    <a href="http://www.amazon.com/Samsung-Electronics-2-5-Inch-SATA_6_0_gb-MZ-7PD512BW/dp/B009NB8WTI/?tag=codihorr-20">Samsung 840 512GB SSD</a>
    </li>
    <li>
    <a href="http://www.amazon.com/Western-Digital-Drives-Intellipower-WD20NPVX/dp/B00COFNBPA/?tag=codihorr-20">Western Digital 2TB 2.5" HDD</a> (× 2)
    </li>
    <li>
    <a href="http://www.amazon.com/gp/product/B0035UETHW/?tag=codihorr-20">Pico-PSU-90 + 60w adapter</a>
    </li>
    <li>
    <a href="http://www.amazon.com/gp/product/B0035FIS2Y/?tag=codihorr-20">Antec ISK 310-150 ITX case</a>
    </li>
    </ul>
    <p>
    Yes, that's right, <i>4.5 terra-friggin-bytes of storage</i>. What can I say? I like me some media, man. The 512GB boot SSD is a little excessive, I'll grant you that, so feel free to replace the drives with something more modest in your build. I'm just addicted to SSD speed and didn't want to compromise too much on total storage.
    </p>
    <p>
    You may wonder why I bothered upgrading memory, since the trusty DDR3-1333 RAM in the old HTPC works fine in the new motherboard. Fair question. Normally, RAM speeds are little more than a curiosity on modern computers, as minor improvements in memory speed have long since ceased to produce meaningful differences in benchmarks. But we are <b>using Haswell's on-die GPU, and it relies on main memory as graphics memory</b>. Even a low-end video card will have 1GB of ram on it these days, and games certainly expect GPUs with at least 256MB or 512MB of dedicated, extremely high speed graphics memory. This is the rare case where you <i>do</i> care about memory performance. Consider <a href="http://www.anandtech.com/show/6372/memory-performance-16gb-ddr31333-to-ddr32400-on-ivy-bridge-igp-with-gskill/9">these AnandTech game benchmark results</a>:
    </p>
    <a href="http://www.anandtech.com/show/6372/memory-performance-16gb-ddr31333-to-ddr32400-on-ivy-bridge-igp-with-gskill/9"><img alt="IGP Results_575px" title="IGP Results_575px" src="https://blog.codinghorror.com/content/images/uploads/2013/09/6a0120a85dcdae970b019aff757429970d-800wi.png" width="600" height="347"></a>
    <p>
    It's a bit difficult to read, but think of it as "percent better than vanilla DDR3-1333", since that's the baseline zero value here. The sweet spot is DDR3-1866 CL9 (light blue bar). That grade of memory is only nominally more expensive, and gets you reasonably near the top of each graph, but this motherboard doesn't support anything higher than 1600. DDR3-2133 CL9 (dark purple bar) is <a href="http://www.amazon.com/G-Skill-PC3-17000-2133MHz-RipjawsX-9-11-10-28/dp/B005C1MRMG/">also out there</a>.
    </p>
    <p>
    Other than lower power consumption, and a modest bump in CPU power, the really big improvement is GPU performance. It's kind of a complicated matrix, but the <a href="http://ark.intel.com/products/77481/">i3-4130T</a> chip has an Intel HD 4400 GPU, compared to the HD 2000 GPU that was in the <a href="http://ark.intel.com/products/53423">i3-2100T</a> I upgraded from. For example, Dirt 3 on medium detail at 1024x768 <a href="http://www.notebookcheck.net">notebookcheck.net</a> shows a gain <b>from 21.4 fps to 44.6 fps</b> for these specific GPUs – more than double the GPU performance, at the same 35 watt TDP!
    </p>
    <p>
    That's the other reason I was excited about this upgrade: <a href="http://store.steampowered.com/bigpicture/">Steam's Big Picture mode</a>. With that doubling of GPU power, this 15 watt idle HTPC we just built … is now a credible gaming machine!
    </p>
    <p>
    <a href="http://store.steampowered.com/bigpicture/"><img alt="Steam-big-picture" title="Steam-big-picture" src="https://blog.codinghorror.com/content/images/uploads/2013/09/6a0120a85dcdae970b019aff762590970c-800wi.jpg" width="720" height="405"></a>
    </p>
    You will need an <a href="http://www.amazon.com/Microsoft-Xbox-Wireless-Controller-Windows/dp/B004QRKWKQ/?tag=codihorr-20">Xbox 360 Wireless kit for PC</a>, which works <i>perfectly</i> with Steam Big Picture mode. Just plug and play, provided you stick to the <a href="http://store.steampowered.com/search/?sort_by=Metascore&amp;sort_order=DESC&amp;category1=998&amp;category2=28">190 Steam games with full controller support</a>. You'll still have to tinker a bit sometimes to get things to work, and you won't be running Battlefield 4 in hi-def at 60fps or anything, but overall it's <a href="http://www.notebookcheck.net/Intel-HD-Graphics-4400.91979.0.html">quite promising</a> and bodes well for a console-like future. I've had solid results with slightly older games in 720p using medium and occasionally high detail levels, depending on the game.
    
    <p>
    So what exactly do we get for our upgrade troubles, 2&amp;half; years on?
    </p>
    <ul>
    <li>A <b>32% drop in idle power</b>, from 22 watts to 15 watts. And an overall reduction in power consumption when the machine does happen to be doing something. 17 watts when in an active torrent, for example, up to around 50 watts when playing GRID 2.</li>
    <li>A <b>credible gaming box</b> for the first time, thanks to 2× the GPU power. It also coincides nicely with the maturing of Steam's Big Picture mode. When Gabe Newell talks about <a href="http://arstechnica.com/gaming/2013/09/gabe-newell-linux-is-the-future-of-gaming-new-hardware-coming-soon/">Linux as the future of gaming</a>, this is the sort of machine he's referring to.</li>
    </ul>
    <p>
    I'm not sure how much lower we can go on power, but I'm absolutely certain that Intel's on-die GPUs will continue to roughly double in power each generation for the forseeable future. This little HTPC box just keeps getting more versatile over time, while costing me less (in power consumption, at least) every year. It's the funnest build ever. HTPC, <i>I love you, man!</i>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2013-09-17T21:32:55.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-2013-htpc-build/</guid>
    </item>
    <item>
    <title>The CODE Keyboard</title>
    <link>https://blog.codinghorror.com/the-code-keyboard/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    What would you do, if you could do <i>anything?</i>
    </p>
    <p>
    I don't mean in a <a href="http://www.thisamericanlife.org/radio-archives/episode/178/superpowers">fantasy superhero way</a>, but in terms of resources. If someone told you that you now had the resources to attempt to make one thing happen in the world, one <i>real</i> thing, what would that be?
    </p>
    <p>
    If you're Elon Musk, the patron saint of <a href="http://www.codinghorror.com/blog/2009/03/sharpening-the-saw.html">Hacker News</a>, then you create <a href="http://www.teslamotors.com/">an electric car</a> and <a href="http://www.spacex.com/about/leadership">rocket ships</a>. And then propose a <a href="http://en.wikipedia.org/wiki/Hyperloop">hyperloop</a>. Not bad. Not bad at all.
    </p>
    <p>
    My dream is more modest. <b>I decided to create a keyboard.</b>
    </p>
    <p>
    <a href="http://codekeyboards.com/"><img alt="The CODE Keyboard, front image with backlight" title="Code-keyboard-front-backlit" src="https://blog.codinghorror.com/content/images/uploads/2013/08/6a0120a85dcdae970b01901f0872ad970b-800wi.jpg" width="720" height="245"></a>
    </p>
    <p>
    I've talked about keyboards here for years, but <b><a href="http://codekeyboards.com/">The CODE Keyboard</a></b> is the only simple, clean, beautiful backlit mechanical keyboard I've ever found. Because we built it that way.
    </p>
    <p>
    The name is of course a homage to <a href="http://www.amazon.com/exec/obidos/ASIN/0735611319/codihorr-20">one of my favorite books</a>.
    </p>
    <p>
    <a href="http://www.amazon.com/exec/obidos/ASIN/0735611319/codihorr-20"><img alt="Code, by Charles Petzold" height="259" src="https://blog.codinghorror.com/content/images/uploads/2013/08/6a0120a85dcdae970b019104fe50f6970c-800wi.png" width="400"></a>
    </p>
    <p>
    That's what I've always loved about programming, the thrill of discovering that communicating with other human beings in <i>their</i> code is <a href="http://www.codinghorror.com/blog/2006/10/does-writing-code-matter.html">the true secret to success in writing code for computers</a>. It's all just … <i>code</i>.
    </p>
    <blockquote>
    <p>
    <b style="font-size:150%">CODE</b><br>
    /kōd/<br>
    A system of words, letters, figures, or other symbols used to represent others</p>
    
    </blockquote>
    <p>
    The projects I've worked on for the last eight years are first and foremost <b>systems for efficiently communicating with <i>other human beings</i>, not computers</b>. Both <a href="http://stackexchange.com">Stack Exchange</a> and <a href="http://www.discourse.org">Discourse</a> are deeply concerned with people and words and the code they use to talk to each other. The only way those words arrive on your screen is because someone, somewhere typed them. Now, I've grown to begrudgingly accept the fact that <a href="http://www.codinghorror.com/blog/2012/03/welcome-to-the-post-pc-era.html">touchscreen keyboards are here to stay</a>, largely because the average person just doesn't <i>need</i> to produce much written communication in a given day. So the on-screen keyboard, along with a generous dollop of autocomplete and autofix, suffices.
    </p>
    <p>
    But <i>I'm</i> not an average person. <i>You</i> aren't an average person. <i>We</i> aren't average people. We know how to use <a href="http://justinjackson.ca/words.html">the most powerful tool on the web</a> – <b>words</b>. Strip away the images and gradients and vectors from even the fanciest web page, and you'll find that <a href="http://37signals.com/svn/posts/3404-reminder-design-is-still-about-words">the web is mostly words</a>. If you believe, as I do, in the power of words, then keyboards have to be one of the most amazing tools mankind has ever created. Nothing lets you get your thoughts out of your brain and into <i>words</i> faster and more efficiently than a well made keyboard. It's the most subversive thing we've invented since the pen and the printing press, and probably will remain so until we perfect direct brain interfaces.
    </p>
    <p>
    I was indoctrinated into <a href="http://www.codinghorror.com/blog/2010/10/the-keyboard-cult.html">the keyboard cult</a> when I bought my first computer. But I didn't appreciate it. Few do. The world is awash in terrible, crappy, no name how-cheap-can-we-make-it keyboards. There are a few dozen better mechanical keyboard options out there. I've owned and used at <i>least</i> six different expensive mechanical keyboards, but I wasn't satisfied with any of them, either: they didn't have backlighting, were ugly, had terrible design, or were missing basic functions like media keys.
    </p>
    <p>
    <a href="http://www.wasdkeyboards.com/">
    <img alt="WASD Keyboards" title="WASD Keyboards" src="https://blog.codinghorror.com/content/images/uploads/2013/08/6a0120a85dcdae970b0192acc79305970d-800wi.png" width="354" height="105"></a>
    </p>
    <p>
    That's why I originally contacted Weyman Kwong of <a href="http://www.wasdkeyboards.com/">WASD Keyboards</a> way back in early 2012.* I told him that the state of keyboards was unacceptable to me as a geek, and I proposed a partnership wherein I was willing to work with him to do whatever it takes to produce a <i>truly great</i> mechanical keyboard. Weyman is a hard core keyboard nut who absolutely knows his stuff – I mean, he runs a whole company that sells custom high end mechanical keyboards – but I don't think he had ever met anyone like me before, a guy who was willing to do a no strings attached deal just for the love of an idealized keyboard. At one point over a lunch meeting, he paused, thought a bit, and said:</p>
    <blockquote>
    So … you're like … some kind of geek humanitarian?
    </blockquote>
    <p>
    I don't know about that.
    </p>
    <p>
    But I'm not here to sell you a keyboard. Buy, don't buy. It doesn't matter. I'm just happy to live in a world where the first <b>truly great mechanical keyboard</b> finally <i>exists</i> now, in exactly the form it needed to, with every detail just so, and I can type this very post on it. As glorious as that may be, I'm here to sell you on something much more dangerous: the power of words. So whether you decide to use the <b><a href="http://codekeyboards.com/">CODE Keyboard</a></b>, or <i>any</i> keyboard at all, I'm glad you're <a href="http://www.randsinrepose.com/archives/2012/05/16/please_learn_to_write.html">thinking about <i>writing words</i> with us</a>.
    </p>
    <p>
    <small>* Yep, we software guys are spoiled – hardware takes <i>forever</i>.</small>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2013-08-27T14:36:07.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-code-keyboard/</guid>
    </item>
    <item>
    <title>The Rule of Three</title>
    <link>https://blog.codinghorror.com/rule-of-three/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Every programmer ever born thinks whatever idea just popped out of their head into their editor is the most generalized, most flexible, most one-size-fits all solution that has ever been conceived. We <i>think</i> we've built software that is a general purpose solution to some set of problems, but we are almost always wrong. We have <b>the delusion of reuse</b>. Don't feel bad. It's an endemic disease among software developers. An occupational hazard, really.</p>
    <p>If I have learned anything in my programming career, it is this: building reusable software, <i>truly</i> reusable software, is an incredibly hard problem – right up there with <a href="http://martinfowler.com/bliki/TwoHardThings.html">naming things and cache invalidation</a>.</p>
    <blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">There are two hard things in computer science: cache invalidation, naming things, and off-by-one errors.— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/status/506010907021828096">August 31, 2014</a></p></blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>My ideas on this crystallized in 2004 when I read <a href="http://www.amazon.com/exec/obidos/ASIN/0321117425/codihorr-20">Facts and Fallacies of Software Engineering</a> for the first time. It's kind of a hit-or-miss book overall, but there are a few gems in it, like fact #18:</p>
    <blockquote>
    There are two "rules of three" in [software] reuse:
    <ul>
    <li type="a">It is three times as difficult to build reusable components as single use components, and
    </li>
    <li type="a">a reusable component should be tried out in three different applications before it will be sufficiently general to accept into a reuse library.
    </li>
    </ul>
    </blockquote>
    <p>Yes, this is merely a craftsman's rule of thumb, but the Rule of Three is an incredibly powerful and effective rule of thumb that I have come to believe deeply in. It's similar to the admonition to have <a href="http://www.codinghorror.com/blog/2009/02/whos-your-coding-buddy.html">at least one other person review your code</a>, another rule of thumb that <a href="http://www.codinghorror.com/blog/2006/01/code-reviews-just-do-it.html">is proven to work</a>. <b>To build something truly reusable, you must convince three different audiences to use it thoroughly first</b>.</p>
    <p>OK, so you built a solution that scratches <i>your</i> itch … but does anyone else care? How many other people have the problem that your software or website addresses? How many other competing solutions are there to choose from? Outside of your personal patient zero case, can you convince anyone to willingly, or even enthusiastically, adopt your solution? That's your first hurdle. Can you even get to number <i>one?</i></p>
    <p>How deeply do I believe in the Rule of Three? So deeply that I built two whole companies around the concept.</p>
    <p>With <b>Stack Overflow</b>, we didn't set out to build a general purpose Q&amp;A engine. We only wanted to solve the problem of programmers looking for fast, solid technical answers to their programming problems, instead of the endless pages of opinions and arguments they usually got. Oh yeah, and also to deal with <a href="http://www.codinghorror.com/blog/2009/03/whos-your-arch-enemy.html">that hyphenated site</a>. One of the greatest pleasures of my life is meeting programmers that have never heard of this hyphenated site now. I hope you can forgive me, but I mentally superimpose a giant Dubya-style "Mission Accomplished" banner over their heads when they say this. I grin a mile wide every time.</p>
    <p>We launched Stack Overflow to the public in August 2008. It was such a runaway early hit that I started to get curious whether it actually <i>would</i> work for different audiences, even though that was never the original idea. But we decided to play the <a href="http://en.wikipedia.org/wiki/Six_Degrees_of_Kevin_Bacon">six degrees of Kevin Bacon</a> game and take some baby steps to find out. Less than a year later we had <b>Stack Overflow</b> for programmers, <b>Server Fault</b> for system administrators, and <b>Super User</b> for computer power users – <a href="http://blog.stackoverflow.com/2009/05/the-stack-overflow-trilogy/">the full trilogy</a>. Three sites with three distinct audiences, all humming right along.</p>
    <p>One customer or user or audience might be a fluke. Two gives you confidence that maybe, just maybe, you aren't getting lucky this time. And <i>three?</i> Well, three is a magic number. <a href="http://www.youtube.com/watch?v=aU4pyiB-kq0">Yes it is</a>.</p>
    <iframe width="480" height="360" src="//www.youtube.com/embed/aU4pyiB-kq0" frameborder="0" allowfullscreen></iframe>
    <p>Once we proved that the Stack Overflow engine could scale to these three distinct communities, I was comfortable pursuing Stack Exchange, which is now a network of <a href="http://stackexchange.com/sites?view=list">over 100 community-driven Q&amp;A sites</a>. The programming audience derived assumptions that the engine was originally designed around means it can never scale to <i>all</i> communities – but for communities based on topics that can be understood via questions about science, facts, and data, there is no finer engine in the world. Not that I'm biased or anything, but it's stone cold truth. Don't believe me? Ask Google.</p>
    <p>When we <a href="http://www.codinghorror.com/blog/2013/02/civilized-discourse-construction-kit.html">launched</a> <b>Discourse</b> in February, I had zero illusions that we had actually built workable general purpose forum software, even after eight months of hard work. That's why <a href="http://www.discourse.org/buy/">the "buy it" page still has this text at the top</a>:</p>
    <blockquote>
    <p>Unfortunately, you can't [buy Discourse] … yet.</p>
    <p>Our immediate plan is to find <b>three great partners willing to live on the bleeding beta edge and run forums with us</b>, so that we can be confident we've built a discussion platform that works for a variety of different communities. We promise to do everything we can to host your forum and make it awesome for two years. In return, you promise to work with us on ironing out all the rough edges in Discourse and making sure it scales successfully – both socially and technologically – to those three very different audiences.</p>
    </blockquote>
    <p>Hey, there's that magic number again!</p>
    <p>Even now, months later, we're not even <i>pretending</i> that we have open source discussion software that works for most communities. Hell, <a href="http://www.discourse.org/faq/#switch">the FAQ literally tells you <i>not</i> to use Discourse</a>. Instead, we're spending all our effort slowly, methodically herding the software through these three select partners, one by one, tweaking it and adapting it for each community along the way, making sure that each of our partners is not just happy with our discussion software but <i>ecstatically</i> happy, before we proceed to even tentatively recommend Discourse as any kind of general purpose discussion solution.</p>
    <p>Because I worship at the altar of the Rule of Three, it's pretty much been my full time job to say "no" to people every day for the last 6 months:</p>
    <blockquote>
    <p>Hey, Discourse looks great, can you host an instance for us?</p>
    </blockquote>
    <p>Sorry, not yet. Probably in 2014!</p>
    <blockquote>
    <p>We desperately need great forum software for our community! Can you help us set up Discourse?</p>
    </blockquote>
    <p>Sorry, I can't. We're focused on building the software. It is <a href="https://github.com/discourse/discourse">100% open source</a>, and we do have a pretty good install guide if you want to grab the code and set it up!</p>
    <blockquote>
    <p>We'll pay you to host Discourse for us! <a href="http://www.youtube.com/watch?v=JQCP85FngzE">Shut up and take my money!</a></p>
    </blockquote>
    <p>Sorry, I wish I could. It's not complete enough yet, and the last person I want to disappoint is a paying customer, and we don't even have a billing system! We plan to get to hosting in early-ish 2014.</p>
    <p>So yeah, I won't lie to you – I'm basically a total bummer. But I'm a total bummer with a <i>plan</i>.</p>
    <p>The solution we constructed in Discourse was a decent start, but woefully incomplete – even wrong in some areas. The only way we can figure this out is by <b>slowly running the solution through its paces with our three partners</b>, to live in the same house of software they do as roommates, to walk alongside them as they grow their discussion communities and do everything we can to help build it into a community <i>we</i> enjoy as much as everyone else does. And when there were only one set of footsteps in the sand, well … that's because we were carrying you.</p>
    <p>We haven't made it all the way through this process yet. We're only on partner #2; it takes the time it takes. But thanks to the Rule of Three, I'm confident that by the time we finish with partner #3, we will finally have a truly reusable bit of general purpose open source discussion software to share with the world – one that I can recommend unhesitatingly to (almost) anyone, because it'll probably work for their community, too.</p>
    <p>So the next time you think "I've built a reusable thing!", stop, and think <b>"how can I find three users, customers, or audiences, to <i>prove</i> that I've built something reusable?"</b> instead.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2013-07-18T22:19:22.000Z</pubDate>
    <guid>https://blog.codinghorror.com/rule-of-three/</guid>
    </item>
    <item>
    <title>So You Don't Want to be a Programmer After All</title>
    <link>https://blog.codinghorror.com/so-you-dont-want-to-be-a-programmer-after-all/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I get a surprising number of emails from career programmers who have spent some time in the profession and eventually decided it just isn't for them. Most recently this:
    </p>
    <blockquote>
    I finished a computer science degree last year, worked about a year in the Java EE stack. I liked requirements engineering and more 'management stuff' in university, but let's face it: you tend to be driven to be a programmer.
    
    <p>
    I enjoy programming itself. I'm not doing it <i>that</i> badly, I even do it better than some people. But it's too frustrating. Stupidly complex stuff (that people consider "standard" even if it's extremely complicated!), fighting against the computer, dumb errors, configuration, and stuff that people even worse than me implemented and I have to take care of. New stuff which is supposed to be incredibly easy, and it's just one more framework.
    </p>
    <p>
    I think I realized I don't want to program because I landed at a company where people are quite good. And I honestly think I won't achieve that level, ever. And I don't enjoy programming as a hobby.
    </p>
    <p>
    I'm sure that I'm good enough to be able to make a living continuing as I am … but I don't want to.
    </p>
    </blockquote>
    <p>
    And this:
    </p>
    <blockquote>
    <p>
    Since the first year of studying programming at university I have known in my heart that computer programming is not meant for me, but I was afraid to do anything about it and here I am now 12 years later programming with no passion. I am a career programmer and an average one at best.
    </p>
    <p>
    I come to work every day with no passion I just do it to pay the bills. I have done some good projects but I am not at all into it.
    </p>
    </blockquote>
    <p>
    It was always our hope that <b>concrete, substantive programming career questions</b> could be asked on Stack Overflow, and some <a href="http://meta.stackoverflow.com/questions/12373/which-types-of-programming-related-questions-are-appropriate">early ad-hoc polling</a> indicated that career questions might be accepted by the community, but if you look at <a href="http://meta.stackoverflow.com/questions/12373/which-types-of-programming-related-questions-are-appropriate">later poll results</a>, it's clear that the career questions came out <i>juuuust</i> under the cutoff point as determined by the Stack Overflow community.
    </p>
    <p>
    Well, what about the rest of the <a href="http://stackexchange.com/sites?view=list">Stack Exchange network</a>? How about our sister site at <a href="http://blog.stackoverflow.com/2010/12/introducing-programmers-stackexchange-com/">programmers.stackexchange</a> which is less about programming problems with source code and more about whiteboard style conceptual programming questions? Apparently, career questions are <a href="http://meta.programmers.stackexchange.com/questions/3828/canonical-what-can-i-do-with-my-programming-skills-if-im-weary-of-heads-down-c">not welcome there either</a>. But wait! Surely programmer career questions are a fit on a site that's explicitly <i>about</i> career related topics? The very same question was asked on <a href="http://workplace.stackexchange.com/">workplace.stackexchange</a>:
    </p>
    <p>
    </p>
    <blockquote>
    <p>I'm graduating soon with a Bachelor's in Software Engineering, however during the course of getting my degree I decided I do not want to be a programmer.</p>
    <p>I minored in Business Management and really enjoyed that, particularly the management side of psychology and the basics of the processes involved with restructuring a business, but don't really want to throw away my programming degree either.</p>
    <p>Is there a field for someone with a Software Engineering degree who wants to get into business management instead of programming? I'd like to combine my knowledge of making software with some kind of business process oriented work. How should I go about changing to this field? Is this possible without going back to school?</p>
    </blockquote>
    
    <a href="http://workplace.stackexchange.com/questions/2658/what-kind-of-business-fields-are-available-to-a-programmer-who-no-longer-wants-t">Nope. Sorry.</a> That was closed, too, either because it was seen as a 'recommend me a job' or because it's too specific to programming. Pick your interpretation.
    
    <p>
    I am sympathetic to this quandary because <b>career questions, by their very nature, tend to be so narrow and opinionated</b> that they are frequently only useful to the person who asked – which is completely counter to the goal of Stack Exchange. You know, endless permutations of things like "My boss Jeff is a total jerk, he constantly changes my code without asking and overrides me all the time with his BS arbitrary decisions, should I quit?"* I can understand deciding to outlaw the entire class of career questions because they're frequently soft, opinion-y, and highly specific to the person asking. It's easier to throw out the whole category rather than do the painful work of sifting through them all to reveal those few rare workable gems.
    </p>
    <p>
    Stack Exchange wants <b>questions that are as useful to as many people as possible</b>, and actively closes (sorry, <a href="http://meta.stackoverflow.com/questions/173497/every-close-has-its-thorn-replace-close-with-on-hold-for-the-first-five-d">"puts on hold"</a>) the ones that are not. I will now reprint my favorite diagram, ever, which attempts to explain this:
    </p>
    <p>
    <img alt="Who does your question apply to?" title="Who does your question apply to?" src="https://blog.codinghorror.com/content/images/uploads/2013/04/6a0120a85dcdae970b019101a6e7b7970c-800wi.png" border="0">
    </p>
    <p>
    The colored part in this target that says "All Programmers"? That's the goal at Stack Exchange. Well, maybe "all <a href="http://bicycles.stackexchange.com">bicyclists</a>", or "all <a href="http://cooking.stackexchange.com/">cooks</a>", but you get the general idea.
    </p>
    <p>
    We try our best to teach you to ask questions that hit this sweet spot: answers that get you the information you so desperately need, yes, but also help your peers along the way without devolving into <a href="http://www.codinghorror.com/blog/2009/03/procrastination-and-the-bikeshed-effect.html">meaningless opinion honeypots</a>. Overshoot and you get either "Too Broad" or "Too Localized". Hitting that target with our questions – or at least making a best faith effort to attempt to, anyway – is how we maximize the results of our collective efforts. Write once, read many.
    </p>
    <p>
    But back to the topic: <b>what career options are available to programmers who no longer want to program?</b> I feel there <i>is</i> a way to answer this question that would be helpful to many other programmers, that <i>is</i> supported by facts and data and science.
    </p>
    <p>
    Programming is indeed a field that <a href="http://www.codinghorror.com/blog/2008/12/programming-love-it-or-leave-it.html">does require some passion</a>. If you've been programming for a few years and haven't developed a taste for it by now, it seems doubtful to me that anyone would suddenly develop one overnight. However, if you were able to stick with doing something you're not very enthusiastic about for a period of years, maybe there's still a kernel of something there to work with. Or perhaps you're just wearing golden handcuffs.
    </p>
    <p>
    <img alt="Golden-handcuffs" title="Golden-handcuffs" src="https://blog.codinghorror.com/content/images/uploads/2013/04/6a0120a85dcdae970b017eeaaf686e970d-800wi.jpg" width="600" height="253">
    </p>
    <p>
    Environment plays a big part in any job, no matter <a href="http://online.wsj.com/article/SB10001424127887324874204578439154095008558.html">how intrinsically amazing that job might be</a>. Who do you work with? What are you working on? What kind of environment do you program in:
    </p>
    <ul>
    <li>A startup?</li>
    <li>A small business?</li>
    <li>A big business?</li>
    <li>A consultancy?</li>
    <li>Freelance?</li>
    </ul>
    <p>
    The "programming" in each of these situations, and the other peer programmers you'll be working with, will be radically different. Consider if the <i>environment</i> and <i>peers</i> may be the problem. Have you tried changing those up, first, before conclusively deciding you need to leave the field forever?
    </p>
    <p>
    Beyond that, there are lots of <b>related fields where programming skills are advantageous</b>, without having "sit down and write code all day" as part of the job description. So let's think. What jobs exist where …
    </p>
    <p>
    </p>
    <ol>
    <li>Programming skills and a deep technical background are typically in the hiring requirements.</li>
    <li>There is a documented record of ex-programmers moving into these positions and being successful.</li>
    <li>There are a reasonable number of such jobs available worldwide.</li>
    </ol>
    <p>
    Here's where I really wished I could have asked this on Stack Exchange, because I'd much rather <b>crowdsource data to support the above three points</b>, but the best I could come up with on my own is:
    </p>
    <ul>
    <li><a href="http://www.25hoursaday.com/weblog/CommentView.aspx?guid=25c92015-9172-4bc8-8f91-f901f8811aff">Product/Program Manager</a></li>
    <li>Project Manager</li>
    <li>QA / Testing (good testers are <a href="http://www.codinghorror.com/blog/2006/09/making-developers-cry-since-1995.html">worth their weight in gold</a>)</li>
    <li>Build Engineering (this stuff <a href="http://www.codinghorror.com/blog/2007/10/the-f5-key-is-not-a-build-process.html">is hard</a>)</li>
    <li>System Administrator</li>
    <li>Technical Sales</li>
    <li>Technical Writer</li>
    <li>Business Analyst / Programming Analyst</li>
    </ul>
    <p>
    In many of these roles, people that truly know the nuts and bolts of programming are quite rare. That's unfortunate, because a deep technical background lets you actually <i>understand</i> and explain what is going on, to customers, to business stakeholders, to peers on related teams. At the very least nobody can dazzle you with technical BS, because you're equipped to call their bluff.
    </p>
    <p>
    I've seen less "adept" programmers self-select into related roles at previous jobs and do very well, both financially and professionally. There is a <i>lot</i> of stuff that goes on around programming that is not heads down code writing, where your programming skills are a competitive advantage.
    </p>
    <p>
    Career questions are tough, because ultimately only you can decide what's right for you. But if you're a programmer who no longer likes to program, your technical background can at least <b>open the door to a number of related professions</b>.
    </p>
    <p>
    <small>* Yes, you should quit. Jeff is a total jerkface.</small>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2013-04-29T15:45:34.000Z</pubDate>
    <guid>https://blog.codinghorror.com/so-you-dont-want-to-be-a-programmer-after-all/</guid>
    </item>
    <item>
    <title>Why Ruby?</title>
    <link>https://blog.codinghorror.com/why-ruby/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I've been a Microsoft developer for decades now. I weaned myself on various flavors of <a href="http://www.codinghorror.com/blog/2008/04/everything-i-needed-to-know-about-programming-i-learned-from-basic.html">home computer Microsoft Basic</a>, and I got my first paid programming gigs in Microsoft FoxPro, Microsoft Access, and Microsoft Visual Basic. I have seen the future of programming, my friends, and it is terrible CRUD apps running on Wintel boxes!
    </p>
    <p>
    Of course, we went on to build Stack Overflow in Microsoft .NET. That's a big reason it's still as fast as it is. So one of the most frequently asked questions after we <a href="http://www.codinghorror.com/blog/2013/02/civilized-discourse-construction-kit.html">announced Discourse</a> was:
    </p>
    <p>
    </p>
    <blockquote>
    <p>Why didn't you build Discourse in .NET, too?</p>
    </blockquote>
    
    <p>
    Let me be clear about something: I <i>love</i> .NET. One of the greatest thrills of my professional career was getting the opportunity to place a Coding Horror sticker in the hand of <a href="http://en.wikipedia.org/wiki/Anders_Hejlsberg">Anders Hejlsberg</a>. Pardon my inner fanboy for a moment, but oh man I still get chills. There are maybe fifty world class computer language designers on the planet. Anders is the only one of them who built Turbo Pascal and Delphi. It is thanks to Anders' expert guidance that .NET started out such a remarkably well designed language – literally what Java should have been on every conceivable level – and has continued to evolve in remarkably practical ways over the last 10 years, leveraging the strengths of other influential dynamically typed languages.
    </p>
    <p>
    <img alt="Turbo-pascal" title="Turbo-pascal" src="https://blog.codinghorror.com/content/images/uploads/2013/03/6a0120a85dcdae970b017d42306e26970c-800wi.png" width="700" height="395">
    </p>
    <p>
    All that said, it's true that I intentionally chose <i>not</i> to use .NET for my next project. So you might expect to find an angry, righteous screed here about how much happier I am leaving the oppressive shackles of my Microsoft masters behind. <i>Free at last, free at least, thank God almighty I'm free at last!</i>
    </p>
    <p>
    Sorry. <a href="http://www.codinghorror.com/blog/2007/05/giving-up-on-microsoft.html">I already wrote that post five years ago</a>.
    </p>
    <p>
    Like any pragmatic programmer, I pick the appropriate tool for the job at hand. And as much as I may love .NET, <b>it would be an extraordinarily poor choice for an 100% open source project like Discourse.</b> Why? Three reasons, mainly:
    </p>
    <ol>
    <li>
    <p><b>The licensing.</b> My God, <i>the licensing</i>. It's not so much the money, as the infernal, mind-bending tax code level complexity involved in making sure all your software is properly licensed: determining what 'level' and 'edition' you are licensed at, who is licensed to use what, which servers are licensed... wait, what? Sorry, I passed out there for a minute when I was attacked by <a href="http://www.codinghorror.com/blog/2009/07/oh-you-wanted-awesome-edition.html">rabid licensing weasels</a>.</p>
    <p>
    I'm not inclined to make grand pronouncements about the future of software, but if anything kills off commercial software, let me tell you, it won't be open source software. They needn't bother. Commercial software will gleefully strangle itself to death on its own licensing terms.</p>
    </li>
    <li>
    <p><b>The friction</b>. If you want to build truly viable open source software, you need people to contribute to your project, so that it is a living, breathing, growing thing. And unless you can download all the software you need to hack on your project freely from all over the Internet, no strings attached, there's just … too much friction.
    </p>
    If Stack Overflow taught me anything, it is that we now live in a world where the next brilliant software engineer can come from anywhere on the planet. I'm talking places <a href="http://www.codinghorror.com/blog/2009/03/the-ugly-american-programmer.html">this ugly American programmer</a> has never heard of, where they speak crazy nonsense moon languages I can't understand. But get this. Stand back while I blow your mind, people: these brilliant programmers <i>still code in the same keywords we do!</i> I know, crazy, right?
    
    <p>
    Getting up and running with a Microsoft stack is just plain too hard for a developer in, say, Argentina, or Nepal, or Bulgaria. Open source operating systems, languages, and tool chains are the great equalizer, the basis for the next great generation of programmers all over the world who are going to help us change the world.</p>
    </li>
    <li>
    <p><b>The ecosystem</b>. When I was at Stack Exchange <a href="http://blog.stackoverflow.com/2012/02/stack-exchange-open-source-projects/">we strove mightily</a> to make as much of our infrastructure open source as we could. It was something that we made explicit in the compensation guidelines, this idea that we would all be (partially) judged by how much we could do in public, and try to leave behind as many useful, public artifacts of our work as we could. Because wasn't all of Stack Exchange itself, from the very first day, <a href="http://blog.stackoverflow.com/2009/06/stack-overflow-creative-commons-data-dump/">built on your Creative Commons contributions</a> that we all share ownership of?
    </p>
    <p>
    You can certainly build open source software in .NET. And many do. But it never feels natural. It never feels right. Nobody accepts your patch to a core .NET class library no matter how hard you try. It always feels like you're swimming upstream, in a world of small and large businesses using .NET that really aren't interested in sharing their code with the world – probably because they know it would suck if they did, anyway. It is just not a native part of the Microsoft .NET culture to make things open source, <i>especially not the things that suck</i>. If you are afraid the things you share will suck, that fear will render you incapable of truly and deeply giving back. The most, uh, delightful… bit of open source communities is how they aren't afraid to let it "all hang out", so to speak.
    </p>
    <p>
    So as a result, for any given task in .NET you might have – if you're lucky – a choice of maybe two decent-ish libraries. Whereas in any popular open source language, you'll <i>easily</i> have a dozen choices for the same task. Yeah, maybe six of them will be broken, obsolete, useless, or downright crazy. But hey, even factoring in some natural open source spoilage, you're still ahead by a factor of three! <i>A winner is you!</i>
    </p>
    </li>
    </ol>
    <p>
    As I wrote <a href="http://www.codinghorror.com/blog/2007/05/giving-up-on-microsoft.html">five years ago</a>:
    </p>
    <blockquote>
    I'm a pragmatist. For now, I choose to live in the Microsoft universe. But that doesn't mean I'm ignorant of how the other half lives. There's always more than one way to do it, and just because I chose one particular way doesn't make it the right way – or even a particularly good way. Choosing to be provincial and insular is a sure-fire path to ignorance. Learn how the other half lives. Get to know some developers who don't live in the exact same world you do. Find out what tools they're using, and why. If, after getting your feet wet on both sides of the fence, you decide the other half is living better and you want to join them, then I bid you a fond farewell.
    </blockquote>
    
    I no longer live in the Microsoft universe any more. Right, wrong, good, evil, that's just how it turned out for the project we wanted to build.
    
    <img alt="Im-ok-with-this" title="Im-ok-with-this" src="https://blog.codinghorror.com/content/images/uploads/2013/03/6a0120a85dcdae970b017c38010328970b-800wi.png" width="596" height="329">
    <p>
    However, I'd also be lying if I didn't mention that I truly believe the sort of project we are building in Discourse does represent most future software. If you squint your eyes a little, I think you can see a future not too far in the distance where .NET is a specialized niche outside the mainstream.
    </p>
    <p>
    But <b>why Ruby?</b> Well, the short and not very glamorous answer is that I had narrowed it down to either Python or Ruby, and my original co-founder <a href="http://eviltrout.com/">Robin Ward</a> has been building major Rails apps since 2006. So that clinched it.
    </p>
    <p>
    I've always been a little intrigued by Ruby, mostly because of <a href="https://sites.google.com/site/steveyegge2/tour-de-babel">the absolutely gushing praise Steve Yegge had for the language way back in 2006</a>. I've never forgotten this.
    </p>
    <blockquote>
    <p>
    For the most part, Ruby took Perl's string processing and Unix integration as-is, meaning the syntax is identical, and so right there, before anything else happens, you already have the Best of Perl. And that's a great start, especially if you don't take the Rest of Perl.
    </p>
    <p>
    But then Matz took the best of list processing from Lisp, and the best of OO from Smalltalk and other languages, and the best of iterators from CLU, and pretty much the best of everything from everyone.
    </p>
    <p>
    And he somehow made it all work together so well that you don't even notice that it has all that stuff. I learned Ruby faster than any other language, out of maybe 30 or 40 total; it took me about 3 days before I was more comfortable using Ruby than I was in Perl, after eight years of Perl hacking. It's so consistent that you start being able to guess how things will work, and you're right most of the time. It's beautiful. And fun. And practical.
    </p>
    </blockquote>
    <p>
    Steve is one of those polyglot programmers I <a href="http://www.codinghorror.com/blog/2012/07/but-you-did-not-persuade-me.html">respect so much</a> that I basically just take whatever his opinion is, provided it's not about something wacky like gun control or feminism or T'Pau, and accept it as fact.
    </p>
    <p>
    I apologize, Steve. I'm sorry it took me 7 years to get around to Ruby. But maybe I was better off waiting a while anyway:
    </p>
    <ul>
    <li>
    <p>
    Ruby is a decent performer, but you really need to <b>throw fast hardware at it for good performance</b>. Yeah, I know, <a href="http://www.codinghorror.com/blog/2006/02/the-day-performance-didnt-matter-any-more.html">interpreted languages are what they are</a>, and caching, database, network, blah blah blah. Still, we obtained the absolute fastest CPUs you could buy for the Discourse servers, 4.0 Ghz Ivy Bridge Xeons, and performance is just … <i>good</i> on today's fastest hardware. Not great. <i>Good.</i></p>
    <p>
    Yes, I'll admit that I am utterly spoiled by the JIT compiled performance of .NET. That's what I am used to.  I do sometimes pine away for the bad old days of .NET when we could build pages that serve in well under 50 milliseconds without thinking about it too hard. Interpreted languages aren't going to be able to reach those performance levels. But I can only imagine how rough Ruby performance had to be back in the dark ages of 2006 when CPUs and servers were <i>five times slower than they are today!</i> I'm so very glad that I am hitting Ruby now, with the strong wind of many solid years of Moore's law at our backs.</p>
    
    </li>
    <li>
    <p>
    Ruby is <b>maturing up nicely</b> in the <a href="http://www.ruby-lang.org/en/news/2013/02/24/ruby-2-0-0-p0-is-released/">2.0 language release</a>, which happened not more than a month after Discourse was announced. So, yes, the downside is that Ruby is slow. But the upside is there is a <i>lot</i> of low hanging performance fruit in Ruby-land. Like.. <i>a lot</i> a lot. On Discourse we got an across the board 20% performance improvement just upgrading to Ruby 2.0, and we nearly <i>doubled</i> our performance by <a href="http://meta.discourse.org/t/tuning-ruby-and-rails-for-discourse/4126">increasing the default Ruby garbage collection limit</a>. From a future performance perspective, Ruby is nothing but upside.
    </p>
    </li>
    <li>
    <p>
    Ruby <b>isn't cool any more</b>. Yeah, you heard me. It's not cool to write Ruby code any more. All the cool people moved on to slinging Scala and Node.js years ago. Our project isn't cool, it's just a bunch of boring old Ruby code. Personally, I'm <i>thrilled</i> that Ruby is now mature enough that the community no longer needs to bother with the pretense of being the coolest kid on the block. That means the rest of us who just like to Get Shit Done can roll up our sleeves and focus on the mission of building stuff with our peers rather than frantically running around trying to <a href="http://www.codinghorror.com/blog/2008/01/the-magpie-developer.html">suss out the next shiny thing</a>.
    </p>
    </li>
    </ul>
    <p>
    And of <i>course</i> the Ruby community is, and always has been, amazing. We never want for great open source gems and great open source contributors. Now is a fantastic time to get into Ruby, in my opinion, whatever your background is.
    </p>
    (However, It's also worth mentioning that Discourse is, if anything, even more of a <b>JavaScript project</b> than a Ruby on Rails project. Don't believe me? Just go to <a href="http://try.discourse.org">try.discourse.org</a> and view source. A Discourse forum is not so much a website as it is a full-blown JavaScript application that happens to run in your browser.)
    
    <p>
    Even if done in good will and for the best interests of the project, it's still a little scary to totally change your programming stripes overnight after two decades. I've always believed that great programmers learn to love more than one language and programming environment – and I hope the Discourse project is an opportunity for <i>everyone</i> to learn and grow, not just me. <b>So <a href="https://github.com/discourse/discourse">go fork us on GitHub</a> already!</b>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2013-03-22T01:34:08.000Z</pubDate>
    <guid>https://blog.codinghorror.com/why-ruby/</guid>
    </item>
    <item>
    <title>Civilized Discourse Construction Kit</title>
    <link>https://blog.codinghorror.com/civilized-discourse-construction-kit/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    Occasionally, startups will ask me for advice. That's a shame, because I am <a href="http://www.codinghorror.com/blog/2012/05/how-to-stop-sucking-and-be-awesome-instead.html">a terrible person to ask for advice</a>. The conversation usually goes something like this:
    </p>
    <blockquote>
    <p><i>We'd love to get your expert advice on our thing.</i></p>
    <p>I probably don't use your thing. Even if I tried your thing out and I gave you my <a href="http://www.codinghorror.com/blog/2009/02/are-you-an-expert.html">so-called Expert advice</a>, how would it matter? Anyway, why are you asking <i>me?</i> <b>Why don't you ask your community what <i>they</i> think of your thing?</b></p>
    <p>
    And if you don't have a community of users and customers around your thing, well, there's your problem right there. Go fix <i>that</i>.
    </p>
    </blockquote>
    <p>
    Like I said, I don't get asked for advice too often. But for what it's worth, it is serious advice. And the next question they ask always strikes fear into my heart.
    </p>
    <blockquote>
    <p><i>You're so right! We need a place for online community around our thing. What software should we use?</i></p>
    </blockquote>
    <p>
    This is the part where I start playing <a href="http://www.sadtrombone.com/">sad trombone</a> in my head. Because <b>all your software options for online community are, quite frankly, <i>terrible</i>.</b> Stack Exchange? We only do strict, focused Q&amp;A there and you'd have to marshal your proposal through <a href="http://area51.stackexchange.com/">Area 51</a>. Get Satisfaction, UserVoice, Desk, etcetera? Sorry, customer support isn't the same as community. Mailing lists? Just awful.</p>
    <p>Forum software? <i>Maybe.</i> Let's see, it's 2013, has forum software advanced at all in the last <i>ten years?</i>
    </p>
    <p>
    </p>
    <table>
    <tr>
    <td style="vertical-align: top">
    <a href="http://web.archive.org/web/20000815063701/http://boards.straightdope.com/sdmb/" style="border-bottom: none">
    <img alt="https://blog.codinghorror.com/content/images/uploads/2013/02/6a0120a85dcdae970b017ee834156c970d-800wi.png" width="365" height="208" alt="Straight Dope forums in 2000" title="Straight Dope forums in 2000" style="border:1px solid silver"></a>
    </td>
    <td style="vertical-align: top">
    <a href="http://boards.straightdope.com/sdmb/" style="border-bottom: none">
    <img alt="https://blog.codinghorror.com/content/images/uploads/2013/02/6a0120a85dcdae970b017c3690c747970b-pi.png" width="365" height="283" alt="Straight Dope forums in 2012" title="Straight Dope forums in 2013" style="border:1px solid silver">
    </a>
    </td>
    </tr>
    </table>
    
    <p>
    I'm thinking no.
    </p>
    <p>
    Forums are the dark matter of the web, the B-movies of the Internet. But they matter. To this day <b>I regularly get excellent search results on forum pages for stuff I'm interested in</b>. Rarely a day goes by that I don't end up on some forum, somewhere, looking for some obscure bit of information. And more often than not, I find it there.
    </p>
    <p>
    There's an amazing depth of information on forums.
    </p>
    <ul>
    <li>A 12 year old girl who finds a forum community of rabid enthusiasts willing to help her rebuild a Fiero from scratch? <a href="http://blog.makezine.com/2012/07/25/maker-faire-detroit-the-girl-who-plays-with-fieros-interview/">Check</a>.
    </li>
    <li>The most obsessive breakdown of Lego collectible minifig kits you'll find anywhere on the Internet? <a href="http://www.eurobricks.com/forum/index.php?showtopic=67132">Check</a>.
    </li>
    <li>Some of the most practical information on stunt kiting in the world? <a href="http://www.gwtwforum.com/">Check</a>.
    </li>
    <li>The only place I could find with scarily powerful squirt gun instructions and advice? <a href="http://www.waterwar.net/site_wwn/board/">Check</a>.
    </li>
    <li>The underlying research for a <a href="http://www.newyorker.com/reporting/2012/08/06/120806fa_fact_singer?currentPage=all">New Yorker article</a> outing a potential serial marathon cheater? <a href="http://www.letsrun.com/forum/flat_read.php?thread=3863010">Check</a>.
    </li>
    </ul>
    <p>
    I could go on and on. As much as existing forum software is inexplicably and terrifyingly awful after all these years, it is still the ongoing basis for a huge chunk of deeply interesting information on the Internet. These communities are incredibly passionate about incredibly obscure things. They aren't afraid to let their freak flag fly, and the world is a better place for it.
    </p>
    <p>
    At Stack Exchange, one of the tricky things we learned about Q&amp;A is that if your goal is to have an excellent signal to noise ratio, <b>you <i>must</i> suppress discussion.</b> Stack Exchange only supports the absolute minimum amount of discussion necessary to produce great questions and great answers. That's why answers get constantly re-ordered by votes, that's why comments have limited formatting and length and only a few display, and so forth. Almost every design decision we made was informed by our desire to push discussion down, to inhibit it in every way we could. Spare us the long-winded diatribe, just <i>answer the damn question already</i>.
    </p>
    <p>
    After spending four solid years thinking of discussion as the established corrupt empire, and <a href="http://blog.stackoverflow.com/2009/05/the-stack-overflow-trilogy/">Stack Exchange as the scrappy rebel alliance</a>, I began to wonder – what would it feel like to change sides? What if I became a champion of random, arbitrary discussion, of the very kind that I'd spent four years designing against and constantly lecturing users on the evil of?
    </p>
    <p>
    I already built an X-Wing; could I build a better Tie Fighter?
    </p>
    <p>
    <img alt="Tie-fighter" title="Tie-fighter" src="https://blog.codinghorror.com/content/images/uploads/2013/02/6a0120a85dcdae970b017ee83490ac970d-800wi.png" border="0">
    </p>
    <p>
    If you're wondering what all those sly references to Tie Fighters were about in my previous blog posts and <a href="https://twitter.com/codinghorror">tweets</a>, now you know. All hail the Emperor, and by the way, what's your favorite programming food?
    </p>
    <p>
    Today we announce the launch of <a href="http://www.discourse.org">Discourse</a>, a next-generation, 100% open source discussion platform built for the next decade of the Internet.
    </p>
    <p>
    <a href="http://www.discourse.org"><img alt="Discourse-logo-big" title="Discourse-logo-big" src="https://blog.codinghorror.com/content/images/uploads/2013/02/6a0120a85dcdae970b017ee8349f31970d-800wi.png"></a>
    </p>
    <p>
    The goal of the company we formed, <b>Civilized Discourse Construction Kit, Inc.</b>, is exactly that – to raise the standard of civilized discourse on the Internet through seeding it with better discussion software:
    </p>
    <ul>
    <li>100% open source and free to the world, now and forever.
    </li>
    <li>Feels <i>great</i> to use. It's fun.
    </li>
    <li>Designed for hi-resolution tablets and advanced web browsers.
    </li>
    <li>Built in moderation and governance systems that let discussion communities protect themselves from trolls, spammers, and bad actors – even without official moderators.
    </li>
    </ul>
    
    <p>
    Our <a href="http://blog.discourse.org/2013/02/the-discourse-team/">amazingly talented team</a> has been working on Discourse for almost a year now, and although like any open source software it's never entirely <i>done</i>, we believe it is already a generation ahead of any other forum software we've used.
    </p>
    <p>
    I greatly admire what WordPress did for the web; to say that we want to be the WordPress of forums is not a stretch at all. We're also serious about this eventually being a viable open-source <i>business</i>, <a href="http://mashable.com/2011/06/01/wordpress-business-models/">in the mold of WordPress</a>. And we're not the only people who believe in the mission: I'm proud to announce that we have initial venture capital funding from <a href="http://www.firstround.com/">First Round</a>, <a href="http://www.greylock.com/">Greylock</a>, and <a href="http://svangel.com/">SV Angel</a>. We're embarking on a five year mission to improve the fabric of the Internet, and we're just getting started. <b>Let a million discussions bloom!</b>
    </p>
    <p>
    So now, when someone says to me …
    </p>
    <blockquote>
    <p><i>You're so right! We need a place for community around our thing. What software should we use?</i></p>
    </blockquote>
    <p>
    I can reply without hesitation.
    </p>
    <p>
    And hopefully, so can you.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2013-02-05T11:59:53.000Z</pubDate>
    <guid>https://blog.codinghorror.com/civilized-discourse-construction-kit/</guid>
    </item>
    <item>
    <title>The End of Ragequitting</title>
    <link>https://blog.codinghorror.com/the-end-of-ragequitting/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    When Joel Spolsky, my business partner on Stack Overflow and Stack Exchange, asked me what I wanted to do after <a href="http://www.codinghorror.com/blog/2012/02/farewell-stack-exchange.html">I left Stack Exchange</a>, I distinctly remember mentioning <a href="http://en.wikipedia.org/wiki/Aaron_Swartz">Aaron Swartz</a>. That's what Aaron was to us hackers: <b>an exemplar of the noble, selfless behavior and positive action that all hackers <i>aspire</i> to</b> – but very few actually achieve.
    </p>
    <p>
    And now, tragically, Aaron is gone at the tender age of 26. He won't be achieving anything any more.
    </p>
    <p>
    I never knew Aaron, but I <i>knew</i> Aaron.
    </p>
    <p>
    <a href="http://stackoverflow.com/users/4300/aaronsw"><img alt="Aaron-swartz-stack-overflow" title="Aaron-swartz-stack-overflow" src="https://blog.codinghorror.com/content/images/uploads/2013/01/6a0120a85dcdae970b017d404980a4970c-800wi.png" border="0"></a>
    </p>
    <p>
    Most of all, I am disappointed.
    </p>
    <p>
    I'm deeply disappointed in <b>myself</b>, for not understanding just how bitterly unfair the government charges were against Aaron. Perhaps the full, grotesque details couldn't be revealed for a pending legal case. But we should have been outraged. I am gutted that I did not contribute to his defense in any way, either financially or by writing about it here. I blindly assumed he would prevail, as powerful activists on the side of fairness, openness, and freedom are fortunate enough to often do in our country. I was wrong.
    </p>
    <p>
    I'm disappointed in our <b>government</b>, for going to such lengths to make an example of someone who was so obviously a positive force. Someone who actively worked to change the world for the better in everything he did, starting from the age of 12. There was no evil in this man. And yet the absurd government case against him was cited by his family as <a href="http://www.latimes.com/news/obituaries/la-me-0113-aaron-swartz-20130113,0,5232490.story">directly contributing to his death</a>.
    </p>
    <p>
    I'm frustrated by the idea that <b>martyrdom</b> works. The death of Aaron Swartz is now turning into <a href="http://www.theatlantic.com/technology/archive/2013/01/aarons-law-violating-a-sites-terms-of-service-should-not-land-you-in-jail/267247/">an effective tool for change</a>, a rallying cry, proving the perverse lesson that nobody takes an issue seriously until a great person dies for the cause. The idea that Aaron killing himself <i>was a viable strategy</i>, more than going on to prevail in this matter and so many more in his lifetime, makes me incredibly angry.
    </p>
    <p>
    But also, I must admit that I am a little disappointed in <b>Aaron</b>. I understand that depression is a serious disease that can fell any person, however strong. But he chose the path of the activist long ago. And the path of the activist is to <i>fight</i>, for as long and as hard as it takes, to effect change. Aaron had powerful friends, a powerful support network, and a keen sense of moral cause that put him in the right. That's how he got that support network of powerful friends and fellow activists in the first place.
    </p>
    <p>
    It is appropriate to write about Aaron on Martin Luther King day, because he too was <a href="http://www.africa.upenn.edu/Articles_Gen/Letter_Birmingham.html">a tireless activist for moral causes</a>.
    </p>
    <blockquote>
    I hope you are able to see the distinction I am trying to point out. In no sense do I advocate evading or defying the law, as would the rabid segregationist. That would lead to anarchy. <b>One who breaks an unjust law must do so openly, lovingly, and with a willingness to accept the penalty.</b> I submit that an individual who breaks a law that conscience tells him is unjust, and who willingly accepts the penalty of imprisonment in order to arouse the conscience of the community over its injustice, is in reality expressing the highest respect for law.
    </blockquote>
    <p>
    Let's be clear that the penalty in Aaron's case was <i>grossly</i> unfair, <a href="http://harpers.org/blog/2013/01/carmen-ortiz-strikes-out/">bordering on corrupt</a>. I've been a part of <a href="http://www.codinghorror.com/blog/2012/09/somebody-is-to-blame-for-this.html">exactly one trial</a>, but I can't even imagine having the full resources of the US Government brought to bear against me, with extreme prejudice, for a year or more. His defense was estimated to cost millions. The idea that such an engaged citizen would be forever branded a felon – serving at least some jail time and stripped of the most fundamental citizenship right, the ability to vote – must have weighed heavily on Aaron. And Aaron was no stranger to depresson, having written about it on his blog many times, even penning a public will of sorts on his blog all the way back in 2002.
    </p>
    <p>
    I think about <a href="http://knowyourmeme.com/memes/rage-quit">ragequitting</a> a lot.
    </p>
    <blockquote>
    Rage Quit, also seen as RageQuit in one word, is Internet slang commonly used to describe the act of suddenly quitting a game or chatroom after either an argument, extreme frustration, or loss of the game.
    </blockquote>
    <p>
    At least one user ragequits Stack Exchange every six months, because our rules are strict. Some people don't like rules, and can respond poorly when confronted by the rules of the game they choose to play. It came up often enough that we had to create even more rules to deal with it. I was forced to think about ragequitting.
    </p>
    <p>
    </p>
    I was very angry with <a href="http://en.wikipedia.org/wiki/Mark_Pilgrim_(software_developer)#.22Disappearance.22_from_the_Internet">Mark Pilgrim</a> and <a href="http://en.wikipedia.org/wiki/Why_the_lucky_stiff">_why</a> for ragequitting the Internet, because they also took all their content offline – they got so frustrated that they took their ball and went home, so nobody else could play. How incredibly rude. Ragequitting is childish, a sign of immaturity. But it is another thing entirely to play the final move and take your own life. To declare the end of this game and all future games, <b>the end of ragequitting itself</b>.
    
    <p>
    I say this not as a person who wishes to judge Aaron Swartz. I say it as a fellow gamer who has also considered playing the same move quite recently. To the point that I – like Aaron himself, I am sure – was actively researching it. But the more I researched, the more I thought about it, the more it <a href="http://www.cracked.com/article_15658_the-ten-minute-suicide-guide.html">felt like what it really was</a>: <i>giving up</i>. And the toll on friends and family would be unimaginably, unbearably heavy.
    </p>
    <p>
    What happened to Aaron was not fair. Not even a little. But <i>this is the path of the activist</i>. The greater the injustice, the greater wrong undone when you ultimately prevail. And I am convinced, absolutely and utterly convinced, that Aaron <i>would</i> have prevailed. He would have gone on to do so many other great things. It is our great failing that we did not provide Aaron the support network he needed to see this. All we can do now is <a href="http://www.plainsite.org/asymptote/index.html">continue the mission he started</a> and lobby for change to our <a href="http://www.forbes.com/sites/timothylee/2013/01/17/aaron-swartz-and-the-corrupt-practice-of-plea-bargaining/">corrupt government practices of forcing plea bargains</a>.
    </p>
    <p>
    It gets dark sometimes. I know it does. I'm right there with you. <b>But do not, under any circumstances, give anyone the satisfaction of seeing you ragequit.</b> They don't deserve it. Play other, better moves – and consider your long game.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2013-01-21T13:10:12.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-end-of-ragequitting/</guid>
    </item>
    <item>
    <title>Web Discussions: Flat by Design</title>
    <link>https://blog.codinghorror.com/web-discussions-flat-by-design/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    It's been six years since I wrote <a href="http://www.codinghorror.com/blog/2006/11/discussions-flat-or-threaded.html">Discussions: Flat or Threaded?</a> and, despite a bunch of evolution on the web since then, my opinion on this has not fundamentally changed.
    </p>
    <p>
    If anything, my opinion has strengthened based on the observed data: <i>precious few threaded discussion models survive on the web</i>. Putting aside Usenet as a relic and artifact of the past, it is rare to find threaded discussions of any kind on the web today; for web discussion communities that are more than ten years old, the vast majority are flat as a pancake.
    </p>
    <p>
    I'm game for trying anything new, I mean, I even tried <i>Google Wave</i>. But the more I've used threaded discussions of any variety, the less I like them. I find precious few redeeming qualities, while threading tends to break crucial parts of discussion like reading and replying in deep, fundamental, unfixable ways. I have yet to discover a threaded discussion design that I can tolerate long term.
    </p>
    <p>
    A part of me says this is software Darwinism in action: <b>threaded discussion is ultimately too complex to survive on the public Internet</b>.
    </p>
    <p>
    <a href="http://news.ycombinator.com/item?id=4887447"><img alt="Hacker-news-threading" title="Hacker-news-threading" src="https://blog.codinghorror.com/content/images/uploads/2012/12/6a0120a85dcdae970b017d3ec46626970c-800wi.png" width="720" height="837"></a><br>
    </p>
    <p>
    Before threaded discussion fans bring out their pitchforks and torches, I fully acknowledge that <i>aspects</i> of threading can be useful in certain specific situations. I will get to that. I know I'm probably wasting my time even attempting to say this, but please: keep reading before commenting. Ideally, read the <i>whole article</i> before commenting. Like Parappa, <a href="http://en.wikipedia.org/wiki/PaRappa_the_Rapper">I gotta believe!</a>
    </p>
    <p>
    Before I defend threaded discussion, let's enumerate the many problems it brings to the table:
    </p>
    <ol>
    <li>
    <b>It's a tree</b>. <br>
    <p>
    Poems about trees are indeed lovely, as Joyce Kilmer promised us, but <a href="http://www.codinghorror.com/blog/2005/03/trees-treeviews-and-ui.html">data of any kind represented as a tree … isn't</a>. Rigid hierarchy is generally not how the human mind works, and the strict parent-child relationship it enforces is particularly terrible for fluid human group discussion. Browsing a tree is complicated, because you have to constantly think about what level you're at, what's expanded, what's collapsed … there's always this looming existential crisis of <i>where the heck am I?</i> Discussion trees force me to spend too much time mentally managing that two-dimensional tree more than the underlying discussion.
    </p>
    </li>
    <li>
    <b>Where did that reply go?</b><br>
    <p>In a threaded discussion, replies can arrive any place in the tree at any time. How do you know if there are new replies? Where do you find them? Only if you happen to be browsing the tree at the right place at the right time. It's annoying to follow discussions over time when new posts keep popping up anywhere in the middle of the big reply tree. And God help you if you accidentally reply at the wrong level of the tree; then you're suddenly talking to the wrong person, or maybe nobody at all. It absolutely <i>kills</i> me that there might be amazing, insightful responses buried somewhere in the middle of a reply chain that I will never be able to find.</p>
    </li>
    <li>
    <b>It pushes discussion off your screen</b>.<br>
    <p>
    So the first reply is indented under the post. Fair enough; how else would you know that one post is a reply to another post? But this indentation game <i>doesn't ever end</i>. Reply long and hard enough and you've either made the content column impossibly narrow, or you've pushed the content to exit, stage right. That's how endless pedantic responses-to-responses ruin the discussion for everyone. When we play the "indent everything to the right" game, everyone loses. It is natural to scroll <i>down</i> on the web, but it is utterly unnatural to scroll <i>right</i>. Indentation takes the discussion in the wrong direction.
    </p>
    </li>
    <li>
    <b>You're talking to everyone.</b><br>
    <p>
    You think because you clicked "reply" and your post is indented under the person you're replying to, that your post is talking only to that person? That's so romantic. Maybe the two of you should get a room. A special, private room at the far, far, far, far, <i>far</i> right of that threaded discussion. This illusion that you are talking to one other person ends up harming the discussion for everyone by polluting the tree with these massive narrow branches that are constantly in the way.
    </p>
    <p>
    At an absolute minimum you're addressing everyone else in that discussion, but in reality, you're talking to anyone who will listen, for all time. Composing your reply as if it is a reply to just one person is a quaint artifact of a world that doesn't exist any more. Every public post you make on the Internet, reply or not, is actually talking to <i>everyone who will ever read it</i>. It'd be helpful if the systems we used for discussion made that clear, rather than maintaining this harmful pretense of private conversations in a public space.
    </p>
    </li>
    <li>
    <b>I just want to scroll down.</b>
    <p>
    Reddit (and to a lesser extent, Hacker News) are probably the best known examples of threaded comments applied to a large audience. While I find Reddit so much more tolerable than the bad old days of Digg, I can still barely force myself to wade through the discussions there, because it's so much darn <i>work</i>. As a lazy reader, I feel I've already done my part by deciding to enter the thread; after that all I should need to do is scroll or swipe down.</p>
    <p>Take <a href="http://www.reddit.com/r/pics/comments/14svrt/my_little_brother_had_an_interesting_night/">what's on the top of reddit right now</a>. It's a cool picture; who wouldn't want to meet Steve Martin and Morgan Freeman? But what's the context? Who is this kid? How did he get so lucky? To find out, I need to collapse and suppress dozens of random meaningless tangents, and the replies-to-tangents, by clicking the little minus symbol next to each one. So that's what I'm doing: reading a little, deciding that tangent is not useful or interesting, and clicking it to get rid of it. Then I arrive at the end and find out that information wasn't even in the topic, or at least I couldn't find it. I'm OK with scrolling down to find information and/or entertainment, to a point. What I object to is the menial labor of collapsing and expanding threaded portions of the topic as I read. Despite what the people posting them might think, those tangents aren't so terribly important that they're worth making me, and every other reader, act on them.</p>
    </li>
    </ol>
    <p>
    Full bore, no-holds-barred threading is an unmitigated usability disaster for discussion, everywhere I've encountered it. But what if we didn't commit to this idea of threaded discussion quite so wholeheartedly?
    </p>
    <p>
    The most important guidance for non-destructive use of threading is to <b>put a hard cap on the level of replies that you allow</b>. Although <a href="http://meta.stackoverflow.com/questions/92107/is-stack-overflow-a-forum">Stack Exchange is not a discussion system</a> – it's actually the <i>opposite</i> of a discussion system, which we have to explain to people all the time – we did allow, in essence, one level of threading. There are questions and answers, yes, but underneath each of those, in smaller type, are the comments.
    </p>
    <p>
    <a href="http://wordpress.stackexchange.com/questions/74519/how-to-create-editable-blocks-of-text-for-the-homepage"><img alt="Stack-exchange-threading" title="Stack-exchange-threading" src="https://blog.codinghorror.com/content/images/uploads/2012/12/6a0120a85dcdae970b017ee63983db970d-800wi.png" width="720" height="787"></a>
    </p>
    <p>
    Now there's a bunch of hard-core discussion sociology here that I don't want to get into, like different rules for comments, special limitations for comments, only showing the top n of comments by default, and so forth. What matters is that we allow <b>one level of replies and that's it</b>. Want to reply to a comment? You can, but it'll be at the same level. You can go no deeper. This is by design, but remember: <i>Stack Exchange is not a discussion system</i>. It's a question and answer system. If you build your Q&amp;A system like a discussion system, it will devolve into Yahoo Answers, or even worse, Quora. Just kidding Quora. <a href="http://www.quora.com/What-did-Jesus-farts-probably-smell-like">You're great</a>.
    </p>
    <p>
    Would Hacker News be a better place for discussion if they capped reply level? Would Reddit? From my perspective as a poor, harried reader and very occasional participant, absolutely. There are many chronic problems with threaded discussion, but capping reply depth is the easiest way to take a giant step in the right direction.
    </p>
    <p>
    Another idea is to let posts bring their context with them. This is one of the things that Twitter, the company that always does everything wrong and succeeds anyway, gets … shockingly right out of the gate. When I view <a href="https://twitter.com/codinghorror/status/276413253209448449">one of my tweets</a>, it can stand alone, as it should. But it can also bring some context along with it on demand:
    </p>
    <p>
    <a href="https://twitter.com/codinghorror/status/276413253209448449"><img class="asset  asset-image at-xid-6a0120a85dcdae970b017ee6399d08970d image-full" alt="Twitter-threading" title="Twitter-threading" src="https://blog.codinghorror.com/content/images/uploads/2012/12/6a0120a85dcdae970b017ee6399d08970d-800wi.png" width="600" height="961"></a>
    </p>
    <p>
    Here you can see how <a href="https://twitter.com/codinghorror/status/276413253209448449">my tweet</a> can be  expanded with a direct link or click to show the necessary context for the conversation. But it'll only show three levels: the post, my reply to the post, and replies to my post. This idea that tweets – and thus, conversations – should be mostly standalone is not well understood, but it illustrates how Twitter got the <i>original concept</i> so fundamentally right. I guess that's why they can get away with the terrible execution.
    </p>
    <p>
    I believe <b>selective and judicious use of threading</b> is the only way it <i>can</i> work for discussion. You should be wary of threading as a general purpose solution for human discussions. Always favor simple, flat discussions instead.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-12-13T17:24:02.000Z</pubDate>
    <guid>https://blog.codinghorror.com/web-discussions-flat-by-design/</guid>
    </item>
    <item>
    <title>The Organism Will Do Whatever It Damn Well Pleases</title>
    <link>https://blog.codinghorror.com/the-organism-will-do-what-it-damn-well-pleases/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    In the go-go world of software development, we're so consumed with <a href="http://www.codinghorror.com/blog/2007/06/learning-or-learning-how-to-learn.html">learning new things</a>, so <a href="http://www.codinghorror.com/blog/2008/01/the-magpie-developer.html">fascinated with the procession of shiny new objects</a> that I think we sometimes lose sight of our history. I don't mean the big era-defining successes. Everyone knows those stories. I'm talking about the things we've tried before that … didn't quite work out. The failures. The also-rans. The noble experiments. The crazy plans.
    </p>
    <p>
    I'm all for <a href="http://www.codinghorror.com/blog/2009/02/dont-reinvent-the-wheel-unless-you-plan-on-learning-more-about-wheels.html">reinventing the wheel</a>, because it's one of the best ways to learn. But you shouldn't even <i>think</i> about reinventing a damn thing <b>until you've exhaustively researched every single last wheel, old or new, working or broken, that you can lay your hands on.</b> Do your homework.
    </p>
    <p>
    That's why I love unearthing stories like <a href="http://www.fudco.com/chip/lessons.html">The Lessons of Lucasfilm's Habitat</a>. It's basically World of Warcraft … in 1985.
    </p>
    <p>
    </p>
    <blockquote>
    <p><a href="http://en.wikipedia.org/wiki/Habitat_(video_game)">Habitat</a> is "a multi-participant online virtual environment," a cyberspace.</p>
    <p><img alt="Habitat" title="Habitat" src="https://blog.codinghorror.com/content/images/uploads/2012/12/6a0120a85dcdae970b017c3424c4d8970b-800wi.png" width="320" height="240" valign="right"></p>
    <p>
    Each participant ("player") uses a home computer (Commodore 64) as an intelligent, interactive client, communicating via modem and telephone over a commercial packet-switching network to a centralized, mainframe host system. The client software provides the user interface, generating a real-time animated display of what is going on and translating input from the player into messages to the host. The host maintains the system's world model enforcing the rules and keeping each player's client informed about the constantly changing state of the universe.
    </p>
    </blockquote>
    <p>
    This was the dark ages of home computing. In 1985, that 64k of memory in a Commodore 64 was a <i>lot</i>. The entirety of Turbo Pascal 3.02 for DOS, released a year later in 1986, <a href="http://prog21.dadgum.com/116.html">was barely 40k</a>.
    </p>
    The very concept of a multiplayer virtual world of any kind – something we take for granted today, since every modern website is essentially a multiplayer game now — was incredibly exotic. Look at the painstaking explanation Lucasfilm had to produce to even get folks to understand what the heck Habitat was, and how it worked:
    
    <iframe width="480" height="360" src="http://www.youtube.com/embed/VVpulhO3jyc" frameborder="0" allowfullscreen></iframe>
    <p>
    The technical information in <a href="http://www.fudco.com/chip/lessons.html">The Lessons of Lucasfilm's Habitat</a> is incredibly dated, as you'd expect, and barely useful even as trivia. But the sociological lessons of Habitat cut to the bone. They're as fresh today as they were in 1985. Computers have radically changed in the intervening 27 years, whereas people's behavior hasn't. At all. This particular passage hit home:
    </p>
    <blockquote>
    Again and again we found that activities based on often unconscious assumptions about player behavior had completely unexpected outcomes (when they were not simply outright failures). It was clear that we were not in control. The more people we involved in something, the less in control we were. <b>We could influence things, we could set up interesting situations, we could provide opportunities for things to happen, but we could not predict nor dictate the outcome.</b> Social engineering is, at best, an inexact science, even in proto-cyberspaces. Or, as some wag once said, "in the most carefully constructed experiment under the most carefully controlled conditions, the organism will do whatever it damn well pleases."
    </blockquote>
    <p>
    Even more specifically:
    </p>
    <blockquote>
    Propelled by these experiences, we shifted into a style of operations in which we let the players themselves drive the direction of the design. This proved far more effective. <b>Instead of trying to push the community in the direction we thought it should go, an exercise rather like herding mice, we tried to observe what people were doing and aid them in it.</b> We became facilitators as much as designers and implementors. This often meant adding new features and new regions to the system at a frantic pace, but almost all of what we added was used and appreciated, since it was well matched to people's needs and desires. As the experts on how the system worked, we could often suggest new activities for people to try or ways of doing things that people might not have thought of. In this way we were able to have considerable influence on the system's development in spite of the fact that we didn't really hold the steering wheel -- more influence, in fact, than we had had when we were operating under the delusion that we controlled everything.
    </blockquote>
    <p>
    That's exactly what I was trying to say in <a href="http://www.codinghorror.com/blog/2012/02/listen-to-your-community-but-dont-let-them-tell-you-what-to-do.html">Listen to Your Community, But Don't Let Them Tell You What to Do</a>. Unfortunately, because I hadn't read this essay until a few months ago, I figured this important lesson out <i>25 years later</i> than Randy Farmer and Chip Morningstar. So many Stack Overflow features were the direct result of observing what the community was doing, then attempting to aid them in it:
    </p>
    <ul>
    <li>We noticed early in the Stack Overflow beta that users desperately wanted to reply to each other, and were cluttering up the system with "answers" that were, well, not answers to the question. Rather than chastize them for doing it wrong – <i>stupid users!</i> – we added the commenting system to give them a method of annotating answers and questions for clarifications, updates, and improvements.<br><br>
    </li>
    <li>I didn't think it was necessary to have a place to discuss Stack Overflow. And I was … kind of a jerk about it. The community was on the verge of creating a phpBB forum instance to discuss Stack Overflow. Faced with a nuclear ultimatum, I relented, and you know what? <a href="http://www.codinghorror.com/blog/2009/07/meta-is-murder.html">They were right</a>. And I was wrong.<br><br>
    </li>
    <li>The community came up with an interesting convention for <a href="http://blog.stackoverflow.com/2009/04/handling-duplicate-questions/">handling duplicate questions</a>, by manually editing a blockquote into the top of the question with a link to the authoritative question that it was a duplicate of. This little user editing convention eventually became the template for the official implementation.
    </li>
    </ul>
    <p>
    I could go on and on, but I won't bore you. I'd say for every 3 features we introduced on Stack Overflow, at least two of them came more or less directly from observing the community, then trying to run alongside them, building tools that <b>helped them do what they wanted to do with less fuss and effort</b>. That was my job for the last four years. And I loved it, until I had to <a href="http://www.codinghorror.com/blog/2012/02/farewell-stack-exchange.html">stop loving it</a>.
    </p>
    <p>
    <a href="http://en.wikipedia.org/wiki/Randy_Farmer">Randy Farmer</a>, one of the primary designers of Habitat at Lucasfilm, went on to work on a bunch of things that you may recognize: with <a href="http://en.wikipedia.org/wiki/Douglas_Crockford#Career">Douglas Crockford</a> on JSON, The Sims Online, Second Life, Yahoo 360°, Yahoo Answers, Answers.com, and so forth. He eventually condensed some of his experience into a book, <a href="http://www.amazon.com/dp/059615979X/?tag=codihorr-20">Building Web Reputation Systems</a>, which I bought in April 2011 as a Kindle edition. I didn't know who Mr. Farmer was at this time. I just saw a new O'Reilly book on an area of interest, and I thought I'd check it out.
    </p>
    <p>
    <a href="http://www.amazon.com/dp/059615979X/?tag=codihorr-20"><img alt="Building-web-reputation-systems" title="Building-web-reputation-systems" src="https://blog.codinghorror.com/content/images/uploads/2012/12/6a0120a85dcdae970b017d3e54363b970c-800wi.png" width="400" height="525"></a>
    </p>
    <p>
    As the co-founder of Stack Overflow, I know a thing or two about web reputation systems! Out of curiosity, I looked up the author on my own site. And <a href="http://stackoverflow.com/users/523113/f-randall-farmer">I found him</a>, with a <i>tiny</i> reputation. So I sent this friendly jibe on Twitter:
    </p>
    <p>
    <a href="https://twitter.com/frandallfarmer/status/57612082752925696"><img alt="pff, look at @frandallfarmer's tiny rep! look at it!" title="pff, look at @frandallfarmer's tiny rep! look at it!" src="https://blog.codinghorror.com/content/images/uploads/2012/12/6a0120a85dcdae970b017d3e5422dd970c-800wi.png" width="643" height="335"></a>
    </p>
    <p>
    But the last laugh was on Randy, as it should be, because I didn't realize he had over <a href="http://rpg.stackexchange.com/users/810/f-randall-farmer">6,000 reputation</a> on <a href="http://rpg.stackexchange.com">rpg.stackexchange.com</a>. Turns out, Randy Farmer was already an avid Stack Exchange user. And, as you might guess given his background, a rather <i>expert</i> Stack Exchange user at that. The Stack Exchange ruleset is complex, strict, and requires discipline to understand. Kind of like.. maybe a <i>certain role playing game</i>, if you will.
    </p>
    <p>
    <a href="http://www.reddit.com/r/rpg/comments/xiwir/about_30_years_ago_my_dad_had_his_first_edition/"><img alt="Advanced-dungeons-and-dragons" title="Advanced-dungeons-and-dragons" src="https://blog.codinghorror.com/content/images/uploads/2012/12/6a0120a85dcdae970b017ee5cb84ec970d-800wi.jpg" width="500" height="555"></a>
    </p>
    <p>
    Randy is the sort of dad who <a href="http://www.reddit.com/r/rpg/comments/xiwir/about_30_years_ago_my_dad_had_his_first_edition/">had his first edition Dungeons &amp; Dragons books bound into a single leather tome and handed it down to his son as a family heirloom</a>. How awesome is that?
    </p>
    <p>
    If we've learned anything in the last 25 years since Habitat, it is that <b>people are the source of, and solution to, all the problems you'll run into when building social software</b>. Are you looking to (dungeon) master the art of guiding and nudging your online community through their collective adventure, without violating the continuity of your own little universe? If so, you could do a whole heck of lot worse than reading <a href="http://www.amazon.com/dp/059615979X/?tag=codihorr-20">Building Web Reputation Systems</a> and following <a href="https://twitter.com/frandallfarmer">@FRandallFarmer</a> on Twitter.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-12-01T01:28:35.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-organism-will-do-what-it-damn-well-pleases/</guid>
    </item>
    <item>
    <title>For a Bit of Colored Ribbon</title>
    <link>https://blog.codinghorror.com/for-a-bit-of-colored-ribbon/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    For the last year or so, I've been getting these two page energy assessment reports in the mail from Pacific Gas &amp; Electric, our California utility company, comparing our household's energy use to those of the houses around us.
    </p>
    <p>
    </p>
    <p>
    Here's the relevant excerpts from the latest report; click through for a full-page view of each page.
    </p>
    <p>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3e2b150d970c-pi"><img alt="Pge-page-1-small" title="Pge-page-1-small" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017c33fc34b6970b-800wi.png" width="720" height="293" style="border: 1px solid silver"></a>
    </p>
    <p>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3e2b11b4970c-pi"><img alt="Pge-page-2-small" title="Pge-page-2-small" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017c33fc369f970b-800wi.png" width="720" height="261" style="border: 1px solid silver"></a>
    </p>
    <p>
    These poor results are particularly galling because I go far out of my way to Energy Star all the things, I use LED light bulbs just about everywhere, we set our thermostat appropriately, and we're <i>still</i> getting crushed. I have no particular reason to care about this stupid energy assessment report showing our household using 33% more energy than similar homes in our neighborhood. <b>And yet… I must win this contest</b>. I can't let it go.
    </p>
    <ul>
    <li>Installed a <a href="http://www.amazon.com/dp/B009GDHYPQ/?tag=codihorr-20">Nest 2.0 learning thermostat</a>.
    </li>
    <li>I made sure every last bulb in our house that gets any significant use is LED. Fortunately there are some <i>very</i> good <a href="http://www.amazon.com/dp/B00DLI7TXO?tag=codihorr-20">$10 LED bulbs on Amazon now</a> offering excellent 60 watt equivalents at 9 watt, without any of those pesky early adopter LED quirks (color, dimming, size, weight, etc).
    </li>
    <li>I even put <a href="http://www.amazon.com/dp/B004UGPUUK/?tag=codihorr-20">appliance LED bulbs</a> in our refrigerator and freezer.
    </li>
    <li>Switched to a <a href="http://www.amazon.com/dp/B000LV7W4K/?tag=codihorr-20">low-flow shower head</a>.
    </li>
    <li>Upgraded to a high efficiency tankless water heater, the <a href="http://www.noritz.com/commercial/products/commercial_products/ncc1991_series_condensing_tankless_water_heater/">Noritz NCC1991-SV</a>.
    </li>
    <li>Nearly killed myself trying to source LED candelabra bulbs for the fixture in our dining room which has 18 of the damn things, and is used quite a bit now with <a href="http://www.codinghorror.com/blog/2011/10/on-parenthood.html">the twins</a> in the house. Turns out, 18 times any number … is still kind of a large number. In cash.
    </li>
    </ul>
    <p>
    (Most of this has not helped much on the report. The jury is still out on the Nest thermostat and the candelabra LED bulbs, as I haven't had them long enough to judge. I'm gonna <a href="http://soundcloud.com/maddecent/sets/blood-bros-series/">defeat this thing, man!</a>)
    </p>
    <p>
    I'm ashamed to admit that it's only recently I realized that this technique – showing a set of metrics alongside your peers – is <i>exactly</i> the same thing we built at Stack Overflow and <a href="http://stackexchange.com">Stack Exchange</a>. Notice any resemblance on the user profile page here?
    </p>
    <p>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3e2b1611970c-800wi"><img class="asset  asset-image at-xid-6a0120a85dcdae970b017c33fc3a8c970b image-full" alt="Stack-overflow-user-page-small" title="Stack-overflow-user-page-small" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017c33fc3a8c970b-800wi.png" width="720" height="544"></a>
    </p>
    <p>
    You've tricked me into becoming obsessed with understanding and reducing my household energy consumption. Something that not only benefits me, but also benefits the greater community and, more broadly, benefits the entire world. You've beaten me at my own game. Well played, Pacific Gas &amp; Electric. <i>Well played</i>.
    </p>
    <a href="https://twitter.com/davetron5000/status/250692475088404481"><img alt="Davetron5000-tweet" title="Davetron5000-tweet" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017d3e2b40b1970c-800wi.png" width="571" height="318"></a>
    <p>
    This peer motivation stuff, <a href="http://www.codinghorror.com/blog/2011/10/the-gamification.html">call it gamification if you must</a>, really works. That's why we do it. But these systems are like firearms: so powerful they're kind of dangerous if you don't know what you're doing. If you don't think deeply about <i>what</i> you're incentivizing, <i>why</i> you're incentivizing it, and the full ramifications of all emergent behaviors in your system, you may end up with … something darker. <a href="http://xoxco.com/clickable/i-love-my-chicken-wire-mommy">A lot darker</a>.
    </p>
    <blockquote>
    The key lesson for me is that our members became very thoroughly obsessed with those numbers. <b>Even though points on Consumating were redeemable for absolutely nothing, not even a gold star, our members had an unquenchable desire for them.</b> What we saw as our membership scrabbled over valueless points was that there didn't actually need to be any sort of material reward other than the points themselves. We didn't need to allow them to trade the points in for benefits, virtual or otherwise. It was enough of a reward for most people just to see their points wobble upwards. If only we had been able to channel that obsession towards something with actual value!
    </blockquote>
    <p>
    Since <a href="http://www.codinghorror.com/blog/2012/02/farewell-stack-exchange.html">I left Stack Exchange</a>, I've had a difficult time explaining what exactly it is I do, if anything, to people. I finally settled on this: what I do, what I'm best at, what I love to do more than anything else in the world, is <b>design massively multiplayer games for people who like to type paragraphs to each other</b>. I channel their obsessions – and mine – into something positive, something that they can learn from, something that creates wonderful reusable artifacts for the whole world. And that's what I still hope to do, because I have an endless well of obsession left.
    </p>
    <p>
    Just ask PG&amp;E.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-11-26T01:11:30.000Z</pubDate>
    <guid>https://blog.codinghorror.com/for-a-bit-of-colored-ribbon/</guid>
    </item>
    <item>
    <title>Touch Laptops</title>
    <link>https://blog.codinghorror.com/touch-laptops/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I'm a little embarrassed to admit how much I like the <a href="http://www.microsoft.com/Surface/">Surface RT</a>. I wasn't expecting a lot when I ordered it, but after a day of use, I realized this was more than Yet Another Gadget. It might represent a <b>brave new world of laptop design</b>. How can you not love a laptop that lets you touch <a href="http://www.imdb.com/title/tt0070948/">Zardoz</a> to unlock it?
    </p>
    <p>
    <a href="http://www.imdb.com/title/tt0070948/"><img alt="Zardoz-surface-unlock" title="Zardoz-surface-unlock" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017d3dd3f093970c-800wi.jpg" width="700"></a>
    </p>
    <p>
    (I'll leave the particular unlock gestures I chose to your imagination. Good luck <a href="http://www.codinghorror.com/blog/2012/09/computer-crime-then-and-now.html">hacking this password</a>, Mitnick!)
    </p>
    <p>
    I have <a href="http://www.codinghorror.com/blog/2012/09/the-last-pc-laptop.html">an ultrabook I like</a>, but the more I used the Surface, the more obsolete it seemed, because I couldn't touch anything on the screen. I found touch interactions on Surface highly complementary to the keyboard. Way more than I would have ever believed, because I lived through the terror that was Pen Computing. If you need precision, you switch to the mouse or touchpad – but given the increasing prevalence of touch-friendly app and web design, that's not as often as you'd think. Tablets are selling like hotcakes, and every day the world becomes a more touch friendly place, with simpler apps that more people can understand and use on basic tablets. This a good thing. But this also means <b>it is only a matter of time before all laptops must be touch laptops</b>.
    </p>
    <p>
    I've become quite <s>obsessed</s> enamored with this touch laptop concept. I've used the Surface a <i>lot</i> since then. I own two, including the touch and type covers. I also impulsively splurged on a <a href="http://www.lenovo.com/products/us/laptop/ideapad/yoga/yoga-13/">Lenovo Yoga 13</a>, which is a more traditional laptop form factor.
    </p>
    <p>
    <a href="http://www.lenovo.com/products/us/laptop/ideapad/yoga/yoga-13/">
    <img alt="Yoga-13-rotation" title="Yoga-13-rotation" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017c33b92a5d970b-800wi.jpg" width="700" height="575"></a><br>
    
    </p>
    <p>
    One of the primary criticisms of the Surface RT is that, since it is an ARM based Tegra 3 device, it does not run traditional x86 apps. That's likely also why it comes with a bundled version of Office 2013. Well, the Yoga 13 resolves that complaint, because it's a Core i5 Ivy Bridge machine. But there is a cost for this x86 compatibility:
    </p>
    <table cellpadding="2" cellspacing="2" width="500">
    <tr>
    <td> </td>
    <td><b>Surface RT</b></td>
    <td><b>Surface Pro</b></td>
    <td><b>Yoga 13</b></td>
    </tr>
    <tr>
    <td>weight</td>
    <td>1.5 lb</td>
    <td>2.0 lb</td>
    <td>3.4 lb</td>
    </tr>
    <tr>
    <td>volume</td>
    <td>27"</td>
    <td>39"</td>
    <td>78"</td>
    </tr>
    <tr>
    <td>runtime</td>
    <td>8 hr</td>
    <td>6? hr</td>
    <td>5.5 hr</td>
    </tr>
    <tr>
    <td>display</td>
    <td>10.6" 1366×768</td>
    <td>10.6" 1920×1080</td>
    <td>13.3" 1600×900</td>
    </tr>
    <tr>
    <td>memory</td>
    <td>2 GB / 32 GB</td>
    <td>4 GB / 64 GB</td>
    <td>4 GB / 128 GB</td>
    </tr>
    <tr>
    <td>price</td>
    <td>$599</td>
    <td>$999</td>
    <td>$999</td>
    </tr>
    </table>
    
    <p>
    The size comparison isn't entirely fair, since the Yoga is a 13.3" device, and the Surface is a 10.6" device. But Surface Pro has x86 internals and is otherwise as identical to the Surface RT as Microsoft could possibly make it, and it's still 44% larger and 33% heavier. <b>Intel inside comes at a hefty cost in weight, battery life, and size</b>.
    </p>
    <p>
    You do get something for that price, though: compatibility with the vast library of x86 apps, and speed. The Yoga 13 is <i>absurdly</i> fast by tablet standards. Its Sunspider score is approximately 150 ms, compared to my iPad 4 at 738 ms, and the Surface RT at 1036 ms. Five hours of battery life might not seem like such a bad tradeoff for <i>six times the performance</i>.
    </p>
    <p>
    I like the Yoga 13 a lot, and it is getting <a href="http://www.engadget.com/2012/11/15/lenovo-ideapad-yoga-13-review/">deservedly good reviews</a>. Some reviewers think it's the <a href="http://www.popsci.com/gadgets/article/2012-11/lenovo-yoga-13-review-windows-8-laptop-you-should-buy">best Windows 8 laptop</a> available right now. It is a fine replacement for my ultrabook, and as long as you <a href="http://forums.lenovo.com/t5/IdeaPad-IdeaTab-Slate-Tablets/Ideapad-Yoga-hard-disk-allocation/m-p/913425#M13007">fix the brain-damaged default drive partitioning</a>, scrape off the handful of stickers on it, and uninstall the few pre-installed craplets, it is eminently recommendable. You can also easily <a href="http://www.youtube.com/watch?v=Z5uCooHm4kw">upgrade it from 4 GB to 8 GB</a> of RAM for about $40.
    </p>
    <p>
    But there were things about the practical use of a touch laptop, subtle things that hadn't even occurred to me until I tried to sit down and use one for a few hours, that made me pause:
    </p>
    <ol>
    <li>
    <b>The screen bounces when you touch it</b>. Maybe I just have hulk-like finger strength, but touching a thin laptop screen tends to make it bounce back a bit. That's … exactly what you <i>don't</i> want in a touch device. I begin to understand why the Surface chose its "fat screen, thin keyboard" design rather than the traditional "thin screen, fat keyboard" of a laptop. You need the inertia on the side you're touching. The physics of touching a thin, hinged laptop screen are never going to be particularly great. Yes, on the Yoga I can wrap the screen around behind the keyboard, or even prop it up like a tent – but this negates the value of the keyboard which is the biggest part of the touch laptop story! If I wanted a keyboardless tablet, I'd use one of the four I have in the house already. And the UPS guy just delivered a Nexus 10.<br><br>
    </li>
    <li>
    <b>A giant touchpad makes the keyboard area too large</b>. On a typical laptop, a Texas size touchpad makes sense. On a touch laptop, giant touchpads are problematic because they push the screen even farther away from your hand. This may sound trivial, but it isn't. A ginormous touchpad makes every touch interaction you have that much more fatiguing to reach. I now see why the Surface opted for a tiny touchpad on its touch and type covers. A touchpad should be a method of last resort on a touch laptop anyway, because touch is more convenient, and if you need true per-pixel precision work, you'll plug in a mouse. Have I mentioned how convenient it is to have devices that accept standard USB mice, keyboards, drives, and so on? Because it is.<br><br>
    </li>
    <li>
    <b>Widescreen is good for keyboards, but awkward for tablets</b>. A usable keyboard demands a certain minimum width, so widescreen it is; all touch laptops are going to be widescreen by definition. You get your choice between ultra wide or ultra tall. The default landscape mode works great, but rotating the device and using it in portrait mode makes it <i>super</i> tall. On a widescreen device, portrait orientation becomes a narrow and highly specialized niche. It's also <i>very</i> rough on lower resolution devices; neither the 1366×768 Surface RT nor the 1600×900 Yoga 13 really offer enough pixels on the narrow side to make portrait mode usable. You'd need a true retina class device to make portrait work in widescreen. I began to see why the iPad was shipped with a 4:3 display and not a 16:9 or 16:10 one, because that arrangement is more flexible on a tablet. I frequently use my iPad 4 in either orientation, but the Yoga and Surface are only useful in landscape mode except under the most rare of circumstances.<br><br>
    </li>
    <li>
    <b>About 11 inches might be the maximum practical tablet size</b>. Like many observers, I've been amused by the race to produce the largest possible phone screen, resulting in 5" phablets that are <a href="http://gigaom.com/mobile/despite-name-phablets-to-be-big-sellers-208m-in-2015/">apparently quite popular</a>. But you'll also note that <a href="http://daringfireball.net/2012/10/ipad_mini">even the most ardent Apple fans</a> seem to feel that the 7" iPad mini is an inherently superior form factor to the 10" iPad. I think both groups are fundamentally correct: for a lot of uses, the 3.5" phone really is too small, and the 10" tablet really is too big. As a corollary to that, I'd say anything larger than the 10.6" Surface is <i>far</i> too large to use as a tablet. Attempting to use the 13.3" Yoga as a tablet is incredibly awkward, primarily because of the size. Even if the weight and volume were pushed down to imaginary Minority Report levels, I'm not sure I would want a 13.3" tablet on my lap or in my hands. There must be a reason the <a href="http://en.wikipedia.org/wiki/Letter_(paper_size)">standard letter page size</a> is 8&amp;half; × 11", right?<br><br>
    </li>
    <li>
    <b>All-day computing, or, 10 hours of battery life</b>. The more devices I own, the more I begin to appreciate those that I can use for 8 to 10 hours before needing to charge them. There is truly something a little magical about that 10 hour battery life number, and I can now understand why Apple seemed to target 9-10 hours of battery life in their initial iPad and iPhone designs. A battery life of 4 to 6 hours is nothing to sneeze at, but … I feel anxiety about carrying the charger around, whether I've charged recently or not, and I worry over screen brightness and other battery maximization techniques. When I can safely go 8 to 10 hours, I figure that even if I use the heck out of the device – as much as any human being reasonably could in a single day – I'll still safely make it through and I can stick it in a charger before I go to bed.
    </li>
    </ol>
    <p>
    </p>
    <p>
    To appreciate just how extreme portrait mode is on a widescreen tablet, experience it yourself:
    </p>
    <table>
    <tr>
    <td valign="top">
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3de872f7970c-pi"><img alt="Yoga-13-landscape-small" title="Yoga-13-landscape-small" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017d3dd4960d970c-800wi.png" width="350"></a>
    </td>
    <td valign="top">
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b017c33b9e3d6970b-pi"><img alt="Yoga-13-portrait-small" title="Yoga-13-portrait-small" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017ee549a179970d-800wi.png" width="350"></a>
    </td>
    </tr>
    </table>
    <p>
    This isn't specific to touch laptops; it's a concern for all widescreen devices. I have the same problem with the taller iPhone 5. Because I now have to choose between super wide or super tall, it is a less flexible device in practice.
    </p>
    <p>
    The Yoga 13, if representative of the new wave of Windows 8 laptops, is a clear win even if you have no intention of ever touching your screen:
    </p>
    <ul>
    <li>It boots up incredibly fast, in a few seconds.
    </li>
    <li>It wakes and sleeps incredibly fast, nearly instantaneously.
    </li>
    <li>The display is a <a href="http://www.codinghorror.com/blog/2012/07/the-ips-lcd-revolution.html">high quality IPS model</a>.
    </li>
    <li>A rotating screen offers a number of useful modes: presentation, (giant) tablet, standard laptop.
    </li>
    <li>Touchpad and keyboard work fine; at the very least, they're no worse than the typical PC laptop to me.
    </li>
    <li>Does the prospect of using Windows 8 frighten and disturb you? No worries, smash Windows+D on your keyboard immediately after booting and pretend you're using Windows 7.5. Done and done.
    </li>
    </ul>
    
    <p>
    It's a nice laptop. You could do far worse, and many have. In the end, <b><a href="http://www.lenovo.com/products/us/laptop/ideapad/yoga/yoga-13/">the Yoga 13</a> is just a nice laptop with a touchscreen slapped on it</b>. But the more I used the Yoga the more I appreciated the subtle design choices of Surface that make it a far better <i>touch</i> laptop. I kept coming back to how much I enjoyed using the Surface as the platonic ideal of what touch laptops should be.
    </p>
    <p>
    Yes, it is a bummer that <a href="http://www.microsoft.com/Surface/">the only currently available Surface</a> is ARM based and does not run any traditional Windows apps. It's easy to look at the x86 performance of the Yoga 13 and assume that Windows on ARM is a cute, temporary throwback to Windows NT on Alpha or MIPS which will never last, and understandably so. Do you see anyone running Windows on Alpha or MIPS CPUs today? But I'm mightily impressed with the Tegra 3 SOC (system-on-a-chip) that runs both the Surface RT and the Nexus 7. Upcoming Tegra releases, <a href="http://en.wikipedia.org/wiki/Tegra#Upcoming_releases">all named after superheroes</a>, promise <b>75 times</b> the performance of Tegra 2 by 2014. I can't quite determine how much faster Tegra 3 was than Tegra 2, but even if it is "only" ten times faster by 2014, that's … amazing.
    </p>
    <p>
    I think we're beginning to uncover the edges of a world where lack of x86 compatibility is no longer the kiss of death it used to be. It's unclear to me that Intel can ever reach equivalent performance per watt with ARM; Intel's ultra-low-end <a href="http://gigaom.com/mobile/intel-v-arm-the-chromebook-performance-battle/">Celeron 847 is twice as fast as the ARM A15</a>, but it's also <a href="http://ark.intel.com/products/56056/Intel-Celeron-Processor-847-2M-Cache-1_10-GHz">17 watts TDP</a>. In a land of ARM chips that pull an absolute maximum of 4 watts at peak, slapping Intel Inside will instantly double the size and weight of your device – or halve its battery life, your choice. Intel's been trying to turn the battleship, but with <a href="http://www.wired.com/business/2012/08/ff_intel/all/">very limited success so far</a>. Haswell, the successor to the Ivy Bridge CPUs in the Surface Pro and Yoga 13, only gets to 10 watts at idle. And Intel's long neglected Atom line, thanks to years of institutional crippling to avoid cannibalizing Pentium sales, is poorly positioned to compete with ARM today.
    </p>
    <p>
    Still, <b>I would not blame anyone for waiting on the <a href="http://www.microsoft.com/Surface/en-US/surface-with-windows-8-pro/home">Surface Pro</a></b>. A high performance, HD touch laptop in the Surface form factor that runs every x86 app you can throw at it is a potent combination … even if it is 44% larger and 33% heavier.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-11-19T01:23:38.000Z</pubDate>
    <guid>https://blog.codinghorror.com/touch-laptops/</guid>
    </item>
    <item>
    <title>A SSD in Your Pocket</title>
    <link>https://blog.codinghorror.com/a-ssd-in-your-pocket/</link>
    <content>
                    <!--kg-card-begin: markdown--><blockquote>
    <p><span style="color:red">Updated</span> August 2015</p>
    </blockquote>
    <p>I woke up a few days ago and realized I was still carrying <a href="http://www.codinghorror.com/blog/2010/08/whats-on-your-utility-belt.html">the same 32 GB USB flash drive</a> on my keychain that I purchased in 2010. I thought to myself, this is an unacceptable state of affairs. Totally. Unacceptable.</p>
    <p>It's been few years since I seriously looked at USB drive performance. Premium USB flash drives typically eke out <a href="http://www.codinghorror.com/blog/2008/06/large-usb-flash-drive-performance.html">about 10-20 MB per second</a>, strongly favoring reads, but I've recently purchased a number of inexpensive 4 GB USB drives that barely got to 4 MB per second. That's OK, since they were only intended as cheap <s><a href="http://www.codinghorror.com/blog/2005/02/the-floppy-drive-must-die.html">floppy drive</a></s> CD and DVD replacements. Based on that experience, I wasn't expecting much improvement in the status quo.</p>
    <p>USB 3.0 is finally becoming somewhat prevalent on PCs and Macs, so I figured I'd:</p>
    <ul>
    <li>Switch to a current-generation USB 3.0 flash drive.</li>
    <li>Bump up to 64 GB storage this generation, one step over the 32 GB model I currently carry.</li>
    <li>Optimistically hope against hope that they've gotten fast enough by now to get anywhere near USB 2.0 throughput limits.</li>
    </ul>
    <p>I checked around and the <a href="http://www.amazon.com/dp/B00SNLGXE0/?tag=codihorr-20">Patriot Supersonic</a> series gets good reviews. The price seemed about right at $75 for a 64 GB device. So I bought one. I plugged it in to one of the USB 3.0 ports on my PC and …</p>
    <img alt="Usb-drive-read" title="Usb-drive-read" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017ee50c0384970d-800wi.png" width="463" height="294">
    <img alt="Usb-drive-write" title="Usb-drive-write" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017d3d96fccf970c-800wi.png" width="463" height="294">
    <p>Holy. Crap.</p>
    <p>But wait! That was way back in Ye Olde 2012! I upgraded to the <a href="http://www.amazon.com/dp/B00SNLGXE0/?tag=codihorr-20"><b>128 GB</b> Supersonic Rage 2</a> today and …</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/rage-2-reads.png" alt=""></p>
    <p><img alt="https://blog.codinghorror.com/content/images/2015/08/rage-2-writes.png" alt=""></p>
    <p><b>365 MB/s reads and 254 MB/s writes?</b> <i>Yes please!</i></p>
    <p>Needless to say, this thing handily saturates a USB 2.0 connection at around 27 - 30 MB/sec — but plug it into one of those blue USB 3.0 ports on newer Macs or PCs and prepare to feel like <a href="http://iconicphotos.wordpress.com/2010/05/31/blown-away-man/">the "blown away" guy in the Maxell ad</a>.</p>
    <p>I haven't run a <a href="http://www.storagereview.com/patriot_supersonic_rage_2_usb_flash_drive_review">full set of benchmarks</a> on this guy, but the only downside I've noticed so far is that it is a bit chunkier in width than my previous USB flash drive. It might be a bit more to carry, and might not fit some USB ports depending on what's adjacent.</p>
    <p><a href="http://www.amazon.com/dp/B00SNLGXE0/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2015/08/StorageReview-Patriot-Supersonic-Rage-2-USB-Flash.jpg" alt=""></a></p>
    <p>Even in the mere 3 years from 2012 to 2015, for the very same $75 we have</p>
    <ul>
    <li>doubled capacity (128 GB vs 64 GB)</li>
    <li>1.5 × read speed</li>
    <li>1.7 × write speed</li>
    </ul>
    <p>Now I feel like a total dork for continuing to carry around a 2010 era flash drive that I <i>thought</i> had decent performance at 20 MB/sec. Forget that noise. Now we can <b>darn near carry pocket solid state hard drives on our keychains!</b> Nobody told me, man!</p>
    <p>So now I'm telling you. Enjoy.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-11-13T00:21:24.000Z</pubDate>
    <guid>https://blog.codinghorror.com/a-ssd-in-your-pocket/</guid>
    </item>
    <item>
    <title>Do You Wanna Touch</title>
    <link>https://blog.codinghorror.com/do-you-wanna-touch/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    Traditional laptops may have reached an <a href="http://www.codinghorror.com/blog/2012/09/the-last-pc-laptop.html">evolutionary dead-end</a> (or, more charitably, a plateau), but it is an <i>amazing</i> time for things that … aren't quite traditional laptops.
    </p>
    <p>
    The Nexus 7 is <a href="http://www.theverge.com/2012/6/29/3125396/google-nexus-7-review">excellent</a>, the Nexus 10 <a href="http://www.wired.com/gadgetlab/2012/10/nexus-10-hands-on-google-samsung/">looks fantastic</a>, I can't wait to get my hands on the <a href="http://www.macrumors.com/2012/10/30/4th-generation-ipad-benchmarks-show-1-4ghz-dual-core-processor-1gb-of-ram/">twice-as-fast</a> iPad 4, the new Chromebooks are <a href="http://www.anandtech.com/show/6422/samsung-chromebook-xe303-review-testing-arms-cortex-a15">finally decent</a> and priced right, and then there's the <a href="http://www.theverge.com/2012/10/23/3540550/microsoft-surface-review">Microsoft Surface RT</a>. In short, <b>it is a fantastic time to be a <i>computer nerd</i>.</b>
    </p>
    <p>
    <a href="http://www.imdb.com/title/tt0088000/"><img alt="Revenge of the nerds" title="Revenge of the nerds" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017d3d2a90fd970c-pi.jpg" width="370" height="558"></a>
    </p>
    <p>
    I <a href="http://www.codinghorror.com/blog/2007/01/if-loving-computers-is-wrong-i-dont-want-to-be-right.html">love computers</a>, always have, always will. <b>My strategy with new computing devices is simple: I buy 'em all, then try living with them.</b> The devices that fall away from me over time – the ones that gather dust, or that I forget about – are the ones I eventually get rid of. So long, Kindle Fire! I knew that the Nexus 7 was really working for me when I gave mine to my father as a spontaneous gift while he was visiting, then missed it sorely when waiting for the replacement to arrive.
    </p>
    <p>
    As I use these devices, I've grown more and more sold on the idea that touch is going to dominate the next era of computing. <a href="http://www.codinghorror.com/blog/2012/10/the-pc-is-over.html">This reductionism is inevitable and part of the natural evolution of computers</a>. Remove the mouse. Remove the keyboard. Remove the monitor. Reducing a computer to its <i>absolute minumum</i> leads us inexorably, inevitably to the tablet (or, if a bit smaller, the phone). All you're left with is a flat, featureless slate that invites you to touch it. <b>Welcome to the future, here's your … rectangle.</b>
    </p>
    <p>
    <img alt="tablets" title="tablets" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017ee4a07595970d-800wi.jpg" width="600" height="436">
    </p>
    <p>
    I've stopped thinking of touch as some exotic, add-in technology contained in specialized devices. I belatedly realized that <a href="http://www.youtube.com/watch?v=XELpxApT8Kc">I love to touch computers</a>. And why not? We constantly point and gesture at everything in our lives, including our screens. It's completely natural to want to interact with computers by touching them. That's why the more unfortunate among us have <a href="http://www.codinghorror.com/blog/2008/05/cleaning-your-display-and-keyboard.html">displays covered in filthy fingerprints</a>.
    </p>
    <p>
    Although I love my touch devices, one thing I've noticed is that <b>they are a major disincentive to writing actual paragraphs</b>. On screen keyboards get the job done, but if I have to scrawl more than a Twitter length reply to someone on a tablet or phone, it's so much effort that I just avoid doing it altogether, postponing indefinitely until I can be in front of a keyboard. By the time that happens I've probably forgotten what I wanted to say in the first place, or that I even needed to reply at all. Multiply that by millions or billions, and you have a whole generation technologically locked into a backwater of minimal communication. Yelp, for example, does <a href="https://twitter.com/codinghorror/status/249912609439088640">not allow posting reviews from their mobile app</a> because when they did, all they got was LOL OMG <i>raspberry</i> poop Emoji.
    </p>
    <p>
    <img alt="Omg-raspberry-poop" title="Omg-raspberry-poop" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017ee4a06941970d-800wi.png" width="326" height="122">
    </p>
    <p>
    It's not good. In fact, it's a little scary. I realize that there are plenty of ways of creating content that don't involve writing, but writing is <a href="http://www.codinghorror.com/blog/2011/02/how-to-write-without-writing.html">pretty damn fundamental</a> to communication and civilization as we know it. Anything that adds a significant barrier to the act of placing words on a page is kind of dangerous – and a major regression from the world where every computer had a keyboard in front of it, inviting people to write and communicate with each other. So the idea that billions of people in the future will be staring at touchscreen computers, Instagramming and fingerpainting their thoughts to each other, leaves me with deeply mixed feelings. As Joey Hess <a href="http://joey.hess.usesthis.com/">said</a>:
    </p>
    <p>
    </p>
    <blockquote>If it doesn't have a keyboard, I feel that my thoughts are being forced out through a straw.</blockquote>
    
    <p>
    When I pre-ordered the <a href="http://www.microsoft.com/surface/en-US/surface-with-windows-rt/home">Microsoft Surface RT</a>, I wasn't expecting much. This is a version one device from a company that has never built a computer before, running a <a href="http://www.codinghorror.com/blog/2012/07/betting-the-company-on-windows-8.html">brand new and controversial operating system</a>. On paper, it doesn't seem like a significant change from all the other tablets on the market, and its primary differentiating feature – the touch keyboard – can be viewed as merely flipping a regular laptop over, so the "fat" side is on the display rather than the keyboard.
    </p>
    <a href="http://www.microsoft.com/surface/en-US/surface-with-windows-rt/home"><img alt="Laptop vs. Surface" title="Laptop vs. Surface" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017d3d2aadd6970c-800wi.png" width="600" height="239"></a>
    
    <p>
    Surface is just like the first iPad in that it has all the flaws and rough edges you'd expect in a version one device. But it is also like the first iPad in that <b>there is undeniably the core of something revelatory and transformative here – a vision of the future of computing that <i>doesn't</i> sacrifice either keyboard or touch.</b>
    </p>
    <p>
    Reviewers think Surface is intended to be a tablet killer, but it isn't. It's a laptop killer. After living with the Surface RT for a few days now, I'm convinced that this form factor is the replacement and way forward for the stagnant laptop. I can't even remember the last time I was this excited about a computer. The more I use it, the more I think that touch plus keyboard is the future of all laptops.
    </p>
    <p>
    How wonderful it is to flip open the Surface and quickly type a 4 paragraph email response when I need to. How wonderful it is to browse the web and touch whatever I want to. And switching between the two modes of interaction – sometimes typing, sometimes touching – is completely natural. Remember when I talked about <a href="http://www.codinghorror.com/blog/2008/03/revisiting-keyboard-vs-the-mouse-pt-1.html">two-fisted computing</a>, referring to the mouse and keyboard working in harmony? With Surface, I found that also applies to touch. In spades.
    </p>
    <p>
    <a href="http://www.microsoft.com/surface/en-US/surface-with-windows-rt/home"><img alt="The Surface RT in my lap" title="The Surface RT in my lap" src="https://blog.codinghorror.com/content/images/uploads/2012/11/6a0120a85dcdae970b017d3d2b3765970c-800wi.jpg" width="700" height="525"></a>
    </p>
    <p>
    This isn't a review, per se, but let me get into a few specifics:
    </p>
    <ul>
    <li>Yes, it is ridiculous that the keyboard cover is not included in the base Surface, as the near-perfect integration of keyboard with touch is the whole story here. Don't even <i>consider</i> buying a Surface without the touch keyboard cover. Within an hour or so I was hitting 80% of my regular typing speed on it, and it's firm enough to be used on a lap without too much loss of accuracy. Astonishingly, the tiny fabric touchpad is quite good, better than the ones I've used on many laptops. Which probably says more about the sad state of the PC ecosystem than it does about Surface, but still.
    </li>
    <li>Yeah, yeah, it doesn't run x86 apps. So your beloved copy of Windows Landscape Designer 1998 won't run on Surface RT. You'll need to wait a few months for Surface Pro to do that, but you'll pay the Intel Premium™ in price, battery life, and size. Rumor has it that Intel will get their act together with Haswell, and finally be competitive with ARM in price, performance, and power consumption, but I'll believe that when I see it.
    </li>
    <li>The hardware design is beyond reproach; I'd even argue it's <i>better</i> than Apple quality hardware design. Unless you're required by God to hate all things touched by Microsoft, There's no way you could handle a Surface and not think that this is a genuinely well made <i>thing</i>.
    </li>
    <li>The default Surface mail application is an embarrassment and everyone associated with it should be fired. Android and iOS both have decent default mail apps, as well they should, because email is bedrock. Not having this right really hurts. If Microsoft doesn't get their A Team "hey dummies, all you have to do is just copy Sparrow already" team on that soon, they'll be sorry.
    </li>
    <li>Many of the native applications currently available run poorly on Surface RT due to lack of optimization and testing for the ARM platform versus x86. Probably not terribly different from the iPad 1 on launch day, but it remains to be seen how quickly that will get resolved.
    </li>
    <li>The web browser is stellar and a model of how the Internet should work on a tablet. You are almost always in fullscreen mode, swiping around with nothing but content on your screen, the way it should be. However, back button performance is bizarrely slow, and the way IE10 handles web hovers is poor, much worse than Mobile Safari and Chrome. Try upvoting a comment on Stack Overflow to see what I mean.
    </li>
    </ul>
    
    <p>
    Notice how the 2010 iPad 1 is already obsolete? Expect the same thing with the <a href="http://www.microsoft.com/surface/en-US/surface-with-windows-rt/home">Surface RT</a>. It's a fascinating glimpse into the future, but it'll be totally utterly obsolete in 2 years. Do not buy this device expecting longevity. Buy it because you want to see tomorrow today.
    </p>
    <p>
    The received wisdom about touchscreen interaction with computers was that <a href="http://www.wired.com/gadgetlab/2010/10/gorilla-arm-multitouch/">it didn't work</a>. That you'd get "gorilla arm". That's why we had to have special tablet devices. But <b>Surface proves that's not true; typing and touching are <i>spectacularly</i> compatible, at least for laptops.</b> And I'm beginning to wonder about my desktop a little, because lately I'm starting to I think I wanna touch that, too.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-11-01T03:14:41.000Z</pubDate>
    <guid>https://blog.codinghorror.com/do-you-wanna-touch/</guid>
    </item>
    <item>
    <title>The Future of Markdown</title>
    <link>https://blog.codinghorror.com/the-future-of-markdown/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    Markdown is a <a href="http://www.codinghorror.com/blog/2008/05/is-html-a-humane-markup-language.html">simple little humane markup language</a> based on time-tested plain text conventions from the last 40 years of computing.
    </p>
    <table style="width:800px">
    <tr>
    <td style="padding-bottom:10px">Meaning, if you enter this…</td>
    <td style="padding-bottom:10px">…you get this!</td>
    </tr>
    <tr>
    <td valign="top" style="width:350px; font-size:80%">
    <pre style="width:350px">
    Lightweight Markup Languages
    ============================
    According to **Wikipedia**:
    &gt; A [lightweight markup language](http://is.gd/gns)
    is a markup language with a simple syntax, designed
    to be easy for a human to enter with a simple text
    editor, and easy to read in its raw form.
    Some examples are:
    * Markdown
    * Textile
    * BBCode
    * Wikipedia
    Markup should also extend to _code_:
    10 PRINT "I ROCK AT BASIC!"
    20 GOTO 10
    </pre>
    </td>
    <td valign="top" style="width:430px; font-size:80%">
    <h2>Lightweight Markup Languages</h2>
    <p>According to <b>Wikipedia</b>:</p>
    <blockquote style="margin-left:10px">
    A <a href="http://en.wikipedia.org/wiki/List_of_lightweight_markup_languages">lightweight markup language</a> is a markup language with a simple syntax, designed to be easy for a human to enter with a simple text editor, and easy to read in its raw form.
    </blockquote>
    <p>
    Some examples are:
    </p>
    <ul>
    <li>Markdown</li>
    <li>Textile</li>
    <li>BBCode</li>
    <li>Wikipedia</li>
    </ul>
    <p>
    Markup should also extend to <i>code</i>:
    </p>
    <pre style="width:350px; margin:0px;">
    10 PRINT "I ROCK AT BASIC!"
    20 GOTO 10
    </pre>
    </td>
    </tr>
    </table>
    <p>
    You can think of Markdown as a radically simplified and far more human readable form of HTML. <b>I have grown to love Markdown over the last few years.</b> If you're a programmer of any shape, size, or color, you can't really <i>avoid</i> using Markdown, as it's central to both GitHub and Stack Overflow. For that matter, my new project uses Markdown, too.
    </p>
    <p>
    Markdown is a wonderful tool, but it does suffer a bit from <a href="http://www.codinghorror.com/blog/2009/12/responsible-open-source-code-parenting.html">lack of project leadership</a>. The so-called "spec" is anything but, and there are dozens of different flavors of Markdown out there, all with differences in the way they behave. While they are broadly compatible, Stack Overflow and GitHub have both tweaked Markdown in ways that can trip you up if you're familiar with one but not the other; compare <a href="http://github.github.com/github-flavored-markdown/">GitHub Flavor</a> with <a href="http://stackoverflow.com/editing-help">Stack Overflow Flavor</a>.
    </p>
    <p>
    That's why I was so excited to get this email from David Greenspan a few days ago:
    </p>
    <blockquote>
    <p>I'm the creator of <a href="http://etherpad.com/">EtherPad</a> (a collaborative WYSIWYG editor), now working at <a href="http://meteor.com/">Meteor</a>. At Meteor, we're trying to "pave the web" for developers by writing better components. For example, we just released universal login buttons that talk over WebSockets and are wired into the users table of the app's database. Since Markdown is increasingly ubiquitous for writing content, it's going to be part of the Meteor toolchain.  I wouldn't be surprised if we end up releasing a component <a href="http://code.google.com/p/pagedown/">like Stack Overflow's editor</a>, with the full "Meteor" standard of code quality, so that no one has to roll their own again.  Today, we use Markdown in our API docs generation, and we're going to be writing more and more content in it -- which is a scary thought.</p>
    <p>I think you and I share some concern (horror?) about <a href="http://www.codinghorror.com/blog/2009/12/responsible-open-source-code-parenting.html">Markdown's lack of spec and tests</a>. The code is ugly to boot.  Extending or customizing Markdown is tricky (we already have some hacks and they are terrible), and I worry about "bit rot" of content if the format doesn't have a spec.  I'm evaluating the possibility of starting over with a new implementation coupled with a real spec and test suite, and I've been thinking a lot about how to parse a language like Markdown in a principled way.  I'm pretty fearless about parsers, by the way; I wrote a <a href="http://jsparse.meteor.com/">full ECMAScript parser</a> in a week as a side project.</p>
    <p>I want this new language – working name "Rockdown" – to be seen as Markdown with a spec, and therefore only deviate from Markdown's behavior in unobtrusive ways.  It should basically be a replacement that paves over the problems and ambiguities in Markdown.  I'm trying to draw a line between what behavior is important to preserve and what behavior isn't.</p>
    </blockquote>
    
    <p>
    I was excited because, like David, I freaking <i>love</i> Markdown. I love it so much that I want to see it succeed and flourish over the next 20 years. I believe the best way to achive that goal is for the most popular sites using Markdown to band together and take ownership of Markdown as a standard. <b>I propose that Stack Exchange, GitHub, Meteor, Reddit, and any other company with lots of traffic and a strategic investment in Markdown, all work together to come up with an official Markdown specification, and standard test suites to validate Markdown implementations.</b> We've all been working at cross purposes for too long, accidentally fragmenting Markdown while popularizing it.
    </p>
    <p>
    Like any dutiful and well-meaning suitor, we first need to ask permission for this courtship from the parents. So <b>I'm asking you, <a href="http://en.wikipedia.org/wiki/John_Gruber">John Gruber</a>: as the original creator of Markdown, will you bless this endeavor?</b> Also, as a totally unreleated aside, have I mentioned what a <i>huge</i> <a href="http://newyork.yankees.mlb.com">Yankees</a> fan I am? <a href="http://en.wikipedia.org/wiki/Derek_Jeter">Derek Jeter</a> is one of the all-time greats.
    </p>
    <img alt="Yankees_logo" title="Yankees_logo" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017ee4727df7970d-800wi.png" width="225" height="252">
    <p>
    I realize that the devil is in the details, but for the most part what I want to see in a <b>Markdown Standard</b> is this:
    </p>
    <ol>
    <li>A standardization of the existing core Markdown conventions, <a href="http://daringfireball.net/projects/markdown/">as documented by John Gruber</a>, in a formal language specification.
    </li>
    <li>Make the three most common real world usage "gotchas" in Markdown choices with saner defaults: intra-word emphasis (off), auto-hyperlinking (on), automatic return-based linebreaks (on).
    </li>
    <li>A formal set of tests anyone can use to validate a Markdown implementation.
    </li>
    <li>Some cleanup and tweaks for ambiguous edge cases that exist in Markdown due to the lack of a formal specification.
    </li>
    <li>A registry of known flavor variants, with some possible future lobbying to potentially add <i>only</i> the most widely and strongly supported variants (I am thinking of the GitHub style code blocks which are quite nice) to future versions of Markdown.
    </li>
    </ol>
    <p>
    And that's it, really. I don't want to extend Markdown by adding tons of crazy new functionality, or radically change the way it currently works, or anything like that. I'd be opposed to such changes. I just want to solidify and standardize the simple, useful version of Markdown that is working so well for everyone right now. I want there to be an unambiguous, basic standard that everyone using Markdown can expect to work in the same way across all web sites in the world when they begin typing.
    </p>
    <p>
    <a href="http://dcurt.is/the-markdown-mark"><img alt="Markdown mark" title="Markdown mark" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017d3cfd6d03970c-800wi.png" width="500" height="148"></a>
    </p>
    <p>
    I'd really prefer not to fork the language; I'd much rather collectively help carry the banner of Markdown forward into the future, <b>with the blessing of John Gruber and in collaboration with other popular sites that use Markdown.</b>
    </p>
    <p>
    So … who's with me?
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-10-25T15:43:52.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-future-of-markdown/</guid>
    </item>
    <item>
    <title>Judging Websites</title>
    <link>https://blog.codinghorror.com/judging-websites/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I was invited to judge the <a href="http://railsrumble.com/">Rails Rumble</a> last year, but was too busy to participate. When they extended the offer again this year, I happily accepted.
    </p>
    <p>
    </p>
    <blockquote>
    <p>The <a href="http://railsrumble.com/">Rails Rumble</a> is a distributed programming competition where teams of one to four people, from all over the world, have 48 hours to build an innovative web application, with Ruby on Rails or another Rack-based Ruby web framework. After the 48 hours are up, a panel of expert judges will pick the top ten winners.</p>
    </blockquote>
    
    <p>
    I received an email notifying me that judging begins today, so I cracked my knuckles, sat down in front of my three monitors (all the better to judge with!) and … saw that there were around <b>340 entries</b>.
    </p>
    <p>
    <a href="http://railsrumble.com/entries/all"><img alt="Rails rumble entries" title="Rails rumble entries" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017d3cc0fb7e970c-800wi.png" width="475" height="558"></a>
    </p>
    <p>
    That's when I started to get a little freaked out about the math. Perhaps we can throw 5% of the entrants out as obviously incomplete or unfinished. That leaves 323 entries to judge. Personally, I'm not comfortable saying I judged a competition unless I actually <i>look</i> at each one of the entries, so at an absolute <i>minimum</i> I have to click through to each webapp. Once I do, I couldn't imagine properly evaluating the webapp without spending at least 30 seconds looking at the homepage.
    </p>
    <p>
    Let's be generous and say I need 10 seconds to orient myself and account for page load times, and 30 seconds to look at each entry. That totals <b>three and a half hours</b> of my, y'know, infinitely valuable time. In which I could be finding a cure for cancer, or clicking on LOLcats. I still felt guilty about only allocating half a minute per entry; is it fair to the contestants if I make my decision based on 30 seconds of scanning their landing page and maybe a few desultory clicks?
    </p>
    <p>
    But then I had an epiphany: <b>yes, deciding in 30 seconds <i>is</i> totally completely unfair, but that's also exactly how it works in the real world</b>. Users are going to click through to your web site, look at it for maybe 30 seconds, and either decide that it's worthy, or reach for the almighty back button on their browser and bug out. Thirty seconds might even be a bit generous. In <a href="http://www.websiteoptimization.com/speed/tweak/blink/">one Canadian study</a>, users made up their mind about websites in <i>under a second</i>.
    </p>
    <p>
    </p>
    <blockquote><p>
    Researchers led by Dr. Gitte Lindgaard at Carleton University in Ontario wanted to find out how fast people formed first impressions. They tested users by flashing web pages for 500 millseconds and 50 milliseconds onto the screen, and had participants rate the pages on various scales. The results at both time intervals were consistent between participants, although the longer display produced more consistent results. Yet, in as little as 50 milliseconds, participants formed judgments about images they glimpsed. The "halo effect" of that emotional first impression carries over to cognitive judgments of a web site's other characteristics including usability and credibility.
    </p></blockquote>
    
    <p>
    The opportunity cost to switch websites is one tiny little click of the mouse or tap of the finger. What I learned from judging the Rails Rumble most of all is that <b>your website's front page needs to be kind of awesome</b>. It is never the complete story, of course, but do not squander your first opportunity to make an impression on a visitor. It may be the only one you get.
    </p>
    <p>
    I'm not sure I was learning much about these apps while I judged, and for that I am truly sorry. But along the way I accidentally learned a heck of a lot about <b>what makes a great front page</b> for a web application. So I'd like to share that with you, and all future Rails Rumble entrants:
    </p>
    <ol>
    <li>
    <b>Load reasonably fast</b>.<br>
    <p>I've talked about <a href="http://www.codinghorror.com/blog/2011/06/performance-is-a-feature.html">performance as a feature</a> before; the sooner the front page of your site loads, the sooner I can decide whether or not I am interested. If you are slow, I will resent you for being slow, and the slower you are the more I will resent you for keeping me from not just finding out about you but also keeping me from moving on to the next thing. I need to be an <a href="http://www.codinghorror.com/blog/2007/06/designing-for-informavores-or-why-users-behave-like-animals-online.html">efficient informavore</a>. That means moving quickly. Above all else, <i>load fast</i>.</p>
    </li>
    <li>
    <b>What the %#!@^ is this thing?</b><br><p>
    The first challenge you have is not coding your app. It is explaining what problem your app solves, and why anyone in the world would possibly care about that. You need <a href="http://www.codinghorror.com/blog/2007/09/can-your-team-pass-the-elevator-test.html">an elevator pitch</a> on your front page: can you explain to a complete stranger, in 30 seconds, why your application exists? Yes, writing succinctly and clearly is an art, but keep pounding on that copy, keep explaining it over and over and over until you have your explanation polished to the fine sheen of a diamond. When you're confident you could walk up to any random person on the street, strike up a conversation about what you're working on, and not have their eyes gloss over in boredom and/or fear – that's when you're ready. That's the text you want on your home page.
    </p>
    </li>
    <li>
    <b>Show me an example.</b><br><p>
    OK, so you're building the ultimate tool for cataloging and sharing Beanie Babies on Facebook. Awesome, let me be an angel investor in your project so I can get me a piece of those sweet, sweet future billions. The idea is sound. But everyone knows that <a href="http://www.codinghorror.com/blog/2010/01/cultivate-teams-not-ideas.html">ideas are worthless, whereas execution is everything</a>. I have no clue what the execution of your idea is unless you <i>show it to me</i>. At the very least throw up some screenshots of what it would look like if I used your webapp, with some juicy real world examples. And please, please, please, for the love of God please, do not make me sign up, click through a video, watch a slideshow, or any of that nonsense. Only emperors and princes have that kind of time, man. <a href="http://www.codinghorror.com/blog/2005/07/show-dont-tell.html">Show, don't tell</a>.
    </p>
    </li>
    <li>
    <b>Give me a clear, barrier-free call to action.</b><br><p>
    In the rare cases where the app passes the above three tests with flying colors, I'm invested: I am now willing to spend even <i>more</i> of my time checking it out. What do I do next? Where do I go? Your job is to make this easy for me. I call this "the put a big-ass giant obvious fluorescent lime green button on your home page" rule. You can have more than one, but I'd draw the line at two. And make the text on the button descriptive, like <kbd>Start sharing your favorite Beanie Babies →</kbd> or <kbd>Build your dream furry costume →</kbd>. If you require login at this point, I strongly urge you to skip that barrier and have a live sample I can view without logging in at all, just to get a taste of how things might work. If you're really, <i>really</i> slick you will make it seamless to go from an unregistered to a registered state without losing anything I've done.
    </p>
    </li>
    <li>
    <b>Embrace your audience, even if it means excluding other audiences.</b><br>
    <p>
    Even if you nail all the above, you might not fit into my interest zone through absolutely no fault of your own. If you built the world's most innovative and utterly disruptive Web 5.0 Pokédex, there's a lot of people who won't care one iota about it, because they're <a href="http://xkcd.com/178/">not really into Pokemon</a>. This is not your fault and it is certainly not their fault. You need to embrace the idea that half of all success is knowing your core audience and not trying to water it down so much that it appeals to "everyone". Don't patronize me by trying to sell me on the idea that <i>everyone</i> should care about babies, or invoicing, or sports, or being a student, or whatever. Only the people who need to care will care, and that's who you are talking to. So have the confidence to act like it.
    </p>
    </li>
    </ol>
    <p>I realize that Rails Rumble apps only have a mere 48 hours to build an entire app from scratch. I am not expecting a super professional amazing home page on every one of the entries, nor did I judge it that way. But I do know that <b>a basic sketch of a homepage design is the <i>first</i> thing you should work on in any webapp, because it serves as the essential starting design document and vision statement.</b> Unless you <i>start</i> with a basic homepage that meets the above 5 rules, your app won't survive most judges, much less the <a href="http://www.codinghorror.com/blog/2007/06/designing-for-informavores-or-why-users-behave-like-animals-online.html">herds of informavores</a> running wild on the Internet.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-10-16T16:13:45.000Z</pubDate>
    <guid>https://blog.codinghorror.com/judging-websites/</guid>
    </item>
    <item>
    <title>Building Servers for Fun and Prof... OK, Maybe Just for Fun</title>
    <link>https://blog.codinghorror.com/building-servers-for-fun-and-prof-ok-maybe-just-for-fun/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    In 1998 I briefly worked for FiringSquad, a gaming website founded by Doom and Quake champion Thresh aka <a href="http://en.wikipedia.org/wiki/Dennis_Fong">Dennis Fong</a> and his brother Lyle. I can trace my long-standing interest in <a href="http://www.firingsquad.com/hardware/aeron/default.asp">chairs</a> and <a href="http://www.firingsquad.com/guides/keyboards/default.asp">keyboards</a> to some of the early, groundbreaking articles they wrote. Dennis and Lyle were great guys to work with, and we'd occasionally chat on the phone about geeky hardware hotrodding stuff, like the one time they got so embroiled in PC build one-upmanship that they were actually building rack-mount PCs … <i>for their home</i>.
    </p>
    <p>
    So I suppose it is inevitable that I'd eventually get around to writing an article about <b>building rack-mount PCs</b>. But <i>not</i> the kind that go in your home. No, that'd be as nuts as the now-discontinued <a href="http://en.wikipedia.org/wiki/Windows_Home_Server">Windows Home Server</a> product.
    </p>
    <p>
    <a href="http://www.amazon.com/dp/160530641X/?tag=codihorr-20"><img alt="Mommy, Why is There a Server in the House" title="Mommy, Why is There a Server in the House" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017c327d5a4e970b-800wi.jpg" width="470" height="393"></a>
    </p>
    <p>
    Servers belong in their native habitat, the datacenter. Which can be <a href="http://scobleizer.com/2011/04/16/photo-tour-of-facebooks-new-datacenter/">kind of amazing places in their own right</a>.
    </p>
    <p>
    <a href="http://www.anandtech.com/show/4958/facebooks-open-compute-server-tested"><img alt="Facebook-datacenter-1u-racks" title="Facebook-datacenter-1u-racks" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017d3cabf83c970c-800wi.jpg" width="610" height="563"></a>
    </p>
    <p>
    The above photo is from Facebook's <a href="http://opencompute.org/">Open Compute Project</a>, which is about building extremely energy efficient datacenters. And that starts with <a href="http://www.datacenterknowledge.com/closer-look-open-compute-server-designs/">minimalistic, no-frills 1U server designs</a>, where 1U is the smallest amount of space divisible in a server rack.
    </p>
    <p>
    I doubt many companies are big enough to even consider building their own datacenter, but if Facebook is building their own custom servers out of commodity x86 parts, couldn't we do it too? In a world of inexpensive, rentable virtual machines, like <a href="http://aws.amazon.com/ec2/">Amazon EC2</a>, <a href="https://cloud.google.com/products/compute-engine">Google Compute Engine</a>, and <a href="http://www.windowsazure.com/en-us/">Azure Cloud</a>, <b>does it really make sense to build your own server and colocate it in a datacenter?</b>
    </p>
    It's <a href="https://blog.cloudvertical.com/2012/10/aws-cost-cheat-sheet-2/">kind of tough</a> to tell exactly how much an Amazon EC2 instance will cost you since it varies a lot by usage. But if I use the Amazon Web Services <a href="http://calculator.s3.amazonaws.com/calc5.html">simple monthly calculator</a> and select the Web Application "common customer sample", that provides a figure of <b>$1,414 per month, or $17k/year</b>. If you want to run a typical web app on EC2, that's what you should expect to pay. So let's use that as a baseline.
    <p>
    The <a href="http://aws.amazon.com/ec2/instance-types/">instance types</a> included in the Web Application customer sample are <s>2</s>4 small (for the front end), and <s>1</s>2 large (for the database). Here are the current specs on the large instance:
    </p>
    <ul>
    <li>7.5 GB memory
    </li>
    <li>2 virtual cores with 2 EC2 Compute Units each
    </li>
    <li>850 GB instance storage
    </li>
    <li>64-bit platform
    </li>
    <li>I/O Performance: High
    </li>
    </ul>
    <p>
    You might be wondering what the heck a <a href="http://aws.amazon.com/ec2/faqs/#What_is_an_EC2_Compute_Unit_and_why_did_you_introduce_it">EC2 Compute Unit</a> is; it's Amazon's way of normalizing CPU performance. By their <a href="http://aws.amazon.com/ec2/faqs/#What_is_an_EC2_Compute_Unit_and_why_did_you_introduce_it">definition</a>, what we get in the large instance is akin to an old <a href="http://en.wikipedia.org/wiki/Xeon#Overview">2008 era</a> dual core 2.4 GHz Xeon CPU. Yes, you can pay more and get <a href="http://aws.amazon.com/ec2/instance-types/">faster instances</a>, but switching instances from the small to the high-CPU and from the large to the high-MEM more than doubles the bill to <b>$3,302 per month or $40k/year</b>.
    </p>
    <p>
    Assuming you subscribe to the theory of <a href="http://www.codinghorror.com/blog/2009/06/scaling-up-vs-scaling-out-hidden-costs.html">scaling out versus scaling up</a>, building a bunch of decent bang-for-the-buck commodity servers is what you're supposed to be doing. I avoided directly building servers when we were scaling up Stack Overflow, electing to <a href="http://blog.stackoverflow.com/2009/01/new-stack-overflow-server-glamour-shots/">buy pre-assembled hardware from Lenovo instead</a>. But this time, I decided the state of hardware has advanced sufficiently since 2009 that I'm comfortable cutting out the middleman in 2012 and <b>building the servers myself, from scratch</b>. That's why I just built four servers exactly like this:
    </p>
    <ul>
    <li>Intel <a href="http://ark.intel.com/products/65725/Intel-Xeon-Processor-E3-1280V2-8M-Cache-3_60-GHz">Xeon E3-1280</a> V2 Ivy Bridge 3.6 Ghz / 4.0 Ghz turbo quad-core ($640)
    </li>
    <li>SuperMicro <a href="http://www.amazon.com/dp/B004WKRDA4/?tag=codihorr-20">X9SCM-F-O</a> ($190)
    </li>
    <li>32 GB DDR3-1600 ($292)
    </li>
    <li>SuperMicro <a href="http://www.supermicro.com/products/chassis/1U/111/SC111LT-330C.cfm">SC111LT-330CB</a> 1U rackmount chassis ($200)
    </li>
    <li>Two <a href="http://www.amazon.com/dp/B0077CR6B0/?tag=codihorr-20">Samsung 830</a> 512GB hard drives in a <a href="http://www.codinghorror.com/blog/2009/05/beyond-raid.html">RAID-1 mirror</a> ($540 × 2)
    </li>
    </ul>
    <p>
    (If you are using this as a shopping list, you will also need 4-pin power <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16812200961">extensions</a> for the case, and the SuperMicro 1u <a href="http://www.newegg.com/Product/Product.aspx?Item=N82E16816101298">passive heatsink</a>. The killer feature of SuperMicro motherboards that makes them all server-y in the first place is the built in <a href="http://www.servethehome.com/supermicro-ipmiview-review-remote-server-monitoring-management-ipmi-20-kvm-over-ip/">hardware KVM-over-IP</a>. That's right, unless the server is literally unplugged, you can remote in and install an operating system, tweak the BIOS, power it on and off, and so on. It works. I use it daily.)
    </p>
    <p>
    <img alt="Parts for building 1U server" title="Parts for building 1U server" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017d3cba4355970c-800wi.jpg" width="720" height="549">
    </p>
    <p>
    Based on the above specs, this server has comparable memory to the High-Memory Double Extra Large Instance, comparable CPU power to the High-CPU Extra Large Instance, and comparable disk performance to the High I/O Quadruple Extra Large Instance. This is a very, <i>very</i> high end server <a href="http://aws.amazon.com/ec2/instance-types/">by EC2 standards</a>. It would be prohibitively expensive to run this hardware in the Amazon cloud. But how much will it cost us to build? Just $2,452. Adding 10% for taxes, shipping, etc let's call it $2,750 per server. <b>One brand new top-of-the-line server costs about as much as two months of EC2 web application hosting.</b>
    </p>
    <p>
    Of course, that figure doesn't include the cost in time to build and rack the server, the <a href="http://blog.pinboard.in/2012/06/going_colo/">cost of colocating the server</a>, and the ongoing cost of managing and maintaining the server. But I humbly submit that the one-time cost of paying for three of these servers, plus the cost of colocation, plus a bunch of extra money on top to cover provisioning and maintenance and support, will still be <i>significantly</i> less than $17,000 for a <i>single year</i> of EC2 web application hosting. Every year after the first year will be gravy, until the servers are obsolete – which even conservatively has to be at least three years. Perhaps most importantly, these servers will offer <b>vastly better performance</b> than you could get from EC2 to run your web application, at least not without paying astronomical amounts of money for the privilege.
    </p>
    <p>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b017d3cba48ac970c-pi"><img alt="Newly built rackmount 1U server" title="Newly built rackmount 1U server" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017c328ba936970b-800wi.jpg" width="720" height="489"></a>
    </p>
    <p>
    (If you are concerned about power consumption, don't be. I just measured the power use of the server using my trusty <a href="http://www.codinghorror.com/blog/2005/08/why-estimate-when-you-can-measure.html">Kill-a-Watt device</a>: <b>31 watts</b> (0.28 amps) at idle, <b>87 watts</b> (0.75 amps) under never-gonna-happen artificial 100% CPU load. The three front fans in the SuperMicro case are plugged into the motherboard and only spin up at boot and under extreme load. It's shockingly quiet in typical use for a 1U server.)
    </p>
    <p>
    I realize that to some extent we're comparing apples and oranges. Either you have a perverse desire to <a href="http://blog.pinboard.in/2012/05/a_cloud_of_my_own/">mess around with hardware</a>, or you're more than willing to pay exorbitant amounts of money to have someone else worry about all that stuff (and, to be fair, give you levels of flexibility, bandwidth, and availability that would be impossible to achieve even if you colocate servers at multiple facilities). $51,000 over three years is enough to pay for a <i>lot</i> of colocation and very high end hardware. But maybe the truly precious resource at your organization is people's time, not money, and that $51k is barely a rounding error in your budget.
    </p>
    <p>
    Anyway, I want to make it clear that <b>building and colocating your own servers isn't (always) crazy, it isn't scary, heck, it isn't even particularly <i>hard</i></b>. In some situations it can make sense to build and rack your own servers, provided …
    </p>
    <ul>
    <li>you want absolute top of the line server performance without paying thousands of dollars per month for the privilege
    </li>
    <li>you are willing to invest the time in building, racking, and configuring your servers
    </li>
    <li>you have the capital to invest up front
    </li>
    <li>you desire total control over the hardware
    </li>
    <li>you aren't worried about the flexibility of quickly provisioning new servers to handle unanticipated load
    </li>
    <li>you don't need the redundancy, geographical backup, and flexibility that comes with cloud virtualization
    </li>
    </ul>
    
    <p>
    Why do I choose to build and colocate servers? Primarily to achieve maximum performance. That's the one thing you consistently just <i>do not get</i> from cloud hosting solutions unless you are willing to pay a massive premium, per month, forever: raw, unbridled performance. I'm happy to spend money on nice dedicated hardware because I know that <a href="http://www.codinghorror.com/blog/2008/12/hardware-is-cheap-programmers-are-expensive.html">hardware is cheap, and programmers are expensive</a>.
    </p>
    <p>
    But to be totally honest with you, mostly I build servers because it's fun.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-10-15T08:46:35.000Z</pubDate>
    <guid>https://blog.codinghorror.com/building-servers-for-fun-and-prof-ok-maybe-just-for-fun/</guid>
    </item>
    <item>
    <title>Todon't</title>
    <link>https://blog.codinghorror.com/todont/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    What do you need to do today? Other than read this blog entry, I mean.
    </p>
    <p>
    Have you ever noticed that a huge percentage of <a href="http://lifehacker.com/">Lifehacker</a>-like productivity porn site content is a breathless description of the details of <b>Yet Another To-Do Application</b>? There are dozens upon dozens of the things to choose from, on any platform you can name.
    </p>
    <blockquote class="twitter-tweet" lang="en">
    <p lang="en" dir="ltr">Lifehacker's Law: A new To-Do list app will be released every 24 hours.</p>— Lowell (@howtogeek) <a href="https://twitter.com/howtogeek/status/240118145191395329">August 27, 2012</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>At this point it's getting a little ridiculous; per Lifehacker's Law, you'd need a to-do app just to keep track of all the freaking to-do apps.
    </p>
    <p>
    <img alt="The to-do appgasm" title="The to-do appgasm" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017d3c815b28970c-800wi.png" width="480" height="480" style="border:1px solid silver">
    </p>
    <p>
    I've tried to maintain to-do lists at various points in my life. And I've always failed. Utterly and completely. Even turning it into a game, like the cleverly constructed <a href="http://www.rexbox.co.uk/epicwin/">Epic Win app</a>, didn't work for me.
    </p>
    <iframe width="640" height="360" src="http://www.youtube.com/embed/AmKwF_Si734" frameborder="0" allowfullscreen></iframe>
    <p>
    Eventually I realized that the problem wasn't me. All my to-do lists started out as innocuous tools to assist me in my life, but slowly transformed, each and every time, into thankless, soul-draining exercises in reductionism. <b><a href="http://www.encouragementfromastranger.com/2011/is-your-to-do-list-killing-you/">My to-do list was killing me</a></b>. Adam Wozniak nails it:
    </p>
    <ol>
    <li>Lists give the illusion of progress.
    </li>
    <li>Lists give the illusion of accomplishment.
    </li>
    <li>Lists make you feel guilty for not achieving these things.
    </li>
    <li>Lists make you feel guilty for continually delaying certain items.
    </li>
    <li>Lists make you feel guilty for not doing things you don't want to be doing anyway.
    </li>
    <li>Lists make you prioritize the wrong things.
    </li>
    <li>Lists are inefficient. (Think of what you could be doing with all the time you spend maintaining your lists!)
    </li>
    <li>Lists suck the enjoyment out of activities, making most things feel like an obligation.
    </li>
    <li>Lists don't actually make you more organized long term.
    </li>
    <li>Lists can close you off to spontaneity and exploration of things you didn't plan for. (Let's face it, it's impossible to <i>really</i> plan some things in life.)
    </li>
    </ol>
    <p>
    For the things in my life that actually <i>mattered</i>, I've never needed any to-do list to tell me to do them. If I did, then that'd be awfully strong evidence that I have some serious life problems to face before considering the rather trivial matter of which to-do lifehack fits my personality best. As for the things that didn't matter in my life, well, those just tended to pile up endlessly in the old to-do list. And <b>the collective psychic weight of all these minor undone tasks</b> were caught up in my ever-growing to-do katamari ball, where they continually weighed on me, day after day.
    </p>
    <p>
    Yes, there's that everpresent giant to-do list, hanging right there over your head like a guillotine, growing <a href="http://secretgeek.net/Task_hoard.asp">sharper and heavier every day</a>.
    </p>
    <blockquote>
    <p>
    Like a crazy hoarder I mistake the root cause of my growing mountain of incomplete work. The hoarder thinks he has a storage problem when he really has a 'throwing things away problem'. I say I am 'time poor' as if the problem is that poor me is given only 24 hours in a day. It's more accurate to say… what exactly? It seems crazy for a crazy person to use his own crazy reasoning to diagnose his own crazy condition. Maybe I too easily add new projects to my list, or I am too reluctant to exit from unsuccessful projects. Perhaps I am too reluctant to let a task go, to ship what I've done. They're never perfect, never good enough.
    </p>
    <p>
    And I know I'm not alone in making the easy claim that I am 'time poor'. So many people claim to be time poor, when really we are poor at prioritizing, or poor at decisiveness, or don't know how to say 'no' (…to other people, to our own ideas).
    </p>
    <p>
    If only I had a hidden store of time, or if only I had magical organisation tools, or if only I could improve my productive throughput, then, only then would I be able to get things done, to consolidate the growing backlogs and todo lists into one clear line of work, and plough through it like an arctic ice breaker carving its way through a sheet of ice.
    </p>
    </blockquote>
    <p>
    But are you using the <i>right</i> guillotine? Maybe it'd work better if you tried this newer, shinier guillotine? I'd like to offer you some advice:
    </p>
    <ol>
    <li>There's only <a href="https://www.youtube.com/watch?v=YOuhYuZLNYw">one, and exactly one, item</a> anyone should ever need on their to-do list. Everything else is superfluous.
    </li>
    <li>You shouldn't have a to-do list in the first place.
    </li>
    <li>Declare to-do bankruptcy right now. Throw out your to-do list. It's hurting you.
    </li>
    <li>Yes, seriously.
    </li>
    <li>Maybe it is a little scary, but the right choices are always a little scary, so do it anyway.
    </li>
    <li>No, I wasn't kidding.
    </li>
    <li>Isn't Hall and Oates awesome? I know, rhetorical question. But still.
    </li>
    <li>Look, this is becoming counterproductive.
    </li>
    <li>Wait a second, did I just make a list?
    </li>
    </ol>
    
    <p>
    Here's my challenge. <b>If you can't wake up every day and, using your 100% original equipment God-given organic brain, come up with <a href="http://blog.codinghorror.com/three-things/">the three most important things you need to do that day</a></b> – then you should seriously work on fixing that. I don't mean install another app, or read more productivity blogs and books. You have to figure out what's important to you and what motivates you; ask yourself why that stuff isn't gnawing at you enough to make you get it done. Fix <i>that</i>.
    </p>
    <p>Tools will come and go, but <b>your brain and your gut will be here with you for the rest of your life</b>. Learn to trust them. And if you can't, do whatever it takes to train them until you can trust them. If it matters, if it <i>really matters</i>, you'll remember to do it. And if you don't, well, maybe you'll get to it one of these days. Or not. And that's cool too.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-10-04T14:04:58.000Z</pubDate>
    <guid>https://blog.codinghorror.com/todont/</guid>
    </item>
    <item>
    <title>The PC is Over</title>
    <link>https://blog.codinghorror.com/the-pc-is-over/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    MG Siegler <a href="http://massivegreatness.com/mobile">writes</a>:
    </p>
    <blockquote>
    <p>
    <b>The PC is over.</b> It will linger, but increasingly as a relic.
    </p>
    <p>
    I now dread using my computer. I want to use a tablet most of the time. And increasingly, <a href="http://massivegreatness.com/sent-from-my-ipad">I can</a>. I want to use a smartphone all the rest of the time. And I do.
    </p>
    <p>
    The value in the desktop web is increasingly an illusion. Given the rate at which these mobile devices are improving, a plunge is rapidly approaching.
    </p>
    <p>
    Don’t build an app based on your website. Build <i>the</i> app that acts as if websites never existed in the first place. Build the app for the person who has never used a desktop computer. Because they’re coming. Soon.
    </p>
    </blockquote>
    <p>
    Realize that MG Siegler is a journalist, and a TechCrunch <a href="http://about.me/parislemon">air-quotes</a> journalist at that, so he's well versed in hyperbole. You might say he's a <i>billion</i> times better at hyperbole than the average blogger. In his own way, he is a creator, I suppose: he creates hype.
    </p>
    <p>
    But he's not entirely wrong here.
    </p>
    <p>
    I've noticed the same pattern in my own computing habits. As I wrote in <a href="http://www.codinghorror.com/blog/2012/09/the-last-pc-laptop.html">The Last PC Laptop</a>, it's becoming more and more difficult to justify any situation where a traditional laptop is your best choice – even a modern, svelte, fancypants laptop.
    </p>
    <p>
    Desktops, on the other hand, are perfectly justifiable. That is, if you want <a href="http://www.codinghorror.com/blog/2010/04/three-monitors-for-every-user.html">three monitors</a>, eight blazingly fast CPU cores, 64 GB of memory, and fire-breathing multi-GPU configurations. If you <i>need</i> absurd, obscene amounts of power, a desktop computer is the way to go. And it's probably <a href="http://www.codinghorror.com/blog/2011/07/building-a-pc-part-vii-rebooting.html">cheaper than you think</a>, because desktops are all built from the same interchangeable pool of parts. It's also a lot more fun than laptops, because <a href="http://www.codinghorror.com/blog/2005/01/screwdrivers-vs-couture.html">willingness to tinker</a> combined with lust for ostentatious power is the essence of <b>hot rodding</b>.
    </p>
    <p>
    And it is freakin' awesome.
    </p>
    <p>
    <a href="http://www.flickr.com/photos/stuckincustoms/2402148498/"><img alt="Hot-rod" title="Hot-rod" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017ee3e3e51e970d-800wi.jpg" width="640" height="426"></a>
    </p>
    <p>
    But even as an inveterate PC hot-rodder, I've noticed that in the last few years <b>I've started to lose interest in the upgrade treadmill</b> of ever faster CPUs with more cores, more sophisticated GPUs, more bandwidth, more gigabytes of RAM. Other than solid state drives, which gave us a badly needed order of magnitude <a href="http://www.codinghorror.com/blog/2011/05/the-hot-crazy-solid-state-drive-scale.html">improvement in disk speeds</a>, when was the last time you felt you <i>needed</i> to upgrade a powerful desktop or laptop computer? If I dropped a SSD in it, do you honestly think you could tell the difference in real world non-gaming desktop usage between a high end 2009 personal computer and one from today?
    </p>
    <p>
    Because I'm not sure I could.
    </p>
    <p>
    Imagine the despair of a hot-rodder who regularly sees the streets awash in boring Chrysler K-Cars and Plymouth minivans with more ponies under the hood than a sweet custom rig he built just two years ago.
    </p>
    <p>
    I think we're <i>way</i> past the point of satisfying the computing performance needs of the typical user. I'd say we hit that around the time dual CPU cores became mainstream, perhaps 2008 or so. What do you do when you have all the computing performance anyone could ever possibly need, except for the freakish one-percenters, the video editors and programmers? Once you have "enough" computing power, for whatever value of "enough" we can agree to disagree on, <b>the future of computing is, and always has been, to make the computers smaller and cheaper.</b> This is not some new trend that MG Siegler revealed unto the world from his journalistic fortress of solitude.
    </p>
    <p>
    <img alt="Mainframe-mini-micro" title="Mainframe-mini-micro" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017c32407699970b-800wi.jpg" width="700" height="257"><br>
    </p>
    We've already seen this before in the transition from mainframes that fit in a building, to minicomputers that fit in a room, to microcomputers that fit on your desk. Now we're ready for the next stage: computers that don't just fit in your lap, they <b>fit in your <i>hand</i></b>. The name of the game is no longer to make computers more powerful, but to radically reduce their size and power consumption without compromising the performance too much.
    
    <p>
    <img alt="Laptop-tablet-phone" title="Laptop-tablet-phone" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017ee3e412fa970d-800wi.jpg" width="700" height="231">
    </p>
    <p>
    I mentioned how boring the performance scene has gotten for laptops and desktops. It's so boring that I can't be bothered to dig up representative benchmarks. Let's just assume that, outside of SSDs, there have been at best cost-of-living inflation type improvements in desktop and laptop benchmarks since 2008. Now contrast that with <a href="http://www.pcmag.com/article2/0,2817,2410034,00.asp">the hyperbolic performance improvement in the iPhone since 2008</a>:
    </p>
    <p>
    <img alt="iPhone-performance-2008-2012" title="iPhone-performance-2008-2012" src="https://blog.codinghorror.com/content/images/uploads/2012/10/6a0120a85dcdae970b017ee3e42e5e970d-800wi.png" width="656" height="501">
    </p>
    <p>
    In case the graph didn't make it clear, in the last four years of iPhone, we've seen a <b>factor of 20</b> improvement in Browsermark and a <b>factor of four</b> improvement in GeekBench. In the smartphone world, performance is – in the worst case – <i>almost doubling every year</i>.
    </p>
    <p>
    Ironically enough, these results were <a href="http://www.pcmag.com/article2/0,2817,2410034,00.asp">printed in PC magazine</a>. I'd like to draw your attention to two little letters in the title of said magazine. The first one is Pee, and the second one is Cee. That's right, <i>PC Magazine</i> is now in the business of printing the kind of smartphone performance benchmarks that are enough to make any hotrodder drool. What does that have to do with PCs? Well, it has everything to do with PCs, actually.
    </p>
    <p>
    I have an iPhone 5, and I can personally attest that it is <i>crazy</i> faster than the old iPhone 4 I upgraded from. Once you add in 4G, LTE, and 5 GHz WiFi support, it's so fast that – except for the obvious size limitations of a smaller screen – I find myself not caring that much if I get the "mobile" version of websites any more. Even before the speed, I noticed the dramatically improved display. AnandTech says that if the iPhone 5 display was a desktop monitor, it would be <a href="http://www.anandtech.com/show/6334/iphone-5-screen-performance">the best one they had ever tested</a>. Our phones are now so damn fast and capable as <i>personal computers</i> that I'm starting to wonder why I don't just use the thing I always have in my pocket as my "laptop", plugging it into a keyboard and display as necessary.
    </p>
    <p>
    So maybe MG Siegler is right. The PC <i>is</i> over … at least <b>in the form that we knew it</b>. We no longer need giant honking laptop and desktop form factors for computers any more than we need entire rooms and floors of a building to house mainframes and minicomputers.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-10-01T02:20:51.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-pc-is-over/</guid>
    </item>
    <item>
    <title>Somebody is to Blame for This</title>
    <link>https://blog.codinghorror.com/somebody-is-to-blame-for-this/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>This is not a post about programming, or being a geek. In all likelihood, this is not a post you will enjoy reading. Consider yourselves warned.</p>
    <p>I don't remember how I found this <a href="http://www.youtube.com/watch?v=qdBJ1X33rXM">Moth video of comedian Anthony Griffith</a>.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/qdBJ1X33rXM" frameborder="0" allowfullscreen></iframe>
    <p>It is not a fun thing to watch, especially as a parent. Even though I knew that before I went in, I willingly chose to watch this video. Then I watched it again. And again. And again. I watched it five times, ten times. I am all for <a href="http://www.aaronsw.com/weblog/dalio">leaning into the pain</a>, but I started to wonder if maybe I was addicted to the pain. I think my dumb programmer brain was stuck in an endless loop trying to make sense out of what happened here.</p>
    <p>But you don't make sense of a tragedy like this. You <i>can't</i>. There are no answers.</p>
    <blockquote>
    <p>My humor is becoming dark, and it's biting, and it's becoming hateful. And the talent coordinator is seeing that there's a problem, because NBC is all about nice, and everything is going to be OK. And we're starting to buck horns because he wants everything light, and I want to be honest and tell life, and I'm hurting, and I want <i>everybody else to hurt</i>. Because <b>somebody is to blame for <i>this!</i></b></p>
    </blockquote>
    <p>The unbearable grief demands that someone <i>must</i> be to blame for this unimaginably terrible thing that is happening to you, this deeply, profoundly unfair tragedy. But there's nobody. Just you and this overwhelming burden you've been given. So you keep going, because that's what you're supposed to do. Maybe you get on stage and talk about it. That's about all you <i>can</i> do.</p>
    <p>So that's what I'm going to do.</p>
    <p>Five weeks ago, I was selected for jury duty in a medical malpractice trial.</p>
    <p>This trial was the story of a perfectly healthy man who, in the summer of 2008, was suddenly killed by a massive blood clot that made its way to his heart, after a surgery to repair a broken leg. Like me, he would have been 41 years old today. Like me, he married his wife in the summer of 1999. Like me, he had three children; two girls and a boy. Like me, he had a promising, lucrative career in IT.</p>
    <p>I should have known I was in trouble during jury selection. When they called your name, you'd come up from the juror pool – about 50 people by my estimation – and sit in the jury booth while both lawyers asked you some questions to determine if you'd be a fair and impartial juror for this trial. What I hadn't noticed at the time, because she was obscured by a podium, is that the wife was sitting directly in front of the jury. I heard plenty of people get selected and make up some bogus story about how they couldn't possibly be fair and impartial to get out of this five week obligation. And they did, if they stuck to their story. But sitting there myself, in front of the wife of this dead man, I just couldn't do it. I couldn't bring myself to lie when I saw on her face that her desire not to be there was a million times more urgent than mine.</p>
    <p>Now, I'm all for civic duty, but five weeks in a jury seemed like a bit more than my fair share. Even worse, I was an alternate juror, which meant all of the responsibility of showing up every day and listening, but none of the actual responsibility of contributing to the eventual verdict. I was expecting crushing boredom, and there was certainly plenty of that.</p>
    <p>On day one, during opening remarks, we were treated to multiple, giant projected photographs of the three happy children with their dead father – directly in front of the very much still alive wife. She had to leave the courtroom at one point.</p>
    <p>The first person we heard testimony from was this man's father, who was and is a practicing doctor. He was there when his son was rushed to the emergency room. He was allowed to observe as the emergency room personnel worked, so he described to the jury the medical process of treatment, his son thrashing around on the emergency room table being intubated, his heart stopping and being revived. As a doctor, he knows what this means.</p>
    <p>On day two, we heard from the brother-in-law, also a doctor, and close friend of the family. He described coming home from the hospital to explain to the children that their father was dead, that he wasn't coming home. The kids were not old enough to understand what death means, so for a year afterward, every time they drove by the hospital, they would ask to visit their dad.</p>
    <p>I did not expect to learn what death truly was in a courtroom in Martinez, California, at age 41. But I did. Death is a room full of strangers listening to your loved ones describe, in clinical detail and with tears in their eyes, your last moments. Boredom, I can deal with. This is something else entirely.</p>
    <p>As a juror, you're ordered not to discuss the trial with anyone, so that you can form a fair and impartial opinion based on the shared evidence that everyone saw in the courtroom together. So I'm taking all this in and I'm holding it down, like I'm supposed to. But it's hard. I feel like becoming a parent has <a href="http://www.codinghorror.com/blog/2011/10/on-parenthood.html">opened emotional doors in me that I didn't know existed</a>, so it's getting to me.</p>
    <p>Sometime later, the wife finally testifies. She explains that on the night of the incident, her husband finally felt well enough after the surgery on his right leg to read a bedtime story to their 4 year old son. So she happily leaves father and son to have their bedtime ritual together. Later, the son comes rushing in and tells her there's something wrong with dad, and the look on his face is enough to let her know that it's dire. She found him collapsed on the floor of her son's room and calls 911.</p>
    <p>A week later, I was putting our 4 year old son Henry to bed. I didn't realize it at the time, but this was the first time I had put him to bed since the trial started. Henry isn't quite old enough to have a stable sleep routine, so sometimes bedtime goes well, and sometimes it doesn't. It went well that particular night, so I'm happy lying there with him in the bed waiting for his breathing to become regular so I know he's fully asleep. And then the next thing I know I'm breaking down. Badly. I'm desperately trying to hold it together because I don't want to scare him, and he doesn't need to know about any of this. But I can't stop thinking about what it would feel like for my wife to see pictures of me with our children if I died. I can't stop thinking about what it would feel like to watch Henry die on an emergency room table at age 38. I can't stop thinking about what it would feel like to explain to someone else's children that their father is never coming home again. Most of all, I can't stop thinking about the other 4 year old boy who will never stop blaming himself because he saw his Dad collapse on the floor of his room, and then never saw him again for the rest of his life.</p>
    <p>Somebody is to blame for this. <i>Somebody must be to blame for this.</i></p>
    <p>Now I urgently want this trial to be over. I'm struggling to understand the purpose of it all. Nothing we see or do in this courtroom is bringing a husband and father back from the dead. The plaintiff could be home with her children. The parade of doctors and hospital staff making their way through this courtroom could be helping patients. The jurors could be working at their jobs. My God how I would love to be doing my job rather than this, anything in the world other than this. A verdict for either party has immense cost. Nobody is in this courtroom because they want to be here. So <i>why?</i></p>
    <p>I don't know these people. I don't care about these people. I mean, it's in my job description as a juror: I am fair and impartial <i>because</i> I don't care what happens to them. But finally I realized that this trial is <a href="https://www.youtube.com/watch?v=KgzQuE1pR1w">part of our ride</a>.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/KgzQuE1pR1w" frameborder="0" allowfullscreen></iframe>
    <p>We get on the ride because we know there will be thrills and chills. Nobody gets on a rollercoaster that goes in a straight line. That's what you sign up for when you get on the ride with the rest of us: there will be highs, and there will be lows. And those lows – whether they are, God forbid, your own, or someone else's –  are what make the highs so sweet. The ride is what it is because the pain of those valleys teaches us.</p>
    <p>Sharing this tragic, horrible, private thing that happened to these poor people is how we cope. Watching this play out in public, among your peers, among other fellow human beings, is what it takes to for all of us to survive and move on. We're here in this courtroom together because we <i>need</i> to be here. It's part of the ride.</p>
    <p>I've heard and seen things in that courtroom I think I will remember for the rest of my life. It's been difficult to deal with, though I am sure it is the tiniest reflected fraction of what you and your family went through. I am so, so sorry this happened to you. But I want to thank you for sharing it with me, because I now know that I am to blame. We're all to blame.</p>
    <p>That's what makes us human.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-09-26T23:26:38.000Z</pubDate>
    <guid>https://blog.codinghorror.com/somebody-is-to-blame-for-this/</guid>
    </item>
    <item>
    <title>The Last PC Laptop</title>
    <link>https://blog.codinghorror.com/the-last-pc-laptop/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I've been chasing the perfect PC laptop for over a decade now.
    </p>
    <p>
    Though I've tolerated lugging around five to seven pound machines because I had to, laptops were always about portability first and most of all to me. I quickly gravitated to so-called ultraportable laptops as soon as they became available. The first one was the 2003 <a href="http://compreviews.about.com/cs/laptops/gr/aaprDellIns300m.htm">Dell Inspiron 300M</a>. It was the first laptop I found that delivered a decent 3-ish pound package without too many compromises. How I loved this little thing.
    </p>
    <p>
    <a href="http://www.cnet.com/laptops/dell-inspiron-300m-series/4505-3121_7-30468819.html"><img alt="Inspiron-300m" title="Inspiron-300m" src="https://blog.codinghorror.com/content/images/uploads/2012/09/6a0120a85dcdae970b017c3211f59e970b-800wi.jpg" width="500" height="627"></a>
    </p>
    <p>
    But there was a downside to that 2003-era ultraportability – the default battery in the system provided about 2 hours of runtime. Switching to the larger battery extended that to a much more respectable 5.5 hours, but it also added a pound to the system and protruded from the rear a bit.
    </p>
    <p>
    I've pursued the same dream of <b>reasonable power with extreme portability</b> ever since, with varying degrees of success. The PC industry <a href="http://www.codinghorror.com/blog/2007/01/there-are-no-design-leaders-in-the-pc-world.html">isn't exactly known for its design leadership</a>, and it can be downright schizophrenic at times. So if you were a fan of laptops that were actually thin and light and <i>portable</i>, it's been rough going for a long time. 2007's <a href="http://www.codinghorror.com/blog/2007/08/dell-xps-m1330-review.html">Dell XPS M1330</a> was a brief bright spot, but honestly, it's only in the last few months I've found an ultraportable that lived up to my expectations, one that I feel confident in recommending. That laptop is the <a href="http://www.amazon.com/dp/B00863L2PK/?tag=codihorr-20">Asus Zenbook Prime UX31A</a>.
    </p>
    <p>
    <a href="http://www.amazon.com/dp/B00863L2PK/?tag=codihorr-20"><img alt="ASUS Zenbook Prime UX31A" title="Asus-zenbook-prime-ux31a" src="https://blog.codinghorror.com/content/images/uploads/2012/09/6a0120a85dcdae970b017ee3b5e071970d-pi.jpg" width="720" height="580"></a>
    </p>
    <p>
    Having lived with this laptop for about two months now, I can safely say it is without question <b>the best PC laptop I've ever owned</b>. Consider the <a href="http://techreport.com/review/23584/asus-zenbook-prime-ux31a">Tech Report review</a> and the <a href="http://www.engadget.com/2012/08/12/asus-zenbook-prime-ux31a-ultrabook-review/">Engadget review</a>, both rave. Here's what you need to know:
    </p>
    <ul>
    <li>Retina-esque 1920x1080 resolution in an amazingly high quality 13.3" IPS display</li>
    <li>Intel's latest 17 watt Ivy Bridge processor with (finally!) decent integrated graphics</li>
    <li>128 GB SSD with fast 6Gbps interface</li>
    <li>Just under 3 pounds</li>
    <li>Decent 6 hour runtime</li>
    <li>Classy brushed metal case and cover</li>
    </ul>
    <p>
    All of this for <a href="http://www.amazon.com/dp/B00863L2PK/?tag=codihorr-20">about $1,050</a> at the time of writing. If you're suffering through a sub-par TN display on your current laptop, the awesome IPS display is almost worth an upgrade on its own. After switching to <a href="http://www.codinghorror.com/blog/2012/07/the-ips-lcd-revolution.html">bargain Korean IPS displays</a> on the desktop, I'm desperately hoping my poor eyeballs never have to endure another awful TN LCD display for the rest of my life.
    </p>
    <p>
    This is a machine that pleasantly surprised me at every turn. The keyboard is solid feeling with a dimmable backlight, and the achilles heel of all PC laptops, the trackpad, is about as good as it ever gets on PCs. Which is to say still not great. Even the power adapter is classy, although highly derivative of Apple. While this is substantially closer to the ideal ultraportable hardware I've had in my brain since 2003, it still exhibits some of the same problems I experienced with that Inspiron 300M almost 10 years ago:
    </p>
    <ul>
    <li>An operating system pre-loaded with <a href="http://www.codinghorror.com/blog/2006/03/stop-having-trouble.html">useless craplets and pointless bloatware</a>, all in the name of hypothetical value add by the vendor and/or marketing subsidies.
    </li>
    <li>Several branding stickers I had to peel off the machine after I opened the box. (Note that the press photos for a machine <i>never</i> include these ugly stickers. Go figure.)
    </li>
    <li>A trackpad that works kinda-sorta OK, but never quite inspires enough confidence that I can stop carrying an external mouse around in my laptop bag with me.
    </li>
    </ul>
    <p>
    The first thing I did when I got the laptop was <b>wipe it and install the Windows 8 preview</b>, and soon after updated it to the final Windows 8 release. Despite all the grousing about the tablet-centric nature of Windows 8 – some of which is warranted, but can <a href="http://www.hanselman.com/blog/Windows8ProductivityWhoMovedMyCheeseOhThereItIs.aspx">easily be ignored entirely</a> – I am an unabashed fan of the operating system. It is a big improvement over Windows 7 in my day to day use. The more I use Windows 8 the more I believe it's the <a href="http://www.codinghorror.com/blog/2012/07/betting-the-company-on-windows-8.html">biggest step forward in Windows</a> since Windows 95. So what I've put together here is probably the best, most platonic ideal form of Wintel laptop hardware you can buy in mid-2012.
    </p>
    <p>
    (In the interests of full disclosure, I actually own two of these. One for my wife and one for me. Because I am an inveterate hotrodder, I had to have more memory and a larger, faster SSD. So I bought the <a href="http://www.amazon.com/dp/B00863L2MS/?tag=codihorr-20">UX32VD model</a> which has a discrete Nvidia 620M GPU and, most importantly, <i>can</i> be upgraded internally. So I dropped in a Samsung 830 512 GB SSD and 8 GB DIMM. This led to a slightly oddball final configuration of 10 GB RAM and an internal embedded 32 GB SSD plus the 512 GB SSD. It hurts battery life by at least an hour, too. You should also know that the teeny-tiny Torx screws on the back of this laptop are not to be trifled with. Bring your jeweler's loupe. In case it wasn't already abundantly clear, let me spell it out for you: going this route is not recommended unless you are as crazy as I am. The base model is really nice! Trust me!)
    </p>
    <p>
    If pressed, I might admit the combination of <a href="http://www.amazon.com/dp/B00863L2PK/?tag=codihorr-20">ASUS Zenbook Prime</a> hardware and modern Windows 8 amenities lives up to the whole Intel "Ultrabook" marketing schtick. But I'm not sure that's enough any more.
    </p>
    <p>
    Every time I leave the house – heck, every time I leave the <i>room</i> – I have to decide what kind of computer I'm going to take with me, if any. Besides the ultraportable laptops, I now own an iPhone 5, several retina iPads, and a Nexus 7. I'm sure there are many more of these devices on the way. In the calculus of deciding what kind of computing device I want with me, even the most awesome ultraportable laptop I can find is no longer enough. Consider:
    </p>
    <ul>
    <li>
    <b>Want 10 hours of real world battery life?</b> Even when doing actual work that would ramp the CPU up? Many tablets and phones can achieve that magical 10 hour battery life figure, but it will be <a href="http://blog.lenovo.com/products/when-will-batteries-last-the-work-week">a long, <i>long</i> time before you reliably get that out of any ultraportable laptop</a>. Personally, I blame x86.<br><br>
    </li>
    <li>
    <b>Want to start doing stuff immediately?</b> Even Windows 8, which has radically improved wake times, is laughably slow to start up compared to tablets and phones which are practically instant-on by design.<br><br>
    </li>
    <li>
    <b>Want the smallest most portable device you can get away with?</b> It's unlikely that will be a laptop, even an ultraportable, because of the implied keyboard and connectivity ports, plus the big screen and hinge. There is no form factor more compact than the touchscreen tablet. And you've got to take your phone along in any case, because that's how your family and loved ones will contact you, right? Have you <i>seen</i> the iPhone 5 benchmarks? It's faster than most tablets!<br><br>
    </li>
    <li>
    <b>Want to be always connected to the Internet?</b> Sure you do; how else can you get to Stack Overflow and <a href="http://stackexchange.com">Stack Exchange</a> for all of life's essential questions? Then you probably need some kind of cellular support, for 3G or 4G or LTE or whatever the telephone companies are calling high speed Internet access these days. That is quite rare on traditional laptops, but obviously common on phones and much easier to find on tablets.<br><br>
    </li>
    <li>
    <b>Want easy access?</b> Just <i>try</i> opening a laptop on a crowded subway train or bus. Or with, say, 3 toddlers running around your house. I dare you. But phones and 7" tablets offer easy one handed operation; you can whip them out and fill whatever time you have available, whereas cracking open a laptop feels like a sizable commitment in time and space to doing something.
    </li>
    </ul>
    <p>
    My laptop is increasingly a device I only take when I know I'll need to do a lot of typing, and/or I'll need a lot of screen space to work. But even a phone could do that if it had decent support for bluetooth keyboards and external displays, couldn't it? And even a few programmers, the audience who would most need all the power and flexibility of laptops, are <a href="http://yieldthought.com/post/12239282034/swapped-my-macbook-for-an-ipad">switching to tablets</a>.
    </p>
    <p>
    I've waited 12 years for the PC industry to get its collective act together and, if nothing else, successfully copy Apple's laptop hardware designs. Now that they (mostly) have, I wonder: is it too late? Has the PC industry irrevocably shifted underneath them while they were so busy pumping out endless refinements to generic x86 boxes? I love this new laptop, and in many ways it is the perfect ultraportable hardware I dreamed of having in 2003. But every time I power it up and use it, I feel a little sad. I can't shake the feeling that this might end up being <b>the last PC laptop I ever own</b>.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-09-23T00:41:25.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-last-pc-laptop/</guid>
    </item>
    <item>
    <title>Computer Crime, Then and Now</title>
    <link>https://blog.codinghorror.com/computer-crime-then-and-now/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I've already <a href="http://www.codinghorror.com/blog/2012/08/i-was-a-teenage-hacker.html">documented</a> my brief, youthful dalliance with the illegal side of computing as it existed in the late 1980s. But was it <i>crime?</i> Was I truly a <i>criminal?</i> I don't think so. To be perfectly blunt, I wasn't talented enough to be any kind of threat. I'm still not.
    </p>
    <p>
    There are two classic books describing hackers active in the 1980s who <i>did</i> have incredible talent. Talents that made them dangerous enough to be considered criminal threats.
    </p>
    <p>
    </p>
    <table>
    <tr>
    <td valign="top">
    <a href="http://www.amazon.com/dp/1416507787/?tag=codihorr-20"><img alt="The Cuckoo's Egg: Tracking a Spy Through the Maze of Computer Espionage" title="The Cuckoo's Egg: Tracking a Spy Through the Maze of Computer Espionage" src="https://blog.codinghorror.com/content/images/uploads/2012/09/6a0120a85dcdae970b017c31ce3e31970b-800wi.jpg"></a>
    <br>
    <a href="http://www.amazon.com/dp/1416507787/?tag=codihorr-20">The Cuckoo's Egg: Tracking a Spy Through the Maze of Computer Espionage</a>
    </td>
    <td valign="top">
    <a href="http://www.amazon.com/dp/0316037702/?tag=codihorr-20"><img alt="Ghost in the Wires: My Adventures as the World's Most Wanted Hacker" title="Ghost in the Wires: My Adventures as the World's Most Wanted Hacker" src="https://blog.codinghorror.com/content/images/uploads/2012/09/6a0120a85dcdae970b01761755453d970c-800wi.png" width="300" height="465"></a><br>
    <a href="http://www.amazon.com/dp/0316037702/?tag=codihorr-20">Ghost in the Wires: My Adventures as the World's Most Wanted Hacker</a>
    </td>
    </tr>
    </table>
    
    <p>
    Cuckoo is arguably the first case of hacking that was a clearly malicious crime circa 1986, and certainly the first known case of computer hacking as international espionage. I read this when it was originally published in 1989, and it's still a gripping investigative story. Cliff Stoll is a visionary writer who saw <b>how trust in computers and the emerging Internet could be vulnerable to real, actual, honest-to-God <i>criminals</i>.</b>
    </p>
    <p>
    I'm not sure <a href="http://en.wikipedia.org/wiki/Kevin_Mitnick">Kevin Mitnick</a> did anything all that illegal, but there's no denying that he was the world's first high profile computer criminal.
    </p>
    <p>
    <a href="http://en.wikipedia.org/wiki/Kevin_Mitnick"><img alt="Kevin Mitnick FBI wanted poster" title="Kevin Mitnick FBI wanted poster" src="https://blog.codinghorror.com/content/images/uploads/2012/09/6a0120a85dcdae970b017744ac82bb970d-800wi.png"></a>
    </p>
    <p>
    By 1994 he made the FBI's 10 Most Wanted list, and there were <a href="http://www.nytimes.com/1994/07/04/us/cyberspace-s-most-wanted-hacker-eludes-fbi-pursuit.html?pagewanted=all&amp;src=pm">front page New York Times articles about his pursuit</a>. If there was ever a moment that computer crime and "hacking" entered the public consciousness as an ongoing concern, this was it.
    </p>
    <p>The whole story is told in minute detail by Kevin himself in <a href="http://www.amazon.com/dp/0316037702/?tag=codihorr-20">Ghost in the Wires</a>. There was a sanitized version of Kevin's story presented in <a href="http://www.codinghorror.com/blog/2008/12/our-hacker-odyssey.html">Wizzywig comix</a> but this is the original directly from the source, and it's well worth reading. I could barely put it down. Kevin has been fully reformed for many years now; he wrote <a href="http://www.amazon.com/s/ref=ntt_athr_dp_sr_1?_encoding=UTF8&amp;field-author=Kevin%20Mitnick&amp;ie=UTF8&amp;search-alias=books&amp;sort=relevancerank">several books</a> documenting his techniques and now <a href="http://mitnicksecurity.com/">consults</a> with companies to help improve their computer security.
    </p>
    <p>
    These two books cover the genesis of all computer crime as we know it. Of course it's a much bigger problem now than it was in 1985, if for no other reason than there are far more computers far more interconnected with each other today than anyone could have possibly imagined in those early days. But what's really surprising is <b>how little has changed in the techniques of computer crime since 1985</b>.
    </p>
    The best primer of modern – and by that I mean year 2000 and later – computer crime is <a href="http://www.amazon.com/dp/0307588688/?tag=codihorr-20">Kingpin: How One Hacker Took Over the Billion-Dollar Cybercrime Underground</a>. Modern computer crime is more like the classic sort of crime you've seen in black and white movies: it's mostly about stealing large sums of money. But instead of busting it out of bank vaults Bonnie and Clyde style, it's now done electronically, mostly through ATM and credit card exploits.
    <p>
    <a href="http://www.amazon.com/dp/0307588688/?tag=codihorr-20"><img alt="Kingpin: How One Hacker Took Over the Billion-Dollar Cybercrime Underground" title="Kingpin: How One Hacker Took Over the Billion-Dollar Cybercrime Underground" src="https://blog.codinghorror.com/content/images/uploads/2012/09/6a0120a85dcdae970b017617554628970c-800wi.jpg" width="300" height="456"></a>
    </p>
    <p>
    Written by <a href="http://en.wikipedia.org/wiki/Kevin_Poulsen">Kevin Poulson</a>, another famous reformed hacker, <a href="http://www.amazon.com/dp/0307588688/?tag=codihorr-20">Kingpin</a> is also a compelling read. I've read it twice now. The passage I found most revealing is this one, written after the protagonist's release from prison in 2002:
    </p>
    <blockquote>
    <p>
    One of Max’s former clients in Silicon Valley tried to help by giving Max a $5,000 contract to perform a penetration test on the company’s network. The company liked Max and didn’t really care if he produced a report, but the hacker took the gig seriously. He bashed at the company’s firewalls for months, expecting one of the easy victories to which he’d grown accustomed as a white hat. But he was in for a surprise. The state of corporate security had improved while he was in the joint. He couldn’t make a dent in the network of his only client. His 100 percent success record was cracking.
    </p>
    <p>
    Max pushed harder, only becoming more frustrated over his powerlessness. Finally, he tried something new. <b>Instead of looking for vulnerabilities in the company’s hardened servers, he targeted some of the employees individually.</b>
    </p>
    <p>These “client side” attacks are what most people experience of hackers—a spam e-mail arrives in your in-box, with a link to what purports to be an electronic greeting card or a funny picture. The download is actually an executable program, and if you ignore the warning message
    </p>
    </blockquote>
    <p>
    All true; no hacker today would bother with frontal assaults. The chance of success is miniscule. Instead, they target the soft, creamy underbelly of all companies: the users inside. Max, the hacker described in Kingpin, bragged "I've been confident of my 100 percent [success] rate ever since." This is the new face of hacking. Or is it?
    </p>
    <p>
    One of the most striking things about <a href="http://www.amazon.com/dp/0316037702/?tag=codihorr-20">Ghost In The Wires</a> is not how skilled a computer hacker Kevin Mitnick is (although he is undeniably great), but how devastatingly effective he is at <b>tricking people into revealing critical information in casual conversations</b>. Over and over again, in hundreds of subtle and clever ways. Whether it's 1985 or 2005, the amount of military-grade security you have on your computer systems matters not at all when someone using those computers <a href="http://www.codinghorror.com/blog/2005/07/the-dancing-bunnies-problem.html">clicks on the dancing bunny</a>. Social engineering is <a href="http://www.codinghorror.com/blog/2007/05/phishing-the-forever-hack.html">the most reliable and evergreen hacking technique ever devised</a>. It will outlive us all.
    </p>
    <p>
    For a 2012 era example, consider <a href="http://www.emptyage.com/post/28679875595/yes-i-was-hacked-hard">the story of Mat Honan</a>. It is not unique.
    </p>
    <blockquote>
    At 4:50 PM, someone got into my iCloud account, reset the password and sent the confirmation message about the reset to the trash. My password was a 7 digit alphanumeric that I didn’t use elsewhere. When I set it up, years and years ago, that seemed pretty secure at the time. But it’s not. Especially given that I’ve been using it for, well, years and years. My guess is they used brute force to get the password and then reset it to do the damage to my devices.
    </blockquote>
    <p>
    I heard about this on Twitter when the story was originally developing, and my initial reaction was skepticism that anyone had bothered to brute force anything at all, since <a href="http://www.codinghorror.com/blog/2006/07/brute-force-key-attacks-are-for-dummies.html">brute forcing is for dummies</a>. Guess what it turned out to be. Go ahead, guess!
    </p>
    <p>
    Did you by any chance guess <a href="http://www.wired.com/gadgetlab/2012/08/apple-amazon-mat-honan-hacking/all/">social engineering … of the account recovery process</a>? Bingo.
    </p>
    <blockquote>
    <p>
    After coming across my [Twitter] account, the hackers did some background research. My Twitter account linked to my personal website, where they found my Gmail address. Guessing that this was also the e-mail address I used for Twitter, Phobia went to Google’s account recovery page. He didn’t even have to actually attempt a recovery. This was just a recon mission.
    </p>
    <p>
    Because I didn’t have Google’s two-factor authentication turned on, when Phobia entered my Gmail address, he could view the alternate e-mail I had set up for account recovery. Google partially obscures that information, starring out many characters, but there were enough characters available, m••••n@me.com. Jackpot.
    </p>
    <p>
    Since he already had the e-mail, all he needed was my billing address and the last four digits of my credit card number to have Apple’s tech support issue him the keys to my account.
    </p>
    <p>
    So how did he get this vital information? He began with the easy one. He got the billing address by doing a whois search on my personal web domain. If someone doesn’t have a domain, you can also look up his or her information on Spokeo, WhitePages, and PeopleSmart.
    </p>
    <p>
    Getting a credit card number is tricker, but it also relies on taking advantage of a company’s back-end systems.  … First you call Amazon and tell them you are the account holder, and want to add a credit card number to the account. All you need is the name on the account, an associated e-mail address, and the billing address. Amazon then allows you to input a new credit card. (Wired used a bogus credit card number from a website that generates fake card numbers that conform with the industry’s published self-check algorithm.) Then you hang up.
    </p>
    <p>
    Next you call back, and tell Amazon that you’ve lost access to your account. Upon providing a name, billing address, and the new credit card number you gave the company on the prior call, Amazon will allow you to add a new e-mail address to the account. From here, you go to the Amazon website, and send a password reset to the new e-mail account. This allows you to see all the credit cards on file for the account — not the complete numbers, just the last four digits. But, as we know, Apple only needs those last four digits.
    </p>
    </blockquote>
    <p>
    Phobia, the hacker Mat Honan documents, was a minor who did this for laughs. One of his friends is <a href="http://www.wired.com/gadgetlab/2012/09/cosmo-the-god-who-fell-to-earth/all/">a 15 year old hacker who goes by the name of Cosmo</a>; he's the one who discovered the Amazon credit card technique described above. And what are teenage hackers up to these days?
    </p>
    <blockquote>
    <p>
    Xbox gamers know each other by their gamertags. And among young gamers it’s a lot cooler to have a simple gamertag like “Fred” than, say, “Fred1988Ohio.” Before Microsoft beefed up its security, getting a password-reset form on Windows Live (and thus hijacking a gamer tag) required only the name on the account and the last four digits and expiration date of the credit card on file. Derek discovered that the person who owned the “Cosmo” gamer tag also had a Netflix account. And that’s how he became Cosmo.
    </p>
    <p>
    </p>
    <p>
    “I called Netflix and it was so easy,” he chuckles. “They said, ‘What’s your name?’ and I said, ‘Todd [Redacted],’ gave them his e-mail, and they said, ‘Alright your password is 12345,’ and I was signed in. I saw the last four digits of his credit card. That’s when I filled out the Windows Live password-reset form, which just required the first name and last name of the credit card holder, the last four digits, and the expiration date.”
    </p>
    <p>
    This method still works. When Wired called Netflix, all we had to provide was the name and e-mail address on the account, and we were given the same password reset.
    </p>
    </blockquote>
    <p>
    The techniques are <a href="http://www.wired.com/gadgetlab/2012/09/cosmo-the-god-who-fell-to-earth/all/">eerily similar</a>. The only difference between Cosmo and Kevin Mitnick is that they were born in different decades. Computer crime is a whole new world now, but the techniques used today are almost identical to those used in the 1980s. If you want to engage in computer crime, don't waste your time developing ninja level hacking skills, <b>because computers are not the weak point</b>.
    </p>
    <p>
    People are.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-09-12T00:20:14.000Z</pubDate>
    <guid>https://blog.codinghorror.com/computer-crime-then-and-now/</guid>
    </item>
    <item>
    <title>I Was a Teenage Hacker</title>
    <link>https://blog.codinghorror.com/i-was-a-teenage-hacker/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    Twenty-four years ago today, I had a very bad day.
    </p>
    <p>
    On August 8, 1988, I was a senior in high school. I was working my after school and weekend job at Safeway as a cashier, when the store manager suddenly walked over and said I better stop ringing up customers and talk to my mother on the store phone right now. Mom told me to come home immediately because, well, there were police at the front door asking for me with some legal papers in hand.
    </p>
    <p>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b0176171d0a24970c-pi"><img alt="He did unlawfully between June 7, 1988 and June 8, 1988 use a computer or computer network without authority and with the intent to temporarily or permanently remove computer data, in violation of Section 18.2-152.4 of the 1950 Code of Virginia, as amended." title="He did unlawfully between June 7, 1988 and June 8, 1988 use a computer or computer network without authority and with the intent to temporarily or permanently remove computer data, in violation of Section 18.2-152.4 of the 1950 Code of Virginia, as amended." src="https://blog.codinghorror.com/content/images/uploads/2012/08/6a0120a85dcdae970b0176171d08f5970c-800wi.jpg" width="720" height="163"></a>
    </p>
    <p>
    Like I said, definitely not a good day. The only sliver of good news was that I was still 17 at the time, so I enjoyed the many protections that the law provides to a minor. Which I shall now throw away by informing the world that I am a dirty, filthy, reprehensible adult criminal. <i>Thanks, law!</i>
    </p>
    <p>
    One of the problems you had in the pre-Internet 1980s as a hardcore computer geek was that <b>all the best bulletin boards and online services were kind of expensive</b>. Either because you had to pay an hourly fee to access them, like <a href="https://blog.codinghorror.com/i-was-a-teenage-hacker/v">CompuServe</a>, or because they were a long distance modem call. Or both. Even after <a href="http://en.wikipedia.org/wiki/Bell_System_divestiture#Effects">the 1984 AT&amp;T breakup</a>, long distance at <a href="http://ask.metafilter.com/211826/Long-Distance-Rates-For-the-Late-Seventies-and-Early-Eighties">around 20-30 cents a minute</a> was a far, far cry from today's rates. (Does anyone actually even worry about how much voice calls cost any more, to anywhere in the world? This, my friends, is progress.)
    </p>
    <p>
    Remember, too, that this is back when 9600 baud modems were <i>blazing</i>, state of the art devices. For perspective, the ultra-low-power wireless bluetooth on your phone is about 80 times faster. If you wanted to upload or download any <s>warez</s> software, that meant potentially <b>hours on your modem at rates of around $20/hour.</b> Adjusted for inflation, that's closer to $40 in 2012 dollars. My family wasn't well off enough to afford a second telephone line, so most of my calling was done late at night both because the rates were lower, and also so that I wouldn't be monopolizing the telephone. Nothing was worse than the dreaded "mom picked up the phone" disconnect to an <s>elite</s> difficult-to-access BBS with limited slots.</p>
    <p>
    One way or another, I eventually got involved with the seedier side of the community, even joining a lesser Apple // pirate group. Probably my main claim to fame is that while <a href="http://www.codinghorror.com/blog/2009/11/preserving-our-digital-pre-history.html">trolling BBSes</a>, I personally discovered and recruited a guy who turned out to be an amazing cracker. He was so good he eventually got recruited away.
    </p>
    <p>
    <a href="http://www.cerebus.de/psi5/words/docu/booklet.html"><img alt="Psi-5-trading-company" title="Psi-5-trading-company" src="https://blog.codinghorror.com/content/images/uploads/2012/08/6a0120a85dcdae970b0176171d36c2970c-800wi.png" width="640" height="400"></a>
    </p>
    <p>
    I was, at best, a footnote to a footnote to a footnote in Apple // history. This was mainly a process of self-discovery for me. I learned I was the type of geek who doesn't even bother attending his high school prom, partially because I was still afraid of girls even as a high school senior, yes, but mainly because I was so addicted to computers and playing my tiny role in these nascent online communities. I was, and am, OK with that. This is the circuitous path of 30 years that led me to create Stack Overflow. And there's more, so much more, but I can't talk about it yet.
    </p>
    <p>
    But addicted, I think, is too weak a word for what I felt about being a part of these oddball, early online home computer communities. It was more like an all-consuming maniacal blood lust. So <b>obtaining access to free, unlimited long distance calling</b> rapidly became an urgent priority in my teenage life. I needed it. I needed it so bad. I had to have it to talk on the phone to the other members of my motley little crew, who were spread all over the USA, as well as for calling BBSes.
    </p>
    <p>
    I can't remember exactly how I found it, probably on one of the BBSes, but I eventually discovered a local 804 area code number for "calling cards" that accepted a 5 digit PIN, entered via touch-tone phone. Try over and over, and you might find some valid PIN codes that let you attain the holy grail of free long distance calling. Only one small problem: it's a crime. But, at least to my addled teenage brain, this was a victimless crime, one that I <i>had</i> to commit. The spice must flow!
    </p>
    <p>
    All I had to do is write software to tell the modem to dial over and over and try different combinations. Because I was a <a href="http://www.codinghorror.com/blog/2009/01/a-scripter-at-heart.html">self-taught programmer</a>, this was no problem. But because I was an <i>overachieving</i> self-taught programmer, I didn't just write a program. No, I went off and built <b>a full-blown toolkit in AppleBasic</b>, with complete documentation and the best possible text user interface I could muster, and then uploaded it to my favorite BBSes so every other addict could get their online modem fix, too. I called it <b>The Hacking Construction Set</b>, and I spent <i>months</i> building it. I didn't just <a href="http://www.codinghorror.com/blog/2004/12/gold-plating.html">gold plate</a>, I <i>platinum</i> plated this freaking thing, man. (Yes, I know the name isn't really correct. <a href="http://www.codinghorror.com/blog/2008/12/our-hacker-odyssey.html">I read as many 2600 textfiles as the next guy</a>. This is mere phreaking, not hacking, but I guess I was shooting for poetic license. Maybe you could use the long distance dialing codes to actually hack remote machines, or something.)
    </p>
    <p>
    I never knew if anyone else ever used my little program to dial for calling codes. It certainly worked for me, and I tried my level best to make it work for all the possible dialing situations I could think of. It even had an intro screen with music and graphics of my own creation. But searching now, for the first time in 24 years, I <a href="http://nitroroms.com/show/file-info/L28583/Apple_II/Hacking%20Construction%20Set%20IIe%20(19xx)(Cyborg).zip.html">found my old Hacking Construction Set disk image on an Apple ROM site</a>. It even has real saved numbers in the dialing list! Someone <i>was</i> using my illicit software!
    </p>
    <p>
    <img alt="Hacking-construction-set" title="Hacking-construction-set" src="https://blog.codinghorror.com/content/images/uploads/2012/08/6a0120a85dcdae970b017744036a91970d-800wi.png" width="562" height="386">
    </p>
    <p>
    If you're curious, fire up your favorite Apple // emulator and give <a href="http://www.codinghorror.com/files/hacking-construction-set-apple-ii-disk-image.dsk">the disk image</a> a spin. Don't forget to connect your modem. There's full blown documentation accessible from the main menu. Which, re-reading now, was actually not half bad, if I do say so myself:
    </p>
    <p>
    <img alt="Hacking-construction-set-docs" title="Hacking-construction-set-docs" src="https://blog.codinghorror.com/content/images/uploads/2012/08/6a0120a85dcdae970b0176171d6ab7970c-800wi.png" width="562" height="385"><br>
    <img alt="Hacking-construction-set-docs-2" title="Hacking-construction-set-docs-2" src="https://blog.codinghorror.com/content/images/uploads/2012/08/6a0120a85dcdae970b016769286ca8970b-800wi.png" width="562" height="386">
    </p>
    <p>
    I used to regularly call BBSes in Florida, California, and Missouri? That's news to me; I haven't seen any of this stuff in over 24 years! All I did was upload a disk image to a few BBSes in 1986. After all that time, to discover that someone used and loved my little bit of software still gives me a little thrill. What higher praise is there for a software developer?
    </p>
    <p>
    About that trouble. <b>Using my own software got me in trouble with the law.</b> And deservedly so; what I wrote the software to do was illegal. I hired a local lawyer (who, as I recall, was missing a hand; he had a prosthetic hand that was almost impossible not to look at) who represented me. It was quite clear at preliminary hearings that the Chesterfield County court system did not see any computer crime cases, and they had absolutely no idea what to make of me, or what this was all about. All they saw was a smart kid with a bit of bad judgment who loved computers and was headed to the University of Virginia, most likely not a life as a career criminal. So the case was dismissed for the cost of lawyer's fees. Which, for the record, I had to pay myself, using my income as a Safeway cashier.
    </p>
    <p>
    This was definitely a wake up call for me; in the summer of 1988, I was about to graduate from high school, and I thought I'd try being just a regular guy at college, with less of an obsessive focus on computers that causes me to get in trouble with the law, and perhaps spread my wings to other interests. Who knows, maybe even <i>girls!</i>
    </p>
    <p>
    That didn't last long. Because after all these years, I must confess I've grown to love my own bad judgment. It's led me to the most fascinating places.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-08-08T00:00:00.000Z</pubDate>
    <guid>https://blog.codinghorror.com/i-was-a-teenage-hacker/</guid>
    </item>
    <item>
    <title>Today is Goof Off at Work Day</title>
    <link>https://blog.codinghorror.com/today-is-goof-off-at-work-day/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    When you're hired at Google, you only have to do the job you were hired for 80% of the time. The other 20% of the time, you can work on <i>whatever you like</i> – provided it advances Google in some way. At least, that's the theory.
    </p>
    <p>
    Google's 20 percent time policy is well known in software engineering circles by now. What's <i>not</i> as well known is that this concept <a href="http://www.fastcodesign.com/1663137/how-3m-gave-everyone-days-off-and-created-an-innovation-dynamo">dates all the way back to 1948 at 3M</a>.
    </p>
    <blockquote>
    <p>In 1974, 3M scientist Art Fry came up with a clever invention. He thought if he could apply an adhesive (dreamed up by colleague Spencer Silver several years earlier) to the back of a piece of paper, he could create the perfect bookmark, one that kept place in his church hymnal. He called it the Post-It Note. Fry came up with the now iconic product (he talks to the Smithsonian about it <a href="http://invention.smithsonian.org/video/vid-popup.aspx?clip=1&amp;id=518">here</a>) during his "15 percent time," a program at 3M that allows employees to use <b>a portion of their paid time to chase rainbows and hatch their own ideas</b>. It might seem like a squishy employee benefit. But the time has actually <b>produced many of the company's best-selling products</b> and has set a precedent for some of the top technology companies of the day, like Google and Hewlett-Packard.</p>
    </blockquote>
    <p>
    There's not much documentation on HP's version of this; when I do find mentions of it, it's always referred to as a "convention", not an explicit policy. Robert X. Cringely <a href="http://www.cringely.com/2011/08/19/losing-the-hp-way/">provides more detail</a>:
    </p>
    <blockquote>
    Google didn’t invent that: HP did. And the way the process was instituted at HP was quite formal in that the 10 percent time was after lunch on Fridays. Imagine what it must have been like on Friday afternoons in Palo Alto with every engineer working on some wild-ass idea. And the other part of the system was that those engineers had access to what they called “lab stores” — anything needed to do the job, whether it was a microscope or a magnetron or a barrel of acetone could be taken without question on Friday afternoons from the HP warehouses. This enabled a flurry of innovation that produced some of HP’s greatest products including those printers.
    </blockquote>
    <p>
    Maybe HP did invent this, since they've been around since 1939. Dave Raggett, for example, apparently <a href="http://en.wikipedia.org/wiki/Dave_Raggett">played a major role in inventing HTML</a> on his 10% time at HP.
    </p>
    <p>
    Although the concept predates Google, they've done more to validate it as an actual strategy and popularize it in tech circles than anyone else. Oddly enough, I can't <a href="https://www.google.com/search?q=site%3Awww.google.com+%2220-percent+time%22">find</a> any mention of the 20% time benefit listed on the <a href="http://www.google.com/about/jobs/lifeatgoogle/">current Google jobs page</a>, but it's an integral part of Google's culture. And for good reason: notable 20 percent projects include <a href="http://paulbuchheit.blogspot.com/2009/01/communicating-with-code.html">GMail</a>, Google News, Google Talk, and AdSense. According to ex-employee Marissa Meyer, <a href="http://en.wikipedia.org/wiki/Google#Innovation_Time_Off">as many as half</a> of Google's products originated from that 20% time.
    </p>
    <p>
    At Hewlett-Packard, 3M, and Google, "many" of their best and most popular products come from <b>the thin sliver of time they granted employees to work on <i>whatever they wanted to.</i></b> What does this mean? Should we all be goofing off more at work and experimenting with our own ideas? That's what the book <a href="http://www.amazon.com/exec/obidos/ASIN/0062003232/codihorr-20">The 20% Doctrine</a> explores.
    </p>
    <a href="http://www.amazon.com/exec/obidos/ASIN/0062003232/codihorr-20"><img alt="The 20% Doctrine: How tinkering, goofing off, and breaking the rules at work drive success in business" title="The 20% Doctrine: How tinkering, goofing off, and breaking the rules at work drive success in business" src="https://blog.codinghorror.com/content/images/uploads/2012/08/6a0120a85dcdae970b017743d719a4970d-800wi.jpg" width="300" height="456"></a>
    
    <p>
    Closely related to 20% time is the <b>Hack Day</b>. Hack Days carve out a specific 24 hour timeframe from the schedule, encouraging large groups to come together to work collaboratively (or in friendly competition) during that period. Chad Dickerson <a href="http://blog.chaddickerson.com/2012/04/18/the-20-percent-doctrine/">instituted one of the first</a> at Yahoo in 2005.
    </p>
    <blockquote>
    <p>
    The Friday before, I had organized the first internal Hack Day at Yahoo! with the help of a loosely-organized band of people around the company. The “hack” designation for the day was a tip of the hat to hacker culture, but also a nod to the fact that we were trying to fix a system that didn’t work particularly well. The idea was really simple: <b>all the engineers in our division were given the day off to build anything they wanted to build.</b> The only rules were to build something in 24 hours and then show it at the end of the period. The basic structure of the event itself was inspired by what we had seen at small startups, but no one had attempted such an event at a large scale at an established company.
    </p>
    <p>
    The first Yahoo! Hack Day was clearly a success. In a company that was struggling to innovate, about seventy prototypes appeared out of nowhere in a single 24-hour period and they were presented in a joyfully enthusiastic environment where people whooped and yelled and cheered. Sleep-deprived, t-shirt-clad developers stayed late at work on a Friday night to show prototypes they had built for no other reason than they wanted to build something. In his seminal book about open source software, The Cathedral and the Bazaar, Eric Raymond wrote: <b>“Every good work of software starts by scratching a developer’s personal itch.”</b> There clearly had been a lot of developer itching around Yahoo! but it took Hack Day to let them issue a collective cathartic scratch.
    </p>
    </blockquote>
    <p>
    Atlassian's version, a <a href="http://www.atlassian.com/shipit-day">quarterly ShipIt Day</a>, also dates back to 2005. Interestingly, they also attempted to emulate Google's 20% time policy with <a href="http://blogs.atlassian.com/2009/02/atlassians_20_time_a_year_in_review/">mixed results</a>.
    </p>
    <blockquote>
    Far and away, the biggest problem was scheduling time for 20% work. As one person put it, “Getting 20% time is incredibly difficult amongst all the pressure to deliver new features and bug fixes.” Atlassian has frequent product releases, so it is very hard for teams to schedule ‘down time’. Small teams in particular found it hard to afford time away from core product development. This wasn’t due to Team Leaders being harsh. It was often due to developers not wanting to increase the workload on their peers while they did 20% work. They like the products they are developing and are proud of their efforts. However, they don’t want to be seen as enjoying a privilege while others carry the workload.
    </blockquote>
    <p>
    I think there's enough of a track record of documented success that <b>it's worth lobbying for something like Hack Days or 20% time wherever you work</b>. But before you do, consider if you and your company are ready:
    </p>
    <ol>
    <li>
    <b>Is there adequate slack in the schedule?</b>
    <p>You can't realistically achieve 20% time, or even a single measly hack day, if there's absolutely zero slack in the schedule. If everyone around you is working full-tilt boogie as hard as they can, all the time, that's … probably not healthy. Sure, everyone has crunch times now and then, but if your work environment feels like <i>constant</i> crunch time, you'll need to deal with that first. For ammunition, try <a href="http://www.amazon.com/exec/obidos/ASIN/0767907698/codihorr-20">Tom Demarco's book Slack</a>.</p>
    </li>
    <li>
    <b>Does daydreaming time matter?</b>
    <p>If anyone gets flak for not "looking busy", your company's work culture may not be able to support an initiative like this. There has to be buy-in at the pointy-haired-boss level that time spent thinking and daydreaming is a valid part of work. Daydreaming is not the antithesis of work; on the contrary, creative problem solving <a href="http://www.sciencedaily.com/releases/2009/05/090511180702.htm"><i>requires</i> it</a>.</p>
    </li>
    <li>
    <b>Is failure accepted?</b>
    <p>When given the freedom to "work on whatever you want", the powers that be have to <i>really mean it</i> for the work to matter. Mostly that means providing employees the unfettered freedom to fail miserably at their skunkworks projects, sans repercussion or judgment. Without failure, and <i>lots</i> of the stuff, there can be no innovation, or true experimentation. The value of (quickly!) learning from failures and moving on is enormous.</p>
    </li>
    <li>
    <b>Is individual experimentation respected?</b>
    <p>If there isn't a healthy respect for individual experimentation versus the neverending pursuit of the Next Thing on the collective project task list, these initiatives are destined to fail. You have to truly believe, as a company, and as peers, that crucial innovations and improvements can come from <i>everyone</i> at the company at any time, in bottom-up fashion – they aren't delivered from on high at scheduled release intervals in the almighty Master Plan.
    </p>
    </li>
    </ol>
    <p>
    Having some official acknowledgement that time spent working on whatever <i>you</i> think will make things better around these here parts is not just tolerated – but encouraged – might go a long way towards <b>making work feel a lot less like <i>work</i></b>.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-08-01T23:32:12.000Z</pubDate>
    <guid>https://blog.codinghorror.com/today-is-goof-off-at-work-day/</guid>
    </item>
    <item>
    <title>The IPS LCD Revolution</title>
    <link>https://blog.codinghorror.com/the-ips-lcd-revolution/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    When I <a href="http://www.codinghorror.com/blog/2007/11/not-all-lcd-panels-are-created-equal.html">wrote about TN LCD panels</a> 5 years ago, I considered them acceptable, despite their overall mediocrity, mostly due to the massive price difference.
    </p>
    <blockquote>
    Unfortunately, the vast majority of LCDs on the market now are TN. You can opt to pay a little bit more for one of the few models with *VA – if there are any available in the size you want. <b>*-IPS is widely considered the best all around LCD display technology</b>, but it is rapidly being pushed into the vertical "pro" graphics designer market due to the big jump in price. It's usually not an option, unless you're willing to pay more than twice as much for a monitor.
    </blockquote>
    <p>
    But when the $499 iPad 3 delivers an <a href="http://www.codinghorror.com/blog/2012/03/welcome-to-the-post-pc-era.html">amazingly high resolution IPS panel</a> that's almost reference quality, I found myself a whole lot <i>less</i> satisfied with the 27" TN LCDs on my desktop. And on my laptop. And everywhere else in my life.
    </p>
    <p>
    I'll spare you all the exposition and jump to the punchline. I am now the proud owner of three awesome high resolution (2560x1440) 27" IPS LCDs, and <b>I paid less than a thousand dollars for all three of them</b>.
    </p>
    <p>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b016768c9cc13970b-pi"><img alt="Three Korean LCDs" title="Three Korean LCDs" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b017743a4cc2a970d-800wi.jpg" width="720" height="301"></a>
    </p>
    <p>
    (If you're curious about the setup, I use <a href="http://www.codinghorror.com/blog/2007/09/lcd-monitor-arms.html">Ergotron monitor arms</a> to fit everything in there.)
    </p>
    <p>
    I won't deny that it is a little weird, because everything is in Korean. I replaced the Korean 3 prong power cord in the power brick with a regular US power cord I had laying around. But a monitor is a monitor, and <i>the IPS panel is stunning</i>. <b>The difference between TN and IPS is vast in every measurable dimension.</b> No bad pixels on these three panels, either. Although, as my friend Scott Wasson of <a href="http://techreport.com">Tech Report</a> fame says, "every pixel on a TN panel is a bad pixel".
    </p>
    <p>
    How is this possible? You can thank Korea. All three of these monitors were ordered from Korean eBay vendors, where a great 27" IPS LCD goes for the equivalent of around $250 in local currency. They tack on $100 for profit and shipping to the USA, then they're in business. It's definitely a grey market, but something is clearly out of whack, because no domestic monitor of similar quality and size can be had for anything under $700.
    </p>
    <p>
    I wanted to get this out there, because I'm not sure how long this grey market will last, and these monitors are truly incredible deals. Heck, <b>it's worth it just to get out of the awful TN display ghetto most of us are stuck in</b>. Scott Wasson got the <i>exact</i> same model of Korean LCD I did, and <a href="http://techreport.com/articles.x/23291">his thorough review</a> concludes:
    </p>
    <blockquote>
    Even with those last couple of quirks uncovered, I still feel like I won this thing in a drawing or something. $337 for a display of this quality is absolutely worth it, in my view. You just need to keep your eyes open to the risks going into the transaction, risks I hope I've illustrated in the preceding paragraphs. In many ways, grabbing a monitor like this one on the cheap from eBay is the ultimate tinkerer's gambit. It's risky, but the payoff is huge: a combination of rainbow-driven eye-socket ecstasy and the satisfying knowledge that you paid less than half what you might pay elsewhere for the same experience.
    </blockquote>
    <p>
    There are literally dozens of variants of these Korean 27" LCDs, but the model I got is the <b>FSM-270YG</b>. Before you go rushing off to type ebay.com in your browser address bar, remember that these are bare-bones monitors being shipped from Korea. They work great, don't get me wrong, but they are the definition of no-frills:
    </p>
    <ul>
    <li>Build quality is acceptable, but it's hardly Jony Ive Approved™.
    </li>
    <li>These are glossy panels. Some other variants offer matte, if that's your bag.
    </li>
    <li>They only support basic dual-link DVI inputs, and <i>nothing</i>, I mean <i>nothing</i> else.
    </li>
    <li>There is no on-screen display. The only functional controls are power and brightness (this one caught me out; you must hold down the brightness adjustment for many, many seconds before you see a change.)
    </li>
    </ul>
    <p>
    Although the noise-to-signal ratio is off the charts, it might be worth visiting <a href="http://www.overclock.net/t/1215866/reviewed-400-2560x1440-ips-no-ag-90hz-achieva-shimian-qh270-and-catleap-q270">the original overclock.net thread</a> on these inexpensive Korean monitors. There's some great info buried in there, if you can manage to extract it from the chaos. And if you're looking for a teardown of this particular FSM-270YG model (minus the OSD, though), check out <a href="http://www.tftcentral.co.uk/reviews/content/dgm_ips-2701wph.htm">the TFT Central review</a>.
    </p>
    <p>
    In the past, I favored my wallet over my eyes, and chose TN. I now deeply regret that decision. But the tide is turning, and <b>high quality IPS displays are no longer extortionately expensive, particularly if you buy them directly from Korea</b>. Is it a little risky? Sure, but all signs point to the risk being fairly low.
    </p>
    <p>
    In the end, I decided my eyes deserve better than TN. Maybe yours do too.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-07-26T09:42:38.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-ips-lcd-revolution/</guid>
    </item>
    <item>
    <title>But You Did Not Persuade Me</title>
    <link>https://blog.codinghorror.com/but-you-did-not-persuade-me/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>One of my favorite movie scenes is from <a href="http://www.rottentomatoes.com/m/last_king_of_scotland/">The Last King of Scotland</a>, a dramatized "biography" of the megalomaniac dictator <a href="http://en.wikipedia.org/wiki/Idi_Amin">Idi Amin</a>, as seen through the eyes of a fictional Scottish personal physician.</p>
    <video poster="/content/images/2015/08/you-did-not-persuade-me-thumbnail.jpg" width="100%" height="242" preload="none" controls>
    <source src="http://discourse-cdn.codinghorror.com/uploads/default/original/3X/9/5/954ba00bb034b1893024892e0a2e2bf7eb29e3a6.mp4">
    </source></video>
    <blockquote>
    <table>
    <tr>
    <td style="width:100px" valign="top">Idi Amin</td>
    <td valign="top">I want you to tell me what to do!</td>
    </tr>
    <tr>
    <td valign="top">Garrigan</td>
    <td valign="top">You want ME to tell YOU what to do?</td>
    </tr>
    <tr>
    <td valign="top">Amin</td>
    <td valign="top">Yes, you are my advisor. You are the only one I can trust in here. <i>You should have told me not to throw the Asians out, in the first place!</i>
    </td>
    </tr>
    <tr>
    <td valign="top">Garrigan</td>
    <td valign="top"><i>I DID!</i></td>
    </tr>
    <tr>
    <td valign="top">Amin</td>
    <td valign="top">But you did not persuade me, Nicholas. You did <i>not persuade me!</i>
    </td>
    </tr>
    </table>
    </blockquote>
    <p>If you haven't watched this movie yet, you should. It is amazing. (For trivia buffs, this is the video clip that prompted me to write <a href="http://www.codinghorror.com/blog/2010/09/youtube-vs-fair-use.html">YouTube vs. Fair Use</a>. I eventually switched to hosting it locally using <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video">the HTML5 video tag</a>.)</p>
    <p>What I love about this tour de force of a scene – beyond the incredible acting – is that it illustrates just how powerful of a force persuasion really is. In the hands of a madman or demagogue, dangerously powerful. Hopefully you don't deal with too many insane dictators on a daily basis, but the reason this scene works so well is the unavoidable truth it exposes: <b>to have any hope of influencing others, <i>you must be able to persuade them</i>.</b></p>
    <p>Steve Yegge is as accomplished a software engineer as I can think of. I was amazed to hear him tell us repeatedly and at length on a podcast that <a href="http://www.codinghorror.com/blog/2008/10/the-one-thing-every-software-engineer-should-know.html">the one thing every software engineer should know</a> is not how to write amazing code, but how to market themselves and their project. What is marketing except <i>persuasion?</i></p>
    <p>Marc Hedlund, who founded Wesabe and is now the VP of Engineering at Etsy, thinks of himself not as a CEO or boss, but as the <a href="http://radar.oreilly.com/2006/12/engineering-management-hacks-e-1.html">Lobbyist-in-Chief</a>. I believe that could be re-written as Persuader-in-Chief with no loss of meaning or nuance.</p>
    <blockquote>
    <p>I was recently asked how I run our development team. I said, “Well, <b>basically I blog about something I think we should do, and if the blog post convinces the developers, they do it. If not, I lobby for it, and if that fails too, the idea falls on the floor.</b> They need my approval to launch something, but that’s it. That’s as much ‘running things’ as I do, and most of the ideas come from other people at this point, not from me and my blog posts. I’ve argued against some of our most successful ideas, so it’s a good thing I don’t try to exert more control.”</p>
    <p>I’m exaggerating somewhat; of course I haven’t blogged about all of our ideas yet. But I do think of myself as Lobbyist-in-Chief, and I have lots of good examples of cases where I failed to talk people into an idea and it didn’t happen as a result. One person I said this to asked, “So who holds the product vision, then?” and I replied, “Well, I guess I do,” but really that’s not right. We all do. The product is the result of the ideas that together we’ve agreed to pursue. I recruit people based on their interest in and enthusiasm about the ideas behind Wesabe, and then set them loose, and we all talk and listen constantly. That’s how it works — and believe it or not, it does work.</p>
    </blockquote>
    <p>So how do we persuade? Primarily, I think, when we <a href="http://www.codinghorror.com/blog/2007/08/leading-by-example.html">lead by example</a>. Even if that means getting down on your knees and <a href="http://www.inc.com/magazine/20081201/how-hard-could-it-be-my-style-of-servant-leadership.html">cleaning a toilet</a> to show someone else how it's done. But maybe you're not a leader. Maybe you're just a lowly peon. Even as a peon, it's still possible to <a href="http://www.codinghorror.com/blog/2006/09/changing-your-organization-for-peons.html">persuade your team and those around you</a>. A commenter summarized this grassroots method of persuasion nicely:</p>
    <ul>
    <li>His ideas were, on the whole, pretty good.</li>
    <li>He worked mostly bottom-up rather than top-down.</li>
    <li>He worked to gain the trust of others first by dogfooding his own recommendations before pushing them on others.</li>
    <li>He was patient and waited for the wheels to turn.</li>
    </ul>
    <p>Science and data are among the best ways to be objectively persuasive, but remember that data alone isn't the reductionist end of every single topic. Beware the <a href="http://stopdesign.com/archive/2009/03/20/goodbye-google.html">41 shades of blue</a> pitfall.</p>
    <blockquote>
    <p>Yes, it’s true that a team at Google couldn’t decide between two blues, so they’re testing 41 shades between each blue to see which one performs better. I had a recent debate over whether a border should be 3, 4 or 5 pixels wide, and was asked to prove my case. I can’t operate in an environment like that. I’ve grown tired of debating such minuscule design decisions. There are more exciting design problems in this world to tackle.</p>
    </blockquote>
    <p>If I measure by click data alone, <a href="http://www.codinghorror.com/blog/2009/07/how-not-to-advertise-on-the-internet.html">all Internet advertising should have breasts in it</a>. Incorporate data, by all means. But you need to tell a bigger, grander, more inspiring story than that to be truly <i>persuasive</i>.</p>
    <p>I <a href="http://www.codinghorror.com/blog/2007/07/whatever-happened-to-civility-on-the-internet.html">re-read Letter from a Birmingham Jail</a> every year because I believe it is the single best persuasive essay I've ever read. It is remarkably persuasive without ever resorting to anger, incivility, or invective. <a href="http://www.africa.upenn.edu/Articles_Gen/Letter_Birmingham.html">Read it now</a>. But do more than just read; <i>study</i> it. How does it work? Why does it work? Does it cite any data? What techniques make this essay so incredibly compelling?</p>
    <p><a href="http://www.africa.upenn.edu/Articles_Gen/Letter_Birmingham.html"><img alt="Letter-from-birmingham-jail" title="Letter-from-birmingham-jail" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177438da35e970d-pi.jpg" width="300" height="406"></a></p>
    <p>Nobody ever changed anything by remaining quiet, idly standing by, or blending into the faceless, voiceless masses. If you ever want to effect change, in your work, in your life, <b>you must learn to persuade others</b>.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-07-23T13:11:42.000Z</pubDate>
    <guid>https://blog.codinghorror.com/but-you-did-not-persuade-me/</guid>
    </item>
    <item>
    <title>New Programming Jargon</title>
    <link>https://blog.codinghorror.com/new-programming-jargon/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Stack Overflow – like most online communities I've studied – naturally trends toward increased strictness over time. It's primarily a defense mechanism, an immune system of the sort a child develops after first entering school or daycare and being exposed to the wide, wide world of everyday sneezes and coughs with the occasional <a href="http://www.cdc.gov/mmwr/preview/mmwrhtml/mm6113a1.htm">meningitis outbreak</a>. It isn't always a pleasant process, but it is, unfortunately, a necessary one if you want to survive.</p>
    <p>Consider this question from two years ago:</p>
    <blockquote>
    <h3>New programming jargon you coined?</h3>
    <p>What programming terms have you coined that have taken off in your own circles (i.e. have heard others repeat it)? It might be within your own team, workplace or garnered greater popularity on the Internet.</p>
    <p>Write your programming term, word or phrase in bold text followed by an explanation, citation and/or usage example so we can use it in appropriate context.</p>
    <p>Don't repeat common jargon already ingrained in the programming culture like: kludge, automagically, cruft, etc. (unless you coined it).</p>
    <p>This question serves in the spirit of communication among programmers through sharing of terminology with each other, to benefit us by its propagation within our own teams and environments.</p>
    </blockquote>
    <p>Is this even a <i>question</i>, really? How many answers does it have?</p>
    <p><b>Three hundred and eighty six!</b></p>
    <p>A question that invites 386 different "answers" isn't a question at all. It's an opinion survey, a poll, a List of X. I suppose you could argue that reading through all those responses would teach you <i>something</i> about programming, but it was pretty clear that the bulk of the responses were far more about laughs and GTKY (Getting to Know You) than learning. That's why it was eventually deleted by experienced Stack Overflow community members.  Although it is somewhat borderline in terms of learning, and I didn't <i>personally</i> vote to delete it, I tend to agree that it was correctly deleted. Though <a href="http://meta.stackoverflow.com/questions/122164/can-we-un-delete-new-programming-jargon-you-coined">opinions vary</a>.</p>
    <p>I won't bore you with the entire history, our <a href="http://blog.stackoverflow.com/2010/01/stack-overflow-where-we-hate-fun/">so-called "war on fun"</a>, and the <a href="http://blog.stackoverflow.com/2012/01/the-trouble-with-popularity/">trouble with popularity</a>. Ultimately, <b>Stack Overflow is a college, <i>not</i> a frat house</b>. All the content on the site must exist to serve the mission of learning over entertainment – even if that means making difficult calls about removing some questions and answers that fail to meet those goals, plus or minus 10 percent.</p>
    <p>In terms of programmer culture, though, there is precedent in the form of <a href="http://www.catb.org/jargon/">The Jargon File</a>. Unfortunately, we don't have a good designated place for deleted "too fun" questions to live, but all Stack Exchange content is licensed under Creative Commons in perpetuity. Which means, with proper attribution, we can give it a permanent home on our own blogs. So I did. I've collected <b>the top 30 Stack Overflow New Programming Jargon</b> entries below, as judged by the Stack Overflow community. Enjoy.*</p>
    <h3 id="1">1. Yoda Conditions</h3>
    <div><small><a href="http://stackoverflow.com/users/251153/zneak">zneak</a></small></div>
    <img alt="Yoda-conditions" title="Yoda-conditions" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0176169611b8970c-800wi.png" width="361" height="132">
    <p>Using <code>if(constant == variable)</code> instead of <code>if(variable == constant)</code>, like <code>if(4 == foo)</code>. Because it's like saying "if blue is the sky" or "if tall is the man".</p>
    <h3 id="2">2. Pokémon Exception Handling</h3>
    <div><small><a href="http://stackoverflow.com/users/205426/woot4moo">woot4moo</a></small></div>
    <img alt="Pokemon" title="Pokemon" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0176169669bd970c-800wi.jpg" width="320">
    <p>For when you just Gotta Catch 'Em All.</p>
    <pre><code>try {
    }
    catch (Exception ex) {
    // Gotcha!
    }
    </code></pre>
    <h3 id="3">3. Egyptian Brackets</h3>
    <div><small><a href="http://stackoverflow.com/users/215403/computronium">computronium</a></small></div>
    <img class="asset  asset-image at-xid-6a0120a85dcdae970b016768a17a2a970b" alt="Egyptian" title="Egyptian" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b016768a17a2a970b-800wi.jpg" width="200">
    <p>You know the style of brackets where the opening brace goes on the end of the current line, e.g. this?</p>
    <pre><code>if (a == b) {
    printf("hello");
    }
    </code></pre>
    <p>We used to refer to this style of brackets as "Egyptian brackets". Why? Compare the position of the brackets with the hands in the picture. (This style of brackets is used in Kernighan and Ritchie's book <a href="http://www.amazon.com/dp/0131103628/?tag=codihorr-20">The C Programming Language</a>, so it's known by many as K&amp;R style.)</p>
    <h3 id="4">4. Smug Report</h3>
    <div><small><a href="http://stackoverflow.com/users/38360/aaronaught">aaronaught</a></small></div>
    <img alt="Pathreport-med" title="Pathreport-med" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437c746d970d-800wi.png" width="200">
    <p>A bug submitted by a user who thinks he knows a lot more about the system's design than he really does. Filled with irrelevant technical details and one or more suggestions (always wrong) about what he thinks is causing the problem and how we should fix it.</p>
    <p>Also related to Drug Report (a report so utterly incomprehensible that whoever submitted it must have been smoking crack.), Chug Report (where the submitter is thought to have had one too many), and Shrug Report (a bug report with no error message or repro steps and only a vague description of the problem. Usually contains the phrase "doesn't work.")</p>
    <h3 id="5">5. A Duck</h3>
    <div><small><a href="http://stackoverflow.com/users/129175/kyoryu">kyoryu</a></small></div>
    <img alt="Duck-wireframe" title="Duck-wireframe" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437c7a15970d-800wi.jpg" width="200">
    <p>A feature added for no other reason than to draw management attention and be removed, thus avoiding unnecessary changes in other aspects of the product.</p>
    <p>I don't know if I actually invented this term or not, but I am certainly not the originator of the story that spawned it.</p>
    <p>This started as a piece of Interplay corporate lore. It was well known that producers (a game industry position, roughly equivalent to PMs) had to make a change to everything that was done. The assumption was that subconsciously they felt that if they didn't, they weren't adding value.</p>
    <p>The artist working on the queen animations for Battle Chess was aware of this tendency, and came up with an innovative solution. He did the animations for the queen the way that he felt would be best, with one addition: he gave the queen a pet duck. He animated this duck through all of the queen's animations, had it flapping around the corners. He also took great care to make sure that it never overlapped the "actual" animation.</p>
    <p>Eventually, it came time for the producer to review the animation set for the queen. The producer sat down and watched all of the animations. When they were done, he turned to the artist and said, <i>"that looks great. Just one thing - get rid of the duck."</i></p>
    <h3 id="6">6. Refuctoring</h3>
    <div><small><a href="http://www.codemanship.co.uk">Jason Gorman</a></small></div>
    <img alt="Bottle-smashing" title="Bottle-smashing" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0176169684ae970c-800wi.jpg" width="215" height="184">
    <p>The process of taking a well-designed piece of code and, through a series of small, reversible changes, making it completely unmaintainable by anyone except yourself.</p>
    <h3 id="7">7. Stringly Typed</h3>
    <div><small><a href="http://stackoverflow.com/users/83891/mark-simpson">Mark Simpson</a></small></div>
    <img alt="Cat-string-values" title="Cat-string-values" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437c9f53970d-800wi.jpg" width="200">
    <p>A riff on strongly typed. Used to describe an implementation that needlessly relies on strings when programmer &amp; refactor friendly options are available.</p>
    <p>For example:</p>
    <ul>
    <li>Method parameters that take strings when other more appropriate types should be used.</li>
    <li>On the occasion that a string is required in a method call (e.g. network service), the string is then passed and used throughout the rest of the call graph without first converting it to a more suitable internal representation (e.g. parse it and create an enum, then you have strong typing throughout the rest of your codebase).</li>
    <li>Message passing without using typed messages etc.</li>
    </ul>
    <p>Excessively stringly typed code is usually a pain to understand and detonates at runtime with errors that the compiler would normally find.</p>
    <h3 id="8">8. Heisenbug</h3>
    <div><small>unknown</small></div>
    <img alt="Heisenbug" title="Heisenbug" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b016768a216ce970b-800wi.png" width="98" height="41">
    <p>A computer bug that disappears or alters its characteristics when an attempt is made to study it. (<a href="http://en.wikipedia.org/wiki/Unusual_software_bug#Heisenbug">Wikipedia</a>)</p>
    <h3 id="9">9. Doctype Decoration</h3>
    <div><small><a href="http://stackoverflow.com/users/23666/zurahn">Zurahn</a></small></div>
    <img alt="Charlie-brown-christmas-tree" title="Charlie-brown-christmas-tree" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b016768a199fe970b-800wi.jpg" width="180">
    <p>When web designers add a doctype declaration but don't bother to write valid markup.</p>
    <pre><code>&amp;lt;!DOCTYPE html&amp;gt;
    &amp;lt;BLINK&amp;gt;Now on sale!&amp;lt;/BLINK&amp;gt;
    </code></pre>
    <h3 id="10">10. Jimmy</h3>
    <div><small><a href="http://stackoverflow.com/users/12560/gord">Gord</a></small></div>
    <img alt="Jimmy" title="Jimmy" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437cb7eb970d-800wi.png" width="117" height="206">
    <p>A generalized name for the clueless/new developer.</p>
    <p>Found as we were developing a framework component that required minimal knowledge of how it worked for the other developers. We would always phrase our questions as: <i>"What if Jimmy forgets to update the attribute?"</i></p>
    <p>This led to the term: "Jimmy-proof" when referring to well designed framework code.</p>
    <h3 id="11">11. Higgs-Bugson</h3>
    <div><small><a href="http://stackoverflow.com/users/231999/gingerbreadboy">gingerbreadboy</a></small></div>
    <img alt="Higgs-boson-guy" title="Higgs-boson-guy" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437ccbc0970d-800wi.png" width="200" height="195">
    <p>A hypothetical bug predicted to exist based on a small number of possibly related event log entries and vague anecdotal reports from users, but it is difficult (if not impossible) to reproduce on a dev machine because you don't really know if it's there, and if it is there what is causing it. (see <a href="http://en.wikipedia.org/wiki/Higgs_boson">Higgs-Boson</a>)</p>
    <h3 id="12">12. Nopping</h3>
    <div><small><a href="http://stackoverflow.com/users/220587/stanislav">Stanislav</a></small></div>
    <img alt="Statue-napping" title="Statue-napping" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437cd4ee970d-800wi.jpg" width="300" height="201">
    <p>I'm writing a <a href="http://lifeartificial.com/">scifi novel</a> from the POV of an AI, and their internal language has a lot of programming jargon in it. One of the more generalizable terms is "nopping", which comes from assembler NOP for no-operation. It's similar to 'nap', but doesn't imply sleep, just zoning out. <i>"Stanislav sat watching the screensaver and nopped for a while."</i></p>
    <h3 id="13">13. Unicorny</h3>
    <div><small><a href="http://stackoverflow.com/users/122162/yehuda-katz">Yehuda Katz</a></small></div>
    <img alt="Stack-overflow-unicorn" title="Stack-overflow-unicorn" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b016768a1adc5970b-800wi.jpg" border="0">
    <p>An adjective to describe a feature that's so early in the planning stages that it might as well be imaginary. We cribbed this one from Yehuda Katz, who used it in his closing keynote at last year's <a href="http://windycityrails.org/">Windy City Rails</a> to describe some of Rails' upcoming features.</p>
    <h3 id="14">14. Baklava Code</h3>
    <div><small><a href="http://stackoverflow.com/users/25188/john-d-cook">John D. Cook</a></small></div>
    <img alt="Baklava" title="Baklava" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b01761696b5b9970c-800wi.jpg" width="288" height="191">
    <p>Code with <a href="http://www.johndcook.com/blog/2009/07/27/baklav-code/">too many layers</a>.</p>
    <p>Baklava is a delicious pastry made with many paper-thin layers of phyllo dough. While thin layers are fine for a pastry, thin software layers don’t add much value, especially when you have many such layers piled on each other. Each layer has to be pushed onto your mental stack as you dive into the code. Furthermore, the layers of phyllo dough are permeable, allowing the honey to soak through. But software abstractions are best when they don’t leak. When you pile layer on top of layer in software, the layers are bound to leak.</p>
    <h3 id="15">15. Hindenbug</h3>
    <div><small><a href="http://stackoverflow.com/users/43687/mike-robinson">Mike Robinson</a></small></div>
    <img class="asset  asset-image at-xid-6a0120a85dcdae970b01761696b949970c" alt="Oh-the-huge-manatee" title="Oh-the-huge-manatee" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b01761696b949970c-800wi.jpg" width="300">
    <p>A catastrophic data destroying bug. <i>"Oh the humanity!"</i></p>
    <p>Also related to Counterbug (a bug you present when presented with a bug caused by the person presenting the bug) and Bloombug (a bug that accidentally generates money).</p>
    <h3 id="16">16. Fear Driven Development</h3>
    <div><small><a href="http://stackoverflow.com/users/82062/arnis-l">Arnis L.</a></small></div>
    <img alt="Youre-fired" title="Youre-fired" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b01761696bdde970c-800wi.jpg" width="180" height="250">
    <p>When project management adds more pressure (fires someone, moves deadlines forward, subtracts resources from the project, etc).</p>
    <h3 id="17">17. Hydra Code</h3>
    <div><small><a href="http://stackoverflow.com/users/108130/nick-dandoulakis">Nick Dandoulakis</a></small></div>
    <img alt="800px-Hercules_slaying_the_Hydra" title="800px-Hercules_slaying_the_Hydra" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437cf847970d-800wi.jpg" width="400" height="276">
    <p>Code that cannot be fixed. Like the <a href="http://en.wikipedia.org/wiki/Lernaean_Hydra">Hydra of legend</a>, every new fix introduces two new bugs. It should be rewritten.</p>
    <h3 id="18">18. Common Law Feature</h3>
    <div><small>anonymous</small></div>
    <p><img alt="Common-law-marriage" title="Common-law-marriage" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b01761696d4ab970c-800wi.jpg" width="300" height="199"><br></p>
    <p>A bug in the application that has existed so long that it is now part of the expected functionality, and user support is required to actually fix it.</p>
    <h3 id="19">19. Loch Ness Monster Bug</h3>
    <div><small><a href="http://stackoverflow.com/users/109102/russau">russau</a></small></div>
    <img alt="Loch-ness-monster" title="Loch-ness-monster" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437d0c57970d-pi.jpg" width="250" height="201">
    <p>I've started Loch Ness Monster bug for anything not reproducible / only sighted by one person. I'm hearing a lot of people in the office say it now. (Possible alternates: Bugfoot, Nessiebug.)</p>
    <h3 id="20">20. Ninja Comments</h3>
    <div><small><a href="http://stackoverflow.com/users/48928/schar">schar</a></small></div>
    <img alt="Ninja-comments" title="Ninja-comments" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b01761696ddaf970c-800wi.png" width="279" height="206">
    <p>Also known as <i>invisible comments</i>, <i>secret comments</i>, or <i>no comments</i>.</p>
    <h3 id="21">21. Smurf Naming Convention</h3>
    <div><small><a href="http://stackoverflow.com/users/13753/sal">sal</a></small></div>
    <img alt="https://blog.codinghorror.com/content/images/2014/Jun/brainy-smurf.png">
    <p>When almost every class has the same prefix. IE, when a user clicks on the button, a <code>SmurfAccountView</code> passes a <code>SmurfAccountDTO</code> to the <code>SmurfAccountController</code>. The <code>SmurfID</code> is used to fetch a <code>SmurfOrderHistory</code> which is passed to the <code>SmurfHistoryMatch</code> before forwarding to either <code>SmurfHistoryReviewView</code> or <code>SmurfHistoryReportingView</code>. If a <code>SmurfErrorEvent</code> occurs it is logged by <code>SmurfErrorLogger</code> to <code>${app}/smurf/log/smurf/smurflog.log</code></p>
    <h3 id="22">22. Protoduction</h3>
    <div><small><a href="http://stackoverflow.com/users/7264/chris-pebble">Chris Pebble</a></small></div>
    <img alt="https://blog.codinghorror.com/content/images/2014/Jun/protoduction.jpg">
    <p>A prototype that ends up in production. Heard this from a tech at the Fermi lab. He said he didn't coin the term but had heard it used a number of times at Fermi.</p>
    <h3 id="23">23. Rubber Ducking</h3>
    <div><small><a href="http://stackoverflow.com/users/62140/wesgarrison">wesgarrison</a></small></div>
    <img alt="https://blog.codinghorror.com/content/images/2014/Jun/rubber-ducky.jpg">
    <p>Sometimes, you just have to talk a problem out. I used to go to my boss and talk about something and he'd listen and then I'd just answer my own question and walk out without him saying a thing. I read about someone that put a rubber duck on their monitor so they could talk to it, so rubberducking is talking your way through a problem.</p>
    <h3 id="24">24. Banana Banana Banana</h3>
    <div><small><a href="http://stackoverflow.com/users/40516/juliet">juliet</a></small></div>
    <img alt="https://blog.codinghorror.com/content/images/2014/Jun/banana.png">
    <p>Placeholder text indicating that documentation is in progress or yet to be completed. Mostly used because FxCop complains when a public function lacks documentation.</p>
    <pre><code>/// &lt;summary&gt;
    /// banana banana banana
    /// &lt;/summary&gt;
    public CustomerValidationResponse Validate()
    </code></pre>
    <p>Other food-related jargon: Programmer Fuel (Mountain Dew, coffee, Mate, anything which gets you well-caffeinated), Hot Potato (Http and Https respectively. Same number of syllables, but more fun to say), Cake (Marty's noob cake broke the build), Chunky Salsa (based on the <a href="http://tvtropes.org/pmwiki/pmwiki.php/Main/ChunkySalsaRule">chunky salsa rule</a>, a single critical error or bug that renders an entire system unusable, especially in a production environment).</p>
    <h3 id="25">25. Bicrement</h3>
    <div><small><a href="http://stackoverflow.com/users/7734/evilteach">evilteach</a></small></div>
    <img alt="https://blog.codinghorror.com/content/images/2014/Jun/plus-two.png">
    <p>Adding 2 to a variable.</p>
    <h3 id="26">26. Reality 101 Failure</h3>
    <div><small><a href="http://stackoverflow.com/users/10659/loren-pechtel">Loren Pechtel</a></small></div>
    <img alt="https://blog.codinghorror.com/content/images/2014/Jun/reality-101.jpg">
    <p>The program (or more likely feature of a program) does exactly what was asked for but when it's deployed it turns out that the problem was misunderstood and it's basically useless.</p>
    <h3 id="27">27. Mad Girlfriend Bug</h3>
    <div><small><a href="http://stackoverflow.com/users/33560/jeduan-cornejo">Jeduan Cornejo</a></small></div>
    <img alt="https://blog.codinghorror.com/content/images/2014/Jun/mad-girlfriend.jpg">
    <p>When you see something strange happening, but the software is telling you everything is fine.</p>
    <h3 id="28">28. Megamoth</h3>
    <div><small><a href="http://stackoverflow.com/users/182153/zolomon">zolomon</a></small></div>
    <img alt="https://blog.codinghorror.com/content/images/2014/Jun/megamoth.jpg">
    <p>Stands for MEGA MOnolithic meTHod. Often contained inside a <a href="http://en.wikipedia.org/wiki/God_object">God Object</a>, and usually stretches over two screens in height. Megamoths of greater size than 2k LOC have been sighted. Beware of the MEGAMOTH!</p>
    <h3 id="29">29. Hooker Code</h3>
    <div><small><a href="http://stackoverflow.com/users/60794/nullpointerexception">NullPointerException</a></small></div>
    <img alt="https://blog.codinghorror.com/content/images/2014/Jun/muppet-pimps.jpg">
    <p>Code that is problematic and causes application instability (application "goes down" often). <i>"Did the site go down again? Yeah, Jim must still have some hooker code in there."</i></p>
    <h3 id="30">30. Jenga Code</h3>
    <div><small><a href="http://stackoverflow.com/users/16123/sumit">sumit</a></small></div>
    <img alt="https://blog.codinghorror.com/content/images/2014/Jun/jenga-code.jpg">
    <p>When the whole thing collapses after you alter a block of code.</p>
    <p>This is just the top 30, what I consider to be the most likely candidates for <i>actual</i> new programming jargon based on community upvotes, not just "funny thing that another programmer typed on a webpage and I felt compelled to upvote for hilarity". Because that would be <i>Reddit</i>. If you're itching to see even more, there are plenty more answers to read – three hundred and fifty six more to be precise. Longtime Stack Overflow user Greg Hewgill maintained an archive of old deleted Stack Overflow questions, but this one hasn't quite made it in there yet. In the meantime, try <a href="http://www.stackprinter.com/export?question=2349378&amp;service=stackoverflow">Stack Printer</a>, or if you have the requisite 10k rep on Stack Overflow, you can view the full <a href="http://stackoverflow.com/questions/2349378/new-programming-jargon-you-coined">soft-deleted question</a> on the site.</p>
    <p><small><small>* But don't enjoy it <i>too</i> much. We will be watching you.</small></small></p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-07-20T13:20:19.000Z</pubDate>
    <guid>https://blog.codinghorror.com/new-programming-jargon/</guid>
    </item>
    <item>
    <title>Coding Horror: The Book</title>
    <link>https://blog.codinghorror.com/coding-horror-the-book/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    If I had to make a list of the top 10 things I've done in my life that I regret, "writing a book" would <a href="http://www.codinghorror.com/blog/2007/10/do-not-buy-this-book.html">definitely be on it</a>. I took on the book project mostly because it was an opportunity to work with a few friends whose company I enjoy. I had no illusions going in about the rapidly diminishing value of technical books in an era of pervasive high speed Internet access, and the book writing process only reinforced those feelings.
    </p>
    <blockquote>
    <p>
    In short, <b>do not write a book</b>. You'll put in mountains of effort for precious little reward, tangible or intangible. In the end, all you will have to show for it is an out-of-print dead tree tombstone. The only people who will be impressed by that are the clueless and the irrelevant.
    </p>
    <p>
    As I see it, for the kind of technical content we're talking about, the online world of bits completely trumps the offline world of atoms:
    </p>
    <ul>
    <li>It's forever searchable.
    </li>
    <li>You, not your publisher, will own it.
    </li>
    <li>It's instantly available to anyone, anywhere in the world.
    </li>
    <li>It can be cut and pasted; it can be downloaded; it can even be interactive.
    </li>
    <li>It can potentially generate ad revenue for you in perpetuity.
    </li>
    </ul>
    <p>
    And here's the best part: you can always opt to create a print version of your online content, and <b>instantly get the best of both worlds</b>. But it only makes sense in that order. Writing a book may seem like a worthy goal, but your time will be better spent channeling the massive effort of a book into creating content online. Every weakness I listed above completely melts away if you redirect your effort away from dead trees and spend it on growing a living, breathing website presence online.
    </p>
    </blockquote>
    <p>
    A few weeks ago, <a href="http://www.hyperink.com">Hyperink</a> approached me with a concept of packaging the more popular entries on Coding Horror, its "greatest hits" if you will, into an eBook. They seemed to have a good track record doing this with other established bloggers, and I figured it was time to finally practice what I've been preaching all these years. So you can now <b>download <a href="http://www.hyperink.com/Blog-To-Book-Effective-Programming-More-Than-Writing-Code-b1559">Effective Programming: More Than Writing Code</a></b> for an introductory price of <b>$2.99</b>. It's available in Kindle, iPad, Nook, and PDF formats.
    </p>
    <p>
    <a href="http://www.hyperink.com/Blog-To-Book-Effective-Programming-More-Than-Writing-Code-b1559"><img alt="Blog to Book - Effective Programming: More Than Writing Code (Jeff Atwood)" title="Blog to Book - Effective Programming: More Than Writing Code (Jeff Atwood)" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b017616553856970c-800wi.png" width="246" height="330"></a>
     
    <a href="http://www.hyperink.com/How-To-Stop-Sucking-And-Be-Awesome-Instead-b9A74B5CBA6"><img alt="Blog to Book - How to Stop Sucking and Be Awesome Instead (Jeff Atwood)" title="Blog to Book - How to Stop Sucking and Be Awesome Instead (Jeff Atwood)" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b017d42244548970c-800wi.png" style="border:1px solid silver"></a>
    </p>
    <p>
    (As of March 2013, the first book was apparently popular enough to warrant a second volume, <a href="http://www.hyperink.com/How-To-Stop-Sucking-And-Be-Awesome-Instead-b9A74B5CBA6"><b>How to Stop Sucking and Be Awesome Instead</b></a>)
    </p>
    <p>
    I've written about <a href="http://www.codinghorror.com/blog/2012/04/books-bits-vs-atoms.html">the ongoing tension between bits and atoms</a> recently, and I want to be clear: <b>I am a <a href="http://www.codinghorror.com/blog/2008/04/programmers-dont-read-books----but-you-should.html">fan of books</a></b>. I'm just not necessarily a fan of <i>writing</i> them. I remain deeply cynical about current book publishing models, which feel fundamentally broken to me. No matter the price of the book, outside of <a href="http://en.wikipedia.org/wiki/J._K._Rowling">J.K. Rowling</a>, you're basically <a href="http://goodexperience.com/2008/07/following-up-on-these.php">buying the author a drink</a>.
    </p>
    <blockquote>
    <p>
    As the author, you can expect to make about a dollar on every copy that sells. The publisher makes several times that, so they make a nice profit with as few as, say, five thousand copies sold. Books that sell ten or fifteen thousand are rare, and considered strong sellers. So let's say you strike gold. After working on your book for a year or more, are you going to be happy with a payday of ten to fifteen grand?
    </p>
    <p>
    Incidentally, don't expect your royalty check right away. The publisher gets paid first, by the bookstores, and the publisher may then hold on to your money for several months before they part with any of it. Yes, this is legal: it's in the publisher's contract. Not getting paid may be a bummer for you, but it's a great deal for the publisher, since they make interest on the float (all the money they owe to their authors) - which is another profit stream. They'll claim one reason for the delay is the sheer administrative challenge of cutting a check within three months (so many authors to keep track of! so many payments!)... a less ridiculous reason is that they have to wait to see whether bookstores are going to return unsold copies of your book for a full refund.
    </p>
    </blockquote>
    <p>
    Here's one real world example. John Resig sold 4,128 copies of Pro Javascript, for which he earned <a href="http://ejohn.org/blog/programming-book-profits">a grand total of $1.87 per book</a> once you factor in his advance. This is a book which still <a href="http://www.amazon.com/dp/1590597273/?tag=codihorr-20">sells for $29.54</a> on Amazon new.
    </p>
    <p>
    <img alt="Resig-book-check" title="Resig-book-check" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177433bd197970d-800wi.png" width="648" height="304">
    </p>
    <p>
    Tellingly, John's second book seems <a href="http://jsninja.com/">permanently unfinished</a>. It's been listed as "in progress" since 2008. Can't say I blame him. (Update: <a href="http://ejohn.org/blog/secret-omens/">John explains</a>.)
    </p>
    <p>
    When I buy books, <b>I want most of that money to go to the <i>author</i>, not the publishing middlemen</b>. I'd like to see a world where books are distributed electronically for very little cost, and almost all the profits go directly to the author. I'm not optimistic this will happen any time soon.
    </p>
    <p>
    I admire people willing to write books, but I honestly think you have to be a little bit crazy to sit down and pound out an <i>entire book</i> these days. I believe smaller units of work are more realistic for most folks. I had an epic email discussion with <a href="http://en.wikipedia.org/wiki/Scott_Meyers">Scott Meyers</a> about the merits of technical book publishing versus blogging in 2008, and I don't think either of us budged from our initial positions. But he did launch a blog to document some of his thoughts on the matter, which ended with <a href="http://fastwareproject.blogspot.com/2010/07/blog-end.html">this post</a>:
    </p>
    <blockquote>
    <p>
    My longer-term goal was to engage in a dialogue with people interested in the production of fast software systems such that I could do a better job with the content of [my <a href="http://www.aristeia.com/Fastware/">upcoming book</a>].  Doing that, however, requires that I write up reasonable initial blog posts to spur discussion, and I've found that this is not something I enjoy.  To be honest, I view it as overhead.  Given a choice between doing background research to learn more about a topic (typically reading something, but possibly also viewing a technical presentation, listening to a technical podcast, or exchanging email with a technical expert) or writing up a blog entry to open discussion, I find myself almost invariably doing the research. One reason for this is that <b>I feel obliged to have done some research before I post</b>, anyway, and I typically find that once I'm done with the research, writing something up as a standalone blog entry is an enterprise that consumes more time than I'm willing to give it.  It's typically easier to write the result up in the form of a technical presentation, then give the presentation and get feedback that way.
    </p>
    </blockquote>
    <p>
    Overhead? I find this attitude perplexing; the research step is indeed critical, but no less important than writing up your results as a coherent blog entry. If you can't explain the results of your research to others, in writing, in a way they can understand, <i>you</i> don't understand it. And if you aren't willing to publish your research in the form of a simple web page that anyone in the world can visit and potentially learn from, <i>why did you bother doing that research in the first place?</i> Are you really <a href="http://www.codinghorror.com/blog/2007/05/maximizing-the-value-of-your-keystrokes.html">maximizing the value of your keystrokes</a>?
    </p>
    <p>
    More selfishly, you should always finish by writing up your results purely for your own self-improvement, if nothing else. As Steve Yegge <a href="https://sites.google.com/site/steveyegge2/you-should-write-blogs">once said</a>: "I have many of my best ideas and insights while blogging." Then you can take all that published writing, fold in feedback and comments from the community, add some editorial embellishment on top, and voilà – you have a great book.
    </p>
    <p>
    Of course, there's no getting around the fact that writing is just plain <a href="http://www.codinghorror.com/blog/2006/02/fear-of-writing.html"><i>hard</i></a>. Seth Godin's <a href="http://sethgodin.typepad.com/seths_blog/2006/08/advice_for_auth.html">advice for authors</a> still stands:
    </p>
    <blockquote>
    Lower your expectations. The happiest authors are the ones that don't expect much.
    </blockquote>
    <p>
    Which, I think, is also good life advice in general. Maybe the easiest way to lower your expectations as an author is by attempting to write one or two blog entries a week, keep going as long as you can, and <a href="http://www.codinghorror.com/blog/2007/10/how-to-achieve-ultimate-blog-success-in-one-easy-step.html">see where that takes you</a>.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-07-10T22:48:30.000Z</pubDate>
    <guid>https://blog.codinghorror.com/coding-horror-the-book/</guid>
    </item>
    <item>
    <title>Betting the Company on Windows 8</title>
    <link>https://blog.codinghorror.com/betting-the-company-on-windows-8/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I'd argue that <b>the last truly revolutionary version of Windows was <a href="http://en.wikipedia.org/wiki/Windows_95">Windows 95</a></b>. In the subsequent 17 years, we've seen a stream of mostly minor and often inconsequential design changes in Windows – at its core, you've got the same old stuff: a start menu, a desktop with icons, taskbar at the bottom, overlapping windows, toolbars, and pull-down menus.
    </p>
    <img alt="Win95-small" title="Win95-small" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b017616482409970c-800wi.png" width="320" height="240">
    <img alt="Win7-small-desktop" title="Win7-small-desktop" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0176164824f4970c-800wi.jpg" width="683" height="384">
    <p>
    Windows 7 may be bigger, prettier, and more refined – finally, a <a href="http://www.codinghorror.com/blog/2009/07/windows-7-the-best-vista-service-pack-ever.html">proper sequel to Windows XP</a> – but it's also safe. Rote. Familiar. Maybe a little <i>too</i> safe.
    </p>
    <p>
    Windows 95 was <a href="http://www.neowin.net/news/trivia-tuesday-windows-95s-golden-days">a big deal</a> <i>because</i> it innovated, <i>because</i> it was a break from the status quo. It sold 40 million copies in a year. It marked the coming of age of the Wintel beige box PC hegemony, and in the process dealt a near death blow to Apple and its rapidly aging System 7 OS.
    </p>
    <p>
    But we all know how that story ends – with the iPhone in 2007, and most of all the iPad in 2010, Apple popularized the idea of <b>simple touch computing surfaces that <a href="http://www.codinghorror.com/blog/2012/03/welcome-to-the-post-pc-era.html">are now defining the Post-PC Era</a></b>. The best way to predict the future is to <a href="http://en.wikiquote.org/wiki/Alan_Kay">invent it</a>. And to their credit, Apple did; that is why their star is ascendant. Kind of absurdly <a href="http://www.codinghorror.com/blog/2011/10/serving-at-the-pleasure-of-the-king.html">scarily</a> ascendant, actually.
    </p>
    <p>
    It's not like Microsoft isn't investing in R&amp;D. The <a href="http://www.youtube.com/watch?v=SRU3NemA95k">Surface table</a> looked amazing. Unfortunately, it was also trapped in a <a href="http://www.youtube.com/watch?v=CZrr7AZ9nCY">ridiculous</a>, giant coffee table form factor that no regular person could afford or even want. That's too bad, because the Surface table was actually … kind of amazing. I've only ever seen one, in the lobby of a Seattle hotel in 2008. I went in skeptical, but when I actually got to <i>try</i> the Surface table, I came away impressed. It was a fascinating and intuitive multi-touch experience … that virtually nobody will ever get to experience or use. The iPad <i>also</i> offers a fascinating and intuitive multi-touch experience; let's compare:
    </p>
    <blockquote>a multi-touch Surface Table priced at $10,000 that, statistically speaking, nobody will ever be able to see or afford</blockquote>
    <p>… versus …</p>
    <blockquote>a multi-touch iPad in the hands of every consumer with $500 in their pocket</blockquote>
    <p>Now guess which of these companies is currently worth umpteen bazillion dollars. Go on, guess! No, it's not <a href="http://en.wikipedia.org/wiki/Webvan">Webvan</a>, you jokers.</p>
    <p>
    After using the retina iPad for a while, I was shocked just how much of my everyday computing I can pull off on a tablet. Once you strip away all the needless complexities, isn't a tablet the simplest form of a computer there can be? How could it get any simpler than a tablet? Is this the ultimate and final form of computing? I wonder. It's a display in your hands, with easy full-screen applications that have simple oversize click targets to poke your finger at, and no confusing file systems to puzzle over or power-draining x86 backwards compatibility to worry about. Heck, <b>maybe a tablet is <i>better</i> than traditional PCs</b>, because it sidesteps all the accumulated cruft and hacks the PC ecosystem has accreted over the last 30 years.
    </p>
    <p>
    If you're Microsoft, this is the point at which you should be crapping your pants in abject fear.
    </p>
    <p>
    It is nothing less than the first stages of the heat death of the PC ecosystem, the formation of a tidal wave that will flow inexorably forward from this point. But you can't say they didn't see it coming. Bill Gates, of all people, <a href="http://www.lettersofnote.com/2011/07/internet-tidal-wave.html">saw this coming all the way back in 1995</a>, the same year Windows 95 was released.
    </p>
    <blockquote>
    One scary possibility being discussed by Internet fans is whether they should get together and create something far less expensive than a PC which is powerful enough for Web browsing. This new platform would optimize for the datatypes on the Web. Gordon Bell and others approached Intel on this and decided Intel didn't care about a low cost device so they started suggesting that General Magic or another operating system with a non-Intel chip is the best solution.
    </blockquote>
    <p>
    To be honest, I had almost written Microsoft off at this point, to the "whatever the abomination that IBM is now" enterprisey deadpool. It's not like they would disappear, necessarily, but they no longer had a viable horse in the race for the future of consumer computing devices. In these darkest of hours, I was actually considering … <i>switching to OS X</i>.
    </p>
    <p>
    That is, until I tried Windows 8, and until I watched Microsoft unveil Surface. No, not the huge table one, the new one that's roughly the size (and one hopes, the price) of the iPad. I was expecting Yet Another Incremental Improvement to Windows, but I got something else altogether.
    </p>
    <p>
    <a href="http://www.microsoft.com/surface/"><img alt="Microsoft-surface" title="Microsoft-surface" src="https://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177432eada5970d-800wi.jpg" width="600" height="460"></a>
    </p>
    <p>
    It took a little longer than originally anticipated, but what's 17 years between friends?
    </p>
    <p>
    Windows 8 is, in my humble opinion, the <b>most innovative version of Windows Microsoft has released since Windows 95</b>. Maybe ever. And it's good. Really good! I can't remember the last time I was this excited about a Windows release, except when I was kind of obsessively running betas of Windows 95 and waiting for Windows 95 to be released. <i>Don't judge me man!</i>
    </p>
    <p>
    What's good about Windows 8? A ton of stuff.
    </p>
    <ul>
    <li>Excellent, beautiful, "live tile" Metro multi-touch tablet optimized interface, as honed from two prior Windows Phone releases.
    </li>
    <li>Integrated app store with updates for Metro apps. Yes, it actually works.
    </li>
    <li>Fantastic new overlay notification system.
    </li>
    <li>Noticeably faster to boot, faster to shut down, faster to sleep. It's <a href="http://www.pcmag.com/article2/0,2817,2406668,00.asp">just faster</a>.
    </li>
    <li>Awesome new Task Manager. I am seriously in love with this thing.
    </li>
    <li>Updated Office 2010 style "ribbon" Explorer UI.
    </li>
    <li>New copy dialog with graph of transfer rates over time, along with a visible moving average.
    </li>
    <li>Lower system requirements and smaller footprint than Windows 7.
    </li>
    </ul>
    <p>
    That's just a list off the top of my head. But don't take my word for it. <a href="http://windows.microsoft.com/en-US/windows-8/release-preview">Download the free Release Preview</a> and try Windows 8 yourself.
    </p>
    <p>
    Now, I will warn you that Windows 8 definitely has a <b>wee bit of Jekyll and Hyde going on</b>, because it smushes together two radically different paradigms: the old school mouse and keyboard centric desktop UI, and the new school tablet and touch centric Metro UI. It can be disconcerting to get kicked abruptly from one to the other. It's different, so there's a learning curve. (Protip: using your mouse scroll wheel in a Metro panel scrolls sideways. Don't forget the hover corners, or the right click, either.) But I have to say, this choice seems, at least so far, to be a bit saner approach than the super hard totally incompatible iOS/OSX divide in Apple land.
    </p>
    <p>
    I expect that most people will decide early on whether they prefer treating their computer like a traditional laptop, or a tablet, and stick to their guns. Fortunately, the tablet stuff in Windows 8 doesn't get in the way. Even if only used as a glorified Start Menu, the Metro interface works surprisingly well – just start typing and match what you want to launch.
    </p>
    <p>
    What's even more amazing is that Microsoft is actually pricing the upgrade sanely. Can you believe <a href="http://windowsteamblog.com/windows/b/bloggingwindows/archive/2012/07/02/upgrade-to-windows-8-pro-for-39-99.aspx"><b>it's only $40 to upgrade from Windows 8</b></a> from XP, Vista, or Windows 7? It's like someone at Microsoft woke up and finally listened to what I've desperately been <a href="http://www.codinghorror.com/blog/2009/08/software-pricing-are-we-doing-it-wrong.html">trying to tell them for years</a>.
    </p>
    <p>
    <b>In the post PC era, Microsoft is betting the company on Windows 8, desperately trying to serve two masters with one operating system</b>. The traditional mouse and keyboard desktop is no longer the default; it is still there, but slightly hidden from view, as the realm of computer nuts, power users, and geeks. For everyone else, the Metro UI puts an all new, highly visual touch and tablet friendly face on the old beige Wintel box. Will Microsoft succeed? I'm not sure yet. But based on what I've seen so far of Windows 8, its pricing, and the new Surface hardware – I'm cautiously optimistic.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-07-09T12:12:30.000Z</pubDate>
    <guid>https://blog.codinghorror.com/betting-the-company-on-windows-8/</guid>
    </item>
    <item>
    <title>The PHP Singularity</title>
    <link>https://blog.codinghorror.com/the-php-singularity/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    Look at this incredible thing Ian Baker created. <i>Look at it!</i>
    </p>
    <p>
    <a href="http://www.flickr.com/photos/raindrift/sets/72157629492908038"><img alt="The PHP hammer" title="The PHP hammer" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b017742d249d5970d-800wi.jpg" width="502" height="370"></a>
    </p>
    <p>
    What you're seeing is not Photoshopped. This is an actual photo of a real world, honest to God <i>double-clawed hammer</i>. Such a thing exists. Isn't that amazing? And also, perhaps, a little disturbing?
    </p>
    <p>
    That wondrous hammer is a delightful real-world acknowledgement of the epic blog entry <a href="http://me.veekun.com/blog/2012/04/09/php-a-fractal-of-bad-design/">PHP: A Fractal of Bad Design</a>.
    </p>
    <blockquote>
    <p>
    I can’t even say what’s wrong with <a href="http://en.wikipedia.org/wiki/PHP">PHP</a>, because – okay. Imagine you have uh, a toolbox. A set of tools. Looks okay, standard stuff in there.
    </p>
    <p>
    You pull out a screwdriver, and you see it’s one of those weird tri-headed things. Okay, well, that’s not very useful to you, but you guess it comes in handy sometimes.
    </p>
    <p>
    <b>You pull out the hammer, but to your dismay, it has the claw part on both sides.</b> Still serviceable though, I mean, you can hit nails with the middle of the head holding it sideways.
    </p>
    <p>
    You pull out the pliers, but they don’t have those serrated surfaces; it’s flat and smooth. That’s less useful, but it still turns bolts well enough, so whatever.
    </p>
    <p>
    And on you go. Everything in the box is kind of weird and quirky, but maybe not enough to make it completely worthless. And there’s no clear problem with the set as a whole; it still has all the tools.
    </p>
    <p>
    Now imagine you meet millions of carpenters using this toolbox who tell you “well hey what’s the problem with these tools? They’re all I’ve ever used and they work fine!” And the carpenters show you the houses they’ve built, where every room is a pentagon and the roof is upside-down. And you knock on the front door and it just collapses inwards and they all yell at you for breaking their door.
    </p>
    <p>
    That’s what’s wrong with PHP.
    </p>
    </blockquote>
    <p>
    Remember the immediate visceral reaction you had to the double-clawed hammer? That's exactly the reaction most sane programmers have to their first encounter with the web programming language PHP.
    </p>
    <p>
    This has been going on for <i>years</i>. I published my contribution to the genre in 2008 with <a href="http://www.codinghorror.com/blog/2008/05/php-sucks-but-it-doesnt-matter.html">PHP Sucks, But It Doesn't Matter</a>.
    </p>
    <blockquote>
    <p>I'm no language elitist, but <b>language design is hard</b>. There's a reason that some of the most famous computer scientists in the world are also language designers. And it's a crying shame none of them ever had the opportunity to work on PHP. From what I've seen of it, <strong>PHP isn't so much a <i>language</i> as a random collection of arbitrary stuff, a virtual explosion at the keyword and function factory.</strong> Bear in mind this is coming from a guy who was <a href="http://www.codinghorror.com/blog/2008/04/everything-i-needed-to-know-about-programming-i-learned-from-basic.html">weaned on BASIC</a>, a language that gets about as much respect as <a href="http://en.wikipedia.org/wiki/Rodney_Dangerfield">Rodney Dangerfield</a>. So I am not unfamiliar with the genre.</p>
    </blockquote>
    <p>
    Except now it's 2012, and fellow programmers are <i>still</i> writing long screeds bemoaning the awfulness of PHP!
    </p>
    <p>
    What's depressing is not that PHP is horribly designed. Does anyone even dispute that PHP is the worst designed mainstream "language" to blight our craft in decades? What's truly depressing is that <b>so little has changed</b>. Just one year ago, legendary hacker Jamie Zawinski had <a href="http://www.jwz.org/blog/2011/05/computational-feces/">this to say</a> about PHP:
    </p>
    <blockquote>
    I used to think that PHP was the biggest, stinkiest dump that the computer industry had taken on my life in a decade. Then I started needing to do things that could only be accomplished in AppleScript.
    </blockquote>
    <p>
    Is PHP so broken as to be unworkable? No. Clearly not. The great crime of PHP is its utter banality. Its continued propularity is living proof that quality is irrelevant; cheap and popular and <i>everywhere</i> always wins. <a href="https://twitter.com/codinghorror/status/190943243511406592">PHP is the Nickelback of programming languages</a>. And, yes, out of frustration with the status quo I may have recently <a href="https://twitter.com/codinghorror/status/213739167585284097">referred</a> to Rasmus Lerdorf, the father of PHP, as history's greatest monster. I've told myself a <i>million times</i> to stop exaggerating.
    </p>
    <p>
    The hammer metaphor is apt, because at its core, this is about proper tooling. As <a href="http://weblogs.asp.net/alex_papadimoulis/archive/2005/05/25/408925.aspx">presciently noted by Alex Papadimoulis</a>:
    </p>
    <p>
    </p>
    <blockquote>
    <p>
    <i>A client has asked me to build and install a custom shelving system. I'm at the point where I need to nail it, but I'm not sure what to use to pound the nails in. Should I use an old shoe or a glass bottle?</i>
    </p>
    <p>
    How would you answer the question?
    </p>
    <ol type="a">
    <li>It depends. If you are looking to pound a small (20lb) nail in something like drywall, you'll find it much easier to use the bottle, especially if the shoe is dirty. However, if you are trying to drive a heavy nail into some wood, go with the shoe: the bottle will shatter in your hand.<br><br>
    </li>
    <li>There is something fundamentally wrong with the way you are building; you need to use real tools. Yes, it may involve a trip to the toolbox (or even to the hardware store), but doing it the right way is going to save a lot of time, money, and aggravation through the lifecycle of your product. You need to stop building things for money until you understand the basics of construction.</li>
    </ol>
    </blockquote>
    What we ought to be talking about is not how terrible PHP is – although its <i>continued</i> terribleness is a particularly damning indictment – but how we programmers can culturally displace a deeply flawed tool with a better one. <b>How do we encourage new programmers to avoid picking up the double clawed hammer in favor of, well, a regular hammer?</b>
    
    <p>
    This is not an abstract, academic concern to me. I'm starting a new open source web project with the goal of making the code as freely and easily runnable to the world as possible. Despite the serious problems with PHP, <b>I was forced to consider it</b>. If you want to produce <a href="http://www.codinghorror.com/blog/2006/08/open-source-free-as-in-free.html">free-as-in-whatever</a> code that runs on virtually every server in the world with zero friction or configuration hassles, PHP is damn near your only option. If that doesn't scare you, then check your pulse, because you might be dead.
    </p>
    <p>
    <img alt="Everything goes with PHP sauce! Including crushing depression." title="Everything goes with PHP sauce! Including crushing depression." src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b017615ed14c4970c-800wi.png" width="300" height="401">
    </p>
    <p>
    Therefore, I'd like to submit a humble suggestion to my fellow programmers. The next time you feel the urge to write Yet Another Epic Critique of PHP, consider that:
    </p>
    <ol>
    <li>We get it already. PHP is horrible, but it's used everywhere. Guess what? It was just as horrible in 2008. And 2005. And 2002. There's a pattern here, but it's subtle. You have to look very closely to see it. On second thought, never mind. You're probably not smart enough to figure it out.<br><br>
    </li>
    <li>The best way to combat something as pervasively and institutionally awful as PHP is not to point out all its (many, many, <i>many</i>) faults, but to <b>build compelling alternatives</b> and <b>make sure these alternatives are equally pervasive, as easy to set up and use as possible</b>.
    </li>
    </ol>
    <p>
    We've got a long way to go. One of the <i>explicit</i> goals of my next project is to do whatever we can to buff up a … particular … open source language ecosystem such that it can truly compete with PHP in ease of installation and deployment.
    </p>
    <p>
    From my perspective, the point of all these "PHP is broken" rants is not just to complain, but to help educate and potentially warn off <i>new</i> coders starting <i>new</i> codebases. Some fine, even historic work has been done in PHP despite the madness, unquestionably. But now we need to work together to <i>fix</i> what is broken. The best way to fix the PHP problem at this point is to <b>make the alternatives so outstanding that the choice of the better hammer becomes <i>obvious</i>.</b>
    </p>
    <p>
    That's the PHP Singularity I'm hoping for. I'm trying like hell to do my part to make it happen. How about you?
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-06-29T02:51:31.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-php-singularity/</guid>
    </item>
    <item>
    <title>Concluding the Great MP3 Bitrate Experiment</title>
    <link>https://blog.codinghorror.com/concluding-the-great-mp3-bitrate-experiment/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    And now for the dramatic conclusion to <a href="http://www.codinghorror.com/blog/2012/06/the-great-mp3-bitrate-experiment.html">The Great MP3 Bitrate Experiment</a> you've all been waiting for! The actual bitrates of each audio sample are revealed below, along with how many times each was clicked per the <a href="http://goo.gl">goo.gl</a> URL shortener stats between Thursday, June 21st and Tuesday, June 26th.
    </p>
    <p>
    </p>
    <table width="350px">
    <tr>
    <td><a href="http://goo.gl/o4zy7+">Limburger</a></td>
    <td align="right">~160kbps VBR</td>
    <td align="right">10,265</td>
    </tr>
    <tr>
    <td><a href="http://goo.gl/g8nfp+">Cheddar</a></td>
    <td align="right">320kbps CBR</td>
    <td align="right">7,183</td>
    </tr>
    <tr>
    <td><a href="http://goo.gl/UCl2v+">Gouda</a></td>
    <td align="right">raw CD</td>
    <td align="right">6,159</td>
    </tr>
    <tr>
    <td><a href="http://goo.gl/q7wFo+">Brie</a></td>
    <td align="right">~192kbps VBR</td>
    <td align="right">5,508</td>
    </tr>
    <tr>
    <td><a href="http://goo.gl/qHPc7+">Feta</a></td>
    <td align="right">128kbps CBR</td>
    <td align="right">5,567</td>
    </tr>
    </table>
    
    <p>
    During that six day period, my overall Amazon CloudFront and S3 bill for these downloaded audio samples was $103.72 for 800 GB of data, across 200k requests.
    </p>
    <p>
    Based on the raw click stats, it looks like a bunch of folks clicked on the first and second files, then lost interest. Probably because of, y'know, <a href="https://twitter.com/#!/codinghorror/media/slideshow?url=pic.twitter.com%2FUcSrzYfV">Starship</a>. Still, it's encouraging to note that the last two files were both clicked about 5.5k times for those that toughed their way out to the very end. Of those listeners, <b>3,512</b> went on to contribute results. Not bad at all! I mean, considering I made everyone listen to what <a href="http://en.wikipedia.org/wiki/List_of_music_considered_the_worst#Songs">some people consider to be one of the <s>best</s>worst "rock" songs of all time</a>. You guys are troopers, taking one in the ear for the team in the name of <i>science</i>. That's what I admire about you.
    </p>
    <p>
    I belatedly realized after creating this experiment that <b>there was an easy way to cheat</b>. Simply compress all the samples with <a href="http://flac.sourceforge.net/">FLAC</a>, then sort by filesize.
    </p>
    <pre>
    10,836,505   We+Built+This+City+-+Excerpt+(Feta).flac
    11,054,288   We+Built+This+City+-+Excerpt+(Limburger).flac
    11,294,757   We+Built+This+City+-+Excerpt+(Brie).flac
    11,731,999   We+Built+This+City+-+Excerpt+(Cheddar).flac
    11,816,415   We+Built+This+City+-+Excerpt+(Gouda).flac
    </pre>
    <p>
    The higher the bitrate, apparently, the less compressible the audio files are with lossless FLAC compression. It's a small difference in absolute file size, but it's enough to sort <i>exactly</i> with quality. At least you can independently verify that I wasn't tricking anyone in this experiment; each sample was indeed different, and the bitrates are what I said they were.
    </p>
    <p>
    But you guys and gals wouldn't do that, because you aren't dirty, filthy cheaters, right? Of course not. Let's go over the actual results. Remember each sample was ranked in a simple web form from <b>1 to 5</b>, where 1 is worst quality, and 5 is highest quality.
    </p>
    <p>
    <img alt="Mp3-experiment-results-graph" title="Mp3-experiment-results-graph" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b017615e00eec970c-800wi.png" width="573" height="383">
    </p>
    <p>
    The summary statistics for the 3,512 data points:
    </p>
    <p>
    </p>
    <table cellpadding="2" cellspacing="2" width="450px">
    <tr>
    <td></td>
    <td></td>
    <td>Avg</td>
    <td>Std dev</td>
    </tr>
    <tr>
    <td>160kbps VBR</td>
    <td>(Limburger)</td>
    <td>3.49</td>
    <td>1.38</td>
    </tr>
    <tr>
    <td>320kbps CBR</td>
    <td>(Cheddar)</td>
    <td>3.30</td>
    <td>1.34</td>
    </tr>
    <tr>
    <td>raw CD audio</td>
    <td>(Gouda)</td>
    <td>3.34</td>
    <td>1.26</td>
    </tr>
    <tr>
    <td>192kbps VBR</td>
    <td>(Brie)</td>
    <td>3.27</td>
    <td>1.29</td>
    </tr>
    <tr>
    <td>128kbps CBR</td>
    <td>(Feta)</td>
    <td>2.95</td>
    <td>1.40</td>
    </tr>
    </table>
    
    <p>
    (If you'd like to perform more detailed statistical analysis, <a href="http://www.codinghorror.com/files/codinghorror-mp3-experiment-2012-final.zip">download the Excel 2010 spreadsheet with all the data</a> and have at it.)
    </p>
    <p>
    Even without busting out hard-core statistics, I think it's clear from the basic summary statistics graph that <b>only one audio sample here was discernably different than the rest – the 128kbps CBR</b>. And by different I mean "audibly worse". I've maintained for a long, long time that typical 128kbps MP3s are not acceptable quality. Even for the worst song ever. So I guess we can consider this yet another blind listening test proving that point. Give us VBR at an average bitrate higher than 128kbps, or give us death!
    </p>
    <p>
    But what about the claim that people with dog ears can hear the difference between the higher bitrate MP3 samples? Well, first off, it's incredibly strange that the first sample – encoded at a mere 160kbps – does better on average than everything else. I think it's got to be bias from appearing first in the list of audio samples. It's kind of an outlier here for no good reason, so we have to almost throw it out. More fuel for the argument that <b>people can't hear a difference at bitrates above 128kbps</b>, and even if they do, they're probably imagining it. If we didn't throw out this result, we'd have to conclude that the 160kbps sample was somehow superior to the raw CD audio, which is … clearly insane.
    </p>
    <p>
    Running <a href="http://en.wikipedia.org/wiki/Student's_t-test">T-Test</a> and <a href="http://en.wikipedia.org/wiki/Analysis_of_variance">Analysis of Variance</a> (it's in the spreadsheet) on the non-insane results, I can confirm that the 128kbps CBR sample is lower quality with an <i>extremely</i> high degree of statistical confidence. Beyond that, as you'd expect, nobody can hear the difference between a 320kbps CBR audio file and the CD. And the 192kbps VBR results have a <i>barely</i> statistically significant difference versus the raw CD audio at the 95% confidence level. I'm talking absolutely <i>wafer thin</i> here.
    </p>
    <p>
    Anyway, between the anomalous 160kbps result and the blink-and-you'll-miss-it statistical difference between the 192kbps result and the raw CD audio, I'm comfortable calling this one as I originally saw it. The data from this experiment confirms what I thought all along: for pure listening, the LAME defaults of 192kbps variable bit rate encoding do indeed provide a safe, optimal aural bang for the byte – <b>even dogs won't be able to hear the difference between 192kbps VBR MP3 tracks and the original CD.</b>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-06-27T10:31:11.000Z</pubDate>
    <guid>https://blog.codinghorror.com/concluding-the-great-mp3-bitrate-experiment/</guid>
    </item>
    <item>
    <title>The Great MP3 Bitrate Experiment</title>
    <link>https://blog.codinghorror.com/the-great-mp3-bitrate-experiment/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    Lately I've been trying to rid my life of as many physical artifacts as possible. I'm with Merlin Mann on CDs:
    </p>
    <p>
    <a href="https://twitter.com/hotdogsladies/statuses/110819699813662720"><img class="asset  asset-image at-xid-6a0120a85dcdae970b016767baa4e6970b" alt="Can't believe how quickly CDs went from something I hate storing to something I hate buying to something I hate merely existing." title="Can't believe how quickly CDs went from something I hate storing to something I hate buying to something I hate merely existing." src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b016767baa4e6970b-800wi.png" width="457" height="155"></a>
    </p>
    <p>
    Although I'd extend that line of thinking to DVDs as well. The death of physical media <a href="http://www.codinghorror.com/blog/2012/04/books-bits-vs-atoms.html">has some definite downsides</a>, but after owning certain movies once on VHS, then on DVD, and finally on Blu-Ray, I think I'm now at peace with the idea of <b>not owning any physical media ever again</b>, if I can help it.
    </p>
    <p>
    My current strategy of wishing my physical media collection <a href="http://en.wikipedia.org/wiki/It's_a_Good_Life_(The_Twilight_Zone)">into a cornfield</a> involves shipping all our DVDs to <a href="http://www.secondspin.com/">Second Spin</a> via media mail, and paying our nephew $1 per CD to rip our CD collection using <a href="http://www.exactaudiocopy.de/">Exact Audio Copy</a> and <a href="http://lame.sourceforge.net/">LAME</a> as a summer project. The point of this exercise is absolutely <i>not</i> piracy; I have no interest in keeping both digital and physical copies of the media I paid for the privilege of <s>owning</s>temporarily licensing. Note that I didn't bother ripping any of the DVDs because I hardly ever watched them; mostly they just collected dust. But <a href="http://www.codinghorror.com/blog/2007/11/living-the-dream-rock-band.html">I continue to love music</a> and listen to my music collection on a daily basis. I'll donate all the ripped CDs to some charity or library, and if I can't pull that off, I'll just destroy them outright. <i>Stupid atoms!</i>
    </p>
    <p>
    CDs, unlike DVDs or even Blu-Rays, are considered <b>reference quality</b>. That is, the uncompressed digital audio data contained on a CD is a nearly perfect representation of the original studio master, for most reasonable people's interpretation of "perfect", <a href="http://en.wikipedia.org/wiki/Compact_Disc#Audio_CD">at least back in 1980</a>. So if you paid for a CD, you might be worried that ripping it to a <i>compressed</i> digital audio format would result in an inferior listening experience.
    </p>
    <p>
    I'm not exactly an audiophile, but I like to think I have pretty good ears. I've recommended <a href="http://www.codinghorror.com/blog/2005/12/headphone-snobbery.html">buying $200+ headphones</a> and <a href="http://www.codinghorror.com/blog/2011/05/who-needs-a-sound-card-anyway.html">headphone amps</a> for quite a while now. By the way: still a good investment! Go do it! Anyhow, previous research and my own experiments led me to write <a href="http://www.codinghorror.com/blog/2005/12/variable-bit-rate-getting-the-best-bang-for-your-byte.html">Getting the Best Bang for Your Byte</a> seven years ago. I concluded that <b>nobody could really hear the difference between a raw CD track and an MP3 using a decent encoder at a variable bit rate averaging around 160kbps</b>. Any bit rate higher than that was just wasting space on your device and your bandwidth for no rational reason. So-called "high resolution audio" was <a href="http://people.xiph.org/~xiphmont/demo/neil-young.html">recently thoroughly debunked for very similar reasons</a>.
    </p>
    <blockquote>
    <p>
    Articles last month revealed that musician Neil Young and Apple's Steve Jobs <a href="http://www.appleinsider.com/articles/12/02/01/neil_young_was_working_with_apple_on_super_high_def_music_format_.html">discussed offering digital music downloads of 'uncompromised studio quality'</a>. Much of the press and user commentary was particularly enthusiastic about the prospect of uncompressed 24 bit 192kHz downloads. 24/192 featured prominently in my own conversations with Mr. Young's group several months ago.
    </p>
    <p>
    Unfortunately, there is no point to distributing music in 24-bit/192kHz format. <b>Its playback fidelity is slightly inferior to 16/44.1 or 16/48, and it takes up 6 times the space.</b>
    </p>
    <p>
    There are a few real problems with the audio quality and 'experience' of digitally distributed music today. 24/192 solves none of them. While everyone fixates on 24/192 as a magic bullet, we're not going to see any actual improvement.
    </p>
    </blockquote>
    <p>
    The authors of LAME must have agreed with me, because the typical, standard, recommended, default way of encoding any old audio input to MP3 …
    </p>
    <pre>
    lame --preset standard "cd-track-raw.wav" "cd-track-encoded.mp3"
    </pre>
    <p>
    … now produces variable bit rate MP3 tracks at a bitrate of around 192kbps on average.
    </p>
    <p>
    <img alt="Encspot-omigod-disc-3" title="Encspot-omigod-disc-3" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b017615b05da4970c-800wi.png" width="600" height="428">
    </p>
    <p>
    (Going down one level to the "medium" preset produces nearly exactly 160kbps average, my 2005 recommendation on the nose.)
    </p>
    <p>
    Encoders have only gotten better since the good old days of 2005. Given the many orders of magnitude improvement in performance and storage since then, I'm totally comfortable with throwing an additional 32kbps in there, going from 160kbps average to 192kbps average <i>just to be totally safe</i>. That's still a miniscule file size compared to the enormous amount of data required for mythical, aurally perfect raw audio. For a particular 4 minute and 56 second music track, that'd be:
    </p>
    <p>
    </p>
    <table cellpadding="2" cellspacing="2" width="400px">
    <tr>
    <td>Uncompressed raw CD format</td>
    <td>51 mb</td>
    </tr>
    <tr>
    <td>Lossless FLAC compression</td>
    <td>36 mb</td>
    </tr>
    <tr>
    <td>LAME insane encoded MP3 (320kbps)</td>
    <td>11.6 mb</td>
    </tr>
    <tr>
    <td>LAME standard encoded MP3 (192kbps avg)</td>
    <td>7.1 mb</td>
    </tr>
    </table>
    
    <p>
    Ripping to uncompressed audio is a non-starter. I don't care how much of an ultra audio quality nerd you are, spending 7× or 5× the bandwidth and storage for <b>completely inaudible</b> "quality" improvements is a dagger directly in the heart of <i>this</i> efficiency-loving nerd, at least. Maybe if you're planning to do a lot of remixing and manipulation it might make sense to retain the raw source audio, but for typical listening, never.
    </p>
    <p>
    The difference between the 320kbps track and the 192kbps track is more rational to argue about. But <b>it's still 1.6 times the size</b>. Yes, we have tons more bandwidth and storage and power today, but storage space on your mobile device will never be free, nor will bandwidth or storage in the cloud, where I think most of this stuff should ultimately reside. And all other things being equal, wouldn't you rather be able to fit 200 songs on your device instead of 100? Wouldn't you rather be able to download 10 tracks in the same time instead of 5? Efficiency, that's where it's at. Particularly when people with dog's ears wouldn't even be able to hear the difference.
    </p>
    <h3>But Wait, I Have Dog Ears</h3>
    <p>
    Of course you do. <a href="http://en.wikipedia.org/wiki/On_the_Internet,_nobody_knows_you're_a_dog">On the Internet, nobody knows you're a dog.</a> Personally, I think you're a human being full of crap, but let's drop some science on this and see if you can prove it.
    </p>
    <p>
    <a href="http://en.wikipedia.org/wiki/On_the_Internet,_nobody_knows_you're_a_dog"><img alt="On-the-internet-nobody-knows-youre-a-dog" title="On-the-internet-nobody-knows-youre-a-dog" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b017615b0a759970c-800wi.png" width="300" height="335"></a>
    </p>
    <p>
    When someone tells me <a href="http://www.ew.com/ew/article/0,,474749,00.html">"Dudes, come on, let's steer clear of the worst song ever written!"</a>, I say <i>challenge accepted</i>. Behold <b>The Great MP3 Bitrate Experiment!</b>
    </p>
    <p>
    As <a href="http://avp.stackexchange.com/questions/1406/are-there-any-audible-differences-between-192-and-320-kbit-s-mp3-files">proposed on our very own Audio and Video Production Stack Exchange</a>, we're going to do a blind test of the same 2 minute excerpt of a particular rock audio track at a few different bitrates, ranging from 128kbps CBR MP3 all the way up to raw uncompressed CD audio. Each sample was encoded (if necessary), then exported to WAV so they all have the same file size. Can you tell the difference between any of these audio samples <i>using just your ears?</i>
    </p>
    <h3>1. Listen to each two minute audio sample</h3>
    <p>
    (update: experiment concluded; links removed.)
    </p>
    <p>
    </p>
    <table>
    <tr><td>Limburger</td></tr>
    <tr><td>Cheddar</td></tr>
    <tr><td>Gouda</td></tr>
    <tr><td>Brie</td></tr>
    <tr><td>Feta</td></tr>
    </table>
    
    <h3>2. Rate each sample for encoding quality</h3>
    <p>
    Once you've given each audio sample a listen – <i>with only your ears please, not analysis software</i> – <b><a href="https://docs.google.com/spreadsheet/viewform?formkey=dFpXVUp4cGJNS04ybTdtSnpmLXJIRWc6MQ">fill out this brief form and rate each audio sample from 1 to 5</a></b> on encoding quality, where one represents worst and five represents flawless.
    </p>
    <p>
    Yes, it would be better to use a variety of different audio samples, <a href="http://soundexpert.org/testing-room">like SoundExpert does</a>, but I don't have time to do that. Anyway, if the difference in encoding bitrate quality is as profound as certain vocal elements of the community would have you believe it is, that difference should be audible in <i>any</i> music track. To those who might argue that I am trolling audiophiles into listening to one of the worst-slash-best rock songs of all time … over and over and <i>over</i> … to prove a point … I say, how dare you impugn my honor in this manner, sir. <i>How dare you!</i>
    </p>
    <p>
    I wasn't comfortable making my <a href="http://www.codinghorror.com/blog/2010/02/welcome-back-comments.html">generous TypePad hosts</a> suffer through the bandwidth demands of multiple 16 megabyte audio samples, so this was a fun opportunity to exercise my long dormant Amazon S3 account, and test out Amazon's on-demand <a href="http://aws.amazon.com/cloudfront/">CloudFront CDN</a>. I hope I'm not rubbing any copyright holders the wrong way with this test; I just used a song excerpt for science, man! I'll pull the files entirely after a few weeks just to be sure.
    </p>
    <p>
    You'll get no argument from me that the old standby of 128kbps constant bit rate encoding is not adequate for most music, even today, and you should be able to hear that in this test. But I also maintain that virtually nobody can reliably tell the difference between a 160kbps variable bit rate MP3 and the raw CD audio, much less 192kbps.  If you'd like to prove me wrong, this is your big chance. Like the announcer in Smash TV, I say <i>good luck – you're gonna need it</i>.
    </p>
    <p>
    So which is it – <b>are you a dog or a man?</b> Give the samples a listen, then rate them. I'll post the results of this experiment in a few days.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-06-21T02:47:50.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-great-mp3-bitrate-experiment/</guid>
    </item>
    <item>
    <title>Because Everyone (Still) Needs a Router</title>
    <link>https://blog.codinghorror.com/because-everyone-still-needs-a-router/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    About a year and a half ago, <a href="http://www.codinghorror.com/blog/2010/09/because-everyone-needs-a-router.html">I researched the state of routers</a>: about as unsexy as it gets but essential to the stability, reliability, and security of your Internet connection. My conclusion?
    </p>
    <blockquote>
    This is boring old plain vanilla commodity router hardware, but when combined with an open source firmware, it is a massive improvement over my three year old, proprietary high(ish) end router. The magic router formula these days is <b>a combination of commodity hardware and open-source firmware</b>. I'm so enamored of this one-two punch combo, in fact, I might even say it represents the future. Not just of the everyday workhorse routers we all need to access the Internet – but the future of <i>all</i> commodity hardware.
    </blockquote>
    <p>
    I felt a little bad about that post, because I quickly migrated from the <a href="http://en.wikipedia.org/wiki/DD-WRT">DD-WRT</a> open source firmware to <a href="http://en.wikipedia.org/wiki/OpenWrt">OpenWRT</a> and then finally settled on <a href="http://en.wikipedia.org/wiki/Tomato_(firmware)">Tomato</a>. I guess that's open source, too many choices with nobody to really tell you what's going to work reliably on your particular hardware. But the good news is that <b>I've been running <a href="http://en.wikipedia.org/wiki/Tomato_(firmware)">Tomato</a> quite happily with total stability for about a year now</b> – primarily because it is <a href="http://team-noehring.de/extern/wrt54gl/tomato125/tomato125.htm">gloriously simple</a>, but also because it has the most functional quality of service (QoS) implementation.
    </p>
    <p>
    <a href="http://tomatousb.org/tut:using-tomato-s-qos-system"><img class="asset  asset-image at-xid-6a0120a85dcdae970b0176159a970d970c" alt="Tomato-qos" title="Tomato-qos" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b0176159a970d970c-800wi.png" width="400" height="370" style="border:1px solid silver"></a>
    </p>
    <p>
    Why does <a href="http://tomatousb.org/tut:using-tomato-s-qos-system">functional Quality of Service</a> matter so very much in a router? Unless you have an Internet connection that's only used by your grandmother to visit her church's website on Sundays, <b>QoS is the difference between a responsive Internet and one that's brutally dog slow</b>.
    </p>
    <blockquote>
    Ever sat in an internet shop, a hotel room or lobby, a local hotspot, and wondered why you can't access your email? Unknown to you, the guy in the next room or at the next table is hogging the internet bandwidth to download the Lord Of The Rings Special Extended Edition in 1080p HDTV format. You're screwed - because the hotspot router does not have an effective QoS system. In fact, I haven't come across a shop or an apartment block locally that has any QoS system in use at all. Most residents are not particularly happy with the service they [usually] pay for.
    </blockquote>
    <p>
    When I switched from DD-WRT and OpenWRT to Tomato, I had to buy a different router, because Tomato only supports certain router hardware, primarily Broadcom. The almost universal recommendation was the <a href="http://www.amazon.com/dp/B00387G6R8/?tag=codihorr-20">Asus RT-N16</a>, so that's what I went with.
    </p>
    <p>
    <a href="http://www.amazon.com/dp/B00387G6R8/?tag=codihorr-20">
    <img alt="Asus RT-N16" title="Asus RT-N16" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b016306b1a243970d-800wi.jpg" width="500" height="414"></a>
    </p>
    <p>
    And it is still an <i>excellent</i> choice. If you just want a <b>modern, workhorse single band wireless N router</b> that won't break the bank, but has plenty of power and memory to run Tomato, definitely try <a href="http://www.amazon.com/dp/B00387G6R8/?tag=codihorr-20">the Asus RT-N16</a>. It's currently available for under $80 (after $10 rebate). Once you get Tomato on there, you've got a fine combination of hardware and software. Take it from <a href="http://www.smallnetbuilder.com/wireless/wireless-reviews/31058-asus-rt-n16-gigabit-n-router-reviewed?showall=&amp;start=4">this SmallNetBuilder user review</a>:
    </p>
    <blockquote>
    <p>
    I'm a semigeek. Some of the stuff on this site confuses me. But I figured out enough to get this router and install Tomato USB. Great combination. Have not had any problems with the router. Love all the features that Tomato gives me. Like blocking my son's iPod after 7 PM. Blocking certain websites. Yeah, I know you can do that with other routers but Tomato made it easy. Also love the QoS features. Netflix devices get highest bandwidth while my wife's bittorrent gets low.
    </p>
    <p>
    Review was too heavily slanted against the Asus software, which I agree is crap. I bought the router for its hardware specs. Large memory. Fast processor. Gigabyte lan. 2 USB ports.</p>
    </blockquote>
    <p>
    What's not to love? Well, the dual band thing, mainly. If you want <b>a truly top of the line router with incredible range</b>, and simultaneous dual band 2.4 GHz and 5 GHz performance bragging rights, fortunately there's the <a href="http://www.amazon.com/dp/B006QB1RPY/?tag=codihorr-20">Asus RT-N66U</a>.
    </p>
    <p>
    <a href="http://www.amazon.com/dp/B006QB1RPY/?tag=codihorr-20"><img class="asset  asset-image at-xid-6a0120a85dcdae970b016767a51165970b" alt="Asus RT-N66U" title="Asus RT-N66U" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b016767a51165970b-800wi.jpg" width="500" height="322"></a>
    </p>
    <p>
    This is, currently at least, the state of the art in routers. It has a faster CPU and twice the memory (256 MB) of the RT-N16. But at $190 it is also over twice the price. Judge for yourself in <a href="http://www.smallnetbuilder.com/wireless/wireless-reviews/31687-asus-rt-n66u-dark-knight-dual-band-wireless-n900-gigabit-router-reviewed">the SmallNetBuilder review</a>:
    </p>
    <blockquote>
    <p>
    As good as the RT-66U is, our wireless performance results once again show that no router is good in every mode that we test. But that said, the Dark Knight clearly outperformed both the NETGEAR WNDR4500 and Cisco Linksys E4200V2 in most of our two and three-stream tests. And it's the only router in recent memory able to reach to our worst-case/lowest-signal test location on the 5 GHz band, albeit with barely-usable throughput. Still, this is an accomplishment in itself.
    </p>
    <p>
    If you're going to spend close to $200 for a wireless router, you should get a lot for your money. The Dark Knight seems to deliver wireless performance to justify its high price and has routing speed fast enough to handle any service a consumer is likely to have, even our friends in Europe and Asia.
    </p>
    </blockquote>
    <p>
    Its only weakness? Take a guess. Oh wait, no need to guess, it's the same "weakness" the RT-N16 shared, the sketchy Asus firmware it ships with out of the box. <b>That's why we get our Tomato on, people!</b> There is complete and mature support for the RT-N66U in Tomato; for a walkthrough on how to get it installed (don't be shy, it's not hard) Check out <a href="http://www.shadowandy.net/2012/03/asus-rt-n66u-tomatousb-firmware-flashing-guide.htm">Shadow Andy's TomatoUSB firmware flashing guide</a>.
    </p>
    <p>
    Does having nice router hardware with a current open source firmware matter? Well, if your livelihood depends on the Internet like mine does, then I certainly think so.
    </p>
    <p>
    <img class="asset  asset-image at-xid-6a0120a85dcdae970b0176159aae53970c" alt="Internet-serious-business" title="Internet-serious-business" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b0176159aae53970c-800wi.jpg" width="399" height="305">
    </p>
    <p>
    At the very least, if you or someone you love is also an Internet fan and <b>hasn't given any particular thought to what router they use</b>, maybe it's time to start checking into that. Now if you'll excuse me, I'm going to <a href="http://www.codinghorror.com/blog/2006/12/today-is-support-your-favorite-small-software-vendor-day.html">go donate to the Tomato project</a>.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-06-18T09:01:33.000Z</pubDate>
    <guid>https://blog.codinghorror.com/because-everyone-still-needs-a-router/</guid>
    </item>
    <item>
    <title>How to Talk to Human Beings</title>
    <link>https://blog.codinghorror.com/how-to-talk-to-human-beings/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I hesitate to say everyone should have a child, because becoming a parent is an intensely personal choice. I try my best to avoid evangelizing the experience, but the deeper in I get, the more I believe that <b>nothing captures the continued absurdity of the human condition better than having a child does</b>.
    </p>
    <p>After becoming a parent, the first thing you'll say to yourself is, <i>my God, it is a miracle any of us even exist, because I want to freakin' kill this kid</i> at least three times a day. But then your child will spontaneously hug you, or tell you some stupid joke that they can't stop laughing at, or grab for your hand while crossing the street and then … well, here we all are, aren't we? I'm left wondering if I'll ever be able to love other people – or for that matter <i>myself</i> – as much as I love my children. Unconditional, irrational, nonsensical love. That's humanity in a nutshell.
    </p>
    <p>
    <b>Parenting is <i>by far</i> the toughest job I've ever had</b>. It makes my so-called career seem awfully quaint in comparison.
    </p>
    <p>
    <img alt="the first 9 months is the hardest" title="the first 9 months is the hardest" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b0176157d2626970c-800wi.jpg" width="456" height="546">
    </p>
    <p>
    My favorite part of the parenting process, though, is finally being able to <i>talk</i> to my kids. When the dam breaks and all that crazy stuff they had locked away in those tiny brains for the first two years comes uncontrollably pouring out. Finding out what they're thinking about and what kind of people they are at last. Watching them discover and explore the surface of language is <i>utterly fascinating</i>. After spending two years trying to guess – with extremely limited success – what they want and need, truly, what greater privilege is there than to simply ask them? Language: <a href="http://www.forbes.com/2005/10/19/chomsky-noam-language-invention-comm05-cx_de_1024chomskyinvent.html">Best. Invention. Ever.</a> I like it so much I'm using it right now!
    </p>
    <p>
    Language also allows kids to demonstrate just what crazy little roiling balls of id they (and by extension, we) all are on the inside. Kids don't know what it means to be mad, to be happy, to be sad. They have to be taught what emotions are, how to handle them, and how to deal in a constructive way with everything the world is throwing at them. You'll get a ringside seat to this process not as a passive observer, but as their coach and spirit guide. They have no coping mechanisms except the ones we teach them. <b>The difference between a child who freaks out at the slightest breeze, and a child who can confidently navigate an unfamiliar world?</b> The parents.
    </p>
    <p>
    See, I told you this was going to be tough.
    </p>
    <p>
    There are of course innumerable books on parenting and child-rearing, most of which I have no time to read because by the time I'm done being a parent for the day, I'm too exhausted to read more about it. And, really, who wants to read about parenting when you're living the stuff 24/7? Except on <a href="http://parenting.stackexchange.com">Parenting Stack Exchange</a>, of course. However, there is one particular book I happened to discover that was shockingly helpful, even after barely ten pages in. If you ever need to deal with children aged 2 to 99, <b>stop reading right now and <i>go buy <a href="http://www.amazon.com/dp/0380811960/?tag=codihorr-20">How to Talk So Kids Will Listen &amp; Listen So Kids Will Talk</a></i></b>.
    </p>
    <p>
    <a href="http://www.amazon.com/dp/0380811960/?tag=codihorr-20"><img alt="How to Talk So Kids Will Listen &amp; Listen So Kids Will Talk" title="How to Talk So Kids Will Listen &amp; Listen So Kids Will Talk" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b016306932e13970d-800wi.png" width="320" height="479"></a><br>
    </p>
    <p>
    We already own three copies. And you're welcome.
    </p>
    <p>
    What's so great about this book? I originally found it through A.J. Jacobs, who I mentioned in <a href="http://www.codinghorror.com/blog/2012/05/trust-me-im-lying.html">Trust Me, I'm Lying</a>. Here's how he describes it:
    </p>
    <blockquote>
    <p>
    The best marriage advice book I’ve read is a paperback called How to Talk So Kids Will Listen &amp; Listen So Kids Will Talk. As you might deduce from the title, it wasn’t meant as a marriage advice book. But <b>the techniques in this book are so brilliant, I use them in every human interaction I can, no matter the age of the conversant.</b> It’s a strategy that was working well until today.
    </p>
    <p>
    The book was written by a pair of former New York City teachers, and their thesis is that we talk to kids all wrong. You can’t argue with kids, and you shouldn’t dismiss their complaints. The magic formula includes: listen, repeat what they say, label their emotions. The kids will figure out the solution themselves.
    </p>
    <p>
    I started using it on Jasper, who would throw a tantrum about his brothers monopolizing the pieces to Mouse Trap. I listened, repeated what he said, and watched the screaming and tears magically subside. It worked so well, I decided, why limit it to kids? My first time trying it on a grown-up was one morning at the deli. I was standing behind a guy who was trying unsuccessfully to make a call on his cell.
    </p>
    <p>
    “Oh come on! I can’t get a signal here? Dammit. This is New York.”<br>
    He looked at me.<br>
    “No signal?” I say. “Here in New York?” (Repeat what they say.)<br>
    “It’s not like we’re in goddamn Wisconsin.”<br>
    “Mmmm.” (Listen. Make soothing noises.)<br>
    “We’re not on a farm. It’s New York, for God’s sake,” he said.<br>
    “That’s frustrating,” I say. (Label their emotions.)<br>
    He calmed down.
    </p>
    </blockquote>
    <p>
    This book taught me that, as with so many other things in life, <i>I've been doing it all wrong</i>. I thought it was my job as a parent to solve problems for my children, to throw myself on life's figurative grenades to protect them. Consider the following illustrated examples from the book.
    </p>
    <p>
    <a href="http://www.amazon.com/dp/0380811960/?tag=codihorr-20"><img alt="How to Talk So Kids Will Listen, cartoon about empathy" title="How to Talk So Kids Will Listen, cartoon about empathy" src="https://blog.codinghorror.com/content/images/2015/06/toastie-crunchies-are-hard-1.png" border="0" width="361" height="944"></a>
    </p>
    <p>
    Notice how she cleverly lets the child reach an alternative solution <i>himself</i>, rather than providing the "solution" to him on a silver platter as the all-seeing, all-knowing omniscient adult. This honestly would never have occurred to me, because, well, if we're out of Toastie Crunchies, then <i>we are out of freaking Toastie Crunchies!</i>
    </p>
    <p>
    <a href="http://www.amazon.com/dp/0380811960/?tag=codihorr-20"><img alt="How to Talk So Kids Will Listen, cartoon about description" title="How to Talk So Kids Will Listen, cartoon about description" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b0176157da8bb970c-800wi.png" width="605" height="369"></a>
    </p>
    <p>
    I've learned to fall back whenever possible to simply <i>describing</i> things or situations instead of judging or pontificating. I explain the consequences of potential actions rather than jumping impatiently to "don't do that".
    </p>
    <p>
    <a href="http://www.amazon.com/dp/0380811960/?tag=codihorr-20">How to Talk So Kids Will Listen &amp; Listen So Kids Will Talk</a> is full of beautiful little insights on human interaction like this, and I was surprised to find how often what I thought was a good parenting behavior was working against us. Turns out, children aren't the only ones who have trouble dealing with their emotions and learning to communicate. I haven't just improved my relationship with my kids using the practical advice in this book, <b>I've improved my interactions with <i>all</i> human beings from age 2 to 99.</b>
    </p>
    <p>
    Kids will teach you, if you let them. They'll teach you that getting born is the easy part. Anyone can do that in a day. But becoming a well-adjusted human being? That'll take the rest of your life.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-06-14T15:59:12.000Z</pubDate>
    <guid>https://blog.codinghorror.com/how-to-talk-to-human-beings/</guid>
    </item>
    <item>
    <title>How to Stop Sucking and Be Awesome Instead</title>
    <link>https://blog.codinghorror.com/how-to-stop-sucking-and-be-awesome-instead/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I've been fortunate to have some measure of success in my life, primarily through this very blog over the last eight years, and in creating Stack Overflow and Stack Exchange over the last four years. With the birth of our twin girls, I've had a few months to <a href="http://www.codinghorror.com/blog/2012/02/farewell-stack-exchange.html">pause and reflect</a> on those experiences. What did I do right? What did I do wrong? How would I do things differently next time? <b>What advice should I give other people based on my own life experiences?</b></p>
    <p>The short answer is that <em>I wouldn't</em>.</p>
    <p>There are too many paths forward in life; I barely feel qualified to make decisions about what to do in my own life, much less recommend strategies for others in theirs. On some level I feel like Jared Fogle, who <a href="http://www.nndb.com/people/955/000044823/">lost 245 pounds eating nothing but Subway subs</a>. Maybe that worked for him, but how does that make it a valid diet strategy for the rest of the world? In other words, what I did worked for me, but <em>I'm crazy</em>.</p>
    <p>That's also never stopped <i>anyone else</i> from handing out terrible life advice hand over fist before. So I figure why not. <a href="http://www.youtube.com/watch?v=VnTHypbLlkE">Who wants to live forever?</a></p>
    <p><a href="http://www.youtube.com/watch?v=VnTHypbLlkE"><img alt="Flashgordon-vultan" title="Flashgordon-vultan" src="https://blog.codinghorror.com/content/images/uploads/2012/06/6a0120a85dcdae970b016766f9f9f9970b-pi.jpg" width="461" height="570"></a></p>
    <p>Under pressure to make some sense of what I've been doing with my life for the last eight years, I put together a small presentation which I delivered yesterday at this year's Atlassian summit.</p>
    
    <blockquote>
    <h3>How to Stop Sucking and Be Awesome Instead</h3>
    <p>If you're reading this abstract, you're not awesome enough. Attend this session to unlock the secrets of Jeff Atwood, world famous blogger and industry leading co-founder of Stack Overflow and Stack Exchange. Learn how you too can determine clear goals for your future and turn your dreams into reality through positive-minded conceptualization techniques.* Within six to eight weeks, you'll realize the positive effects of Jeff Atwood's wildly popular Coding Horror blog in your own life, transporting you to an exciting new world of wealth, happiness and political power.</p>
    <p><small>* May or may not also include working hard on things that matter for the rest of your life.</small></p>
    </blockquote>
    <p>I hope you can forgive me for the title, and I guess the rest of the abstract, and probably the entirety of the presentation too, but I find it's easier to be serious when I'm not being entirely serious. At any rate, <i>it's complicated</i>.</p>
    <p>Here's what I've seen work:</p>
    <ol>
    <li><strong>Embrace the Suck</strong></li>
    <li><strong>Do It in Public</strong></li>
    <li><strong>Pick Stuff That Matters</strong></li>
    </ol>
    <p>The video explains. When put on the spot, under duress, I have selectively doled out this advice to a few people over the years – and miraculously, I've seen them succeed using these rules, too.</p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/L7EGIt3-WUQ" frameborder="0" allowfullscreen></iframe>
    <p>(I put a lot of additional explanatory detail in the slide notes that you'll only see if you <a href="http://www.slideshare.net/codinghorror/how-to-stop-sucking-and-be-awesome-instead/download">download the full presentation</a>.)</p>
    <blockquote class="twitter-tweet" lang="en">
    <p>"it's better to be safe than sorry" is such crap. You know what's better than being safe? Being AWESOME.</p>— Jeff Atwood (@codinghorror) <a href="https://twitter.com/codinghorror/statuses/1110429100">January 11, 2009</a>
    </blockquote>
    <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>
    <p>Mostly, I think it's the fear that gets us, in all its forms. Fear of not achieving. Fear of not keeping up. Fear of looking dumb. Fear of being inadequate. Fear of being exposed. Fear of failure. <strong>The only thing preventing us from being awesome is <em>our own fear of sucking.</em></strong></p>
    <p>So that's why I say we embrace it. Who wants to live forever?</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-05-31T23:07:55.000Z</pubDate>
    <guid>https://blog.codinghorror.com/how-to-stop-sucking-and-be-awesome-instead/</guid>
    </item>
    <item>
    <title>So You Want to be a Programmer</title>
    <link>https://blog.codinghorror.com/so-you-want-to-be-a-programmer/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I didn't intend for <a href="http://www.codinghorror.com/blog/2012/05/please-dont-learn-to-code.html">Please Don't Learn to Code</a> to be so controversial, but it seemed to strike a nerve. Apparently a significant percentage of readers stopped reading at the title.
    </p>
    <p>
    So I will open with my own story. I think you'll find it instructive.
    </p>
    <blockquote>
    <p>
    My mom once told me that the only reason she dated my father is because her mother told her to stay away from that boy, he's a bad influence.
    </p>
    <p>
    If she had, I would not exist.
    </p>
    </blockquote>
    <p>
    True story, folks.
    </p>
    <p>
    <b>I'd argue that the people who <i>need</i> to learn to code will be spurred on most of all by honesty, not religious faith in the truthiness of code as a universal good.</b> Go in knowing both sides of the story, because <a href="http://www.cs.nott.ac.uk/~cah/G51ISS/Documents/NoSilverBullet.html">there are no silver bullets in code</a>. If, after hearing both the pros and cons, you still want to learn to code, then by all means <i>learn to code</i>. If you're so easily dissuaded by hearing a few downsides to coding, there are plenty of other things you could spend your time learning that are more unambiguously useful and practical. Per Michael Lopp, you could <a href="http://www.randsinrepose.com/archives/2012/05/16/please_learn_to_write.html">learn to be a better communicator</a>. Per Gina Trapani, you could <a href="http://smarterware.org/10050/please-do-learn-how-to-propose-better-solutions">learn how to propose better solutions</a>. Slinging code is <a href="http://www.codinghorror.com/blog/2009/07/code-its-trivial.html">just a tiny part of the overall solution</a> in my experience. Why optimize for <i>that?</i>
    </p>
    <p>
    On the earliest computers, everyone <i>had</i> to be a programmer because there was no software. If you wanted the computer to do anything, you wrote code. Computers in the not so distant past booted directly to the <a href="http://www.codinghorror.com/blog/2009/01/a-scripter-at-heart.html">friendly blinking cursor of a BASIC interpreter</a>. I view the entire arc of software development as a field where we programmers spend our lives writing code so that our fellow human beings no longer <i>need</i> to write code (or even worse, become programmers) to get things done with computers. So this idea that "everyone must know how to code" is, to me, going backwards.
    </p>
    <p>
    <a href="http://plyojump.com/classes/mainframe_era.php"><img alt="Grace-hopper-and-the-univac" title="Grace-hopper-and-the-univac" src="https://blog.codinghorror.com/content/images/uploads/2012/05/6a0120a85dcdae970b016766c94c14970b-800wi.jpg" width="640" height="493"></a>
    </p>
    <p>
    I fully support a push for basic Internet literacy. But in order to be a competent driver, does everyone need to know, in detail, how their automobile works? Must we teach all human beings the basics of being an auto mechanic, and elevate shop class to the same level as English and Mathematics classes? Isn't knowing how to change a tire, and when to take your car in for an oil change, sufficient? If your toilet is clogged, you shouldn't need to take a two week in depth plumbing course on <a href="http://toiletcademy.com">toiletcademy.com</a> to understand how to fix that. Reading a single web page, <a href="http://www.codinghorror.com/blog/2006/04/keeping-up-and-just-in-time-learning.html">just in time</a>, should be more than adequate.
    </p>
    <p>
    What is code, in the most abstract sense?
    </p>
    <blockquote>
    <p>code (kōd) …</p>
    <ol start="3">
    <li>
    <ol type="a">
    <li>A system of signals used to represent letters or numbers in transmitting messages.</li>
    <li>A system of symbols, letters, or words given certain arbitrary meanings, used for transmitting messages requiring secrecy or brevity.</li>
    </ol>
    </li>
    <li>A system of symbols and rules used to represent instructions to a computer…</li>
    </ol>
    <p style="text-align:right">— <i>The American Heritage Dictionary of the English Language</i></p>
    </blockquote>
    <p>
    Is it punchcards? Remote terminals? Emacs? Textmate? Eclipse? Visual Studio? C? Ruby? JavaScript? In the 1920s, it was considered important to learn how to use slide rules. In the 1960s, it was considered important to learn mechanical drawing. None of that matters today. I'm hesitant to recommend any particular approach to coding other than the fundamentals as outlined in <a href="http://www.codinghorror.com/blog/2007/01/if-loving-computers-is-wrong-i-dont-want-to-be-right.html">Code: The Hidden Language of Computer Hardware and Software</a>, because I'm not sure we'll even recognize coding in the next 20 or 30 years. To kids today, perhaps coding will eventually resemble <a href="http://www.minecraft.net/">Minecraft</a>, or <a href="http://www.thinkwithportals.com/blog.php">building levels in Portal 2</a>.
    </p>
    <p>
    But everyone should try writing a <i>little</i> code, because it somehow sharpens the mind, right? Maybe in the same abstract way that <a href="http://www.ajjacobs.com/books/kia.asp">reading the entire Encyclopedia Brittanica from beginning to end does</a>. Honestly, I'd prefer that people spend their time discovering what problems they love and find interesting, first, and researching the hell out of those problems. The toughest thing in life is not learning a bunch of potentially hypothetically useful stuff, but figuring out <a href="http://www.codinghorror.com/blog/2009/04/the-eight-levels-of-programmers.html">what the heck it is you want to do</a>. If said research and exploration leads to coding, then by all means learn to code with my blessing … which is worth exactly what it sounds like, nothing.
    </p>
    <p>
    So, no, I don't advocate learning to code for the sake of learning to code. What I advocate is <b>shamelessly following your joy</b>. For example, I received the following email yesterday.
    </p>
    <blockquote>
    <p>
    I am a 45 year old attorney/C.P.A. attempting to abandon my solo law practice as soon as humanly possible and strike out in search of my next vocation. I am actually paying someone to help me do this and, as a first step in the "find yourself" process, I was told to look back over my long and winding career and <b>identify those times in my professional life when I was doing something I truly enjoyed</b>.
    </p>
    <p>
    Coming of age as an accountant during the PC revolution (when I started my first "real" job at Arthur Andersen we were still billing clients to update depreciation schedules manually), I spend a lot of time learning how to make computers, printers, and software (VisiCalc anyone?) work. This quasi-technical aspect of my work reached its apex when I was hired as a healthcare financial analyst for a large hospital system. When I arrived for my first day of work in that job, I learned that my predecessor had bequeathed me only a one page static Excel spreadsheet that purported to "analyze" a multi-million dollar managed care contract for a seven hospital health system. I proceeded to build my own spreadsheet but quickly exceeded the database functional capacity of Excel and had to teach myself Access and thereafter proceeded to stretch the envelope of Access' spreadsheet capabilities to their utmost capacity – I had to retrieve hundreds of thousands of patient records and then perform pro forma calculations on them to see if the proposed contracts would result in more or less payment given identical utilization.
    </p>
    <p>
    I will be the first to admit that I was not coding in any professional sense of the word. I did manage to make Access do things that MS technical support told me it could not do but I was still simply using very basic commands to bend an existing application to my will. <b>The one thing I do remember was being happy.</b> I typed infinitely nested commands into formula cells for twelve to fourteen hours a day and was still disappointed when I had to stop.
    </p>
    <p>
    My experience in building that monster and making it run was, to date, my most satisfying professional accomplishment, despite going on to later become CFO of another healthcare facility, a feat that should have fulfilled all of my professional ambitions at that time. More than just the work, however, was the group of like-minded analysts and IT folks with whom I became associated as I tried, failed, tried, debugged, and continued building this behemoth of a database. I learned about Easter Eggs and coding lore and found myself hacking into areas of the hospital mainframe which were completely offlimits to someone of my paygrade. And yet, <b>I kept pursuing my "professional goals" and ended up in jobs/careers I hated doing work I loathed.</b>
    </p>
    </blockquote>
    <p>
    Here's a person who a) found an interesting problem, b) attempted to create a solution to the problem, which naturally c) led them to learning to code. <i>And they loved it.</i> This is how it's supposed to work. I didn't become a programmer because someone told me learning to code was important, I became a programmer because <a href="http://www.codinghorror.com/blog/2006/08/game-player-game-programmer.html">I wanted to change the rules of the video games I was playing</a>, and learning to code was the only way to do that. Along the way, <a href="http://www.codinghorror.com/blog/2007/01/if-loving-computers-is-wrong-i-dont-want-to-be-right.html">I too fell in love</a>.
    </p>
    <blockquote>
    <p>All that to say that as I stand at the crossroads once more, I still hear the siren song of those halcyon days of quasi-coding during which I enjoyed my work. My question for you is whether you think it is even possible for someone of my vintage to learn to code to a level that I could be hired as a programmer. I am not trying to do this on the side while running the city of New York as a day job. Rather, I sincerely and completely want to become a bona fide programmer and spend my days creating (and/or debugging) something of value.
    </p>
    </blockquote>
    <p>
    Unfortunately, <a href="http://www.kalzumeus.com/2011/10/28/dont-call-yourself-a-programmer/">calling yourself a "programmer" can be a career-limiting move</a>, particularly for someone who was a CFO in a previous career. People who work with money tend to make a lot of money; <a href="http://www.youtube.com/watch?v=PF_iorX_MAw">see Wall Street</a>.
    </p>
    <p>
    But this isn't about money, is it? <a href="http://www.codinghorror.com/blog/2007/12/on-the-meaning-of-coding-horror.html">It's about love</a>. <b>So, if you want to be a programmer, all you need to do is follow your joy and fall in love with code.</b> Any programmer worth their salt immediately recognizes a fellow true believer, a person as madly in love with code as they are, warts and all. <a href="http://www.codinghorror.com/blog/2005/05/welcome-to-the-tribe.html">Welcome to the tribe</a>.
    </p>
    <p>
    And if you're reading this and thinking, "screw this Jeff Atwood guy, who is he to tell me whether I should learn to code or not", all I can say is: <a href="http://www.imdb.com/title/tt0083658/quotes?qt=qt0378279">good! That's the spirit!</a>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-05-25T14:01:30.000Z</pubDate>
    <guid>https://blog.codinghorror.com/so-you-want-to-be-a-programmer/</guid>
    </item>
    <item>
    <title>The Eternal Lorem Ipsum</title>
    <link>https://blog.codinghorror.com/the-eternal-lorem-ipsum/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    If you've <a href="http://www.codinghorror.com/blog/2007/05/basic-design-principles-for-software-developers.html">studied design</a> at all, you've probably encountered <a href="http://en.wikipedia.org/wiki/Lorem_ipsum">Lorem Ipsum placeholder text</a> at some point. Anywhere there is text, but the meaning of that text isn't particularly important, you might see Lorem Ipsum.
    </p>
    <p>
    <a href="http://klepas.org/tintin-and-lorem-ipsum/"><img alt="Tintin-lipsum" title="Tintin-lipsum" src="https://blog.codinghorror.com/content/images/uploads/2012/05/6a0120a85dcdae970b016305a81219970d-800wi.jpg" width="624" height="372"></a>
    </p>
    <p>
    Most people recognize it as Latin. And it is. But it is arbitrarily rearranged and not quite <i>coherent</i> Latin, extracted from a <a href="http://en.wikipedia.org/wiki/De_finibus_bonorum_et_malorum">book</a> Cicero wrote in 45 BC. Here's the complete quote, with the bits and pieces that make up Lorem Ipsum highlighted.
    </p>
    <blockquote style="font-family: Georgia">
    <p>Nemo enim ipsam voluptatem, quia voluptas sit, aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos, qui ratione voluptatem sequi nesciunt, neque porro quisquam est, qui do<span style="background-color: #FFFBCC">lorem ipsum</span>, quia <span style="background-color: #FFFBCC">dolor sit amet, consectetur, adipisci[ng]</span> v<span style="background-color: #FFFBCC">elit, sed</span> quia non numquam <span style="background-color: #FFFBCC">[do] eius mod</span>i <span style="background-color: #FFFBCC">tempor</span>a <span style="background-color: #FFFBCC">inci[di]dunt, ut labore et dolore magna</span>m <span style="background-color: #FFFBCC">aliqua</span>m quaerat voluptatem. <span style="background-color: #FFFBCC">Ut enim ad minim</span>a <span style="background-color: #FFFBCC">veniam, quis nostru</span>m <span style="background-color: #FFFBCC">exercitation</span>em <span style="background-color: #FFFBCC">ullam co</span>rporis suscipit <span style="background-color: #FFFBCC">labori</span>o<span style="background-color: #FFFBCC">s</span>am, <span style="background-color: #FFFBCC">nisi ut aliquid ex ea commod</span>i <span style="background-color: #FFFBCC">consequat</span>ur? <span style="background-color: #FFFBCC">Quis aute</span>m vel eum <span style="background-color: #FFFBCC">iure reprehenderit,</span> qui <span style="background-color: #FFFBCC">in</span> ea <span style="background-color: #FFFBCC">voluptate velit esse</span>, quam nihil molestiae <span style="background-color: #FFFBCC">c</span>onsequatur, vel <span style="background-color: #FFFBCC">illum</span>, qui <span style="background-color: #FFFBCC">dolore</span>m <span style="background-color: #FFFBCC">eu</span>m <span style="background-color: #FFFBCC">fugiat</span>, quo voluptas <span style="background-color: #FFFBCC">nulla pariatur</span>?</p>
    <p>At vero eos et accusamus et iusto odio dignissimos ducimus, qui blanditiis praesentium voluptatum deleniti atque corrupti, quos dolores et quas molestias <span style="background-color: #FFFBCC">exceptur</span>i <span style="background-color: #FFFBCC">sint, obcaecat</span>i <span style="background-color: #FFFBCC">cupiditat</span>e <span style="background-color: #FFFBCC">non pro</span>v<span style="background-color: #FFFBCC">ident</span>, similique <span style="background-color: #FFFBCC">sunt in culpa</span>, <span style="background-color: #FFFBCC">qui officia deserunt mollit</span>ia <span style="background-color: #FFFBCC">anim</span>i, <span style="background-color: #FFFBCC">id est laborum</span> et dolorum fuga.</p>
    </blockquote>
    <p>
    But <i>what does it all mean?</i> Here's an English translation with the same parts highlighted.
    </p>
    <blockquote style="font-family: Georgia">
    <p>Nor again is there anyone who <span style="background-color: #FFFBCC">loves or pursues or desires to obtain pain of itself, because it is pain, but</span> occasionally <span style="background-color: #FFFBCC">circumstances occur in which toil and pain can procure him some great</span> pleasure. <span style="background-color: #FFFBCC">To take a trivial example, which of us ever</span> undertakes <span style="background-color: #FFFBCC">laborious physical exercise, except to obtain some advantage from it? But who</span> has any right to <span style="background-color: #FFFBCC">find fault</span> with a man who <span style="background-color: #FFFBCC">chooses to enjoy a pleasure</span> that has no annoying consequences, or <span style="background-color: #FFFBCC">one</span> who <span style="background-color: #FFFBCC">avoids a pain</span> that <span style="background-color: #FFFBCC">produces no</span> resultant pleasure?</p>
    <p>On the other hand, we denounce with righteous indignation and dislike men who are so beguiled and demoralized by the charms of pleasure of the moment, so <span style="background-color: #FFFBCC">blinded by desire, that they cannot foresee</span> the pain and trouble that are bound to ensue; and equal <span style="background-color: #FFFBCC">blame belongs to those who fail in their duty through weakness of will, which is the same as saying through shrinking from toil</span> and pain. </p>
    
    </blockquote>
    <p>
    Of course the whole point of Lorem Ipsum is that the words aren't <i>supposed</i> to mean anything, so attempting to divine its meaning is somewhat … unsatisfying, perhaps by design. Lorem Ipsum is a specific form of what is generally referred to somewhat cheekily as <a href="http://en.wikipedia.org/wiki/Greeking">"Greeking"</a>:
    </p>
    <blockquote>
    Greeking is a style of displaying or rendering text or symbols, not always from the Greek alphabet. <b>Greeking obscures portions of a work for the purpose of either emphasizing form over details or displaying placeholders for unavailable content.</b> The name is a reference to the phrase "Greek to me", meaning something that one cannot understand, so that it might as well be in a foreign language.
    </blockquote>
    <p>
    So when you need filler or placeholder text, you naturally reach for Lorem Ipsum as the standard. The theory is that, since it's unintelligible, nobody will attempt to <i>read</i> it, but instead <b>focus on other aspects of the design</b>. If you put readable text in the design, people might think the text is important to the design, that the text represents the sort of content you expect to see, or that the text somehow itself needs to be copyedited and updated and critiqued.
    </p>
    <p>
    (Regular readers of this blog may remember that I am fond of using <a href="http://www.gutenberg.org/ebooks/11">Alice in Wonderland</a> in this manner, when I need a bit of text to demonstrate something in a post.)
    </p>
    <p>
    <a href="http://www.debutart.com/illustration/alex-trochut/1492#/illustration-portfolio"><img alt="Lorem-ipsum" title="Lorem-ipsum" src="https://blog.codinghorror.com/content/images/uploads/2012/05/6a0120a85dcdae970b0168eb9da62f970c-800wi.png" width="539" height="500"></a>
    </p>
    <p>
    However, not everyone agrees that relying on a standard boilerplate greeked placeholder text is appropriate, even going so far as to <a href="http://www.netmagazine.com/opinions/stop-using-lorem-ipsum">call for the death of Lorem Ipsum</a>. I think it depends what you're trying to accomplish. I once noted that it's better to use real content to <a href="http://www.codinghorror.com/blog/2005/10/avoiding-blank-page-syndrome.html">avoid Blank Page Syndrome</a>, for example.
    </p>
    <p>
    There are quite a few websites that helpfully offer up the classic Lorem Ipsum text in various eminently copy-and-pastable forms.
    </p>
    <h3>Classic Lorem Ipsum</h3>
    <ul>
    <li>
    <a href="http://www.lipsum.com/">The original site</a>
    </li>
    <li>
    <a href="http://loripsum.net/">With bold, tags, lists, quotes, code blocks, etc</a>
    </li>
    <li>
    <a href="http://html-ipsum.com/">With many HTML structure variants on a single page</a>
    </li>
    <li>
    <a href="http://www.ipsum-generator.com/">With choice of paras, words, sentences</a>
    </li>
    <li>
    <a href="http://www.randomtext.me">With download and gibberish options</a>
    </li>
    <li>
    <a href="http://generator.lorem-ipsum.info">With non-repeating text and diacriticals/punctuation added</a>
    </li>
    <li>
    <a href="http://lorem2.com/">With short/long paras and lists</a>
    </li>
    <li>
    <a href="http://www.dummytextgenerator.com/">With English, tags, headings, bold and italic</a>
    </li>
    <li>
    <a href="http://www.wpfill.me/">WordPress standard content oriented</a>
    </li>
    </ul>
    <p>
    Beyond that, if you just want a bunch of, uh, <i>interesting</i> text to fill an area, there a lot – and I mean <i>a lot</i> – of websites to choose from. So many in fact that I was a little overwhelmed trying to index them all. I've tried to broadly categorize the ones I did find, below. If you know of more, feel free to leave a comment and I'll update the list.
    </p>
    <table width="720px" cellpadding="4" cellspacing="4">
    <tr>
    <td style="vertical-align: top; width:50%">
    <h3>Novelty</h3>
    <ul>
    <li>
    <a href="http://wikipsum.com/">Wikipedia</a>
    </li>
    <li>
    <a href="http://baconipsum.com/">Meat</a>
    </li>
    <li>
    <a href="http://veggieipsum.com/">Vegetables</a>
    </li>
    <li>
    <a href="http://veganipsum.com/">Vegan</a>
    </li>
    <li>
    <a href="http://tunaipsum.com">Fish</a>
    </li>
    <li>
    <a href="http://beeripsum.com">Beer</a>
    </li>
    <li>
    <a href="http://cupcakeipsum.com">Desserts</a>
    </li>
    <li>
    <a href="http://hipsteripsum.me">Hipster</a>
    </li>
    <li>
    <a href="http://skateipsum.com">Skaters</a>
    </li>
    <li>
    <a href="http://spaceipsum.com">Space</a>
    </li>
    <li>
    <a href="http://www.zombieipsum.com/">Zombies</a>
    </li>
    <li>
    <a href="http://comicipsum.com/">Comics</a>
    </li>
    <li>
    <a href="http://hairylipsum.com/">Moustaches</a>
    </li>
    <li>
    <a href="http://baseballipsum.apphb.com/">Baseball</a>
    </li>
    <li>
    <a href="http://www.elsewhere.org/pomo/">Postmodernism</a>
    </li>
    <li>
    <a href="http://www.duckisland.com/GreekMachine.asp">Marketing, Hillbilly, Metropolitan, Pseudo German, Pseudo-Code, Techno-Babble</a>
    </li>
    </ul>
    <h3>Clever English Tricks</h3>
    <ul>
    <li>
    <a href="http://randomtextgenerator.com/">Random text in 16 different languages</a>
    </li>
    <li>
    <a href="http://www.blindtextgenerator.com/lorem-ipsum">Pangrams (and other oddities)</a>
    </li>
    <li>
    <a href="http://www.adhesiontext.com/">Random dictionary words</a>
    </li>
    <li>
    <a href="http://www.crockford.com/wrrrld/anguish.html">Homophonic transformations</a>
    </li>
    <li>
    <a href="http://bff.orangehairedboy.com/">Gibberish</a>
    </li>
    <li>
    <a href="http://www.schmipsum.com/">Markov chains on multiple sources</a>
    </li>
    </ul>
    <h3>Literature</h3>
    <ul>
    <li>
    <a href="http://www.fillerati.com/">Classic writers: Melville, Baum, Burroughs, Carroll, London, Verne, Wells</a>
    </li>
    <li>
    <a href="http://www.maketext.be/index.php">Classic books: Bible, Kama Sutra, Fun with Mathematics, Alice in Wonderland, Wuthering Heights, Ulysses, All about Coffee   </a>
    </li>
    </ul>
    </td>
    <td style="vertical-align: top; width:50%">
    <h3>Professions</h3>
    <ul>
    <li>
    <a href="http://www.niemanlab.org/journo-ipsum/">Journalist</a>
    </li>
    <li>
    <a href="http://www.cipsum.com/">Corporate</a>
    </li>
    <li>
    <a href="http://notloremipsum.com/">50+ professions and fields</a>
    </li>
    </ul>
    <h3>Social Networks</h3>
    <ul>
    <li>
    <a href="http://lipsum.ahyeah.nl/">Facebook, Digg, Twitter</a>
    </li>
    <li>
    <a href="http://www.twipsum.org/">Twitter</a>
    </li>
    </ul>
    <h3>TV, Movies and Media</h3>
    <ul>
    <li>
    <a href="http://slipsum.com/">Samuel L. Jackson</a>
    </li>
    <li>
    <a href="http://arnoldipsum.com/">Arnold Schwarzenegger</a>
    </li>
    <li>
    <a href="http://chuckipsum.com/">Chuck Norris</a>
    </li>
    <li>
    <a href="http://lorizzle.nl">Snoop Doggy Dogg</a>
    </li>
    <li>
    <a href="http://vaticanassass.in/">Charlie Sheen</a>
    </li>
    <li>
    <a href="http://web20ipsum.com/">Web 2.0 company names</a>
    </li>
    <li>
    <a href="http://gagipsum.com/">Internet Memes</a>
    </li>
    <li>
    <a href="http://bluthipsum.com/">Arrested Development</a>
    </li>
    <li>
    <a href="http://lebowskiipsum.com">The Big Lebowski</a>
    </li>
    <li>
    <a href="http://chrisvalleskey.com/fillerama/">Geeky movies and TV shows</a>
    </li>
    <li>
    <a href="http://tvipsum.com">80s TV shows</a>
    </li>
    <li>
    <a href="http://www.malevole.com/mv/misc/text/">TV theme songs</a>
    </li>
    <li>
    <a href="http://fucklorem.com/">TV variety</a>
    </li>
    </ul>
    <h3>Possibly NSFW</h3>
    <ul>
    <li>
    <a href="http://www.swearemipsum.com">Swearing</a>
    </li>
    <li>
    <a href="http://trollemipsum.appspot.com">Trolling</a>
    </li>
    </ul>
    <h3>Regional</h3>
    <ul>
    <li>
    <a href="http://tlipsum.appspot.com/">Yorkshire</a>
    </li>
    <li>
    <a href="http://frontendpost.com/newfieipsum/">Newfoundland</a>
    </li>
    <li>
    <a href="http://www.boganipsum.com/">New Zealand / Australia</a>
    </li>
    <li>
    <a href="http://www.quijotipsum.com/">Spanish</a>
    </li>
    </ul>
    </td>
    </tr>
    </table>
    <p>
    This is a lot to go through. If I had to pick a favorite, I'd say <a href="http://www.fillerati.com/">Fillerati</a> because it's all dignified and stuff. But I think truer to the spirit of Lorem Ipsum are <b>definitely the <a href="http://www.crockford.com/wrrrld/anguish.html">homophonic transformations</a></b>, which consistently <i>blow my mind</i> every time I attempt to read them. Isn't that the implied goal of any properly greeked text? You were one deliciously perverse professor of romance languages, <a href="http://en.wikipedia.org/wiki/Howard_L._Chace">Howard L. Chace</a>.
    </p>
    <p>
    In today's Pinteresting world, images are arguably more important than text. But <b>what is the Lorem Ipsum of images?</b> Is there even one? I guess you could just slap some Lorem Ipsum text in an image, but where is the fun in that? Anyway, there are also plenty of websites offering up placeholder images of various types to go along with your Lorum Ipsum placeholder text.
    </p>
    <h3>Images</h3>
    <ul>
    <li>
    <a href="http://lorempixel.com/">Creative Commons images</a>
    </li>
    <li>
    <a href="http://flickholdr.com/">Flickr</a>
    </li>
    <li>
    <a href="http://placekitten.com/">Kittens</a>
    </li>
    <li>
    <a href="http://placedog.com/">Dogs</a>
    </li>
    <li>
    <a href="http://placebear.com/">Bears</a>
    </li>
    <li>
    <a href="http://www.dummyimage.com/">Plain blocks of specific sizes, colors, text</a>
    </li>
    <li>
    <a href="http://placehold.it/">More plain blocks of specific sizes, colors, text</a>
    </li>
    <li>
    <a href="http://nosrc.net/">Gray boxes</a>
    </li>
    <li>
    <a href="http://fpoimg.com/">More gray boxes</a>
    </li>
    <li>
    <a href="http://ipsumimage.appspot.com/">Gray boxes on App Engine</a>
    </li>
    <li>
    <a href="http://mrspeaker.github.com/lowersrc/">Local JavaScript generated gray boxes</a>
    </li>
    </ul>
    <p>
    I'm not sure the world needs any more Lorem Ipsum-alikes than we already have at this point. Like the market for ironic t-shirts, the Internet has ensured that our placeholder greeked text needs have not merely been met but <i>vastly</i> exceeded for the forseeable future. But after discovering all the creative things people have done with Lorem Ipsum, and text placeholders in general, it's sure tempting to dream yet another one up, isn't it?
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-05-19T11:51:13.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-eternal-lorem-ipsum/</guid>
    </item>
    <item>
    <title>Please Don't Learn to Code</title>
    <link>https://blog.codinghorror.com/please-dont-learn-to-code/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>The whole "everyone should learn programming" meme has gotten so out of control that the mayor of New York City actually <a href="https://twitter.com/#!/MikeBloomberg/status/154999795159805952">vowed to learn to code in 2012</a>.</p>
    <p><a href="https://twitter.com/#!/MikeBloomberg/status/154999795159805952"><img alt="Bloomberg-vows-to-code" title="Bloomberg-vows-to-code" src="https://blog.codinghorror.com/content/images/uploads/2012/05/6a0120a85dcdae970b016766803772970b-800wi.png" width="514" height="150"></a></p>
    <p>A noble gesture to garner the NYC tech community vote, for sure, but if the mayor of New York City actually needs to <i>sling JavaScript code to do his job</i>, something is deeply, horribly, terribly wrong with politics in the state of New York. Even if Mr. Bloomberg did "learn to code", with <a href="https://twitter.com/#!/flangy/status/155414080247709697">apologies to Adam Vandenberg</a>, I expect we'd end up with this:</p>
    <pre>
    10 PRINT "I AM MAYOR"
    20 GOTO 10
    </pre>
    <p>Fortunately, the odds of this technological flight of fancy happening – even in jest – are zero, and for good reason: the mayor of New York City will hopefully spend his time doing the job taxpayers paid him to do instead. According to the <a href="http://www.nyc.gov/portal/site/nycgov">Office of the Mayor</a> home page, that means working on absenteeism programs for schools, public transit improvements, the 2013 city budget, and … do I really need to go on?</p>
    <p>To those who argue programming is an essential skill we should be teaching our children, right up there with reading, writing, and arithmetic: <b>can you explain to me how Michael Bloomberg would be better at his day to day job of leading the largest city in the USA if he woke up one morning as a crack Java coder?</b> It is obvious to me how being a skilled reader, a skilled writer, and at least high school level math are fundamental to performing the job of a politician. Or at <i>any</i> job, for that matter. But understanding variables and functions, pointers and recursion? I can't see it.</p>
    <p>Look, <a href="http://www.codinghorror.com/blog/2008/12/programming-love-it-or-leave-it.html">I love programming</a>. I also believe programming is important … in the right context, for some people. But so are a lot of skills. I would no more urge everyone to learn programming than I would urge everyone to learn plumbing. <a href="http://codeacademy.com/">That'd be ridiculous, right?</a></p>
    <p><a href="http://codeacademy.com/"><img alt="Advice-for-plumbers" title="Advice-for-plumbers" src="https://blog.codinghorror.com/content/images/uploads/2012/05/6a0120a85dcdae970b01676680302e970b-800wi.png" width="720"></a></p>
    <p>The "everyone should learn to code" movement isn't just wrong because it falsely equates coding with essential life skills like reading, writing, and math. I wish. It is wrong in so many other ways.</p>
    <ul>
    <li>
    <p>It assumes that more code in the world is an inherently desirable thing. In my thirty year career as a programmer, I have found this … not to be the case. Should you learn to write code? No, I can't get behind that. You should be <a href="http://www.codinghorror.com/blog/2007/05/the-best-code-is-no-code-at-all.html">learning to write <i>as little code as possible</i></a>. Ideally none.</p>
    </li>
    <li>
    <p>It assumes that coding is the goal. Software developers tend to be software addicts who think their job is to write code. But it's not. <a href="http://www.codinghorror.com/blog/2007/09/can-your-team-pass-the-elevator-test.html">Their job is to solve problems</a>. Don't celebrate the creation of code, celebrate the creation of <i>solutions</i>. We have way too many coders addicted to doing just one more line of code already.</p>
    </li>
    <li>
    <p>It puts the method before the problem. Before you go rushing out to learn to code, <i>figure out what your problem actually is.</i> Do you even have a problem? Can you explain it to others in a way they can understand? Have you researched the problem, and its possible solutions, deeply? Does coding solve that problem? Are you <i>sure?</i></p>
    </li>
    <li>
    <p>It assumes that adding naive, novice, not-even-sure-they-like-this-whole-programming-thing coders to the workforce is a net positive for the world. I guess that's true if you consider that <a href="http://www.codinghorror.com/blog/2009/07/nobody-hates-software-more-than-software-developers.html">one bad programmer can easily create two new jobs a year</a>. And for that matter, <a href="http://www.codinghorror.com/blog/2010/02/the-nonprogramming-programmer.html">most people who already call themselves programmers can't even code</a>, so please pardon my skepticism of the sentiment that "everyone can learn to code".</p>
    </li>
    <li>
    <p>It implies that there's a thin, easily permeable membrane between learning to program and getting paid to program professionally. Just look at these new programmers who got offered jobs at an average salary of <b>$79k/year</b> after <a href="http://techcrunch.com/2012/05/10/dev-boot-camp-is-a-ruby-success/">attending a mere two and a half month bootcamp!</a> Maybe you too can <a href="https://blog.codinghorror.com/teach-yourself-programming-in-23-hours/">teach yourself Perl in 24 hours!</a> While I love that programming is an egalitarian field where degrees and certifications are irrelevant in the face of experience, you still gotta <a href="http://www.norvig.com/21-days.html">put in your ten thousand hours like the rest of us</a>.</p>
    </li>
    </ul>
    <p>I suppose I can support learning a tiny bit about programming just so you can recognize what code is, and when code might be an appropriate way to approach a problem you have.  But I can also recognize plumbing problems when I see them without any particular training in the area. The general populace (and its political leadership) could probably benefit most of all from a basic understanding of how computers, and the Internet, work. Being able to get around on the Internet is becoming a basic life skill, and we should be worried about fixing <i>that</i> first and most of all, before we start jumping all the way into code.</p>
    <p><b>Please don't advocate learning to code just for the sake of learning how to code.</b> Or worse, because of the fat paychecks. Instead, I humbly suggest that we spend our time learning how to …</p>
    <ul>
    <li>Research voraciously, and understand how the things around us work at a basic level.</li>
    <li>Communicate effectively with other human beings.</li>
    </ul>
    <p>These are skills that <a href="http://www.codinghorror.com/blog/2007/01/how-to-become-a-better-programmer-by-not-programming.html">extend far beyond mere coding</a> and will help you in every aspect of your life.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-05-15T01:38:38.000Z</pubDate>
    <guid>https://blog.codinghorror.com/please-dont-learn-to-code/</guid>
    </item>
    <item>
    <title>This Is All Your App Is: a Collection of Tiny Details</title>
    <link>https://blog.codinghorror.com/this-is-all-your-app-is-a-collection-of-tiny-details/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    Fair warning: this is a blog post about automated cat feeders. Sort of. But bear with me, because I'm also trying to make a point about software. If you have a sudden urge to click the back button on your browser now, I don't blame you. I don't often talk about cats, but <a href="http://www.codinghorror.com/blog/2007/04/all-about-my-cats.html">when I do, I make it count</a>.
    </p>
    <p>
    We've used automated cat feeders <a href="http://blogs.vertigo.com/personal/jatwood/Blog/Lists/Posts/Post.aspx?ID=25">since 2007</a> with great success. (My apologies for the picture quality, but it <i>was</i> 2007, and camera phones were awful.)
    </p>
    <p>
    <a href="http://blogs.vertigo.com/personal/jatwood/Blog/Lists/Posts/Post.aspx?ID=25"></a><a href="http://blogs.vertigo.com/personal/jatwood/Blog/Lists/Posts/Post.aspx?ID=25"><img alt="Old-petmate-feeders" title="Old-petmate-feeders" src="https://blog.codinghorror.com/content/images/uploads/2012/05/6a0120a85dcdae970b0163054b4164970d-800wi.jpg" width="553" height="402"></a>
    </p>
    Feeding your pets using robots might sound impersonal and uncaring. Perhaps it is. But I can't emphasize enough <b>how much of a daily lifestyle improvement it really is to have your pets <a href="http://www.youtube.com/watch?v=w0ffwDYo00Q">stop associating you with ritualized, timed feedings</a></b>. As my wife so aptly <a href="https://twitter.com/#!/betsyphd/status/198571918692069376">explained</a>:
    
    <blockquote>
    I do not miss the days when the cats would come and sit on our heads at 5 AM, wanting their breakfast.
    </blockquote>
    <p>
    Me neither. I haven't stopped loving our fuzzy buddies, but this was also before we had <s>one</s><s>two</s>three children. We don't have a lot of time for random cat hijinks these days. Anyway, once we set up the automated feeders in 2007, it was a <i>huge</i> relief to outsource pet food obsessions to machines. They reliably delivered a timed feeding at 8am and 8pm like clockwork for the last five years. No issues whatsoever, other than changing the three D batteries about once a year, filling the hopper with kibble about once a month, and an occasional cleaning.
    </p>
    <p>
    Although they <i>worked</i>, there were still many details of the automated feeders' design that were downright terrible. I put up with these problems because I was so happy to have automatic feeders that worked at all. So when I noticed that the <a href="http://www.amazon.com/dp/B0016BVY2U/?tag=codihorr-20">2012 version of these feeders</a> appeared to be considerably updated, I went ahead and upgraded immediately on faith alone. After all, it had been nearly five years! Surely the company had improved their product a bit since then … right? Well, a man can dream, can't he?
    </p>
    <p>
    <a href="http://www.amazon.com/dp/B0016BVY2U/?tag=codihorr-20"><img alt="New-petmate-feeders" title="New-petmate-feeders" src="https://blog.codinghorror.com/content/images/uploads/2012/05/6a0120a85dcdae970b0163054b7120970d-800wi.jpg" width="553" height="373"></a>
    </p>
    <p>
    When I ordered the new feeders, I assumed they would be a little better than what I had before.
    </p>
    <p>
    <a href="http://www.amazon.com/dp/B0016BVY2U/?tag=codihorr-20"><img alt="Petmate-lebistro-old-and-new" title="Petmate-lebistro-old-and-new" src="https://blog.codinghorror.com/content/images/uploads/2012/05/6a0120a85dcdae970b0168eb41af6b970c-800wi.jpg" width="720" height="453"></a>
    </p>
    <p>
    The two feeders don't look so radically different, do they? But pay attention to the details.
    </p>
    <p>
    </p>
    <ul>
    <li>
    <b>The food bowl is removable.</b> It drove me crazy that the food bowl in the old version was permanently attached, and tough to clean as a result.</li>
    <li>
    <b>The food bowl has rounded interior edges.</b> As if cleaning the non-removable bowl of our old version wasn't annoying enough, it also had sharp interior edges, which tended to accrete a bunch of powdered food gunk in there over time. Very difficult to clean properly.</li>
    <li>
    <b>The programming buttons are large and easy to press.</b> In the old version, the buttons were small watch-style soft rubber buttons that protruded from the surface. The tactile feedback was terrible, and they were easy to mis-press because of their size and mushiness.</li>
    <li>
    <b>The programming buttons are directly accessible on the face of the device.</b> For no discernable reason whatsoever, the programming buttons in the old version were under a little plastic clear protective "sneeze guard" flap, which you had to pinch up and unlock with your thumb before you could do any programming at all. I guess the theory was that a pet could somehow accidentally brush against the buttons and do … something … but that seems incredibly unlikely. But most of all, unnecessary.</li>
    <li>
    <b>The programming is easier.</b> We <i>never</i> changed the actual feed schedule, but just changing the time for daylight savings was so incredibly awkward and contorted we had to summarize the steps from the manual on a separate piece of paper as a "cheat sheet". The new version, in contrast, makes changing the time almost as simple as it should be. Almost.</li>
    <li>
    <b>There is an outflow cover flap.</b> By far the number one physical flaw of the old feeder: the feed slot invites curious paws, and makes it <a href="http://www.youtube.com/watch?v=9DEfXtd0yPg">all too easy to fish out kibble on demand</a>. You can see in my original photo that we had to mod the feed slot to tape (and eventually bolt) a wire soap dish cover over it so the cats wouldn't be able to manual feed. The new feeder has a <a href="http://www.amazon.com/gp/customer-media/product-gallery/B0016BVY2U/ref=cm_ciu_pdp_images_dav">perfectly aligned outflow flap</a> that I couldn't even dislodge with my finger. And it works; even our curious-est cat wasn't able to get past it.</li>
    <li>
    <b>The top cover rotates to lock</b>. On the old feeder, the top cover to the clear kibble storage was a simple friction fit; dislodging it wasn't difficult, and the cats did manage to do this early on with some experimentation. On the new feeder, the cover is slotted, and rotates to lock against the kibble storage securely. This is the same way the kibble feeder body locks on the base (on both old and new feeders), so it's logical to use this same "rotate to lock into or out of position" design in both places.</li>
    <li>
    <b>The feed hopper is funnel shaped</b>. The old feed hopper was a simple cylinder, and holds less in the same space as a result. When I transferred the feed over from the old full models (we had literally just filled them the day before) to the updated ones, I was able to add about 15-20 percent more kibble despite the device being roughly the same size in terms of floor space.</li>
    <li>
    <b>The base is flared</b>. Stability is critical; <a href="http://www.youtube.com/watch?v=_nIyVtgrCJE">depending how adventurous your cats are</a>, they may physically attack the feeders and try to push them over, or hit them hard enough to trigger a trickle of food dispensing. A flared base isn't the final solution, but it's a big step in the right direction. It's a heck of a lot tougher to knock over a feeder with a bigger "foot" on the ground.</li>
    <li>
    <b>It's off-white</b>. The old feeder, like the Ford Model T, was available in any color customers wanted, so long as it was black. Which meant it did a great job of <i>not</i> blending in with almost any decor, and also showed off its dust collection like a champ. Thank goodness the new model comes in "linen".</li>
    </ul>
    <p>
    These are, to be sure, a <b>bunch of dumb, nitpicky details</b>. Did the old version feed our cats reliably? Yes, it did. But it was also a pain to clean and maintain, a sort of pain that I endured weekly, for reasons that made no sense to me other than arbitrarily poor design choices. But when I bought the <a href="http://www.amazon.com/dp/B0016BVY2U/?tag=codihorr-20">new version of the automated feeder</a>, I was shocked to discover that nearly every single problem I had with the previous generation was addressed. I felt as if the Petmate Corporation™ was actually listening to all the feedback from the people who used their product, and actively refined the product to address <i>our</i> complaints and suggestions.
    </p>
    <p>
    My point, and I do have one, is that details matter. Details matter, in fact, <i>a hell of a lot.</i> Whether in automatic cat feeders, or software. As <a href="http://daringfireball.net/2007/08/c4_1_in_a_nut">my friend Wil Shipley once said</a>:
    </p>
    <h3>This is all your app is: a collection of tiny details.</h3>
    <p>
    This is still one of my favorite quotes about software. It's something we internalized heavily when building Stack Overflow. <b>Getting the details right is the difference between something that delights, and something customers <i>tolerate</i>.</b>
    </p>
    <p>
    Your software, your product, is nothing more than a collection of tiny details. If you don't obsess over all those details, if you think it's OK to concentrate on the "important" parts and continue to ignore the other umpteen dozen tiny little ways your product annoys the people who use it on a daily basis – you're not creating great software. Someone else is. I hope for your sake they aren't your competitor.
    </p>
    <p>
    The details are hard. Everyone screws up the details at first, just like Petmate did with the first version of this automatic feeder. And it's OK to screw up the details initially, provided …
    </p>
    <ul>
    <li>you're getting the primary function more or less right.
    </li>
    <li>you're listening to feedback from the people who use your product, and actively refining the details of your product based on their feedback every day.
    </li>
    </ul>
    <p>
    We were maniacal about listening to feedback from avid Stack Overflow users from the earliest days of Stack Overflow in August 2008. Did you know that we didn't even have <i>comments</i> in the first version of Stack Overflow? But it was obvious, based on user feedback and observed usage, that we desperately needed them. There are now, at the time I am writing this, <a href="http://meta.stackoverflow.com/questions/tagged/feature-request+status-completed">1,569 completed feature requests</a>; that's more than one per day on average.
    </p>
    <p>
    Imagine that. Someone who <b>cares about the details just as much as you do</b>.
    </p>
    <p>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-05-07T00:41:22.000Z</pubDate>
    <guid>https://blog.codinghorror.com/this-is-all-your-app-is-a-collection-of-tiny-details/</guid>
    </item>
    <item>
    <title>Buying Happiness</title>
    <link>https://blog.codinghorror.com/buying-happiness/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Despite popular assertions to the contrary, science tells us that <a href="http://www.pnas.org/content/107/38/16489">money <i>can</i> buy happiness</a>. To a point.</p>
    <blockquote>
    <p>Recent research has begun to distinguish two aspects of subjective well-being. Emotional well-being refers to the emotional quality of an individual's everyday experience — the frequency and intensity of experiences of joy, stress, sadness, anger, and affection that make one's life pleasant or unpleasant. Life evaluation refers to the thoughts that people have about their life when they think about it. We raise the question of whether money buys happiness, separately for these two aspects of well-being. We report an analysis of more than 450,000 responses to the Gallup-Healthways Well-Being Index, a daily survey of 1,000 US residents conducted by the Gallup Organization. […] When plotted against log income, life evaluation rises steadily. <strong>Emotional well-being also rises with log income, but there is no further progress beyond an annual income of ~$75,000.</strong></p>
    </blockquote>
    <p>For reference, the <a href="http://aspe.hhs.gov/poverty/12poverty.shtml">federal poverty level</a> for a family of four is currently <b>$23,050</b>. Once you reach a little over 3 times the poverty level in income, you've achieved peak happiness, as least far as money alone can reasonably get you.</p>
    <p>This is something I've seen echoed in a number of studies. Once you have "enough" money to satisfy the basic items at the foot of the <a href="http://en.wikipedia.org/wiki/Maslow%27s_hierarchy_of_needs">Maslow's Hierarchy of Needs</a> pyramid – that is, you no longer have to worry about food, shelter, security, and perhaps having a bit of extra discretionary money for the unknown – stacking even more money up doesn't do much, if anything, to help you scale the top of the pyramid.</p>
    <p><a href="http://www.flickr.com/photos/77813293@N00/4926795330/sizes/z/in/set-72157624805150480/"><img alt="Maslows-hierarchy-of-needs" title="Maslows-hierarchy-of-needs" src="https://blog.codinghorror.com/content/images/uploads/2012/05/6a0120a85dcdae970b01630520e71a970d-800wi.jpg" width="600" height="507"></a><br></p>
    <p>But even if you're fortunate enough to have a good income, how you spend your money has a strong influence on how happy – or unhappy – it will make you. And, again, there's science behind this. The relevant research is summarized in <a href="http://www.danielgilbert.com/DUNN%20GILBERT%20&amp;%20WILSON%20(2011).pdf">If money doesn't make you happy, then you probably aren't spending it right</a> (pdf).</p>
    <blockquote>
    <p><strong>Most people don't know the basic scientific facts about happiness — about what brings it and what sustains it — and so they don't know how to use their money to acquire it.</strong> It is not surprising when wealthy people who know nothing about wine end up with cellars that aren't that much better stocked than their neighbors', and it should not be surprising when wealthy people who know nothing about happiness end up with lives that aren't that much happier than anyone else's. Money is an opportunity for happiness, but it is an opportunity that people routinely squander because the things they think will make them happy often don't.</p>
    </blockquote>
    <p>You may also recognize some of the authors on this paper, in particular Dan Gilbert, who also wrote the excellent book <a href="http://www.amazon.com/dp/1400077427/?tag=codihorr-20">Stumbling on Happiness</a> that touched on many of the same themes.</p>
    <p>What is, then, the <b>science of happiness</b>? I'll summarize the basic eight points as best I can, but <a href="http://www.danielgilbert.com/DUNN%20GILBERT%20&amp;%20WILSON%20(2011).pdf">read the actual paper</a> (pdf) to obtain the citations and details on the underlying studies underpinning each of these principles.</p>
    <h4 id="1buyexperiencesinsteadofthings">1. Buy experiences instead of things</h4>
    <p>Things get old. Things become ordinary. Things stay the same. Things wear out. Things are difficult to share. But experiences are totally unique; they shine like diamonds in your memory, often more brightly every year, and they can be shared forever. Whenever possible, spend money on <i>experiences</i> such as taking your family to Disney World, rather than <i>things</i> like a new television.</p>
    <h4 id="2helpothersinsteadofyourself">2. Help others instead of yourself</h4>
    <p>Human beings are intensely social animals. Anything we can do with money to create deeper connections with other human beings tends to tighten our social connections and reinforce positive feelings about ourselves and others. Imagine ways you can spend some part of your money to help others – even in a very small way – and integrate that into your regular spending habits.</p>
    <h4 id="3buymanysmallpleasuresinsteadoffewbigones">3. Buy many small pleasures instead of few big ones</h4>
    <p>Because we adapt so readily to change, the most effective use of your money is to bring frequent change, not just "big bang" changes that you will quickly grow acclimated to. Break up large purchases, when possible, into smaller ones over time so that you can savor the entire experience. When it comes to happiness, frequency is more important than intensity. Embrace the idea that lots of small, pleasurable purchases are actually <i>more</i> effective than a single giant one.</p>
    <h4 id="4buylessinsurance">4. Buy less insurance</h4>
    <p>Humans adapt readily to both positive and <i>negative</i> change. Extended warranties and insurance prey on your impulse for loss aversion, but because we are so adaptable, people experience far less regret than they anticipate when their purchases don't work out. Furthermore, having the easy "out" of insurance or a generous return policy can paradoxically lead to even <i>more</i> angst and unhappiness because people deprived themselves of the emotional benefit of full commitment. Thus, avoid buying insurance, and don't seek out generous return policies.</p>
    <h4 id="5paynowandconsumelater">5. Pay now and consume later</h4>
    <p>Immediate gratification can lead you to make purchases you can't afford, or may not even truly want. Impulse buying also deprives you of the distance necessary to make reasoned decisions. It eliminates any sense of anticipation, which is a strong source of happiness. For maximum happiness, savor (maybe even prolong!) the uncertainty of deciding whether to buy, what to buy, and the time waiting for the object of your desire to arrive.</p>
    <h4 id="6thinkaboutthedetails">6. Think about the details</h4>
    <p>We tend to gloss over details when considering future purchases, but research shows that our happiness (or unhappiness) largely lies in exactly those tiny details we aren't thinking about. Before making a major purchase, consider the mechanics and logistics of owning this thing, and where your actual time will be spent once you own it. Try to imagine a typical day in your life, in some detail, hour by hour: how will it be affected by this purchase?</p>
    <h4 id="7bewareofcomparisonshopping">7. Beware of comparison shopping</h4>
    <p>Comparison shopping focuses us on attributes of products that arbitrarily distinguish one product from another, but have nothing to do with how much we'll <i>enjoy</i> the purchase. They emphasize characteristics we care about while shopping, but not necessarily what we'll care about when actually using or consuming what we just bought. In other words, getting a great deal on cheap chocolate for $2 may not matter if it's not pleasurable to eat. Don't get tricked into comparing for the sake of comparison; try to weight only those criteria that actually matter to your enjoyment or the experience.</p>
    <h4 id="8followtheherdinsteadofyourhead">8. Follow the herd instead of your head</h4>
    <p>Don't overestimate your ability to independently predict how much you'll enjoy something. We are, scientifically speaking, very bad at this. But if something reliably makes others happy, it's likely to make you happy, too. Weight other people's opinions and user reviews heavily in your purchasing decisions.</p>
    <p>Happiness is a lot harder to come by than money. So when you <i>do</i> spend money, keep these eight lessons in mind to maximize whatever happiness it can buy for you. And remember: <strong>it's science!</strong></p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-05-03T14:00:39.000Z</pubDate>
    <guid>https://blog.codinghorror.com/buying-happiness/</guid>
    </item>
    <item>
    <title>Trust Me, I'm Lying</title>
    <link>https://blog.codinghorror.com/trust-me-im-lying/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>We reflexively instruct our children to always tell the truth. It's even <a href="http://www.inquiry.net/ideals/scout_law/chart.htm">encoded into Boy Scout Law</a>. It's what adults do, isn't it? But do we? Isn't telling the truth too much and too often a bad life strategy – perhaps even dangerous? Is telling children to always tell the truth <i>even itself the whole truth?</i></p>
    <p><a href="http://www.flickr.com/photos/jswright/3510874546/"><img width="473" height="174" alt="Trust-me-im-lying" title="Trust-me-im-lying" src="https://blog.codinghorror.com/content/images/uploads/2012/05/6a0120a85dcdae970b01630509825a970d-800wi.png" border="0"></a></p>
    <p>One of the most thought provoking articles on the topic, and one I keep returning to, year after year, is <a href="http://www.esquire.com/news-politics/a26792/honesty0707/">I Think You're Fat</a>. It's about the <b>Radical Honesty movement</b>, which proposes that adults follow their own advice and <i>always tell the truth</i>. No matter what.</p>
    <blockquote>
    <p>The [Radical Honesty] movement was founded by a sixty-six-year-old Virginia-based psychotherapist named Brad Blanton. He says everybody would be happier if we just stopped lying. Tell the truth, all the time. This would be radical enough – a world without fibs – but Blanton goes further. He says we should toss out the filters between our brains and our mouths. If you think it, say it. Confess to your boss your secret plans to start your own company. If you're having fantasies about your wife's sister, Blanton says to tell your wife and tell her sister. It's the only path to authentic relationships. It's the only way to smash through modernity's soul-deadening alienation. Oversharing? No such thing.</p>
    <p>Yes. I know. One of the most idiotic ideas ever, right up there with Vanilla Coke and giving Phil Spector a gun permit. Deceit makes our world go round. Without lies, marriages would crumble, workers would be fired, egos would be shattered, governments would collapse.</p>
    <p>And yet … maybe there's something to it. Especially for me. I have a lying problem. Mine aren't big lies. They aren't lies like "I cannot recall that crucial meeting from two months ago, Senator." Mine are little lies. White lies. Half-truths. The kind we all tell. But I tell dozens of them every day. "Yes, let's definitely get together soon." "I'd love to, but I have a touch of the stomach flu." "No, we can't buy a toy today – the toy store is closed." It's bad. Maybe a couple of weeks of truth-immersion therapy would do me good.</p>
    </blockquote>
    <p>The author, A.J. Jacobs, is a great writer who made a cottage industry out of treating himself <a href="http://www.amazon.com/exec/obidos/ASIN/1416599061/codihorr-20">like a guinea pig</a>, such as attempting to <a href="http://www.amazon.com/exec/obidos/ASIN/0743250605/codihorr-20">become the smartest man in the world</a>, spend <a href="http://www.amazon.com/exec/obidos/ASIN/0743291476/codihorr-20">a year living exactly like the Bible tells us to</a>, and to <a href="http://www.amazon.com/exec/obidos/ASIN/141659907X/codihorr-20">become the fittest person on Earth</a>. Based on the strength of this article, I bought two of his books; experiments like Radical Honesty are right up his alley.</p>
    <p>Radical honesty itself isn't exactly a new concept. It's been parodied in any number of screwball Hollywood comedies such as <a href="http://www.imdb.com/title/tt0119528/">Liar, Liar</a> (1997) and <a href="http://www.imdb.com/title/tt1058017/">The Invention of Lying</a> (2009). But there's a big difference between milking this concept for laughs and exploring it as an actual lifestyle among real human beings. Among the ideas raised in the article, which <a href="http://www.esquire.com/news-politics/a26792/honesty0707/">you should go read now</a>, are:</p>
    <ul>
    <li>Telling someone that something they created is terrible: is that cruelty, because they have no talent, or is it compassion, so they can know they need to improve it?</li>
    <li>Does a thought in your head that you never express to anyone represent your truth? Should you share it? This is particularly tricky for men, who <a href="http://skeptics.stackexchange.com/questions/1508/do-men-think-about-sex-every-7-seconds">think about sex twice as much as women</a>.</li>
    <li>How much mental energy do you expend listening to a conversation trying to determine how much of what the other person is saying is untrue? Wouldn't it be less fatiguing if everything they said was, by definition, the truth? And when you're talking, always telling the truth means you never have to decide just how much truth to tell, how to hedge, massage, and spin the truth to make it palatable.</li>
    <li>In a hypothetical future when every action we take is public and broadcast to the world, is that exposing the real truth of our lives? Should we become more honest today to ready ourselves for this inevitable future?</li>
    <li>Always telling the truth can be thrilling, a form of risk taking, as you intentionally violate taboos around politeness that exist solely for the sake of avoiding conflict.</li>
    <li>Total honesty can lead to new breakthroughs in communication, where politeness prevented you from ever reaching the root, underlying causes of discontent or unhappiness.</li>
    <li>Honesty is more efficient. Rather than spending a lot of time sending messages back and forth artfully dancing <i>around</i> the truth, go directly there.</li>
    <li>If people see you are willing to be honest with them, they tend to return the favor, leading to a more useful relationship.</li>
    </ul>
    <p>What we often don't acknowledge is that <b>the truth is kind of scary</b>. That's why we have a hard time being honest with <i>ourselves</i>, much less those around us. Reading through all these ambiguous situations that A.J. put himself through, you start to wonder if you understand what truth is, or what it means to decide that something is "true". After summarizing the article in bullet form, I'm surprised there are so many points in favor of honesty, maybe even radical honesty.</p>
    <p>But uncompromisingly committing to the whole truth, and nothing but the truth, has a darker side.</p>
    <blockquote>
    <p>My wife tells me a story about switching operating systems on her computer. In the middle, I have to go help our son with something, then forget to come back.</p>
    <blockquote>
    <p>"Do you want to hear the end of the story or not?" she asks.</p>
    <p>"Well...is there a payoff?"</p>
    <p>"F**k you."</p>
    </blockquote>
    <p>It would have been a lot easier to have kept my mouth closed and listened to her. It reminds me of an issue I raised with Blanton: Why make waves? "Ninety percent of the time I love my wife," I told him. "And 10 percent of the time I hate her. Why should I hurt her feelings that 10 percent of the time? Why not just wait until that phase passes and I return to the true feeling, which is that I love her?"</p>
    <p>Blanton's response: "Because you're a manipulative, lying son of a bitch."</p>
    </blockquote>
    <p>Rather than embrace the truth, as Radical Honesty would have us do, Adrian Tan advises us to <a href="http://blazingcold.blogspot.com/2008/08/speech-by-adrian-tan-at-ntu-convocation.html">be wary of the truth</a>.</p>
    <blockquote>
    <p>Most of you will end up in activities which involve communication. To those of you I have a second message: be wary of the truth. I’m not asking you to speak it, or write it, for there are times when it is dangerous or impossible to do those things. The truth has a great capacity to offend and injure, and you will find that the closer you are to someone, the more care you must take to disguise or even conceal the truth. Often, there is great virtue in being evasive, or equivocating. There is also great skill. Any child can blurt out the truth, without thought to the consequences. It takes great maturity to appreciate the value of silence.</p>
    </blockquote>
    <p>I think he's right. But Radical Honesty isn't altogether wrong, either. Let me be clear: Radical Honesty, as a lifestyle, is ridiculous and insane. <b>Advocating telling the truth 100% of the time, no matter what, is harmful extremism.</b> But it's also wonderfully seductive as a concept, because it illustrates how needlessly afraid most of us are of truth – even truths that could potentially help us. Radical Honesty teaches us to be more brave. That is, when it's not <i>destroying our lives and the lives of everyone around us</i>.</p>
    <p>Ask yourself:</p>
    <ul>
    <li>What is the <i>purpose</i> of this truth?</li>
    <li>What effect will sharing this truth have on the other person, on yourself, on the world?</li>
    <li>What change will come about, positive or negative, from choosing to voice a particular truth at a particular time?</li>
    </ul>
    <p>I believe the true lesson of Radical Honesty is that <b>truth, real truth, is honesty with a <i>purpose</i></b>. Ideally a noble purpose, but any purpose at all other than "because I could" will suffice. By all means, be brave; embrace the truth. But if your honesty has no purpose, if you can't imagine any positive outcome from being honest, I suggest you're better off keeping it to yourself.</p>
    <p>Or even lying.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-05-01T17:48:43.000Z</pubDate>
    <guid>https://blog.codinghorror.com/trust-me-im-lying/</guid>
    </item>
    <item>
    <title>Geekatoo, the Geek Bat-Signal</title>
    <link>https://blog.codinghorror.com/geekatoo-the-geek-bat-signal/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    To understand this story, you need to understand that <b>grandchildren are like crack cocaine to grandparents</b>. I'm convinced that if our parents could somehow snort our children up their noses to get a bigger fix, they would. And when your parents live out of state, like ours do, access to the Internet isn't just important. No. It is <i>life threatening</i>.
    </p>
    <p>
    Like <a href="http://www.youtube.com/watch?v=jSidQZzJfcc#t=1m30s">Gator in Jungle Fever</a>, grandparents just gotta get their fix of the grandkids every month. And if they don't, if their Internet is broken for any reason, you're going to get an earful via telegraph and facsimile and registered letter until you fix it.
    </p>
    <p>
    <img alt="one rule: never get high on your own supply." title="one rule: never get high on your own supply." src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016304d45a28970d-800wi.jpg" width="600" height="399"><br>
    </p>
    <p>
    Either way, <i>they're gonna get high</i>. On your kids.
    </p>
    <p>
    My mom is no exception. So when her computer suddenly stopped working, and she couldn't get updates on her three grandkids, I got frantic calls. Which is odd, because everything had been working fine for a few years now. Once Henry was <a href="http://www.codinghorror.com/blog/2009/03/spawned-a-new-process.html">born</a> in 2009, I set her up with a <a href="http://www.codinghorror.com/blog/2010/01/a-democracy-of-netbooks.html">netbook</a> that had Skype and Firefox set to auto update and she'd been able to video chat with us regularly, no problem at all, since then. So what happened?
    </p>
    <p>
    My first thought was to hell with it, I'll just buy her a new iPad online via the Apple Store. I'm a <a href="http://www.codinghorror.com/blog/2012/03/welcome-to-the-post-pc-era.html">big fan</a> of the retina display, and surely the touchy-feely iPad would be more resistant to
    whatever problem she was having than a netbook, what with its archaic "operating system" and "updates" and "keyboard" and "mouse".
    </p>
    <p>
    With some urging from my wife (I married well), cooler heads prevailed. What if her problem had nothing to do with the computer, but her Internet connection in some way? Then I'd just be trading one set of problems for another with the iPad. I have no idea how things are set up over there, thousands of miles away. I needed help. <b>Help from a fellow geek who lives nearby and is willing to drive out and assist my poor mom.</b>
    </p>
    <p>
    My mom doesn't live near where I grew up any more, so I have no friend network there. All I could think of was <a href="http://www.geeksquad.com/">Geek Squad</a>. I've seen the trucks in our neighborhood, and they've been around a while, so I checked out their website. Maybe they'd work?
    </p>
    <p>
    <a href="https://scheduling.geeksquad.com"><img alt="Geek-squad-service" title="Geek-squad-service" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016304d47a93970d-800wi.png" width="638" height="258"></a>
    </p>
    <p>
    When I can buy my mom a new iPad for $399, <b>the idea of paying $299 just to have someone come out and fix her old stuff starts to feel like a really bad idea</b>. But I suppose it's a preview of our disposable computer future, because it's increasingly cheaper to buy a new one than it is to bother fixing the old one. This is the stuff that my friend and <a href="http://www.ifixit.com/">iFixit</a> founder Kyle Wiens' nightmares are made of. I'm sorry, Kyle. But it's coming.
    </p>
    <p>
    I <a href="https://twitter.com/#!/codinghorror/status/187826018755674112">posted my discontent on Twitter</a>, as I am wont to do, and received an interesting recommendation for a site I'd never heard of – <a href="http://geekatoo.com">Geekatoo</a>.
    </p>
    <p>
    <a href="http://geekatoo.com"><img alt="Geekatoo-logo" title="Geekatoo-logo" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016765c7c41b970b-800wi.png" border="0" width="435" height="144"></a>
    </p>
    <p>
    I was intrigued, first because the site didn't appear to suck which is more than I can say for about half the links I click on, and second because it appealed to my geek instincts. I could post a plea for help for my mom, and a fellow geek, one of my kind who happened to be local, would be willing to head out and assist. <b>I could send out the geek bat-signal!</b> But I was still skeptical. My mom lives in Charlotte, North Carolina which, while not exactly the sticks, isn't necessarily a big tech hub city, either. I figured I had nothing to lose at this point, so I posted the request titled "Mom Needs Tech Support" with the info I had.
    </p>
    <p>
    Much to my surprise, I got two great bids within 24 hours, geeks with good credentials, and I picked the first one. The estimate was two hours for <b>$45</b>, and he was on-site helping my mom within 2 days from the time I posted.
    </p>
    <p>
    <img alt="Geekatoo-case" title="Geekatoo-case" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016304d4a754970d-800wi.png" width="296" height="169">
    </p>
    <p>
    It turns out that my wife's intuition was correct: the cable internet installer had inexplicably decided to connect my mother's computer to a neighbor's wireless, instead of setting up a WiFi access point for her. So when that neighbor moved away, calamity ensued.
    </p>
    <p>
    And the results? Well, I think they speak for themselves.
    </p>
    <p>
    <img alt="Thank you Jeff you are the best son ever!!!!!!!!!" title="Thank you Jeff you are the best son ever!!!!!!!!!" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b0168eaca3797970c-800wi.png" width="476" height="272">
    </p>
    <p>
    My mom, as usual, exaggerates about her only son. I am far, far from the best son ever. But any website that can make me look like a hero to my mom, <i>and</i> keep my fellow <a href="http://superuser.com/">Super User geeks</a> gainfully employed doing superhero work on my behalf gets a huge thumbs up from me.
    </p>
    <p>
    Needless to say, strongly recommended. If you need reliable local tech support that won't break the bank, and you want to <b>support both your family and your local geek community at the same time</b>, check out <b><a href="http://geekatoo.com">Geekatoo</a></b>.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-04-26T23:15:31.000Z</pubDate>
    <guid>https://blog.codinghorror.com/geekatoo-the-geek-bat-signal/</guid>
    </item>
    <item>
    <title>Will Apps Kill Websites?</title>
    <link>https://blog.codinghorror.com/will-apps-kill-websites/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I've been an eBay user since 1999, and I still frequent eBay as both buyer and seller. In that time, eBay has transformed from a place where geeks <a href="http://en.wikipedia.org/wiki/EBay#Origins_and_history">sell broken laser pointers to each other</a>, into a global marketplace where businesses sell anything and everything to customers. If you're looking for strange or obscure items, things almost nobody sells new any more, or grey market items for cheap, eBay is still not a bad place to look.
    </p>
    <p>
    At least for me, eBay still basically works, after all these years. But one thing hasn't changed: <b>the eBay website has always been difficult to use and navigate</b>. They've updated the website recently to remove some of the more egregious cruft, but it's still <i>way</i> too complicated. I guess I had kind of accepted old, complex websites as the status quo, because I didn't realize how bad it had gotten until I compared the experience on the eBay website with the experience of the eBay apps for mobile and tablet.
    </p>
    <h3>eBay Website</h3>
    <p>
    <img title="Ebay-web" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016304a7ccdc970d-pi.png" width="600" height="628" alt="Ebay-web" style="border:1px solid silver">
    </p>
    <h3>eBay Mobile App</h3>
    <p>
    <img alt="Ebay-iphone-app" title="Ebay-iphone-app" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b0168ea9b6aaf970c-800wi.png" width="320" height="459" style="border:1px solid silver">
    </p>
    <h3>eBay Tablet App</h3>
    <p>
    <img alt="Ebay-ipad-app" title="Ebay-ipad-app" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b01676599b95d970b-800wi.jpg" width="600" height="784">
    </p>
    <p>
    Unless you're some kind of super advanced eBay user, you should probably avoid the website. The tablet and mobile eBay apps are just plain simpler, easier, and faster to use than the eBay website itself. I know this intuitively from using eBay on my devices and computers, but there's also <a href="http://www.useit.com/alertbox/mobile-sites-apps.html">usability studies</a> with data to prove it, too. To be fair, eBay is struggling under the massive accumulated design debt of a website originally conceived in the late 90s, whereas their mobile and tablet app experiences are recent inventions. <b>It's not so much that the eBay apps are great, but that the eBay website is so very, <i>very</i> bad</b>.
    </p>
    <p>
    The implied lesson here is to <b>embrace constraints</b>. Having a limited, fixed palette of UI controls and screen space is a <i>strength</i>. A strength we used to have in early Mac and Windows apps, but seem to have lost somewhere along the way as applications got more powerful and complicated. And it's endemic on the web as well, where the eBay website has been slowly accreting more and more functionality since 1999. The nearly unlimited freedom that you get in a modern web browser to build whatever UI you can dream up, and assume as large or as small a page as you like, often ends up being harmful to users. It certainly is in the case of eBay.
    </p>
    <p>
    If you're starting from scratch, you should always <a href="http://www.codinghorror.com/blog/2008/04/ui-first-software-development.html">design the UI first</a>, but now that we have such great mobile and tablet device options, consider designing your site for the devices that have the strictest constraints first, too. This is the thinking that led to <a href="http://www.lukew.com/ff/entry.asp?933">mobile first design strategy</a>. It helps you stay focused on a simple and uncluttered UI that you can scale up to bigger and beefier devices. Maybe eBay is just going in the wrong direction here; <b>design simple things that scale up; not complicated things you need to scale down.</b>
    </p>
    <p>
    <a href="http://www.codinghorror.com/blog/2006/03/in-pursuit-of-simplicity.html">Above all else, simplify!</a> But why stop there? If building the mobile and tablet apps first for a web property produces a better user experience – why do we need the website, again? Do great tablet and phone applications make websites obsolete?
    </p>
    <h3>Why are apps better than websites?</h3>
    <ol>
    <li>
    <b>They can be faster.</b><br>No browser overhead of CSS and HTML and JavaScript hacks, just pure native UI elements retrieving precisely the data they need to display what the user requests.<br><br>
    </li>
    <li>
    <b>They use simple, native UI controls.</b><br>
    Rather than imagineering whatever UI designers and programmers can dream up, why not pick from a well understood palette of built-in UI controls on that tablet or phone, all built for optimal utility and affordance on that particular device?<br><br>
    </li>
    <li>
    <b>They make better use of screen space.</b><br>
    Because designers have to fit just the <i>important</i> things on 4 inch diagonal mobile screens, or 10 inch diagonal tablet screens, they're less likely to fill the display up with a bunch of irrelevant noise or design flourishes (or, uh, advertisements). Just the important stuff, thanks!<br><br>
    </li>
    <li>
    <b>They work better on the go and even offline.</b><br>
    In a mobile world, you can't assume that the user has a super fast, totally reliable Internet connection. So you learn to design apps that download just the data they need at the time they need to display it, and have sane strategies for loading partial content and images as they arrive. That's assuming they arrive at all. You probably also build in some sort of offline mode, too, when you're on the go and you don't have connectivity.
    </li>
    </ol>
    <h3>Why are websites better than apps?</h3>
    <ol>
    <li>
    <b>They work on any device with a browser.</b><br>
    Websites are as close to universal as we may ever get in the world of software. Provided you have a HTML5 compliant browser, you can run an entire universe of "apps" on your device from day zero, just by visiting a link, exactly the same way everyone has on the Internet since 1995. You don't have to hope and pray a development community emerges and is willing to build whatever app your users need.<br><br>
    </li>
    <li>
    <b>They don't have to be installed.</b><br>
    Applications, unlike websites, can't be visited. They aren't indexed by Google. Nor do applications magically appear on your device; they must be explicitly installed. Even if installation is a one-click affair, your users will have to discover the app before they can even begin to install it. And once installed, they'll have to <a href="http://www.hanselman.com/blog/AppsAreTooMuchLike1990sCDROMsAndNotEnoughLikeTheWeb.aspx"><i>manage</i> all those applications like so many Pokemon</a>.<br><br>
    </li>
    <li>
    <b>They don't have to be updated.</b><br>
    Websites are always on the <a href="http://www.codinghorror.com/blog/2011/05/the-infinite-version.html">infinite version</a>. But once you have an application installed on your device, how do you update it to add features or fix bugs? How do users even know if your app is out of date or needs updating? And why should they need to care in the first place?<br><br>
    </li>
    <li>
    <b>They offer a common experience.</b><br>
    If your app and the website behave radically differently, you're forcing users to learn two different interfaces. How many different devices and apps do you plan to build, and how consistent will they be? You now have a community divided among many different experiences, fragmenting your user base. But with a website that has a decent mobile experience baked in, you can deliver a consistent, and hopefully <i>consistently great</i>, experience across <i>all</i> devices to all your users.
    </li>
    </ol>
    <p>
    I don't think there's a clear winner, only pros and cons. But <b>apps will always need websites</b>, if for nothing else other than a source of data, as a mothership to phone home to, and a place to host the application downloads for various devices.
    </p>
    <p>
    And if you're obliged to build a website, why not build it out so it offers a <i>reasonable</i> experience on a mobile or tablet web browser, too? I have nothing against a premium experience optimized to a particular device, but shouldn't all your users have a premium experience? eBay's problem here isn't mobile or tablets per se, but that they've let their core web experience atrophy so badly. I understand that there's a lot of inertia around legacy eBay tools and long time users, so it's easy for me to propose radical changes to the website here on the outside. Maybe the only way eBay can redesign <i>at all</i> is on new platforms.
    </p>
    <p>
    Will mobile and tablet apps kill websites? A few, certainly. <b>But only the websites stupid enough to let them.</b>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-04-23T14:52:15.000Z</pubDate>
    <guid>https://blog.codinghorror.com/will-apps-kill-websites/</guid>
    </item>
    <item>
    <title>Make Your Email Hacker Proof</title>
    <link>https://blog.codinghorror.com/make-your-email-hacker-proof/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    It's only a matter of time until your email gets hacked. Don't believe me? Just read <a href="http://www.theatlantic.com/magazine/archive/2011/11/hacked/8673/?single_page=true">this harrowing cautionary tale</a>.
    </p>
    <blockquote>
    <p>
    When [my wife] came back to her desk, half an hour later, she couldn’t log into Gmail at all. By that time, I was up and looking at e‑mail, and we both quickly saw what the real problem was. In my inbox I found a message purporting to be from her, followed by a quickly proliferating stream of concerned responses from friends and acquaintances, all about the fact that she had been “mugged in Madrid.” The account had seemed sluggish earlier that morning because my wife had tried to use it at just the moment a hacker was taking it over and changing its settings—including the password, so that she couldn’t log in again.
    </p>
    <p>…</p>
    <p>The greatest practical fear for my wife and me was that, even if she eventually managed to retrieve her records, so much of our personal and financial data would be in someone else’s presumably hostile hands that we would spend our remaining years looking over our shoulders, wondering how and when something would be put to damaging use. At some point over the past six years, <b>our [email] correspondence would certainly have included every number or code that was important to us – credit card numbers, bank-account information, medical info, and any other sensitive data you can imagine.</b></p>
    </blockquote>
    <p>
    Now get everyone you know to read it, too. Please. It's for their own good.
    </p>
    <p>
    Your email is <a href="http://www.codinghorror.com/blog/2008/06/please-give-us-your-email-password.html">the skeleton key to your online identity</a>. When you lose control of your email to a hacker – not if, but <i>when</i> you lose control of your email to a hacker – the situation is dire. Email is a one stop shop for online identity theft. You should start thinking of security for your email as roughly equivalent to the sort of security you'd want on your bank account. It's exceedingly close to that in practice.
    </p>
    <p>
    The good news, at least if you use GMail, is that <b>you can make your email virtually hacker-proof today, provided you own a cell phone</b>. The fancy geek technical term for this is <a href="http://www.codinghorror.com/blog/2007/02/what-you-have-what-you-know-what-you-are.html">two factor authentication</a>, but that doesn't matter right now. What matters is that until you turn this on, your email is vulnerable. So let's get started. Not tomorrow. Not next week. <a href="http://www.codinghorror.com/blog/2007/07/yes-but-what-have-you-done.html"><i>Right. Freaking. Now.</i></a>
    </p>
    <h3>Go to your Google Account Settings</h3>
    <p>
    <img alt="Google-account-settings" title="Google-account-settings" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b0168ea461e96970c-800wi.png" width="375" height="273">
    </p>
    <p>
    Make sure you're logged in. Expand the little drop-down user info panel at the top right of most Google pages. From here, click "Account" to view your account settings.
    </p>
    <p>
    <img alt="Google-enable-two-factor-auth" title="Google-enable-two-factor-auth" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016765449816970b-800wi.png" style="border:1px solid silver" width="561" height="239">
    </p>
    <p>
    On the account settings page, click "edit" next to 2-step verification and turn it on.
    </p>
    <h3>Have Your Cell Phone Ready</h3>
    <p>
    GMail will walk you through the next few steps. You just need a telephone that can receive SMS text messages. Enter the numeric code sent through the text message to proceed.
    </p>
    <p>
    <img alt="Google-text-email-verification" title="Google-text-email-verification" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b0168ea462977970c-800wi.jpg" width="305" height="102">
    </p>
    <h3>Now Log In With Your Password and a PIN</h3>
    <p>
    Now your password alone is no longer enough to access your email.
    </p>
    <p>
    <img alt="Google-two-factor-login" title="Google-two-factor-login" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b01630450cd66970d-800wi.png" width="745" height="300" style="border:1px solid silver">
    </p>
    <p>
    Once this is enabled, <b>accessing your email always requires the password, <i>and</i> a code delivered via your cell phone</b>. (You can check the "remember me for 30 days on this device" checkbox so you don't have to do this every time.) With this in place, even if they discover your super sekrit email password, would-be hackers can't do anything useful with it! To access your email, they'd need to somehow gain control of your cell phone, too. I can't see that happening unless you're in some sort of hostage situation, and at that point I think email security is the least of your problems.
    </p>
    <h3>What If I Lose My Cell Phone?</h3>
    <p>
    Your cell phone isn't the only way to get the secondary PIN you need to access your email. On the account page there are multiple ways to generate verification codes, including adding a secondary backup phone number, and downloading <a href="http://support.google.com/a/bin/answer.py?hl=en&amp;answer=1037451">mobile applications that can generate verification codes</a> without a text message (but that requires a smart phone, naturally).
    </p>
    <p>
    <img alt="Google-backup-email-codes" title="Google-backup-email-codes" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b01630450e9fe970d-800wi.png" width="672" height="197" style="border:1px solid silver">
    </p>
    This also includes the never-fails-always-works option: <b>printing out the single-use backup verification codes on a piece of paper</b>. Go do this now. <i>Right now!</i> And keep those backup codes with you at all times. Put them in your wallet, purse, man-purse, or whatever it is that travels with you most often when you get out of bed.
    
    <p>
    <img alt="Backup-verification-codes" title="Backup-verification-codes" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b0168ea465f87970c-800wi.png" width="279" height="190">
    </p>
    <h3>What About Apps That Access Email?</h3>
    <p>
    Applications or websites that access your email, and thus necessarily store your email address and password, are also affected. They have no idea that they now need to enter a PIN, too, so they'll all be broken. You'll need to <b>generate app-specific passwords for your email</b>. To do that, visit the accounts page.
    </p>
    <p>
    <img alt="Google-enabling-apps" title="Google-enabling-apps" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b01630450fb85970d-800wi.png" style="border:1px solid silver" width="387" height="213">
    </p>
    <p>
    Click on authorizing applications &amp; sites, then enter a name for the application and click the Generate Password button.
    </p>
    <p>
    <img alt="Google-generated-app-password" title="Google-generated-app-password" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b0168ea469908970c-800wi.png" style="border:1px solid silver" width="543" height="396">
    </p>
    <p>
    Let me be clear about this, because it can be confusing: <b>enter that specially generated password in the application, <i>not</i> your master email password</b>.
    </p>
    <p>
    This effectively creates a list of passwords specific to each application. So you can see the date each one was last used, and revoke each app's permission to touch your email individually as necessary without ever revealing your primary email password to <i>any</i> application, ever. See, I told you, there is a method to the apparent madness.
    </p>
    <h3>But I Don't Use Gmail</h3>
    <p>
    Either nag your email provider to provide two-factor authentication, or switch over. Email security is critically important these days, and switching is easy(ish). GMail has had fully secure connections for <a href="http://www.codinghorror.com/blog/2012/02/should-all-web-traffic-be-encrypted.html">quite a while now</a>, and once you add two-factor authentication to the mix, that's about as much online email safety as you can reasonably hope to achieve short of going back to snail mail.
    </p>
    <h3>Hey, This Sounds Like a Pain!</h3>
    <p>
    I know what you're thinking. Yes, this is a pain in the ass. I'll fully acknowledge that. But you know what's an even <i>bigger</i> pain in the ass? Having your entire online identity stolen and trashed by a hacker who happens to obtain your email password one day. Remember that article I exhorted you to read at the beginning? Oh, you didn't read it? <a href="http://www.theatlantic.com/magazine/archive/2011/11/hacked/8673/?single_page=true">Go freaking read it now!</a>
    </p>
    <p>
    Permit me to <a href="http://www.codinghorror.com/blog/2008/01/whats-your-backup-strategy.html">channel Jamie Zawinski</a> one last time: "OMG, entering these email codes on every device I access email would be a lot of work! That sounds like a hassle!" <b>Shut up. I know things. You will listen to me. Do it anyway.</b>
    </p>
    <p>
    I've been living with this scheme for a few months now, and I've convinced my wife to as well. I won't lie to you; it hasn't all been wine and roses for us either. But it is inconvenient in the same way that bank vaults and door locks are. The upside is that once you enable this, your email becomes <b>extremely secure</b>, to the point that you can (and I regularly do) email yourself highly sensitive data like passwords and logins to other sites you visit so you can easily retrieve them later.
    </p>
    <p>
    If you choose not to do this, well, at least you've educated yourself about the risks. And I hope you're extremely careful with your email password and change it regularly to something complex. You're making life all too easy for the hackers who make a fabulous living from stealing and permanently defacing online identities <i>just like yours</i>.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-04-17T15:59:54.000Z</pubDate>
    <guid>https://blog.codinghorror.com/make-your-email-hacker-proof/</guid>
    </item>
    <item>
    <title>Learn to Read the Source, Luke</title>
    <link>https://blog.codinghorror.com/learn-to-read-the-source-luke/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    In the calculus of communication, writing coherent paragraphs that your fellow human beings can comprehend and understand is <a href="http://www.codinghorror.com/blog/2006/06/is-writing-more-important-than-programming.html"><i>far</i> more difficult</a> than tapping out a few lines of software code that the interpreter or compiler won't barf on.
    </p>
    <p>
    That's why, when it comes to code, <a href="http://www.codinghorror.com/blog/2007/01/if-it-isnt-documented-it-doesnt-exist.html">all the documentation probably sucks</a>. And because writing for people is way harder than writing for machines, the documentation will <i>continue</i> to suck for the forseeable future. There's very little you can do about it.</p>
    <p>Except for one thing.</p>
    <p>
    <img alt="Read-the-source-luke" title="Read-the-source-luke" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016765373659970b-800wi.jpg" border="0">
    </p>
    <p>
    You can <b>learn to read the source, Luke</b>.
    </p>
    <p>
    The <a href="http://www.codinghorror.com/blog/2006/08/the-power-of-view-source.html">transformative power of "source always included" in JavaScript</a> is a major reason why I coined – and continue to believe in – <a href="http://www.codinghorror.com/blog/2007/07/the-principle-of-least-power.html">Atwood's Law</a>. Even if "view source" isn't built in (but it totally should be), you should demand access to the underlying source code for your stack. <b>No matter what the documentation says, the source code is the ultimate truth, the best and most definitive and up-to-date documentation you're likely to find.</b> This will be true <i>forever</i>, so the sooner you come to terms with this, the better off you'll be as a software developer.
    </p>
    <p>
    I had a whole entry I was going to write about this, and then I discovered <a href="http://blog.brandonbloom.name/">Brandon Bloom's</a> brilliant <a href="http://news.ycombinator.com/item?id=3769446">post</a> on the topic at Hacker News. Read closely, because he explains the virtue of reading source, and in what context you <i>need</i> to read the source, far better than I could:
    </p>
    <p>
    </p>
    <blockquote>
    <p>
    I started working with Microsoft platforms professionally at age 15 or so. I worked for Microsoft as a software developer doing integration work on Visual Studio. More than ten years after I first wrote a line of Visual Basic, I wish I could never link against a closed library ever again.
    </p>
    <p>
    Using software is different than building software. When you're using most software for its primary function, it's a well worn path. Others have encountered the problems and enough people have spoken up to prompt the core contributors to correct the issue. But when you're building software, you're doing something new. And there are so many ways to do it, you'll encounter unused bits, rusty corners, and unfinished experimental code paths. You'll encounter edge cases that have been known to be broken, but were worked around.
    </p>
    <p>
    Sometimes, the documentation isn't complete. Sometimes, it's wrong. The source code never lies. For an experienced developer, reading the source can often be faster… especially if you're already familiar with the package's architecture.
    I'm in a medium-sized co-working space with several startups. A lot of the other CTOs and engineers come to our team for guidance and advice on occasion. <b>When people report a problem with their stack, the first question I ask them is: "Well, did you read the source code?"</b>
    </p>
    <p>
    I encourage developers to git clone anything and everything they depend on. Initially, they are all afraid. "That project is too big, I'll never find it!" or "I'm not smart enough to understand it" or "That code is so ugly! I can't stand to look at it". But you don't have to search the whole thing, you just need to follow the trail. And if you can't understand the platform below you, how can you understand your own software? And most of the time, what inexperienced developers consider beautiful is superficial, and what they consider ugly, is battle-hardened production-ready code from master hackers.
    Now, a year or two later, I've had a couple of developers come up to me and thank me for forcing them to sink or swim in other people's code bases. They are better at their craft and they wonder how they ever got anything done without the source code in the past.
    </p>
    <p>
    When you run a business, if your software has a bug, your customers don't care if it is your fault or Linus' or some random Rails developer's. They care that your software is bugged. Everyone's software becomes my software because all of their bugs are my bugs. When something goes wrong, you need to seek out what is broken, and you need to fix it. You fix it at the right spot in the stack to minimize risks, maintenance costs, and turnaround time. Sometimes, a quick workaround is best. Other times, you'll need to recompile your compiler. Often, you can ask someone else to fix it upstream, but just as often, you'll need to fix it yourself.
    </p>
    <ul>
    <li>Closed-software shops have two choices: beg for generosity, or work around it.
    </li>
    <li>Open source shops with weaker developers tend to act the same as closed-software shops.
    </li>
    <li>Older shops tend to slowly build the muscles required to maintain their own forks and patches and whatnot.
    </li>
    </ul>
    <p>
    True hackers have come to terms with a simple fact: If it runs on my machine, it's my software. I'm responsible for it. I must understand it. Building from source is the rule and not an exception. I must control my environment and I must control my dependencies.
    </p>
    </blockquote>
    <table>
    <p>
    Nobody reads other people's code for fun. Hell, <a href="http://www.codinghorror.com/blog/2009/07/nobody-hates-software-more-than-software-developers.html">I don't even like reading my own code</a>. The idea that you'd settle down in a deep leather chair with your smoking jacket and a snifter of brandy for a fine evening of reading through someone else's code is absurd.
    </p>
    <p>
    But we need access to the source code. We <i>must</i> read other people's code <a href="http://www.codinghorror.com/blog/2006/09/when-understanding-means-rewriting.html">because we have to understand it to get things done</a>. So don't be afraid to <b>read the source, Luke</b> – and follow it wherever it takes you, no matter how scary looking that code is.
    </p>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-04-16T12:09:02.000Z</pubDate>
    <guid>https://blog.codinghorror.com/learn-to-read-the-source-luke/</guid>
    </item>
    <item>
    <title>Books: Bits vs. Atoms</title>
    <link>https://blog.codinghorror.com/books-bits-vs-atoms/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I adore words, but let's face it: books suck.
    </p>
    <p>
    More specifically, <b>so many beautiful ideas have been helplessly trapped in physical made-of-atoms books</b> for the last few centuries. How do books suck? Let me count the ways:
    </p>
    <p>
    </p>
    <ul>
    <li>They are heavy.
    </li>
    <li>They take up too much space.
    </li>
    <li>They have to be printed.
    </li>
    <li>They have to be carried in inventory.
    </li>
    <li>They have to be shipped in trucks and planes.
    </li>
    <li>They aren't always available at a library.
    </li>
    <li>They may have to be purchased at a bookstore.
    </li>
    <li>They are difficult to find.
    </li>
    <li>They are difficult to search within.
    </li>
    <li>They can go out of print entirely.
    </li>
    <li>They are too expensive.
    </li>
    <li>They are not interactive.
    </li>
    <li>They cannot be updated for errors and addendums.
    </li>
    <li>They are often copyrighted.
    </li>
    </ul>
    
    <p>
    What's the point of a bookshelf full of books other than as an antiquated trophy case of written ideas trapped in awkward, temporary physical relics?
    </p>
    <p>
    <a href="http://briandettmer.com/"><img alt="Brian-dettmer-book" title="Brian-dettmer-book" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016303f1f7f3970d-800wi.jpg" width="600" height="452"></a>
    </p>
    <p>
    Books should not be celebrated. Words, ideas, and concepts should be celebrated. Books were <i>necessary</i> to store these things, simply because we didn't have any other viable form to contain them. But now we do.
    </p>
    <h3>Words Belong on the Internet</h3>
    <p>
    At the risk of stating the obvious, if your goal is to get a written idea in front of as many human beings as efficiently as possible, you shouldn't be publishing dead tree books at all. You should be editing a wiki, writing a blog, or creating a website. That's why the <a href="http://mediadecoder.blogs.nytimes.com/2012/03/13/after-244-years-encyclopaedia-britannica-stops-the-presses/">Encyclopedia Britannica officially went out of print</a> in 2012, after a 244 year print run. In the straight-up match between paper and Web, <a href="http://www.hyperorg.com/blogger/2012/03/20/2b2k-13-reasons-why-the-britannica-failed-on-paper/">the Encyclopedia Britannica lost</a>. Big time.
    </p>
    <blockquote>
    <p>
    The EB couldn’t cover enough: 65,000 topics compared to the almost 4M in the English version of Wikipedia.
    </p>
    <p>
    Topics had to be consistently shrunk or discarded to make room for new information. E.g., the 1911 entry on Oliver Goldsmith was written by no less than Thomas Macaulay, but with each edition, it got shorter and shorter. EB was thus in the business of throwing out knowledge as much as it was in the business of adding knowledge.
    </p>
    <p>
    Topics were confined to rectangles of text. This is of course often a helpful way of dividing up the world, but it is also essentially false. The “see also’s” and the attempts at synthetic indexes and outlines (Propædi) helped, but they were still highly limited, and cumbersome to use.</p>
    </blockquote>
    <p>
    This is why the book scanning efforts of <a href="http://www.google.com/googlebooks/library.html">Google Books</a> and <a href="https://ianews.wordpress.com/2011/09/17/3-million-texts-for-free/">The Internet Archive</a> are so important – to unlock the knowledge trapped in all those books and place it online so the entire world can benefit.
    </p>
    <p>
    In the never-ending human quest for communication, bits have won decisively over atoms. But bits haven't <i>completely</i> replaced atoms for publishing quite yet; that will take a few more decades.
    </p>
    <h3>An Argument for the eBook</h3>
    <p>
    While the Internet is perfectly adequate for basic printed text juxtaposed with images and tables, it is a far cry from the <b>beautiful, complex layout and typography of modern books</b>. Sometimes the medium is part of the message. That's what led computer scientists to create <a href="http://en.wikipedia.org/wiki/PostScript">PostScript</a> and <a href="http://en.wikipedia.org/wiki/TeX">TeX</a>, systems of representing the printed page in code as pure mathematics that can scale infinitely, or at least to the best possible resolution of the particular device you're viewing it on. Packaging written content into a special file format preserves these beautiful layouts so you can read the text as originally designed by the author.
    </p>
    <p>
    It's also fair to argue that <b>writers should be fairly compensated for their work</b>. Clearly <a href="http://www.scottmccloud.com/3-home/essays/2003-09-micros/micros.html">nobody is going to pay 5 cents per web page</a>. But there's a long established commercial model of packaging a set of writing together into a coherent format, or "book", and selling <i>that</i>.
    </p>
    <p>
    You can't always rely on the Internet being available. What if you have no Internet connectivity, or intermittent connectivity? You could periodically harvest a bunch of related web pages every month and package the current versions into a file. And that file can be stored and cached locally on laptops, phones, and servers all over the world. Local files have <b>built in, persistent offline availability</b>.
    </p>
    <p>
    No, the Internet will not kill the book. But it will change their form permanently; books are no longer pages printed with atoms, they're <b>files printed with bits: eBooks</b>.
    </p>
    <h3>The Trouble with Bits</h3>
    <p>
    The road from atoms to bits is not an easy one, and we're only at the beginning of this journey. eBooks are vastly more flexible than printed books, but they come with their own set of tradeoffs:
    </p>
    <ul>
    <li>They always require a reading device.
    </li>
    <li>They cannot be loaned to friends.
    </li>
    <li>They cannot be resold to others.
    </li>
    <li>They cannot be donated to libraries.
    </li>
    <li>They may be encumbered with copy protection.
    </li>
    <li>They may be in a format your reader cannot understand.
    </li>
    <li>They may refuse to load for any reason the publisher deems necessary.
    </li>
    <li>They may have incomplete or broken or obsolete layout.
    </li>
    <li>They may have low-resolution bitmapped images that are inferior to print.
    </li>
    <li>They may be a substantially worse reading experience than print except on very high resolution reading devices.
    </li>
    </ul>
    <p>
    <img alt="Book-error" title="Book-error" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016303f1aafc970d-800wi.jpg" width="600" height="518">
    </p>
    <p>
    The copy protection issue alone is <a href="http://boingboing.net/2012/01/10/lockdown.html">deeply troubling</a>; with eBooks, <b>book publishers now have an <i>unprecedented</i> level of control over when, where, and how you can read their books</b>. In the world of atoms, once the book is shipped out, the publisher cedes all control to the reader. Once you've bought that physical book, you can do with it whatever you will: read it, burn it, photocopy it (for personal use), share it, resell it, loan it, donate it, even throw it at passers-by as a makeshift weapon. But in the world of bits, the publisher has an iron grip over their eBook, which isn't so much sold to you as "licensed" for your use, maybe even only for specific devices like an Amazon Kindle or an Apple iPad. And they can <a href="http://www.theregister.co.uk/2009/07/18/amazon_removes_1984_from_kindle/">silently remove the book from your device</a> at their whim.
    </p>
    <p>
    In the brave new world of eBooks, book publishers are waking up <b>drunk with newfound power</b>. And honestly I can't say I blame them. After centuries of publishers having virtually no control at all over the books they publish, they've now been granted near <i>total</i> control.
    </p>
    <h3>How Much Do eBooks Cost?</h3>
    <p>
    Consider one of my favorite books, the classic <a href="http://www.amazon.com/exec/obidos/ASIN/0321344758/codihorr-20">Don't Make Me Think</a>. How much does it cost to buy, as an eBook or otherwise?
    </p>
    <p>
    </p>
    <table cellpadding="2" cellspacing="2" width="300px">
    <tr>
    <td><a href="http://www.amazon.com/exec/obidos/ASIN/0321344758/codihorr-20">Amazon print new</a></td>
    <td align="right">$22.88</td>
    </tr>
    <tr>
    <td>Amazon print used</td>
    <td align="right">$13.98</td>
    </tr>
    <tr>
    <td>Amazon eBook</td>
    <td align="right">$14.16</td>
    </tr>
    <tr>
    <td><a href="http://www.peachpit.com/store/product.aspx?isbn=0132809893">Publisher eBook</a></td>
    <td align="right">$25.60</td>
    </tr>
    <tr>
    <td><a href="http://itunes.apple.com/us/book/dont-make-me-think-common/id399578833">Apple eBook</a></td>
    <td align="right">$33.16</td>
    </tr>
    </table>
    
    <p>
    Except for Amazon, all the eBooks are <b>more expensive than the print version</b>. This … makes no sense. How can the bits in the digital version, which require no printing, no shipping, no physical storage whatsoever, be <i>more</i> expensive than the atoms?
    </p>
    <h3>What Do eBooks Look Like?</h3>
    <p>
    What you actually end up reading when you buy the eBook can vary wildly. Here are pages 80 and 81 of my print copy of <a href="http://www.amazon.com/exec/obidos/ASIN/0321344758/codihorr-20">Don't Make Me Think</a>. I attempted to take a photograph of the book, then realized it's incredibly difficult to take a decent picture of two pages of a book for a photography noob like myself, so I manually scanned the pages in instead.
    </p>
    <img alt="Dont-make-me-think-page-80-81-scanned-small" title="Dont-make-me-think-page-80-81-scanned-small" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b0168e9e84819970c-800wi.png" width="720" height="502" style="border: 1px solid silver">
    
    <p>
    If you <a href="http://www.peachpit.com/store/product.aspx?isbn=0132809893">buy the eBook from the <b>publisher</b></a>, you get a PDF which appears to be based on the exact same data used to print the book. Pages 80 and 81 are nearly identical to print, with page numbers, footnotes, layout and typography completely intact. (There are some unrelated minor differences on page 81 because the print version is from the second edition.)
    </p>
    <p>
    <img alt="Dont-make-me-think-pages-80-81-small" title="Dont-make-me-think-pages-80-81-small" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016764e0fe9d970b-800wi.png" width="720" height="502" style="border:1px solid silver">
    </p>
    <p>
    But when you <a href="http://www.amazon.com/exec/obidos/ASIN/0321344758/codihorr-20">buy the eBook from <b>Amazon</b></a>, you get a proprietary eBook format which contains very little of the original formatting. Pages 80 and 81 are quite different. The footnotes are gone. The title font and font colors are lost. The layout and spacing is completely off, and to my eye the page frankly looks a little broken.
    </p>
    <img alt="Dont-make-me-think-page-80-81-kindle-small" title="Dont-make-me-think-page-80-81-kindle-small" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016764e103aa970b-800wi.png" width="720" height="547">
    
    <p>
    When you buy the book from Apple, you get yet <i>another</i> proprietary eBook format. For comparison, here's page 3 of <a href="http://www.amazon.com/exec/obidos/ASIN/0321344758/codihorr-20">Don't Make Me Think</a> from the publisher's PDF, which as we've previously established is very nearly the same as print.
    </p>
    <p>
    <img alt="Dont-make-me-think-page-3-small" title="Dont-make-me-think-page-3-small" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016303f2560e970d-800wi.png" border="0" width="360" height="486" style="border: 1px silver solid">
    </p>
    <p>
    I downloaded the <a href="http://itunes.apple.com/us/book/dont-make-me-think-common/id399578833">sample chapter of Don't Make Me Think from <b>Apple's iBooks</b></a>, and it appears to be an even <i>worse</i> representation than Amazon's. I have all the same criticisms of Amazon's eBook format here – page 3 has broken layout, no footnotes, missing title fonts and colors, plus now it takes four, yes, <i>four</i> pages to read that very same single print page.
    </p>
    <p>
    <img alt="Dont-make-me-think-page-3-ibooks-all" title="Dont-make-me-think-page-3-ibooks-all" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016303f2610e970d-pi.png" width="600" height="800">
    </p>
    <h3>So eBooks Suck, Too?</h3>
    <p>
    With <a href="http://www.amazon.com/exec/obidos/ASIN/0321344758/codihorr-20">Don't Make Me Think</a>, I intentionally chose a book that highlights the remaining gap between atoms and bits in books. I've read dozens of other eBooks on Kindle and iPad, and generally the experience is good.  <b>For books that are entirely text, with very little layout, the various eBook formats do a great job.</b> This may very well be a majority of books in the world. All eBook formats handle text and basic fonts perfectly fine. But then, <i>so does the Internet</i>. If an eBook can't outperform the Internet at layout, it loses one of the strongest arguments in its favor.
    </p>
    <p>
    Still, there's no way Amazon's or Apple's current eBook versions of Don't Make Me Think are suitable replacements for the print version. Worse, you won't even know what you'll be missing unless you download a sample and compare it with the print version, as I have. That's disappointing, because part of the joy a book brings to the words inside is by expertly packaging those words into a whole experience. If an eBook can't capture the nuance of the layout at least as well as a hoary old PDF does, again, <i>why bother?</i>
    </p>
    <p>
    We, as readers, are easily giving up as much as we're getting in the transition from books made of atoms to eBooks made of bits. To make it worthwhile, I believe publishers need to do two things:
    </p>
    <p>
    </p>
    <ol>
    <li>
    <b>eBooks should be inexpensive</b>. Because I can't loan them (with <a href="http://www.amazon.com/gp/help/customer/display.html?nodeId=200549320">rare exceptions</a>), because I can't resell them, because I can't buy a cheaper used copy, because I'm only licensed to read them at all on "supported" readers under whatever terms the publishers will allow me to, an eBook simply has less utility and value to me. Right now, eBooks are far less flexible than physical books and therefore a worse value. Yet they are far cheaper to produce and sell for everyone involved. The pricing <i>absolutely has to reflect this</i>. If I can get a used copy of a book for less than the eBook, no sale. If I can get a <i>new</i> copy of a book for less than the eBook, no sale and <i>screw you</i>.<br><br>
    </li>
    <li>
    <b>eBooks should be a near-perfect replica of the print book</b>. With the <a href="http://www.codinghorror.com/blog/2012/03/welcome-to-the-post-pc-era.html">advent of the iPad 3</a>, it is <i>finally</i> possible for eBook readers to provide nearly the same visual fidelity as the print book. I don't want to spend money on an eBook with broken, inferior formatting and typography and layout compared to the print edition. Give me an eBook that I can potentially hand down to my children with the same confidence I could give them a print book, 30 years from now, and know that I am not totally compromising the experience.</li>
    </ol>
    
    <p>
    Because I love words, I want to love eBooks. I want to buy <i>lots and lots</i> of eBooks. But unless the publishers are willing to treat eBooks with the same respect and care that they give to their printed books – and most importantly of all, adjust their pricing to reflect the brave new economy of bits, and not an antiquated economy of atoms – they're destined to <a href="http://www.hyperorg.com/blogger/2012/03/20/2b2k-13-reasons-why-the-britannica-failed-on-paper/">eventually suffer the same fate as the Encyclopedia Britannica</a>.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-04-10T13:13:17.000Z</pubDate>
    <guid>https://blog.codinghorror.com/books-bits-vs-atoms/</guid>
    </item>
    <item>
    <title>Speed Hashing</title>
    <link>https://blog.codinghorror.com/speed-hashing/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    Hashes are a bit like fingerprints for data.
    </p>
    <p>
    <img alt="Fingerprint-as-hash" title="Fingerprint-as-hash" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b016303bd99fb970d-800wi.png" width="500" height="300">
    </p>
    <p>A given hash uniquely represents a file, or any arbitrary collection of data. At least <a href="http://www.codinghorror.com/blog/2007/12/hashtables-pigeonholes-and-birthdays.html">in theory</a>. This is a 128-bit MD5 hash you're looking at above, so it can represent at most 2<sup>128</sup> unique items, or 340 trillion trillion <i>trillion</i>. In reality the usable space is substantially less; you can start seeing significant collisions once you've filled <a href="http://www.skrenta.com/2007/08/md5_tutorial.html"><s>half</s> the square root of the space</a>, but the square root of an impossibly large number is still impossibly large.
    </p>
    <p>
    Back in 2005, I wondered about the difference between a <a href="http://www.codinghorror.com/blog/2005/04/checksums-and-hashes.html">checksum and a hash</a>. You can think of a checksum as a person's full name: <b>Eubediah Q. Horsefeathers</b>. It's a shortcut to uniqueness that's fast and simple, but easy to forge, because security isn't really the point of naming. You don't walk up to someone and demand their fingerprints to prove they are who they say they are. Names are just convenient disambiguators, a way of quickly determining who you're talking to for social reasons, not absolute proof of identity. There can certainly be multiple people in the world with the same name, and it wouldn't be too much trouble to legally change your name to match someone else's. But changing your <i>fingerprint</i> to match Eubediah's is another matter entirely; that should be impossible except <a href="http://www.imdb.com/title/tt0119094/">in the movies</a>.
    </p>
    <h3>Secure hashes are designed to be tamper-proof</h3>
    <p>
    A properly designed secure hash function <b>changes its output radically with tiny single bit changes to the input data</b>, even if those changes are malicious and intended to cheat the hash. Unfortunately, not all hashes were designed properly, and some, like MD5, <a href="http://www.mscs.dal.ca/~selinger/md5collision/">are outright broken and should probably be reverted to checksums</a>.
    </p>
    <blockquote>
    <p>
    As we will explain below, the algorithm of Wang and Yu can be used to create files of arbitrary length that have identical MD5 hashes, and that differ only in 128 bytes somewhere in the middle of the file. Several people have used this technique to create pairs of interesting files with identical MD5 hashes:
    </p>
    <ul>
    <li>Magnus Daum and Stefan Lucks have created <a href="http://web.archive.org/web/20071226014140/http://www.cits.rub.de/MD5Collisions/">two PostScript files with identical MD5 hash</a>, of which one is a letter of recommendation, and the other is a security clearance.
    </li>
    <li>Eduardo Diaz has described a <a href="http://www.codeproject.com/dotnet/HackingMd5.asp">scheme</a> by which two programs could be packed into two archives with identical MD5 hash. A special "extractor" program turn one archive into a "good" program and the other into an "evil" one.
    </li>
    <li>In 2007, Marc Stevens, Arjen K. Lenstra, and Benne de Weger used an improved version of Wang and Yu's attack known as the <a href="http://www.win.tue.nl/hashclash/SoftIntCodeSign/">chosen prefix collision</a> method to produce two executable files with the same MD5 hash, but different behaviors. Unlike the old method, where the two files could only differ in a few carefully chosen bits, the chosen prefix method allows two completely arbitrary files to have the same MD5 hash, by appending a few thousand bytes at the end of each file.
    </li>
    <li>Didier Stevens used the evilize program (below) to create <a href="http://blog.didierstevens.com/2009/01/17/playing-with-authenticode-and-md5-collisions/">two different programs with the same Authenticode digital signature</a>. Authenticode is Microsoft's code signing mechanism, and although it uses SHA1 by default, it still supports MD5.
    </li>
    </ul>
    </blockquote>
    <p>
    If you could mimic another person's fingerprint or DNA at will, you could do some <i>seriously</i> evil stuff. MD5 is clearly compromised, and SHA-1 is <a href="http://tinsology.net/2010/12/is-sha1-still-viable/">not looking too great</a> these days.
    </p>
    <p>
    The good news is that hashing algorithms (assuming you didn't roll your own, God forbid) were designed by professional mathematicians and cryptographers who knew what they were doing. Just pick a hash of a newer vintage than MD5 (1991) and SHA-1 (1995), and you'll be fine – at least as far as collisions and uniqueness are concerned. But keep reading.
    </p>
    <h3>Secure hashes are designed to be slow</h3>
    <p>
    Speed of a checksum calculation is important, as checksums are generally working on data as it is being transmitted. If the checksum takes too long, it can affect your transfer speeds. If the checksum incurs significant CPU overhead, that means transferring data will also slow down or overload your PC. For example, imagine the sort of checksums that are used on video standards like <a href="http://en.wikipedia.org/wiki/DisplayPort">DisplayPort</a>, which can peak at 17.28 Gbit/sec.
    </p>
    <p>
    But hashes aren't designed for speed. In fact, quite the opposite: <b>hashes, when used for security, need to be slow</b>. The faster you can calculate the hash, the more viable it is to use brute force to mount attacks. Unfortunately, "slow" in 1990 and 2000 terms may not be enough. The hashing algorithm designers may have anticipated predicted increases in CPU power via Moore's Law, but they almost certainly did <i>not</i> see the radical increases in GPU computing power coming.
    </p>
    <p>
    How radical? Well, compare the results of CPU powered <a href="http://hashcat.net/hashcat/">hashcat</a> with the GPU powered <a href="http://hashcat.net/oclhashcat-lite/">oclHashcat</a> when calculating MD5 hashes:
    </p>
    <blockquote>
    <table cellpadding="2" cellspacing="2" width="300px">
    <tr>
    <td>Radeon 7970</td>
    <td align="right">8213.6 M c/s</td>
    </tr>
    <tr>
    <td>6-core AMD CPU</td>
    <td align="right">52.9 M c/s</td>
    </tr>
    </table>
    </blockquote>
    <p>
    The GPU on a single modern video card produces <b>over 150 times the number of hash calculations per second</b> compared to a modern CPU. If Moore's Law anticipates a <a href="http://www.codinghorror.com/blog/2006/12/moores-law-in-practical-terms.html">doubling of computing power every 18 months</a>, that's like peeking <b>10 years into the future</b>. Pretty amazing stuff, isn't it?
    </p>
    <h3>Hashes and passwords</h3>
    <p>
    Let's talk about passwords, since hashing and passwords are intimately related. Unless <a href="http://www.codinghorror.com/blog/2007/09/youre-probably-storing-passwords-incorrectly.html">you're storing passwords incorrectly</a>, you <i>always</i> store a user's password as a salted hash, <a href="http://plaintextoffenders.com/">never as plain text</a>. Right? <i>Right?</i> This means if your database containing all those hashes is <a href="http://www.codinghorror.com/blog/2010/12/the-dirty-truth-about-web-passwords.html">compromised or leaked</a>, the users are still protected – nobody can figure out what their password actually is based on the hash stored in the database. Yes, there are of course <a href="http://www.codinghorror.com/blog/2009/01/dictionary-attacks-101.html">dictionary attacks that can be surprisingly effective</a>, but we can't protect users dead-set on using "monkey1" for their password from themselves. And anyway, the real solution to users choosing crappy passwords is not to make users remember ever more complicated and longer passwords, but to <a href="http://www.codinghorror.com/blog/2011/09/cutting-the-gordian-knot-of-web-identity.html">do away with passwords altogether</a>.
    </p>
    <p>
    This has one unfortunate ramification for password hashes: very few of them were designed with such massive and commonly available GPU horsepower in mind. Here are my results on my current PC, which has <b>two ATI Radeon 7970 cards</b> generating nearly 16000 M c/s with MD5. I used <a href="http://hashcat.net/oclhashcat-lite/">oclHashcat-lite</a> with the full range of a common US keyboard – that is, including uppercase, lowercase, numbers, and all possible symbols:
    </p>
    <p>
    </p>
    <table cellpadding="2" cellspacing="2" width="400px">
    <tr>
    <td>all 6 character password MD5s</td>
    <td>47 seconds</td>
    </tr>
    <tr>
    <td>all 7 character password MD5s</td>
    <td>1 hour, 14 minutes</td>
    </tr>
    <tr>
    <td>all 8 character password MD5s</td>
    <td>~465 days</td>
    </tr>
    <tr>
    <td>all 9 character password MD5s</td>
    <td><i>fuggedaboudit</i></td>
    </tr>
    </table>
    <p>
    The process scales nearly perfectly as you add GPUs, so you can cut the time in half by putting four video cards in one machine. It may sound crazy, but enthusiasts have been doing it since 2008. And you could cut it in half <i>again</i> by building another PC with four more video cards, splitting the attack space. (Keep going if you're either crazy, or working for the NSA.) Now we're down to a semi-reasonable 117 days to generate all 8 character MD5s. But perhaps this is a worst-case scenario, as a lot of passwords have no special characters. How about if we try the same thing using <b>just uppercase, lowercase, and numbers</b>?
    </p>
    <p>
    </p>
    <table cellpadding="2" cellspacing="2" width="400px">
    <tr>
    <td>all 6 character password MD5s</td>
    <td>3 seconds</td>
    </tr>
    <tr>
    <td>all 7 character password MD5s</td>
    <td>4 minutes</td>
    </tr>
    <tr>
    <td>all 8 character password MD5s</td>
    <td>4 hours</td>
    </tr>
    <tr>
    <td>all 9 character password MD5s</td>
    <td>10 days</td>
    </tr>
    <tr>
    <td>all 10 character password MD5s</td>
    <td>~625 days</td>
    </tr>
    <tr>
    <td>all 11 character password MD5s</td>
    <td><i>fuggedaboudit</i></td>
    </tr>
    </table>
    
    <p>
    If you're curious about the worst case scenario, a 12 character all lowercase password is attainable in about 75 days on this PC. Try it yourself; here's the script I used:
    </p>
    <pre>
    set BIN=oclHashcat-lite64
    set OPTS=--gpu-accel 200 --gpu-watchdog 0 --outfile-watch 0 --restore-timer 0 --pw-min 6 --pw-max 6 --custom-charset1 ?l?d?s?u
    %BIN% %OPTS% --hash-type 0 aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa ?1?1?1?1?1?1?1?1?1?1?1?1?1
    </pre>
    
    <p>
    Just modify the <code>pw-min</code>, <code>pw-max</code> and the <code>custom-charset</code> as appropriate. Or, if you're too lazy to try it yourself, browse through the <a href="http://thepasswordproject.com/oclhashcat_benchmarking">existing oclHashcat benchmarks</a> others have run. This will also give you some idea how computationally expensive various known hashes are on GPUs relative to each other, such as:
    </p>
    <p>
    </p>
    <table cellpadding="2" cellspacing="2" width="225px">
    <tr>
    <td>MD5</td>
    <td align="right">23070.7 M/s</td>
    </tr>
    <tr>
    <td>SHA-1</td>
    <td align="right">7973.8 M/s</td>
    </tr>
    <tr>
    <td>SHA-256</td>
    <td align="right">3110.2 M/s</td>
    </tr>
    <tr>
    <td>SHA-512</td>
    <td align="right">267.1 M/s</td>
    </tr>
    <tr>
    <td>NTLM</td>
    <td align="right">44035.3 M/s</td>
    </tr>
    <tr>
    <td>DES</td>
    <td align="right">185.1 M/s</td>
    </tr>
    <tr>
    <td>WPA/WPA2</td>
    <td align="right">348.0 k/s</td>
    </tr>
    </table>
    
    <h3>What about rainbow tables?</h3>
    <p>
    Rainbow tables are <a href="http://www.codinghorror.com/blog/2007/09/rainbow-hash-cracking.html">huge pre-computed lists of hashes</a>, trading off table lookups to massive amounts of disk space (and potentially memory) for raw calculation speed. They are now utterly and completely obsolete. Nobody who knows what they're doing would bother. They'd be wasting their time. I'll let <a href="http://codahale.com/how-to-safely-store-a-password/">Coda Hale explain</a>:
    </p>
    <blockquote>
    <p>Rainbow tables, despite their recent popularity as a subject of blog posts, have not aged gracefully. Implementations of password crackers can leverage the massive amount of parallelism available in GPUs, peaking at billions of candidate passwords a second. You can literally test all lowercase, alphabetic passwords which are ≤7 characters in less than 2 seconds. And you can now rent the hardware which makes this possible to the tune of less than $3/hour. For about $300/hour, you could crack around 500,000,000,000 candidate passwords a second.</p>
    <p>Given this massive shift in the economics of cryptographic attacks, it simply doesn’t make sense for anyone to waste terabytes of disk space in the hope that their victim didn’t use a salt. It’s a lot easier to just crack the passwords. Even a “good” hashing scheme of <code>SHA256(salt + password)</code> is still completely vulnerable to these cheap and effective attacks.</p>
    </blockquote>
    
    <h3>But when I store passwords I use salts so none of this applies to me!</h3>
    <p>
    Hey, awesome, you're smart enough to not just use a hash, but also to <a href="http://www.adayinthelifeof.nl/2011/02/02/password-hashing-and-salting/">salt the hash</a>. Congratulations.
    </p>
    <pre>
    $saltedpassword = sha1(SALT . $password);
    </pre>
    
    <p>
    I know what you're thinking. "I can hide the salt, so the attacker won't know it!" You can certainly try. You could put the salt somewhere else, like in a different database, or put it in a configuration file, or in some hypothetically secure hardware that has additional layers of protection. In the event that an attacker obtains your database with the password hashes, but somehow has no access to or knowledge of the salt it's theoretically possible.
    </p>
    <p>
    This will provide the illusion of security more than any actual security. Since you need both the salt and the choice of hash algorithm to generate the hash, and to check the hash, it's unlikely an attacker would have one but not the other. If you've been compromised to the point that an attacker has your password database, it's reasonable to assume they either have or can get your secret, hidden salt.
    </p>
    <p>
    The first rule of security is to always assume and plan for the worst. Should you use a salt, ideally a random salt for each user? Sure, it's definitely a good practice, and at the very least it lets you disambiguate two users who have the same password. But these days, <b>salts alone can no longer save you</b> from a person willing to spend a few thousand dollars on video card hardware, and if you think they can, you're in trouble.
    </p>
    <h3>I'm too busy to read all this.</h3>
    <p>
    </p>
    <p>If you are a user:</p>
    <p>
    <b>Make sure all your passwords are 12 characters or more</b>, ideally a lot more. <a href="http://www.codinghorror.com/blog/2005/07/passwords-vs-pass-phrases.html">I recommend adopting pass phrases</a>, which are not only a lot easier to remember than passwords (if not type) but also <i>ridiculously</i> secure against brute forcing purely due to their length.
    </p>
    <p>If you are a developer:</p>
    <p>
    <b>Use <a href="http://en.wikipedia.org/wiki/Bcrypt">bcrypt</a> or <a href="http://en.wikipedia.org/wiki/Pbkdf2">PBKDF2</a> <i>exclusively</i> to hash anything you need to be secure</b>. These new hashes were specifically designed to be <a href="http://security.stackexchange.com/a/6415">difficult to implement on GPUs</a>. Do <i>not</i> use any other form of hash. Almost every other popular hashing scheme is vulnerable to brute forcing by arrays of commodity GPUs, which only get faster and more parallel and easier to program for every year.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] Hiring developers? Post your open positions with <a href="http://careers.stackoverflow.com" rel="nofollow">Stack Overflow Careers</a> and reach over 20MM awesome devs already on Stack Overflow. Create <a href="http://careers.stackoverflow.com/jobs/post" rel="nofollow"> your satisfaction-guaranteed job listing</a> today!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-04-06T02:17:15.000Z</pubDate>
    <guid>https://blog.codinghorror.com/speed-hashing/</guid>
    </item>
    <item>
    <title>Preserving The Internet... and Everything Else</title>
    <link>https://blog.codinghorror.com/preserving-the-internet-and-everything-else/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    In <a href="http://www.codinghorror.com/blog/2009/11/preserving-our-digital-pre-history.html">Preserving Our Digital Pre-History</a> I nominated <a href="http://ascii.textfiles.com">Jason Scott</a> to be our generation's <b>digital historian in residence</b>. It looks like a few people must have agreed with me, because in March 2011, he  <a href="http://ascii.textfiles.com/archives/3024">officially became an archivist</a> at the Internet Archive.
    </p>
    <p>
    <a href="http://www.flickr.com/photos/blmurch/5079018246/"><img alt="The-internet-archive" title="The-internet-archive" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b0167648b2ac7970b-800wi.jpg" width="500" height="334"></a>
    </p>
    <p>
    Jason recently invited me to visit the <a href="http://archive.org/about/about.php">Internet Archive</a> office in nearby San Francisco. The building alone is amazing; when you imagine <i>the place where they store the entire freaking Internet</i>, this enormous <a href="http://richmondsfblog.com/2009/11/10/video-tour-of-300-funston-avenue/">former Christian Science church</a> seems … well, about right.
    </p>
    <p>
    It's got a built in evangelical aura of mission, with new and old computer equipment strewn like religious totems throughout.
    </p>
    <p>
    <img alt="Internet-archive-and-jason-scott" title="Internet-archive-and-jason-scott" width="600" height="472" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b0167648b3804970b-800wi.jpg">
    </p>
    <p>
    Doesn't it look a bit like the place where we worship servers, with Jason Scott presiding over the invisible, omnipresent online flock? It's all that and so much more.
    Maybe the religious context is appropriate, because I always thought the Internet Archive's mission – <b>to create a permanent copy of every Internet page ever created, as it existed at the time</b> – was audacious bordering on impossible. You'd need to be a true believer to even consider the possibility.
    </p>
    <p>
    The Internet Archive is about the only ally we have in the fight against pernicious and pervasive <a href="http://en.wikipedia.org/wiki/Link_rot">linkrot</a> all over the Internet. When I go back and <a href="http://www.codinghorror.com/blog/archives.html">review old Coding Horror blog entries</a> I wrote in 2007, it's astonishing just how many of the links in those posts are now, after five years, gone. I've lost count of all the times I've used the <a href="http://web.archive.org">Wayback Machine</a> to retrieve historical Internet pages I once linked to that are now permanently offline – pages that would have otherwise been lost forever.
    </p>
    <blockquote>
    <p>
    The Internet Archive is a service so essential that its founding is bound to be looked back on with the fondness and respect that people now have for the public libraries seeded by Andrew Carnegie a century ago … Digitized information, especially on the Internet, has such rapid turnover these days that total loss is the norm. Civilization is developing severe amnesia as a result; indeed it may have become too amnesiac already to notice the problem properly. The Internet Archive is the beginning of a cure – the beginning of complete, detailed, accessible, searchable memory for society, and not just scholars this time, but everyone.</p>
    <p align="right">— <a href="http://en.wikipedia.org/wiki/Stewart_Brand">Stewart Brand</a></p>
    </blockquote>
    <p>
    Without the Internet Archive, the Internet <i>would have no memory.</i> As <a href="http://www.codinghorror.com/blog/2009/12/international-backup-awareness-day.html">the world's foremost expert on backups</a> I cannot emphasize enough how significant the Internet Archive is to the world, to any average citizen of the Internet who needs to source an old hyperlink. Yes, maybe it is just the world's largest and most open hard drive, but nobody else is doing this important work that I know of.
    </p>
    <h3>Let's Archive Atoms, Too</h3>
    <p>
    While what I wrote above is in no way untrue, it is only a small part of the Internet Archive's mission today. Where I always thought of the Internet Archive as, well, an archive of the bits on the Internet, they have long since broadened the scope of their efforts to include stuff made of filthy, dirty, nasty atoms. Stuff that was never on the Internet in the first place.
    </p>
    <p>The Internet Archive isn't merely archiving the Internet any more, <b>they are attempting to archive <i>everything</i>.</b>
    </p>
    <ul>
    <li>
    <a href="http://openlibrary.org/">Open Library</a> – one web page for every book ever published.
    </li>
    <li>
    <a href="http://archive.org/details/etree">Live Music Archive</a> – every live concert ever recorded, free for non-commercial use.
    </li>
    <li>
    <a href="http://blog.archive.org/2011/06/06/why-preserve-books-the-new-physical-archive-of-the-internet-archive/">Physical Archive</a> – one <i>physical</i> copy of every book ever published.
    </li>
    <li>
    <a href="http://archive.org/details/movies">Moving Image Archive</a> – every free movie, film, or video ever recorded.
    </li>
    <li>
    <a href="http://archive.org/details/texts">Text Archive</a> – with 1.6 million scanned books already online, and a thousand more <a href="http://archive.org/scanning">scanned in every day</a>.
    </li>
    </ul>
    <p>
    All of this, in addition to boring mundane stuff like taking snapshots of the <i>entire Internet</i> every so often. That's going to take, uh … a lot of hard drives. I snapped a picture of a giant pile of 3 TB drives waiting to be installed in one of the storage rooms.
    </p>
    <p>
    <img alt="Lots-of-hard-drives" title="Lots-of-hard-drives" src="https://blog.codinghorror.com/content/images/uploads/2012/04/6a0120a85dcdae970b0167648bebff970b-800wi.jpg" width="500" height="373">
    </p>
    <p>
    The Internet Archive is a big organization now, with 30 employees in the main San Francisco office you're seeing above, and 200 staff all over the world. With a mission of such overwhelming scope and scale, they're going to need all the help they can get.
    </p>
    <h3>The Internet Archive Needs You</h3>
    <p>
    The Internet Archive is a non-profit organization, so you could certainly <a href="http://archive.org/donate/">donate money</a>. If your company does charitable donations and cares at all about the Internet, or free online access to human knowledge, I'd strongly encourage them to donate to the Internet Archive as well. I made sure that Stack Exchange <a href="http://blog.stackoverflow.com/2011/12/stack-exchange-gives-back-2011/">donated</a> every year.
    </p>
    <p>
    But more than money, what the Internet Archive needs these days is … <i>your stuff</i>. I'll let Jason explain exactly what he's looking for:
    </p>
    <blockquote>
    I'm trying to acquire as much in the way of <b>obscure video, obscure magazines, unusual pamphlets and printed items of a computer nature or even of things like sci-fi, zines</b> – anything that wouldn't normally find itself inside most libraries. Hence <a href="http://archive.org/details/computermagazines">my computer magazines collection</a> – tens of thousands of issues in there. I'd love to get my hands on more.
    
    <p>
    Also as mentioned, I love, love, <i>love</i> shareware CDs. Those are the most bang for the buck with regards to data and history that I want to get my hands on.
    </p>
    </blockquote>
    <p>
    Being the <s>obsessive</s>conscientious geeks that I know you are, I bet you have a collection of geeky stuff <i>exactly</i> like that somewhere in your home. If so, the best way you can help is to send it in as a contribution! <b>Email jscott@archive.org</b> about what you have, and if you're worried about rejection, don't be:
    </p>
    <blockquote>
    There's seriously nothing we don't want. I don't question. I take it in, I put it in
    items. I am voracious. Omnivorous. I don't say no.
    </blockquote>
    <p>
    The Internet Archive has an impossible mission on an immense scale. It is an unprecedented kind of open source archiving, not driven by Google or Microsoft or some other commercial entity with ulterior motives, but a non-profit organization motivated by nothing more than the obvious common good of building a massive digital <a href="http://en.wikipedia.org/wiki/Library_of_Alexandria">Library of Alexandria</a> to preserve our history for future generations. Let's do our part to help <b><a href="http://archive.org/donate/">support the important work of the Internet Archive</a></b> in whatever way we can.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> matches the best developers (you!) with the best employers. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and even let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-04-02T03:09:10.000Z</pubDate>
    <guid>https://blog.codinghorror.com/preserving-the-internet-and-everything-else/</guid>
    </item>
    <item>
    <title>Visualizing Code to Fail Faster</title>
    <link>https://blog.codinghorror.com/visualizing-code-to-fail-faster/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    In <a href="http://www.codinghorror.com/blog/2012/03/what-you-cant-see-you-cant-get.html">What You Can't See You Can't Get</a> I mentioned in passing how frustrated I was that the state of the art in code editors and IDE has advanced so little since 2003. A number of commenters pointed out the amazing <a href="http://worrydream.com/">Bret Victor</a> talk <a href="http://vimeo.com/36579366">Inventing on Principle</a>. I hadn't seen this, but thanks for mentioning it, because I definitely should have. Maybe you haven't seen it either?
    </p>
    <iframe src="https://player.vimeo.com/video/36579366" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
    <p><a href="https://vimeo.com/36579366">Bret Victor - Inventing on Principle</a> from <a href="https://vimeo.com/cusec">CUSEC</a> on <a href="https://vimeo.com">Vimeo</a>.
    </p>
    <p>
    It's a bit long at 54 minutes, but worth viewing in its entirety. What Bret shows here is indeed exactly the sort of thing we should be doing, but aren't.
    </p>
    <p>
    In some ways we've actually regressed from my ancient Visual Basic 6.0 days, when you'd get dynamically notified about errors <i>as you typed</i>, not just <a href="http://www.codinghorror.com/blog/2007/05/c-and-the-compilation-tax.html">when you compiled</a> or <a href="http://www.codinghorror.com/blog/2006/07/i-pity-the-fool-who-doesnt-write-unit-tests.html">ran unit tests</a>. The idea that <b>you should be able to type (or gesture, or speak) and <i>immediately</i> see the result of that change</b> is simple, but extremely powerful. It's <a href="http://www.codinghorror.com/blog/2007/02/boyds-law-of-iteration.html">speed of iteration</a> in the small. That's essentially the basis for my argument that showing markup and rendered output side-by-side, and dynamically updating them as you type, is vastly superior for learning and experimentation compared to any attempt at WYSIWYG.
    </p>
    <p>
    But Bret goes further than that – <b>why not show the effects of predicted changes, and change over time?</b> Time is the missing element in a static display of code and rendered output; how do we show that?
    </p>
    <p>
    <a href="http://vimeo.com/36579366"><img alt="Braid-jump-code" title="Braid-jump-code" src="https://blog.codinghorror.com/content/images/uploads/2012/03/6a0120a85dcdae970b016764677fde970b-800wi.jpg" width="720" height="256"></a>
    </p>
    <p>
    Again, watch the video because it's easier to see in action than it is to explain. But maybe you'd like to play with it yourself? That's sort of the <i>point</i>, isn't it? As I <a href="http://www.codinghorror.com/blog/2007/01/dynamic-lightweight-visualization.html">wrote in 2007</a>:
    </p>
    <blockquote>
    I yearn for the day when web pages are regularly illustrated with the kind of beautiful, dynamic visualizations that Ben Fry creates.
    </blockquote>
    <p>
    That day, I'm happy to report, seems to have arrived. Bret's article, <a href="http://worrydream.com/LadderOfAbstraction/">Up and Down the Ladder of Abstraction</a> is <i>extremely</i> interactive in plain old boring HTML 5.
    </p>
    <p>
    <a href="http://worrydream.com/LadderOfAbstraction/"><img alt="Interactive-ladder-abstraction" title="Interactive-ladder-abstraction" src="https://blog.codinghorror.com/content/images/uploads/2012/03/6a0120a85dcdae970b01676467a672970b-800wi.png" width="432" height="284"></a>
    </p>
    <p>
    Yes, it's artsy, yes these are mostly toy projects, but this isn't entirely abstract art house visualization nonsense. Designing tools that let you make rapid changes, and see the <i>effects</i> of those changes as soon as possible <a href="http://uxmag.com/articles/you-are-solving-the-wrong-problem">can be transformative</a>.
    </p>
    <p>
    </p>
    <blockquote>
    <p>
    Paul realized that what we needed to be solved was not, in fact, human powered flight. That was a red-herring. The problem was the process itself, and along with it the blind pursuit of a goal without a deeper understanding how to tackle deeply difficult challenges. He came up with a new problem that he set out to solve: <b>how can you build a plane that could be rebuilt in hours not months</b>. And he did. He built a plane with Mylar, aluminum tubing, and wire.
    </p>
    <p>
    The first airplane didn't work. It was too flimsy. But, because the problem he set out to solve was creating a plane he could fix in hours, he was able to quickly iterate. Sometimes he would fly three or four different planes in a single day. The rebuild, retest, relearn cycle went from months and years to hours and days.
    </p>
    <p>Eighteen years had passed since Henry Kremer opened his wallet for his vision. Nobody could turn that vision into an airplane. Paul MacCready got involved and changed the understanding of the problem to be solved. Half a year later later, MacCready's <a href="http://en.wikipedia.org/wiki/Gossamer_Condor">Gossamer Condor</a> flew 2,172 meters to win the prize. A bit over a year after that, the <a href="http://en.wikipedia.org/wiki/Gossamer_Albatross" target="_blank">Gossamer Albatross</a> flew across the channel.</p>
    </blockquote>
    <p>
    Don't get me wrong, <a href="http://www.codinghorror.com/blog/2009/08/the-only-truly-failed-project.html">we're failing plenty fast with our existing tools</a>. But I can't shake the feeling that we could we fail even faster if we optimized our IDEs and code editors to better visualize the effects of our changes in real time as we make them.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] How are you showing off your awesome? Create a <a href="http://careers.stackoverflow.com/cv" rel="nofollow">Stack Overflow Careers profile</a> and show off all of your hard work from Stack Overflow, Github, and virtually every other coding site. Who knows, you might even get recruited for a great <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">new position</a>!
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-03-29T15:13:23.000Z</pubDate>
    <guid>https://blog.codinghorror.com/visualizing-code-to-fail-faster/</guid>
    </item>
    <item>
    <title>The End of Pagination</title>
    <link>https://blog.codinghorror.com/the-end-of-pagination/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    What do you do when you have a lot of things to display to the user, far more than can possibly fit on the screen? <a href="http://ui-patterns.com/patterns/Pagination">Paginate, naturally</a>.
    </p>
    <p>
    <img alt="Pagination-examples" title="Pagination-examples" src="https://blog.codinghorror.com/content/images/uploads/2012/03/6a0120a85dcdae970b0167644e1bbe970b-800wi.png" width="455" height="246">
    </p>
    <p>
    There are plenty of <a href="http://www.smashingmagazine.com/2007/11/16/pagination-gallery-examples-and-good-practices/">other real world examples</a> in this 2007 article, but I wouldn't bother. If you've seen one pagination scheme, you've seen them all. The state of art in pagination hasn't exactly changed much – or at all, really – in the last 5 years.
    </p>
    <p>
    I can understand paginating when you have 10, 50, 100, maybe even a few hundred items. But once you have <i>thousands</i> of items to paginate, <b>who the heck is visiting page 964 of 3810?</b> What's the point of paginating so much information when there's a hard practical limit on how many items a human being can view and process in any reasonable amount of time?
    </p>
    <p>
    Once you have thousands of items, you don't have a pagination problem. You have a search and filtering problem. Why are we presenting hundreds or thousands of items to the user? What does that achieve? <b>In a perfect world, every search would result in a page with a single item: <i>exactly</i> the thing you were looking for.</b>
    </p>
    <p>
    <img alt="U2-google" title="U2-google" src="https://blog.codinghorror.com/content/images/uploads/2012/03/6a0120a85dcdae970b0167644e5f1f970b-800wi.png" width="525" height="256">
    </p>
    <p>
    But perhaps you <i>don't</i> know exactly what you're looking for: maybe you want a variety of viewpoints and resources, or to compare a number of similar items. Fair enough. I have a difficult time imagining any scenario where presenting a hundred or so items wouldn't meet that goal. Even so, the items would naturally be presented in some logical <i>order</i> so the most suitable items are near the top.
    </p>
    <p>
    Once we've chosen a suitable order and a subset of relevant items … <b>do we really need pagination at all?</b> What if we did some kind of endless pagination scheme, where we loaded more items into the view dynamically as the user reaches the bottom? Like so:
    </p>
    <p>
    <iframe width="640" height="360" src="https://www.youtube.com/embed/bwzBCm2oSuw"></iframe>
    </p>
    <p>
    It isn't just oddball <a href="http://en.wikipedia.org/wiki/Disemvoweling">disemvowelled</a> companies, either. <a href="https://twitter.com/codinghorror">Twitter's timeline</a> and <a href="https://www.google.com/search?q=alice+in+wonderland+illustrations+public+domain&amp;hl=en&amp;prmd=imvns&amp;source=lnms&amp;tbm=isch&amp;ei=mDpyT8KnOeHg2AWVwOjJDg&amp;sa=X&amp;oi=mode_link&amp;ct=mode&amp;cd=2&amp;ved=0CBcQ_AUoAQ&amp;biw=811&amp;bih=1037">Google's image search</a> use a similar <b>endless pagination</b> approach. Either the page loads more items automatically when you scroll down to the bottom, or there's an explicit "show more results" button.
    </p>
    <p>
    <b>Pagination is also <i>friction</i></b>. Ever been on a forum where you wished like hell the other people responding to the thread had read all four pages of it before typing their response? Well, maybe some of them would have if the next page buttons weren't so impossibly small, or better yet, <i>not there at all</i> because pagination was automatic and seamless. We should be <a href="https://blog.codinghorror.com/training-your-users/">actively removing friction where we want users to do <i>more</i> of something</a>.
    </p>
    <p>
    I'm not necessarily proposing that all traditional pagination be replaced with endless pagination. But we, as software developers, should <b>avoid mindlessly generating a list of thousands upon thousands of possible items and paginating it as a lazy one-size-fits-all solution</b>. This puts all the burden on the user to make sense of the items. Remember, we invented computers to make the user's life easier, not more difficult.
    </p>
    <p>
    Once you've done that, there's a balance to be struck, <a href="http://googlewebmastercentral.blogspot.com/2011/09/view-all-in-search-results.html">as Google's research</a> tells us:
    </p>
    <blockquote>
    <p>User testing has taught us that searchers much prefer the view-all, single-page version of content over a component page containing only a portion of the same information with arbitrary page breaks.</p>
    <p>Interestingly, the cases when users didn’t prefer the view-all page were correlated with high latency (e.g., when the view-all page took a while to load, say, because it contained many images). This makes sense because we know users are less satisfied with slow results. So while a view-all page is commonly desired, as a webmaster it’s important to balance this preference with the page’s load time and overall user experience.</p>
    </blockquote>
    <p>
    Traditional pagination is not particularly user friendly, but endless pagination isn't without its own faults and pitfalls, either:
    </p>
    <ul>
    <li>The scroll bar, the user's moral compass of "how much more is there?" doesn't work in endless pagination because it is effectively infinite. You'll need an alternate method of providing that crucial feedback, perhaps as a simple percent loaded text docked at the bottom of the page.
    </li>
    <li>Endless pagination should not break deep linking. Even without the concept of a "page", users should be able to clearly and obviously link to any specific item in the list.
    </li>
    <li>Clicking the browser forward or back button should preserve the user's position in the endless scrolling stream, perhaps using <a href="http://diveintohtml5.info/history.html"><code>pushState</code></a>.
    </li>
    <li>Pagination may be a bad user experience, but it's <i>essential</i> for web spiders. Don't neglect to accommodate web search engines with a traditional paging scheme, too, or perhaps <a href="http://webmasters.stackexchange.com/questions/4803/the-sitemap-paradox">a Sitemap</a>.
    </li>
    <li>Provide visible feedback when you're dynamically loading new items in the list, so the user can tell that new items are coming, and their browser isn't hung – and that they haven't reached the bottom yet.
    </li>
    <li>Remember that the user won't be able to reach the footer (or the header) any more, because items keep appearing as they scroll down in the river of endless content. So either move to static headers and footers, or perhaps use the explicit "load more" button instead of loading new content automatically.
    </li>
    </ul>
    <p>
    For further reading, there's some excellent <a href="http://ux.stackexchange.com/questions/tagged/pagination">Q&amp;A on the topic of pagination</a> at ux.stackexchange.
    </p>
    <p>
    <b>Above all else, you should strive to make pagination irrelevant because the user never has to look at more than a few items to find what they need</b>. That's why I suspect Google hasn't done much with this technique in their core search result pages; if they aren't providing great results on page 1, it doesn't really <i>matter</i> what kind of pagination they use because they're not going to be in business much longer. Take that lesson to heart: you should be worried most of all about presenting a <i>relevant</i> list of items to the user in a sensible order. Once you've got that licked, then and only then should you think about your pagination scheme.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-03-27T14:58:28.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-end-of-pagination/</guid>
    </item>
    <item>
    <title>What You Can't See You Can't Get</title>
    <link>https://blog.codinghorror.com/what-you-cant-see-you-cant-get/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I suppose What You See Is What You Get has its place, but as an OCD addled programmer, I have a problem with <a href="http://en.wikipedia.org/wiki/WYSIWYG">WYSIWYG</a> as a one size fits all solution. Whether it's <a href="http://www.codinghorror.com/blog/2009/11/whitespace-the-silent-killer.html">invisible white space</a>, or <a href="http://www.codinghorror.com/blog/2006/05/invisible-formatting-tags-are-evil.html">invisible formatting tags</a>, it's been my experience that <b>forcing people to work with invisible things they cannot directly control … inevitably backfires</b>. <a href="http://www.codinghorror.com/blog/2009/04/death-to-the-space-infidels.html">A lot</a>.
    </p>
    <p>
    I have a distinctly <a href="http://en.wikipedia.org/wiki/Ghostbusters">Ghostbusters</a> attitude to this problem.
    </p>
    <p>
    <a href="http://en.wikipedia.org/wiki/Ghostbusters"><img alt="Ghostbusters-logo" title="Ghostbusters-logo" src="https://blog.codinghorror.com/content/images/uploads/2012/03/6a0120a85dcdae970b0168e927732b970c-800wi.png" width="330" height="291"></a>
    </p>
    <p>
    I need to <i>see</i> these invisible things, so that I can zap them with my <a href="http://en.wikipedia.org/wiki/Proton_pack">proton pack</a>. I mean, er, <i>control</i> them. And more importantly, understand them; perhaps even <a href="http://www.amazon.com/dp/B005Y3EDR4/?tag=codihorr-20">master them</a>.
    </p>
    <p>
    I recently had the great privilege of meeting <a href="http://en.wikipedia.org/wiki/Ted_Nelson">Ted Nelson</a>, who gave me an in-person demo of his <a href="http://xanadu.com/zigzag/">ZigZag</a> project and his <a href="http://www.codinghorror.com/blog/2009/10/the-xanadu-dream.html">perpetually in-progress since 1960 Xanadu project</a>, currently known as <a href="http://xanarama.net/">Xanadu Space</a>. But one thing he mentioned as he gave the demo particularly intrigued me. Being Ted Nelson, of course he went much further than my natural aversion to invisible, hidden markup in content – he insisted that <a href="http://www.xml.com/pub/a/w3j/s3.nelson.html">markup and content should <i>never</i> be in the same document</a>. Far more radical.
    </p>
    <blockquote>
    <p>
    I want to discuss what I consider one of the worst mistakes of the current software world, embedded markup; which is, regrettably, the heart of such current standards as SGML and HTML. (There are many other embedded markup systems; an interesting one is RTF. But I will concentrate on the SGML-HTML theology because of its claims and fervor.)
    </p>
    <p>There is no one reason this approach is wrong; I believe it is wrong in almost every respect.</p>
    <p>
    I propose a three-layer model:
    </p>
    <ol>
    <li>A <b>content layer</b> to facilitate editing, content linking, and transclusion management.</li>
    <li>A <b>structure layer</b>, declarable separately. Users should be able to specify entities, connections and co-presence logic, defined independently of appearance or size or contents; as well as overlay correspondence, links, transclusions, and "hoses" for movable content.</li>
    <li>A <b>special-effects-and-primping layer</b> should allow the declaration of ever-so-many fonts, format blocks, fanfares, and whizbangs, and their assignment to what's in the content and structure layers.</li>
    </ol>
    </blockquote>
    <p>
    It's an interesting, albeit extremely hand-wavy and complex, alternative. I'm unclear how you would keep the structure layer in sync with the content layer if someone is editing the content. I don't even know if there are any real world examples of this three layer approach in action. (And as usual, feel free to correct me in the comments if I've missed anything!)
    </p>
    <p>
    Instead, what we do have are existing, traditional methods of <b>intermixing content and markup</b> ala HTML or TeX.
    </p>
    <p>
    <img alt="PDF vs. TeX" title="PDF vs. TeX" src="https://blog.codinghorror.com/content/images/uploads/2012/03/6a0120a85dcdae970b0167642731f0970b-800wi.png"><br>
    </p>
    <p>When editing, there are two possible interfaces:</p>
    <ol>
    <li>
    <b>WYSIWYG</b> where the markup layer is magically hidden so, at least in theory, the user doesn't ever have to know about markup and can focus entirely on the content. It is an illusion, but it is simple enough when it's working. The downside is that the abstraction – this idea that the markup is truly "invisible" – is rarely achieved in practice and often breaks down for anything except the most basic of documents. But it can be good enough in a lot of circumstances.<br><br>
    </li>
    <li>
    <b>Two windows</b> where the markup is fully visible in one window, and shown as a live rendered preview in the other window, updated as you type, either side-by-side or top-and-bottom. Users have a dynamic sandbox where they can experiment and learn how markup and content interact in the real world, rather than having it all swept under the rug. Ultimately, this results in less confusion for intermediate and advanced users. That's why I'm particularly fond of this approach, and it is <a href="http://www.codinghorror.com/blog/2009/10/treating-user-myopia.html">what we use on Stack Exchange</a>. The downside is that it's a bit more complex, depending on whether or not you use <a href="http://www.codinghorror.com/blog/2008/05/is-html-a-humane-markup-language.html">humane markup</a>, and it certainly takes a bit more screen space and thinking to process what's going on.
    </li>
    </ol>
    <p>
    What I didn't realize is that there's actually a <i>third</i> editing option: <b>keep the markup visible, and switch rapidly back and forth between the markup and rendered view with a single keystroke</b>. That's what the <a href="http://www.aviz.fr/gliimpse/">Gliimpse project</a> reveals:
    </p>
    <p>
    <iframe width="640" height="480" src="http://www.youtube.com/embed/UK42Hont3to?hd=1"></iframe>
    </p>
    <p>
    Please watch the video. The nearly instantaneous and smooth transition <a href="http://www.aviz.fr/gliimpse/">that Gliimpse demonstrates</a> between markup and preview has to be seen to be appreciated. The effect is a bit like <a href="http://www.codinghorror.com/blog/2007/09/on-expos-flip3d-and-switcher.html">Expose on the Mac, or Switcher on PC</a>. I'm not sure how I feel about this, mainly because I don't know of any existing IDEs that even attempt to do anything remotely like it.
    </p>
    <p>But I'd sure like to try it. As a software developer, it's incredibly frustrating to me that we have generational improvements in games like Skyrim and <a href="http://www.codinghorror.com/blog/2011/10/multiple-video-cards.html">Battlefield 3</a> that render vastly detailed, dynamic worlds at 60 frames per second, yet our <a href="http://www.codinghorror.com/blog/2005/01/its-the-ide-dummy.html">source code editors are advancing only in tiny incremental steps, year after year</a>.
    </p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-03-23T15:31:00.000Z</pubDate>
    <guid>https://blog.codinghorror.com/what-you-cant-see-you-cant-get/</guid>
    </item>
    <item>
    <title>Welcome to the Post PC Era</title>
    <link>https://blog.codinghorror.com/welcome-to-the-post-pc-era/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    What was <a href="http://windows.microsoft.com/en-US/windows/history">Microsoft's original mission?</a>
    </p>
    <p>
    </p>
    <blockquote>
    <p>In 1975, Gates and Allen form a partnership called Microsoft. Like most startups, Microsoft begins small, but has a huge vision – a computer on every desktop and in every home.</p>
    </blockquote>
    
    <p>
    The existential crisis facing Microsoft is that <i>they achieved their mission years ago</i>, at least as far as the developed world is concerned. <b>When was the last time you saw a desktop or a home without a computer? 2001? 2005?</b> We're long since past the point where Microsoft's original <a href="http://en.wikipedia.org/wiki/Big_Hairy_Audacious_Goal">BHAG</a> was met, and even exceeded. PCs are absolutely ubiquitous. When you wake up one day to discover that you've completely conquered the world … what comes next?
    </p>
    <p>
    Apparently, the Post PC era.
    </p>
    <p>
    Microsoft never seemed to recover from the shock of achieving their original 1975 goal. Or perhaps they thought that they hadn't quite achieved it, that there would always be some new frontier for PCs to conquer. But Steve Jobs certainly <a href="http://en.wikiquote.org/wiki/Steve_Jobs">saw the Post PC era looming</a> as far back as 1996:
    </p>
    <blockquote>
    <p>The desktop computer industry is dead. Innovation has virtually ceased. Microsoft dominates with very little innovation. That's over. Apple lost. The desktop market has entered the dark ages, and it's going to be in the dark ages for the next 10 years, or certainly for the rest of this decade.</p>
    <p>If I were running Apple, I would milk the Macintosh for all it's worth – and get busy on the next great thing. The PC wars are over. Done. Microsoft won a long time ago.</p>
    </blockquote>
    <p>
    What's more, Jobs did something about it. Apple is arguably the biggest (and in terms of financials, now <i>literally</i> the biggest) enemy of general purpose computing with the iPhone and iPad. These days, their own general purpose Mac operating system, OS X, largely plays second fiddle to the iOS juggernaut powering the iPhone and iPad.
    </p>
    <p>
    <a href="http://www.asymco.com/2012/02/16/ios-devices-in-2011-vs-macs-sold-it-in-28-years/">Here's why:</a>
    </p>
    <p>
    <a href="http://www.asymco.com/2012/02/16/ios-devices-in-2011-vs-macs-sold-it-in-28-years/"><img alt="Apple-cumulative-sales" title="Apple-cumulative-sales" src="https://blog.codinghorror.com/content/images/uploads/2012/03/6a0120a85dcdae970b0163030a719a970d-800wi.png" border="0"></a>
    </p>
    <p>
    The slope of this graph is the whole story. The complicated general purpose computers are at the bottom, and the simpler specialized computers are at the top.
    </p>
    <p>
    I'm incredibly conflicted, because as much as I love the do-anything computer …
    </p>
    <ul>
    <li>I'm not sure that many people in the world truly <i>need</i> a general purpose computer that can do anything and install any kind of software. Simply meeting the core needs of browsing the web and email and maybe a few other basic things covers a lot of people.
    </li>
    <li>I believe the kitchen-sink-itis baked into the general purpose computing foundations of PCs, Macs, and Unix make them fundamentally incompatible with our brave new Post PC world. Updates. Toolbars. Service Packs. Settings. Anti-virus. Filesystems. Control panels. All the stuff you hate when your Mom calls you for tech support? It's deeply embedded into of the culture and design of every single general purpose computer. Doing potentially "anything" comes at a steep cost in complexity.
    </li>
    <li>Very, very small PCs – the kind you could fit in your pocket – are starting to have the same amount of computing grunt as a high end desktop PC of, say, 5 years ago. And that was plenty, even back then, for a relatively inefficient general purpose operating system.
    </li>
    </ul>
    
    <p>
    But the primary wake up call, at least for me, is that <b>the new iPad finally delivered an innovation that general purpose computing has been waiting on for thirty years</b>: a truly high resolution display at a reasonable size and price. In 2007 I asked <a href="http://www.codinghorror.com/blog/2007/06/where-are-the-high-resolution-displays.html">where all the high resolution displays were</a>. Turns out, they're only on phones and tablets.
    </p>
    <p>
    <a href="http://www.theverge.com/2012/3/14/2870533/ipad-review"><img alt="iPad 2 display vs iPad 3 display" title="iPad 2 display vs iPad 3 display" src="https://blog.codinghorror.com/content/images/uploads/2012/03/6a0120a85dcdae970b016763ff8fbf970b-800wi.jpg" border="0"></a>
    </p>
    <p>
    That's why I didn't just buy the iPad 3 (sorry, The New iPad). <b>I bought two of them.</b> And I reserve the right to buy more!
    </p>
    <p>
    iPad 3 reviews that complain "all they did was improve the display" are clueless bordering on stupidity. Tablets are pretty much <i>by definition all display</i>;  nothing is more fundamental to the tablet experience than the quality of the display. These are the first iPads I've ever owned (and I'd argue, the first worth owning), and the display is as sublime as I always hoped it would be. The resolution and clarity are astounding, a joy to read on, and give me hope that one day we could potentially achieve near print resolution in computing. The new iPad screen is everything I've always wanted on my desktops and laptops for the last 5 years, but I could never get.
    </p>
    <p>
    Don't take my word for it. Consider what screen reading pioneer, and inventor of ClearType, Bill Hill <a href="http://billhillsblog.blogspot.com/2012/03/3rd-generation-ipad-entering-high.html">has to say about it</a>:
    </p>
    <p>
    </p>
    <blockquote>
    <p>
    The 3rd Generation iPad has a display resolution of 264ppi. And still retains a ten-hour battery life (9 hours with wireless on). Make no mistake. That much resolution is stunning. To see it on a mainstream device like the iPad - rather than a $13,000 exotic monitor - is truly amazing, and something I've been waiting more than a decade to see.
    </p>
    <p>
    It will set a bar for future resolution that every other manufacturer of devices and PCs will have to jump.
    </p>
    </blockquote>
    
    <p>
    And the display calibration experts at DisplayMate have <a href="http://www.displaymate.com/iPad_ShootOut_1.htm">the measurements and metrics to back these claims up</a>, too:
    </p>
    <blockquote>
    <p>
    … the new iPad’s picture quality, color accuracy, and gray scale are not only much better than any other Tablet or Smartphone, it’s also much better than most HDTVs, laptops, and monitors. In fact with some minor calibration tweaks the new iPad would qualify as a studio reference monitor.
    </p>
    </blockquote>
    <p>
    Granted, this is happening on tiny 4" and 10" screens first due to sheer economics. It will take time for it to trickle up. I shudder to think what a 24 or 27 inch display using the same technology as the current iPad would cost right now. But until the iPhone and iPad, near as I can tell, <i>nobody else was even trying</i> to improve resolution on computer displays – even though all the existing HCI research tells us that higher resolution displays are a deep fundamental improvement in computing.
    </p>
    At the point where these simple, fixed function Post-PC era computing devices are not just "enough" computer for most folks, but also <b>fundamentally innovating in computing as a whole</b> … well, all I can say is bring on the post-PC era.
    
    <p>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-03-19T15:20:30.000Z</pubDate>
    <guid>https://blog.codinghorror.com/welcome-to-the-post-pc-era/</guid>
    </item>
    <item>
    <title>Rubber Duck Problem Solving</title>
    <link>https://blog.codinghorror.com/rubber-duck-problem-solving/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>At <a href="http://stackexchange.com">Stack Exchange</a>, <b>we insist that people who ask questions <i>put some effort into their question</i>, and we're kind of jerks about it</b>. That is, when you set out to ask a question, you should …</p>
    <ul>
    <li>Describe what's happening in sufficient detail that we can follow along. Provide the necessary background for us to understand what's going on, even if we aren't experts in your particular area.</li>
    <li>Tell us why you <i>need</i> to know the answer. What led you here? Is it idle curiosity or is this somehow blocking you on a project? We don't need your whole life story, just give us some context here.</li>
    <li>Share your research on your problem; what have you found so far? Why didn't it work? And if you didn't do any research … should you even be asking? If you're inviting us to spend our valuable time helping you, it's only fair that you put in a reasonable amount of your valuable time into crafting a decent question. Help us help you!</li>
    </ul>
    <p>We have a great <a href="http://superuser.com/questions/how-to-ask">How to Ask page</a> that explains all of this, which is linked generously throughout the network. (And on Stack Overflow, due to massive question volume, we actually <i>force</i> new users to click through that page before asking their first question. You can see this yourself by asking a question as a new user.)</p>
    <p>What we're trying to prevent, most of all, is the unanswerable drive-by question. Those help nobody, and left unchecked they can ruin a Q&amp;A site, turning it into a virtual ghost town. On Stack Exchange, questions that are so devoid of information and context that they can't reasonably be answered will be actively closed, and if they aren't improved, eventually deleted.</p>
    <p>Like I said, we're kinda jerks about this. But for good reason: we're not-so-subtly trying to <b>help you help yourself</b>, by teaching you <a href="http://en.wikipedia.org/wiki/Rubber_duck_debugging">Rubber Duck problem solving</a>. And boy does it ever work. I've gotten tons of feedback over the years about how people, in the process of writing up their <i>thorough, detailed</i> question for Stack Overflow or another Stack Exchange site, figured out the answer to their own problem.</p>
    <img alt="Rubber-duckies" title="Rubber-duckies" src="https://blog.codinghorror.com/content/images/uploads/2012/03/6a0120a85dcdae970b016302cc18d5970d-800wi.jpg" border="0">
    <p>It's quite common. See for yourself:</p>
    <blockquote>
    <p><a href="http://meta.stackoverflow.com/questions/74891/how-can-i-thank-the-community-when-i-solve-my-own-problems-rubber-duck">How can I thank the community when I solve my own problems?</a></p>
    <p>I've only posted one question so far, and almost posted another. In both cases, I answered my own questions at least partially while writing it out. I credit the community and the process itself for making me think about the answer. There's nothing explicit in what I'm writing that states quite obviously the answer I needed, but something about writing it down makes me think along extra lines of thought.</p>
    <p><a href="http://meta.stackoverflow.com/questions/20016/why-is-it-that-properly-formulating-your-question-for-stackoverflow-often-yiel">Why is it that properly formulating your question often yields you your answer?</a></p>
    <p>I don't know how many times this has happened:</p>
    <ul>
    <li>I have a problem</li>
    <li>I decide to bring it to stack overflow</li>
    <li>I awkwardly write down my question</li>
    <li>I realize that the question doesn't make any sense</li>
    <li>I take 15 minutes to rethink how to ask my question</li>
    <li>I realize that I'm attacking the problem from a wrong direction entirely.</li>
    <li>I start from scratch and find my solution quickly.</li>
    </ul>
    <p>Does this happen to you? Sometimes asking the right question seems like half the problem.</p>
    <p><a href="http://meta.stackoverflow.com/questions/68719/beginning-to-ask-a-question-on-stackoverflow-acually-helps-me-debug-my-problem-m">Beginning to ask a question actually helps me debug my problem myself</a></p>
    <p>Beginning to ask a question actually helps me debug my problem myself, especially while trying to formulate a coherent and detailed enough question body in order to get decent answers. Has this happened to anybody else before?</p>
    </blockquote>
    <p>It's not a new concept, and every community seems to figure it out on their own given enough time, but "Ask the Duck" is <a href="http://hwrnmnbsol.livejournal.com/148664.html">a very powerful problem solving technique</a>.</p>
    <blockquote>
    <p>Bob pointed into a corner of the office. "Over there," he said, "is a duck. I want you to ask that duck your question."</p>
    <p>I looked at the duck. It was, in fact, stuffed, and very dead. Even if it had not been dead, it probably would not have been a good source of design information. I looked at Bob. Bob was dead serious. He was also my superior, and I wanted to keep my job.</p>
    <p>I awkwardly went to stand next to the duck and bent my head, as if in prayer, to commune with this duck. "What," Bob demanded, "are you doing?"</p>
    <p>"I'm asking my question of the duck," I said.</p>
    <p>One of Bob's superintendants was in his office. He was grinning like a bastard around his toothpick. "Andy," he said, "I don't want you to pray to the duck. I want you to <i>ask the duck your question</i>."</p>
    <p>I licked my lips. "Out loud?" I said.</p>
    <p>"Out loud," Bob said firmly.</p>
    <p>I cleared my throat. "Duck," I began.</p>
    <p>"Its name is Bob Junior," Bob's superintendant supplied. I shot him a dirty look.</p>
    <p>"Duck," I continued, "I want to know, when you use a clevis hanger, what keeps the sprinkler pipe from jumping out of the clevis when the head discharges, causing the pipe to..."</p>
    <p>In the middle of asking the duck my question, the answer hit me. The clevis hanger is suspended from the structure above by a length of all-thread rod. If the pipe-fitter cuts the all-thread rod such that it butts up against the top of the pipe, it essentially will hold the pipe in the hanger and keep it from bucking.</p>
    <p>I turned to look at Bob. Bob was nodding. "You know, don't you," he said.</p>
    <p>"You run the all-thread rod to the top of the pipe," I said.</p>
    <p>"That's right," said Bob. "Next time you have a question, I want you to come in here and ask the duck, not me. Ask it out loud. If you still don't know the answer, then you can ask me."</p>
    <p>"Okay," I said, and got back to work.</p>
    </blockquote>
    <p>I love this particular story because it makes it crystal clear how <b>the critical part of rubber duck problem solving is to <i>totally commit</i> to asking a thorough, detailed question of this imaginary person or inanimate object</b>. Yes, even if you end up throwing the question away because you eventually realize that you made some dumb mistake. The effort of walking an imaginary someone through your problem, step by step and in some detail, is what will often lead you to your answer. If you aren't willing to put the effort into fully explaining the problem and how you've attacked it, you can't reap the benefits of thinking deeply about your own problem before you ask others to.</p>
    <p>If you don't have a <a href="http://www.codinghorror.com/blog/2009/02/whos-your-coding-buddy.html">coding buddy (but you totally should)</a>, you can leverage the Rubber Duck problem solving technique to figure out problems all by yourself, or with the benefit of the greater Internet community. Even if you don't get the answer you wanted, forcing yourself to fully explain your problem – <a href="http://www.codinghorror.com/blog/2011/07/nobodys-going-to-help-you-and-thats-awesome.html">ideally in writing</a> – will frequently lead to new insights and discoveries.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-03-13T13:18:35.000Z</pubDate>
    <guid>https://blog.codinghorror.com/rubber-duck-problem-solving/</guid>
    </item>
    <item>
    <title>How to Hire a Programmer</title>
    <link>https://blog.codinghorror.com/how-to-hire-a-programmer/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    There's no magic bullet for hiring programmers. But I can share advice on a few techniques that I've seen work, that I've written about here and personally tried out over the years.
    </p>
    <h3>1. First, pass a few simple "Hello World" online tests.</h3>
    <p>
    I know it sounds crazy, but some people who call themselves programmers can barely program. To this day, I <i>still</i> get regular pings from people who tell me they had candidates <a href="http://www.codinghorror.com/blog/2007/02/why-cant-programmers-program.html">fail the most basic programming test imaginable</a>.
    </p>
    <p>That's why <i>extremely</i> simple programming tests are <a href="http://www.codinghorror.com/blog/2010/02/the-nonprogramming-programmer.html">step one of any sane interview process</a>. These tests should happen online, and the goal is <i>not</i> to prove that the candidate is some kind of coding genius, but that they know what the heck programming is. Yes, it's sad and kind of depressing that this is even necessary, but if you don't perform this sanity check, trust me – you'll be sorry.
    </p>
    <p>
    Some services that do online code screening (I am sure there are more, but these are the ones I know about) are <a href="http://www.interviewzen.com/">Interview Zen</a> and <a href="http://codility.com/">codility</a>.
    </p>
    <h3>2. Ask to see their portfolio.</h3>
    <p>
    Any programmer worth their salt should <a href="http://www.codinghorror.com/blog/2004/10/a-programmers-portfolio.html">have a portfolio of the things they've worked on</a>. It doesn't have to be fancy. I'm just looking for a basic breadcrumb trail of your awesomeness that you've left on the Internet to help others. Show me a Stack Overflow profile where I can see what kind of communicator and problem solver you are. Link me to an open-source code repository of your stuff. Got a professional blog? A tumblr? A twitter? Some other word I've never heard of? Excellent, let's have a look. Share applications you've designed, or websites you worked on, and describe what parts were yours.
    </p>
    <p>
    Just seeing what kind of work people have done, and what sort of online artifacts they've created, is tremendously helpful in getting a sense of what people do and what they're good (or bad) at.
    </p>
    <h3>3. Hire for cultural fit.</h3>
    <p>
    <a href="http://37signals.com/svn/posts/2486-bootstrapped-profitable-proud-github">Like GitHub</a>, I find that cultural fit is often a stronger predictor of success than mad programming chops.
    </p>
    <blockquote>
    <p>
    We talk about [philosophy] during the hiring process, which we take very seriously. We want any potential GitHubber to know what they’re getting into and ensure it’s a good fit. Part of that is having dinner and talking about stuff like the culture, philosophy, mistakes we’ve made, plans, whatever.
    </p>
    <p>
    Early on we made a few hires for their skills with little regard to how they’d fit into the culture of the company or if they understood the philosophy. Naturally, those hires didn’t work out. So while we care about the skills of a potential employees, whether or not they “get” us is a major part too.
    </p>
    </blockquote>
    <p>
    I realize that not every business <i>has</i> a community around what they do, but <b>if you do have a community you should try like hell to hire from your community whenever possible</b>. These are the folks who were naturally drawn to what you do, that were pulled into the gravitational well of your company completely of their own accord. The odds of these candidates being a good cultural fit are abnormally high. That's what you want!
    </p>
    <p>
    Did a few of your users <a href="http://www.mojang.com/2012/02/minecraft-team-strengthened/">build an amazing mod for your game</a>? Did they <a href="http://arstechnica.com/business/news/2012/03/hacker-commandeers-github-to-prove-vuln-in-ruby.ars?clicked=related_right">find an obscure security vulnerability and try to tell you about it</a>? <i>Hire these people immediately!</i>
    </p>
    <h3>4. Do a detailed, structured phone screen.</h3>
    <p>
    Once you've worked through the above, it's time to give the candidate a call. Bear in mind that the phone screen is not for chatting, it's for <i>screening</i>. The call should be technical and structured, so both of you can get out immediately if it clearly isn't a fit. <a href="http://www.codinghorror.com/blog/2008/01/getting-the-interview-phone-screen-right.html">Getting the Interview Phone Screen Right</a> covers the basics, but in summary:
    </p>
    <ol>
    <li>A bit of on-the-fly coding. "Find the largest int value in an int array."
    </li>
    <li>Some basic design. "Design a representation to model HTML."
    </li>
    <li>Scripting and regular expressions. "Give me a list of the text files in this directory that contain phone numbers in a specific format."
    </li>
    <li>Data structures. "When would you use a hashtable versus an array?"
    </li>
    <li>Bits and bytes. "Why do programmers think asking if Oct 31 and Dec 25 are the same day is funny?"
    </li>
    </ol>
    
    <p>
    What you're looking for is not magical perfect answers, necessarily, but some context into how this person solves problems, and whether they know their stuff (plus or minus 10 percent). The goal is to make sure that the candidates that do make it to the next step are not wasting their time or yours. So don't be shy about sticking to your guns and ending the call early if there are too many warning flags.
    </p>
    <h3>5. Give them an audition project.</h3>
    <p>
    So the candidate breezed through the hello world programming tests, has an amazing portfolio, is an excellent cultural fit, and also passed the phone screen with flying colors. Time to get them in for a face-to-face interview, right? <i>Not so fast there cowboy!</i>
    </p>
    <p>
    I've seen candidates nail all of the above, join the company, and utterly fail to Get Things Done. Have I mentioned that hiring programmers is hard?
    </p>
    <p>
    If you want to determine beyond the shadow of a doubt if someone's going to be a great hire, <b>give them an audition project</b>. I'm not talking about a generic, abstract programming problem, I'm talking about <b>a real world, honest-to-God unit of work that you need done right now today on your actual product</b>. Something you would give to a current employee, if they weren't all busy, y'know, <i>doing other stuff</i>.
    </p>
    <p>
    This should be a regular consulting gig with an hourly rate, and a clearly defined project mission statement. Select a small project that can ideally be done in a few days, maybe at most a week or two. Either the candidate can come in to the office, or they can work remotely. I know not every business has these bite-sized units of work that they can slice off for someone outside the company – but trying desperately to make it <i>inside</i> the company – to take on. I'd argue that if you can't think of <i>any</i> way to make an audition mini-project work for a strong hiring candidate, perhaps you're not structuring the work properly for your existing employees, either.
    </p>
    <p>
    If the audition project is a success, fantastic – you now have a highly qualified candidate that can provably Get Things Done, <i>and</i> you've accomplished something that needed doing. To date, I have never seen a candidate who passes the audition project fail to work out. I weigh performance on the audition project heavily; it's as close as you can get to actually working the job without being hired. And if the audition project doesn't work out, well, consider the cost of this little consulting gig a cheap exit fee compared to an extensive interview process with 4 or 5 other people at your company. Worst case, you can pass off the audition project to the next strong candidate.
    </p>
    <p>
    (A probationary period of conditional employment can also work, and is conceptually quite similar. You could hire with a 6-8 week review "go or no go" decision everyone agrees to in advance.)
    </p>
    <h3>6. Get in a room with us and pitch.</h3>
    <p>
    Finally, you should meet candidates face-to-face at some point. It's inevitable, but the point of the earlier steps is that <b>you should be 95% certain that a candidate would be a great hire before they ever set foot in an interview room</b>.
    </p>
    <p>
    I'm far from an expert on in person interviews, but <a href="http://www.codinghorror.com/blog/2009/03/the-hardest-interview-puzzle-question-ever.html">I don't like interview puzzle questions</a>, to <a href="http://www.codinghorror.com/blog/2006/05/snappy-answers-to-stupid-programming-questions.html">put it mildly</a>.
    </p>
    <p>
    Instead, I have my own theory about how we should interview programmers: have the candidate give a 15 minute presentation on their area of expertise. I think this is a far better indicator of success than a traditional interview, because you'll quickly ascertain …
    </p>
    <ul>
    <li>Is this person passionate about what they are doing?
    </li>
    <li>Can they communicate effectively to a small group?
    </li>
    <li>Do they have a good handle on their area of expertise?
    </li>
    <li>Would your team enjoy working with this person?
    </li>
    </ul>
    <p>
    The one thing every programmer should know, per Steve Yegge, is <a href="http://www.codinghorror.com/blog/2008/10/the-one-thing-every-software-engineer-should-know.html">how to market yourself, your code, and your project</a>. I wholeheartedly agree. <i>Now pitch me!</i>
    </p>
    <h3>7. None of this is guaranteed.</h3>
    <p>
    Please take this list at face value. I've seen these techniques work, and I've occasionally seen them not work. Adapt this advice to your your particular situation, keep what you think makes sense, and ignore the rest (although I'd strongly advise you to never, ever skip step #1). Even in the best of circumstances, <b>hiring human beings is hard</b>. A job opportunity may not work out for reasons far beyond anyone's control. People are, as they say, <i>complicated</i>.
    </p>
    <p>
    If you think of work as a relationship, one you'll spend 40 hours a week (or more) in the rest of your life, it behooves everyone involved to "date smart". Both the company and the candidate should make a good faith best effort to determine if there's a match. Your goal shouldn't be merely to get a job, or hire someone for a job, but to <a href="http://www.codinghorror.com/blog/2007/10/remember-this-stuff-is-supposed-to-be-fun.html">have fun</a> and <a href="http://www.codinghorror.com/blog/2008/12/programming-love-it-or-leave-it.html">create a love connection</a>. Don't rush into anything unless it feels right on both sides.
    </p>
    <p>
    (as an aside, if you're looking for ways to <i>attract</i> programmers, you can't go wrong with <a href="http://samuelmullen.com/2012/02/advice-on-attracting-good-developers/">this excellent advice from Samuel Mullen</a>.)
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-03-05T19:42:07.000Z</pubDate>
    <guid>https://blog.codinghorror.com/how-to-hire-a-programmer/</guid>
    </item>
    <item>
    <title>Should All Web Traffic Be Encrypted?</title>
    <link>https://blog.codinghorror.com/should-all-web-traffic-be-encrypted/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    The prevalence of free, open WiFi has made it <b>rather easy for a WiFi eavesdropper to steal your identity cookie for the websites you visit while you're connected to that WiFi access point</b>. This is something I talked about in <a href="http://www.codinghorror.com/blog/2010/11/breaking-the-webs-cookie-jar.html">Breaking the Web's Cookie Jar</a>. It's difficult to fix without making major changes to the web's infrastructure.
    </p>
    <p>
    In the year since I wrote that, a number of major websites have "solved" the WiFi eavesdropping problem by either making encrypted HTTPS web traffic an <i>account option</i> or <i>mandatory</i> for all logged in users.
    </p>
    <p>
    For example, I just noticed that Twitter, transparently to me and presumably all other Twitter users, <b>switched to an encrypted web connection by default</b>. You can tell because most modern browsers show the address bar in green when the connection is encrypted.</p>
    <p>
    <img alt="Twitter-https-encryption-indicators" title="Twitter-https-encryption-indicators" src="https://blog.codinghorror.com/content/images/uploads/2012/02/6a0120a85dcdae970b016762ddee60970b-800wi.png" border="0" width="401" height="228">
    </p>
    <p>
    I initially resisted this as overkill, except for obvious targets like email (the <a href="http://www.codinghorror.com/blog/2008/06/please-give-us-your-email-password.html">skeleton key to all your online logins</a>) and banking.
    </p>
    <blockquote>
    Yes, <b>you can naively argue that every website should encrypt all their traffic all the time</b>, but to me that's a "boil the sea" solution. I'd rather see a better, more secure identity protocol than ye olde HTTP cookies. I don't actually care if anyone sees the rest of my public activity on Stack Overflow; it's hardly a secret. But gee, I sure <i>do</i> care if they <a href="http://www.codinghorror.com/blog/2008/08/protecting-your-cookies-httponly.html">somehow sniff out my cookie and start running around doing stuff as me!</a> Encrypting everything just to protect that one lousy cookie header seems like a whole lot of overkill to me.
    </blockquote>
    
    <p>
    Of course, there's no reason to encrypt traffic for anonymous, not-logged-in users, and Twitter doesn't. You get a plain old HTTP connection until you log in, at which point they automatically switch to HTTPS encryption. Makes sense.
    </p>
    <p>
    It was totally painless for me, as a user, and it makes stealing my Twitter identity, or <a href="http://twitter.com/codinghorror">eavesdropping on my Twitter activity</a> (as fascinating as I know that must sound), dramatically more difficult. I can't really construct a credible argument <i>against</i> doing this, even for something as relatively trivial as my Twitter account, and it has some definite benefits. So perhaps Twitter has the right idea here; <b>maybe encrypted connections <i>should</i> be the default for all web sites</b>. As tinfoil hat as this seemed to me a year ago, now I'm wondering if that might actually be the right thing to do for the long-term health of the overall web, too.
    </p>
    <p>
    <a href="http://hyperboleandahalf.blogspot.com/2010/06/this-is-why-ill-never-be-adult.html"><img alt="ENCRYPT ALL THE THINGS" title="ENCRYPT ALL THE THINGS" src="https://blog.codinghorror.com/content/images/uploads/2012/02/6a0120a85dcdae970b016301e98de2970d-800wi.png" border="0" width="320" height="240"></a>
    </p>
    <p>
    Why not boil the sea, then? Let us <i>encrypt all the things!</i>
    </p>
    <h2>HTTPS isn't (that) expensive any more</h2>
    <p>
    Yes, in the hoary old days of the 1999 web, HTTPS was quite computationally expensive. But thanks to 13 years of Moore's Law, that's no longer the case. It's still <i>more work</i> to set up, yes, but <a href="http://www.imperialviolet.org/2010/06/25/overclocking-ssl.html">consider the real world case of GMail</a>:
    </p>
    <blockquote>
    In January this year (2010), Gmail switched to using HTTPS for everything by default. Previously it had been introduced as an option, but now all of our users use HTTPS to secure their email between their browsers and Google, all the time. In order to do this we had to deploy <i>no additional machines and no special hardware</i>. On our production frontend machines, SSL/TLS accounts for less than 1% of the CPU load, less than 10KB of memory per connection and less than 2% of network overhead. Many people believe that SSL takes a lot of CPU time and we hope the above numbers (public for the first time) will help to dispel that.
    </blockquote>
    
    <h2>HTTPS means The Man can't spy on your Internet</h2>
    <p>
    Since all the traffic between you and the websites you log in to would now be encrypted, the ability of nefarious evildoers to either …
    </p>
    <ul>
    <li>steal your identity cookie
    </li>
    <li>peek at what you're doing
    </li>
    <li>see what you've typed
    </li>
    <li>interfere with the content you send and receive
    </li>
    </ul>
    <p>
    … is, if not <a href="http://security.stackexchange.com/questions/6290/how-is-it-possible-that-people-observing-an-https-connection-being-established-w">completely eliminated</a>, drastically limited. Regardless of whether you're on open public WiFi or not.
    </p>
    <p>
    Personally, I don't care too much if people see what I'm doing online since the whole point of a lot of what I do is to … <a href="http://www.codinghorror.com/blog/2007/04/when-in-doubt-make-it-public.html">let people see what I'm doing online</a>. But I certainly don't subscribe to the dangerous idea that "only criminals have things to hide"; everyone deserves the right to personal privacy. And there are lots of repressive governments out there who wouldn't hesitate at the chance to spy on what their citizens do online, or worse. Much, much worse. Why not improve the Internet for all of them at once?
    </p>
    <h2>HTTPS goes faster now</h2>
    <p>
    Security always comes at a cost, and encrypting a web connection is no different. HTTPS is going to be inevitably slower than a regular HTTP connection. But how <i>much</i> slower? It used to be that encrypted content wouldn't be cached in some browsers, but <a href="http://gent.ilcore.com/2011/02/chromes-10-caches.html?showComment=1297102528799#c5411401837359385517">that's no longer true</a>. And Google's SPDY protocol, intended as a drop-in replacement for HTTP, even goes so far as to <a href="http://dev.chromium.org/spdy/spdy-whitepaper">bake encryption in by default</a>, and not just for better performance:
    </p>
    <blockquote>
    [It is a specific technical goal of SPDY to] make SSL the underlying transport protocol, for better security and compatibility with existing network infrastructure. Although SSL does introduce a latency penalty, we believe that the long-term future of the web depends on a secure network connection. In addition, the use of SSL is necessary to ensure that communication across existing proxies is not broken.
    </blockquote>
    
    <p>
    There's also <a href="http://blog.chromium.org/2011/05/ssl-falsestart-performance-results.html">SSL False Start</a> which requires a modern browser, but reduces the <a href="http://www.semicomplete.com/blog/geekery/ssl-latency.html">painful latency</a> inherent in the expensive, but necessary, handshaking required to get encryption going. SSL encryption of HTTP will never be <i>free</i>, exactly, but it's certainly a lot faster than it used to be, and getting faster every year.
    </p>
    <p>
    Bolting on encryption for logged-in users is by no means an easy thing to accomplish, particularly on large, established websites. You won't see me out there berating every public website for not offering encrypted connections yesterday because I know how much work it takes, and how much additional complexity it can add to an already busy team. Even though HTTPS is way easier now than it was even a few years ago, there are still plenty of tough gotchas: proxy caching, for example, becomes vastly harder when the proxies can no longer "see" what the encrypted traffic they are proxying is doing. Most sites these days are a broad mashup of content from different sources, and technically <i>all</i> of them need to be on HTTPS for a properly encrypted connection. Relatively underpowered and weakly connected mobile devices will pay a much steeper penalty, too.
    </p>
    <p>
    Maybe not tomorrow, maybe not next year, but over the medium to long term, <b>adopting encrypted web connections as a standard for logged-in users</b> is the healthiest direction for the future of the web. We need to work toward making HTTPS easier, faster, and most of all, <i>the default</i> for logged in users.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-02-23T16:19:34.000Z</pubDate>
    <guid>https://blog.codinghorror.com/should-all-web-traffic-be-encrypted/</guid>
    </item>
    <item>
    <title>Meetings: Where Work Goes to Die</title>
    <link>https://blog.codinghorror.com/meetings-where-work-goes-to-die/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    How many meetings did you have today? This week? This month?
    </p>
    <p>
    Now ask yourself <i>how many of those meetings were worthwhile</i>, versus the work that you could have accomplished in that same time.
    </p>
    <p>
    <img alt="Meetings, the practical alternative to work" title="Meetings, the practical alternative to work" src="https://blog.codinghorror.com/content/images/uploads/2012/02/6a0120a85dcdae970b0167625041db970b-800wi.png" border="0">
    </p>
    <p>
    This might lead one to wonder <a href="http://tom.preston-werner.com/2010/10/18/optimize-for-happiness.html">why we even have meetings at all</a>.
    </p>
    <p>
    </p>
    <blockquote>
    At GitHub <b>we don't have meetings</b>. We don't have set work hours or even work days. We don't keep track of vacation or sick days. We don't have managers or an org chart. We don't have a dress code. We don't have expense account audits or an HR department.
    </blockquote>
    
    <p>
    Now, I'm sure Tom was being facetious when he said that GitHub doesn't have meetings, because I sure as heck saw meeting rooms when I recently visited their offices to <a href="http://www.codinghorror.com/blog/2011/12/building-social-software-for-the-anti-social.html">give a talk</a>. Who knows, maybe they use them to store all the extra forks.
    </p>
    <p>
    Although some meetings are inevitable, even necessary, the principle he's advocating here is an important one. <b>Meetings should be viewed skeptically from the outset, as risks to productivity</b>. We have meetings because we think we need them, but all too often, meetings are where work ends up going to die. I have a handful of principles that I employ to keep my meetings useful:
    </p>
    <p>
    </p>
    <ol>
    <li>
    <b>No meeting should ever be more than an hour, under penalty of death</b>.<br>
    <p>The first and most important constraint on any meeting is the most precious imaginable resource at any company: <i>time</i>. If you can't fit your meeting in about an hour, there is something deeply wrong with it, and you should fix that first. Either it involves too many people, the scope of the meeting is too broad, or there's a general lack of focus necessary to keep the meeting on track. I challenge anyone to remember <i>anything</i> that happens in a multi-hour meeting. When all else fails, please <i>keep it short!</i></p>
    </li>
    <li>
    <b>Every meeting should have a clearly defined mission statement.</b><br>
    <p>What's the mission statement of your meeting? Can you define the purpose of your meeting in a single succinct sentence? I hesitate to recommend having an "agenda" and "agenda items" because the word agenda implies a giant, tedious bulleted list of things to cover. Just make sure the purpose of the meeting is clear to everyone; the rest will take care of itself.</p>
    </li>
    <li>
    <b>Do your homework before the meeting.</b><br>
    <p>Since your meeting has a clearly defined mission statement, everyone attending the meeting knows in advance what they need to talk about and share, and has it ready to go before they walk into the room. <i>Right?</i> That's how we can keep the meeting down to an hour. If you haven't done your homework, you shouldn't be in the meeting. If nobody has done their homework, the meeting should be cancelled.</p>
    </li>
    <li>
    <b>Make it optional.</b><br>
    <p>"Mandatory" meetings are a cop-out. Everyone in the meeting should be there because they want to be there, or they <i>need</i> to be there. One sure way to keep yourself accountable for a meeting is to make everyone optional. Imagine holding a meeting that people actually <i>wanted</i> to attend, because it was … useful. Or interesting. Or entertaining. Now make it happen!
    </p>
    </li>
    <li>
    <b>Summarize to-dos at the end of the meeting.</b><br>
    <p>If your meeting never happened, what would the consequences be? If the honest answer to that is almost nothing, then perhaps your meeting has no reason to exist. Any truly productive meeting <i>causes stuff to happen</i> as a direct result of the decisions made in that meeting. You, as a responsible meeting participant, are responsible for keeping track of what <i>you</i> need to do – and everyone in the room can prove it by summarizing their to-do list for everyone's benefit before they leave the meeting.</p>
    </li>
    </ol>
    
    <p>
    It's not that we shouldn't have meetings, but rather, we need to recognize the inherent risks of meetings and strive to make the (hopefully) few meetings we do have productive ones. Let's work fast, minimize BS, and get to the point.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-02-14T02:13:52.000Z</pubDate>
    <guid>https://blog.codinghorror.com/meetings-where-work-goes-to-die/</guid>
    </item>
    <item>
    <title>Farewell Stack Exchange</title>
    <link>https://blog.codinghorror.com/farewell-stack-exchange/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I am no longer a part of <a href="http://stackexchange.com">Stack Exchange</a>.
    </p>
    <p>
    I still have much literal and figurative stock in the success of Stack Exchange, of course, but as of March 1st I will no longer be part of the day to day operations of the company, or the <a href="http://stackexchange.com/sites">Stack Exchange sites</a>, in any way.
    </p>
    <p>
    It's been almost exactly 4 years since I <a href="http://www.codinghorror.com/blog/2008/03/choosing-your-own-adventure.html">chose my own adventure</a>. In those four years, we accomplished incredible things together. <a href="http://stackoverflow.com">Stack Overflow</a> is now an enormous bustling city, a hugely positive influence on the daily lives of programmers around the world, a place to learn from and teach your peers. And the entire Stack Exchange network, born out of the seed of Stack Overflow, is a reference model of high signal, low noise, no-nonsense Q&amp;A that <i>makes the internet better for all of us</i>. I could quote traffic figures, but to me that's not what it's all about. I prefer to think of it building something awesome, because I know that <a href="http://www.codinghorror.com/blog/2006/10/the-field-of-dreams-strategy.html">if you build it, they will come</a>.
    </p>
    <p>
    <a href="http://stackexchange.com"><img class="asset  asset-image at-xid-6a0120a85dcdae970b0168e6d62f05970c image-full" alt="Stackoverflow-stackexchange-logos" title="Stackoverflow-stackexchange-logos" src="https://blog.codinghorror.com/content/images/uploads/2012/02/6a0120a85dcdae970b0168e6d62f05970c-800wi.png" border="0"></a>
    </p>
    <p>
    And they did. <b>I'll be damned if we didn't change our little corner of the Internet for the better.</b> Possibly permanently. This is more than I could have ever hoped for, and I am honored to have been a founding and guiding part of it for the last four years. But I don't need to be a part of it forever – nor <i>should</i> I be, if I've been doing my job correctly. Stack Exchange was always about designing software and creating recipes for self-governing communities who love a particular topic. It is an honor to be a "just" a citizen of this community again, because as a citizen, I too have the power to shape its future. Just like you do.
    </p>
    <p>
    Startup life is hard on families. We just <a href="https://twitter.com/#!/codinghorror/status/165546374597840896">welcomed two new members</a> into our family, and  <a href="http://www.codinghorror.com/blog/2010/09/go-that-way-really-fast.html">running as fast as you can</a> isn't sustainable for parents of multiple small children. The death of Steve Jobs, and his subsequent posthumous biography, <a href="http://www.deliberatism.com/blog/not-like-steve/">highlighted the risks</a> for a lot of folks:
    </p>
    <blockquote>
    <p>
    For a long time, work was my only thing. I worked evenings, weekends, and Christmas. At those rare times when I wasn’t at work in body, I was there in spirit, unable to speak or think of much else. I wanted so badly to climb the mountain that I stopped asking why I was doing it.
    </p>
    <p>
    I admire Steve for the mountains he climbed. At the same time, I wonder if he missed the whole point, becoming the John Henry of our time. He won the race, but at what cost?
    </p>
    <p>
    Me? I may turn out to be a failure in business, but I refuse to fail my kids.
    </p>
    </blockquote>
    <p>
    I've followed Brad Wardell's success <a href="http://www.codinghorror.com/blog/2005/06/why-anyone-can-succeed.html">for a long time</a>, and he had a <a href="http://draginol.joeuser.com/article/413935/What_I_learned_about_life_from_Steve_Jobs">very similar reaction</a> to Jobs' death.
    </p>
    <blockquote>
    <p>
    In the last several years, the company has been successful enough to generate a substantial amount of capital. And with it, I have been fortunate to bring in people with great talent. And so I started thinking of all the amazing things we would do. I would put in crazy hours to do it, of course, but we would go and do amazing things.
    </p>
    <p>
    Then Steve Jobs died.
    </p>
    <p>
    And suddenly I realized something. What is the objective here? My oldest child just turned 15. My other two are no longer little either. And I have been missing out on them. And my wife.
    </p>
    <p>
    For all the success and amazing accomplishments of Steve Jobs, in the end, nothing could save him. Death can come at any time. And I realized that if I found myself on death’s door, I would regret deeply not having spent more time with  my kids when they were…well, kids.
    </p>
    </blockquote>
    <p>
    You may have more discipline than I do. But for me, the mission is everything; <a href="http://www.codinghorror.com/blog/2006/12/are-you-an-evangelist-too.html">I'm downright religious about it</a>. Stack Overflow and Stack Exchange have been wildly successful, but I finally realized that success at the cost of my children is not success. It is failure.
    </p>
    <p>
    I've met so many amazing people through Stack Exchange. First, the incredibly talented <a href="http://stackexchange.com/about/team">team of people who work for the company</a>, many of whom I personally recruited. As far as I'm concerned, you are among the best in the world at what you do. That's why we hired you, and it has been an honor to serve with you. But more than that, the broader community that formed around a shared vision of making the Internet better through these beautiful public parks of curated, creative commons Q&amp;A. I have continually been humbled by the brilliant minds that saw fit to work alongside us towards this goal, who selflessly contributed their own time and effort because they just plain loved this stuff as much as we do.
    </p>
    <p>
    I will miss you all terribly.
    </p>
    <p>
    What's next for me? I honestly don't know. I do know that I love the Internet, and I remain passionate as ever about making the Internet better – but right now I need to be with my family. In six months, perhaps I'll be ready to <a href="http://www.codinghorror.com/blog/2008/03/choosing-your-own-adventure.html">choose another adventure</a>. I have total confidence that the team at Stack Exchange, and the thriving community that makes it so great, will carry Stack Exchange onward. After all, our shared voyage never ends, it just <a href="http://en.wikipedia.org/wiki/Ulysses_(poem)">takes different forms</a>.
    </p>
    <p>
    </p>
    <blockquote>
    Come, my friends.<br>
    'Tis not too late to seek a newer world. <br>
    Push off, and sitting well in order smite <br>
    the sounding furrows; for my purpose holds <br>
    To sail beyond the sunset, and the baths <br>
    Of all the western stars, until I die. <br>
    It may be that the gulfs will wash us down;<br>
    It may be that we shall touch the Happy Isles, <br>
    And see the great Achilles, whom we knew. <br>
    Though much is taken, much abides; and though <br>
    We are not now that strength which in old days <br>
    Moved earth and heaven, that which we are, we are —<br>
    One equal temper of heroic hearts, <br>
    Made weak by time and fate, but strong in will <br>
    To strive, to seek, to find, and not to yield.<br>
    </blockquote>
    
    <p>
    Farewell, Stack Exchange. I hope you can understand that if I was hard on you at times, it was because I wanted you to be the best you could possibly be.
    </p>
    <p>
    It was because I loved you.
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-02-06T15:00:08.000Z</pubDate>
    <guid>https://blog.codinghorror.com/farewell-stack-exchange/</guid>
    </item>
    <item>
    <title>Listen to Your Community, But Don't Let Them Tell You What to Do</title>
    <link>https://blog.codinghorror.com/listen-to-your-community-but-dont-let-them-tell-you-what-to-do/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>You know how interviewers love asking about your greatest weakness, or the biggest mistake you've ever made? These questions may sound formulaic, maybe even borderline cliche, but be careful when you answer: they are <a href="http://www.codinghorror.com/blog/2005/05/success-through-failure.html">more important than they seem</a>.</p>
    <p>So when people ask me <b>what our biggest mistake was in building Stack Overflow</b> I'm glad I don't have to fudge around with platitudes. I can honestly and openly point to a <i>huge, honking, ridiculously dumb mistake</i> I made from the very first day of development on Stack Overflow – and, worse, a mistake I stubbornly clung to for a solid nine month period after that over the continued protestations of the community. I even went so far as to write a whole blog post <a href="http://www.codinghorror.com/blog/2009/07/meta-is-murder.html">decrying its very existence</a>.</p>
    <p>For the longest time, I had an awfully Fight Club-esque way of looking at this: <b>the first rule of Stack Overflow was that you didn't discuss Stack Overflow!</b> After all, we were there to learn about <i>programming</i> with our peers, not learn about <i>a stupid website</i>. Right?</p>
    <p><a href="http://en.wikipedia.org/wiki/Fight_Club"><img alt="Fight-club-soap" title="Fight-club-soap" src="https://blog.codinghorror.com/content/images/uploads/2012/02/6a0120a85dcdae970b0168e69999d3970c-800wi.jpg" border="0"></a></p>
    <p>I didn't see the need for a meta.</p>
    <p><b>Meta is, of course, the place where you go to discuss the place.</b> Take a moment and think about what that means. Meta is for people who care so deeply about their community that they're willing to go one step further, to come together and spend even <i>more</i> of their time deciding how to maintain and govern it. So, in a nutshell, I was telling the people who <i>loved Stack Overflow the most of all</i> to basically … f**k off and go away.</p>
    <p>As I said, not my finest hour.</p>
    <p>In my defense, I did eventually figure this out, thanks to the continued prodding of the community. Although we'd used an external meta site since beta, we eventually launched our very own <a href="http://meta.stackoverflow.com/">meta.stackoverflow</a> in June 2009, ten months after public beta. And we fixed this <i>very</i> definitively with Stack Exchange. Every <a href="http://stackexchange.com/sites">Stack Exchange site</a> we launch has a meta from day one. We now know that meta participation is the source of all meaningful leadership and governance in a community, so it is cultivated and monitored closely.</p>
    <p>I also paid penance for my sins by becoming the top user of our own meta. I've spent the last 2 years and 7 months totally immersed in <b>the morass of bugs, feature requests, discussions, and support that is our meta</b>. As you can see <a href="http://meta.stackoverflow.com/users/1/jeff-atwood">in my profile</a>, I've visited meta 901 unique days in that time frame, which is disturbingly close to every day. I consider my meta participation stats a badge of honor, but more than that, it's my <i>job</i> to help build this thing alongside you. We explicitly do everything in public on Stack Exchange – it's very intentionally the opposite of <a href="http://www.codinghorror.com/blog/2005/02/ivory-tower-development.html">Ivory Tower Development</a>.</p>
    <p>Along the way I've learned a few lessons about building software with your community, and handling community feedback.</p>
    <h3>1. 90% of all community feedback is crap.</h3>
    <p>Let's get this out of the way immediately. <a href="http://en.wikipedia.org/wiki/Sturgeon's_Law">Sturgeon's Law</a> can't be denied by any man, woman, child … or community, for that matter. Meta community, <a href="http://balpha.de/2011/06/a-shout-out-to-the-people-of-meta/">I love you to death</a>, so let's be honest with each other: most of the feedback and feature requests you give us are just not, uh, er … <i>actionable</i>, for a zillion different reasons.</p>
    <p>But take heart: <b>this means 10% of the community feedback you'll get is <i>awesome!</i></b> I guarantee you'll find ten posts that are pure gold, that have the potential to make the site clearly better for everyone … provided you have the intestinal fortitude to look at a hundred posts to get there. Be prepared to spend a lot of time, and I mean <i>a whole freaking lot of time</i>, mining through community feedback to extract those rare gems. I believe every community has users savvy enough to produce them in some quantity, and they're often startlingly wonderful.</p>
    <h3>2. Don't get sweet talked into building a truck.</h3>
    <p>You should immediately triage the feedback and feature requests you get into two broad buckets:</p>
    <p><i>We need power windows in this car!</i></p>
    <p>or</p>
    <p><i>We need a truck bed in this car!</i></p>
    <p>The former is, of course, a reasonable thing to request adding to a car, while the latter is a request to change the fundamental nature of the vehicle. The malleable form of software makes it all too tempting to bolt that truck bed on to our car. Why not? Users keep asking for it, and trucks sure are convenient, right?</p>
    <p><img alt="https://blog.codinghorror.com/content/images/2014/Jun/attic_brat_pg1.jpg" alt=""></p>
    <p>Don't fall into this trap. Stay on mission. That car-truck hybrid is awfully tempting to a lot of folks, but then you end up with a <a href="http://en.wikipedia.org/wiki/Subaru_BRAT">Subaru Brat</a>. Unless you <i>really</i> want to build a truck after all, the users asking for truck features need to be gently directed to their nearest truck dealership, because they're in the wrong place.</p>
    <h3>3. Be honest about what you won't do.</h3>
    <p>It always depressed me to see bug trackers and feedback forums with thousands of items languishing there in no man's land with no status at all. That's a sign of a neglected community, and worse, a dishonest relationship with the community. It is sadly all too typical. Don't do this!</p>
    <p>I'm not saying you should tell your community that their feedback sucks, even when it frequently does. That'd be mean. But don't be shy about <i>politely</i> declining requests when you feel they don't make sense, or if you can't see any way they could be reasonably implemented. (You should always reserve the right to change your mind in the future, of course.) Sure, it hurts to be rejected – but it hurts far more to be <i>ignored</i>. I believe very, very strongly that if you're honest with your community, they will ultimately respect you more for that.</p>
    <p>All relationships are predicated on honesty. If you're not willing to be honest with your community, how can you possibly expect them to respect you … or continue the relationship?</p>
    <h3>4. Listen to your community, but don't let them tell you what to do.</h3>
    <p>It's tempting to take meta community requests as a wholesale template for development of your software or website. The point of a meta is to listen to your community, and act on that feedback, right? On the contrary, <b>acting too directly on community feedback is <i>incredibly</i> dangerous</b>, and the reason many of these community initiatives fail when taken too literally. I'll let Tom Preston-Werner, the co-founder of GitHub, <a href="http://tom.preston-werner.com/2011/03/29/ten-lessons-from-githubs-first-year.html">explain</a>:</p>
    <blockquote>
    <p>Consider a feature request such as “GitHub should let me FTP up a documentation site for my project.” What this customer is really trying to say is “I want a simple way to publish content related to my project,” but they’re used to what’s already out there, and so they pose the request in terms that are familiar to them. We could have implemented some horrible FTP based solution as requested, but we looked deeper into the underlying question and now we allow you to publish content by simply pushing a Git repository to your account. This meets requirements of both functionality and elegance.</p>
    </blockquote>
    <p>Community feedback is great, but it should never be used as a crutch, a substitute for thinking deeply about what you're building and <i>why</i>. Always try to identify what the underlying needs are, and come up with a sensible roadmap.</p>
    <h3>5. Be there for your community.</h3>
    <p>Half of community relationships isn't doing what the community thinks they want at any given time, but <b>simply being there to listen and respond to the community</b>. When the co-founder of Stack Exchange responds to your meta post – even if it wasn't exactly what you may have wanted to hear – I hope it speaks volumes about how committed we are to really, truly building this thing alongside our community.</p>
    <p>Regardless of whether money is changing hands or not, you should love discovering some small gem of a community request or bugfix on meta that makes your site or product better, and swooping in to make it so. That's a virtuous public feedback loop: it says <i>you matter</i> and <i>we care</i> and <i>everything just keeps on getting better</i> all in one delightful gesture.</p>
    <p>And isn't that what it's all about?</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-02-03T02:18:54.000Z</pubDate>
    <guid>https://blog.codinghorror.com/listen-to-your-community-but-dont-let-them-tell-you-what-to-do/</guid>
    </item>
    <item>
    <title>The One Button Mystique</title>
    <link>https://blog.codinghorror.com/the-one-button-mystique/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    I <a href="http://www.codinghorror.com/blog/2009/06/the-iphone-software-revolution.html">enjoy my iPhone</a>, but I can't quite come to terms with one aspect of its design: Apple's insistence that there can be only ever be one, and <i>only</i> one, button on the front of the device.
    </p>
    <p>
    <img alt="Iphone-4s-button" title="Iphone-4s-button" src="https://blog.codinghorror.com/content/images/uploads/2012/02/6a0120a85dcdae970b0168e6811988970c-800wi.jpg" border="0">
    </p>
    <p>
    I also own a <a href="http://www.amazon.com/dp/B0051VVOB2/?tag=codihorr-20">completely buttonless Kindle Fire</a>, and you'll get no argument from me that <b>there should be at least <i>one</i> obvious <a href="http://www.urbandictionary.com/define.php?term=jesus%20handle">"Jesus Handle"</a> button on the front of any gadget</b>. I do wonder why Amazon decided to make the Fire buttonless, when every <i>other</i> Kindle they ship has a home button. Amazon has a track record of making some awfully rough version 1.0 devices; I'm sure they'll add a home button in a version or two. And, hey, at <a href="http://www.amazon.com/dp/B0051VVOB2/?tag=codihorr-20">only $199</a> I'm willing to cut them a little slack. For now.
    </p>
    Even Apple is no stranger to buttonless devices. Consider the <a href="http://arstechnica.com/apple/reviews/2009/03/3g-ipod-shuffle-review-where-were-going-we-dont-need-buttons.ars/2">oddly buttonless third generation iPod Shuffle</a>, where you had to double and even <i>triple</i> click the controls on the headphones to do basic things like advance tracks. Oh, and by the way, this also made every set of headphones you own obsolete, at least for use with this model. The fourth gen shuffle rapidly switched back to physical controls on the device, and the fifth gen went to touch controls on the device, as expected.
    <p>
    <img class="asset  asset-image at-xid-6a0120a85dcdae970b01676180845e970b image-full" alt="Ipod-shuffle-3g-vs-4g" title="Ipod-shuffle-3g-vs-4g" src="https://blog.codinghorror.com/content/images/uploads/2012/02/6a0120a85dcdae970b01676180845e970b-800wi.jpg" border="0">
    </p>
    <p>
    Microsoft is just as guilty. I sometimes struggle with the otherwise awesome <a href="http://www.amazon.com/dp/B002EWD09A/?tag=codihorr-20">Xbox 360 Wireless Microphone</a>. It has only a power button and some lights.
    </p>
    <p>
    <a href="http://www.amazon.com/dp/B002EWD09A/?tag=codihorr-20"><img class="asset  asset-image at-xid-6a0120a85dcdae970b0163008ad22f970d" alt="Xbox-360-wireless-microphone" title="Xbox-360-wireless-microphone" src="https://blog.codinghorror.com/content/images/uploads/2012/02/6a0120a85dcdae970b0163008ad22f970d-800wi.png" border="0"></a><br>
    </p>
    <p>
    In its defense, for the most part it does just work when you pick it up and start singing (badly, in my case), but I admit to being slightly perplexed every time I have to sync it with an Xbox, or figure out what's going on with it. <a href="http://support.microsoft.com/kb/959936">Can you blame me?</a>
    </p>
    <p>
    </p>
    <blockquote>
    <p>
    When you turn on the microphone, the built-in lights shine to display the microphone status as follows:
    </p>
    <ul>
    <li>Power on: lights flash green one time every second
    </li>
    <li>Connecting: lights flash green four times every second
    </li>
    <li>Connection complete: lights flash blue, and then stops
    </li>
    </ul>
    <p>
    When your battery power is low, the built-in lights shine to display the battery charge status as follows:
    </p>
    <ul>
    <li>Low: Lights flash amber one time every three seconds
    </li>
    <li>Critical: Lights flash amber one time every second
    </li>
    </ul>
    <p>
    When your microphone moves out of the wireless range of your console, the lights flash green one time every second. The lights can also change color together with supported game titles.
    </p>
    </blockquote>
    <p>
    If we can agree that <i>no</i> buttons is clearly a bad idea, I think it follows that one button is problematic in its own way. I have the same issue with the single button on the iPhone that <a href="http://www.codinghorror.com/blog/2004/10/double-click-must-die.html">I do with the single button mouse</a> – it may be OK-ish at the very beginning, but over time it leads to absurd, almost comical overloading of functionality. <b>Consider how many different things the single button on the face of an iPhone now controls</b>:
    </p>
    <p>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b0168e6814472970c-pi"><img alt="How-to-use-the-home-button-excerpt" title="How-to-use-the-home-button-excerpt" src="https://blog.codinghorror.com/content/images/uploads/2012/02/6a0120a85dcdae970b016761805b7a970b-800wi.png" border="0" width="426" height="388"></a><br>(diagram courtesy <a href="http://backslashn.com/">Andrew Durdin</a>, <a href="http://www.flickr.com/photos/adurdin/4944720731/sizes/l/in/photostream/">source</a>)
    </p>
    <p>
    The iPhone home button? Why, it's easy! You have your choice of…
    </p>
    <ul>
    <li>single-click
    </li>
    <li>double-click
    </li>
    <li>triple-click
    </li>
    <li>click and hold
    </li>
    <li>click and pause and click again
    </li>
    </ul>
    <p>
    All of which have different meanings at different times, of course. In particular I spend a lot of time double-clicking to get to the active apps list, and I often mis-tap which kicks me over to the home screen. I have so many apps installed on my iPhone that search is the only rational way to navigate. This means I search a lot, which requires clicking once to get to the default home page, pausing, then clicking again. Sometimes I click too long, which is then detected as click-and-hold, and I get the voice search app which I am … er, <a href="http://www.codinghorror.com/blog/2010/06/whatever-happened-to-voice-recognition.html">not a fan of</a>, to put it mildly.
    </p>
    <p>
    I've gotten to the point where I dread using the home button on my iPhone because it <a href="http://www.codinghorror.com/blog/2005/08/dont-make-me-think-second-edition.html">Makes Me Think</a>. And I get it wrong a significant percentage of the time. This isn't the way it's supposed to be.
    </p>
    <p>
    You might be expecting me to turn into a rabid Windows Phone or Android fanboy about now and snarkily note how they get it right. I'm not sure they do. Either of them. <a href="http://www.codinghorror.com/blog/2007/02/because-they-all-suck.html">They all manage to suck in their own special way</a>.
    </p>
    <p>
    <img alt="Phone-windows-and-android-buttons" title="Phone-windows-and-android-buttons" src="https://blog.codinghorror.com/content/images/uploads/2012/02/6a0120a85dcdae970b0163008ae3a4970d-800wi.jpg" border="0">
    </p>
    <p>
    When there's one button on the device, at least it's clear what that button is supposed to do, right? Well, <a href="http://www.flickr.com/photos/adurdin/4944720731/sizes/l/in/photostream/">sometimes</a>.
    </p>
    <p>
    There is one theme I agree with here – <b>the clearly marked back button on both Android and Windows phones, just like a web browser</b>. I mostly use my iPhone as a platform for the Internet, and the simplicity of the Internet is its primary strength: a collection of obvious things to click, and an easy, giant honking <i>back</i> button so you never get lost in its maze of twisty passages, all alike. It is true that browsers have a home button, but the latest versions of Chrome, Firefox, and Internet Explorer have all but pushed that home button off the UI in favor of the ginormous back button. While I'll tentatively agree that not all phone apps have to behave like the Internet, the Internet is becoming more and more of <a href="http://webapps.stackexchange.com/">a platform for bona fide applications</a> every day. The back button is a UI paradigm that works like gangbusters for webapps, and I'd argue strongly in favor of that being a hard button on a device.
    </p>
    <p>
    But once you add <i>three</i> buttons, thinking starts to creep in again. <i>Am I pressing the correct button?</i> That's never good. And I don't even know what that third button is supposed to be on the Android phone! I could possibly be in favor of the hard search button on the Windows phone, I suppose, but I'd rather see good, consistent use of two buttons on the face of a device before <a href="http://imgur.com/gallery/2rg7l">willy-nilly adding Yet Another Button</a>. I think there's a reason the industry has more or less standardized on a two-button mouse, for example. (Yes, there is <a href="http://www.codinghorror.com/blog/2008/03/what-should-the-middle-mouse-button-mean.html">that pesky middle button</a>, but it's a nice to have, not an essential part of the experience.)
    </p>
    <p>
    What about the one finger solution? Even with touch devices, <b>one finger does not seem to be enough</b>; there's a <a href="http://prog21.dadgum.com/119.html">curious overloading of the experience</a> over time.
    </p>
    <blockquote>
    <p>
    On the iPad, there are a number of system-wide gestures, such as swiping left or right with four fingers to switch between apps. Four-finger swipes? That's convoluted, but imagine a virtual mixing console with horizontal sliders. Quickly move four of them at once...and you switch apps. Application designers have to work around these, making sure that legitimate input methods don't mimic the system-level gestures.
    </p>
    <p>
    The worst offender is this: swipe down from the top of the screen to reveal the Notification Center (a window containing calendar appointments, the weather, etc.). A single-finger vertical motion is hardly unusual, and many apps expect such input. The games Flight Control and Fruit Ninja are two prime examples. Unintentionally pulling down the Notification Center during normal gameplay is common. A centered vertical swipe is natural in any paint program, too. Do app designers need build around allowing such controls? Apparently, yes.
    </p>
    </blockquote>
    <p>
    Yes, our old friend overloading is now on the touch scene in spades: for all but the simplest use of a tablet, you will inevitably find yourself double-tapping, tapping and holding, swiping with two fingers, and so on.
    </p>
    <p>
    </p>
    Apple's done a great job of embodying simplicity and clean design, but I often think they go too far, particularly at the beginning. For example, the first Mac <a href="http://www.asktog.com/columns/082iPad&amp;Mac.html">didn't even have cursor keys</a>. Everything's a design call, and somewhat subjective, but like Goldilocks, I'm going to maintain that the secret sauce here is not to get the porridge too cold (no buttons) or too hot (3 or more buttons), but <i>just right</i>. I'd certainly be a happier iPhone user if I didn't have to think so much about what's going to happen when I press my home button for the hundredth time in a day.
    <p>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-02-01T13:15:32.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-one-button-mystique/</guid>
    </item>
    <item>
    <title>Defeating SOPA and PIPA Isn't Enough</title>
    <link>https://blog.codinghorror.com/defeating-sopa-and-pipa-isnt-enough/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    <a href="http://en.wikipedia.org/wiki/Stop_Online_Piracy_Act">SOPA</a> and <a href="http://en.wikipedia.org/wiki/PROTECT_IP_Act">PIPA</a> are two pieces of proposed legislation designed to "stop" Internet piracy… in the most hamfisted way imaginable. As Mitchell Baker <a href="http://blog.lizardwrangler.com/2012/01/17/pipasopa-and-why-you-should-care/">explains</a>:
    </p>
    <blockquote>
    Assume there's a corner store in your neighborhood that rents movies. But the movie industry believes that some or even all of the videos in that store are unauthorized copies, so that they're not being paid when people watch their movies. What should be done?
    <p>
    SOPA/PIPA do not aim at the people trying to get to the store, or even the store itself. The solution under the proposed bills is to <b>make it as difficult as possible to find or interact with the store</b>:
    </p>
    <p>
    </p>
    <ol>
    <li>Maps showing the location of the store must be changed to hide it.
    </li>
    <li>The road to the store must be blocked off so that it is difficult to physically get to there.
    </li>
    <li>Directory services must delist the store’s phone number and address.
    </li>
    <li>Credit card companies would have to cease providing services to the store.
    </li>
    <li>Local newspapers would no longer be allowed to place ads for the video store.
    </li>
    <li>To make sure it all happens, any person or organization who doesn’t do this is subject to penalties. Even publishing a newsletter that tells people where the store is would be prohibited by this legislation.
    </li>
    </ol>
    </blockquote>
    <p>
    Just substitute "corner store" with "website" and I think you can see where this is going. These bills are so rife with potential for abuse and misuse, so clearly dangerous to the very fabric of the Internet, that frankly I have a hard time getting worked up about them. The Internet is under constant siege by large companies, and <a href="http://www.codinghorror.com/blog/2011/02/the-importance-of-net-neutrality.html">will be for the forseeable future</a>. This is nothing new. These bills will be defeated, because they must be.
    </p>
    <p>
    Instead, I'm scratching my head and wondering <b>how such boneheaded bills made it this far in Congress</b>. I can think of a few reasons:
    </p>
    <p>
    </p>
    <ul>
    <li>Average people don't understand how the Internet works and thus can't comprehend the danger.
    </li>
    <li>Nobody pays attention to what our government does until it hits them in the pocketbook (or below the belt).
    </li>
    <li>These bills were pushed through by highly paid lobbyists for the entertainment industry.
    </li>
    </ul>
    <p>
    I often bemoan the state of <a href="http://en.wikipedia.org/wiki/Slacktivism">Slacktivism</a> on the internet, where changing your Facebook or Twitter picture is considered a valid and effective form of protest. But this time, I am happy to say, was indeed different.
    </p>
    <p>
    Perhaps because of the obvious danger of these bills, geek websites and communities  banded together weeks ago to protect themselves and the greater Internet. Like many other technical communities, we <a href="http://blog.stackoverflow.com/2011/12/protect-intellectual-property-but-not-like-this/">wrote about it on our blog</a>, <a href="http://blog.stackoverflow.com/2011/11/se-podcast-29-chris-poole/">talked about it on our podcast</a>, and even put up <a href="http://meta.stackoverflow.com/questions/114005/how-does-sopa-threaten-stack-overflow-stackexchange">a little banner on Stack Overflow for a day</a>. Users were encouraged to call, fax, and write their representatives in Congress and express their concerns. And they did, in droves! But outside of our technical geek ghettos, there was precious little mainstream coverage of this dangerous legislation.
    </p>
    <p>
    That is, until <a href="http://www.readwriteweb.com/archives/stop_sopa_what_a_blacked_out_internet_looks_like.php">major sites like Wikipedia, Google, and Craigslist joined the bandwagon today</a>. Most notably, Wikipedia actually <b>went dark for all of today, January 18th, rendering all of English language Wikipedia inaccessible</b>. That turned the tide, and transformed SOPA/PIPA into something that average people would actually talk about and care about. There's no better way to raise awareness of the danger these bills pose than blacklisting one of the greatest resources the Internet has ever produced.
    </p>
    <p>
    <img class="asset  asset-image at-xid-6a0120a85dcdae970b016760c27791970b" alt="Wikipedia" title="Wikipedia" src="https://blog.codinghorror.com/content/images/uploads/2012/01/6a0120a85dcdae970b016760c27791970b-800wi.jpg" border="0">
    </p>
    <p>
    While SOPA/PIPA are still alive -- barely -- for now, I think it's safe to say that they are well on their way to defeat. I'm glad to be a part of that, however tiny, but I cannot in good conscience celebrate.
    </p>
    <p>
    Yes, we likely succeeded in defeating these two specific bills and galvanizing the political will of major Internet communities, including our very own <a href="http://stackexchange.com">Stack Exchange</a>. These are good and noble and just and necessary things. They are things to be proud of. But instead of celebrating, let's take this time to reflect and ask ourselves a deeper question: <a href="http://lessig.tumblr.com/post/13119510676/me-mia-on-the-sopa-soap-opera">how is it that these dangerous bills came to exist in the first place?</a>
    </p>
    <p>
    </p>
    <blockquote>
    First, and again, this is a critical battle to wage and win. SOPA is just the latest, but in  many ways, the most absurd campaign in the endless saga of America’s copyright wars. It will be yet another failed attempt in a failed war, and I obviously believe it should be opposed.
    <p>
    But second, and as you describe, this isn’t my war anymore. Not because my heart isn’t in it, but because I don’t believe we will win that war (or better, win the peace and move on) — even if we can win battles like this one — until the more basic corruption that is our government gets addressed. That’s the fight I have spent the last 4 years working on. That’s where I’ll be for at least the next 6.
    </p>
    <p>
    For this is what I know: We will <i>never</i> (as in <b>not ever</b>) win the war you care about until we win the war against this corruption of our Republic.
    </p>
    <p>
    <a href="http://www.amazon.com/dp/0446576433/?tag=codihorr-20"><img class="asset  asset-image at-xid-6a0120a85dcdae970b016760c27d56970b" alt="Republic-lost-cover" title="Republic-lost-cover" src="https://blog.codinghorror.com/content/images/uploads/2012/01/6a0120a85dcdae970b016760c27d56970b-800wi.jpg" border="0"></a>
    </p>
    <p>
    Of course, as my book, <a href="http://www.amazon.com/dp/0446576433/?tag=codihorr-20">Republic, Lost: How Money Corrupts Congress -- and a Plan to Stop It</a>, describes, this is an insanely difficult, possibly impossible, fight. But whether difficult or not, it is the fight that must be waged.
    </p>
    </blockquote>
    <p>
    We have done much. But in our celebratory enthusiasm, please take a moment to hear out Mr. Lessig, and appreciate just how far we have yet to go.
    </p>
    <p>
    <iframe src="http://blip.tv/play/lG2C2%2BIkAg.html?p=1" width="550" height="442" frameborder="0" allowfullscreen></iframe><embed type="application/x-shockwave-flash" src="http://a.blip.tv/api.swf#lG2C2+IkAg" style="display:none"></embed>
    </p>
    <p>
    So yes, join us in fighting the obvious insanity of legislation like SOPA and PIPA that threaten the open, unfettered Internet. <b>But please, <i>please</i> also join us in attacking the far more pernicious problem of lobbyist money subtly corrupting our government.</b> If we don't deal with <i>that</i>, we will never stop fighting bills like SOPA and PIPA.
    </p>
    <p>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2012-01-18T15:00:56.000Z</pubDate>
    <guid>https://blog.codinghorror.com/defeating-sopa-and-pipa-isnt-enough/</guid>
    </item>
    <item>
    <title>Building Social Software for the Anti-Social</title>
    <link>https://blog.codinghorror.com/building-social-software-for-the-anti-social/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    In November, I delivered the keynote presentation at <a href="http://oredev.org">Øredev</a> 2011. It was the second and probably final presentation in the series I call <b>Building Social Software for the Anti-Social</b>.
    </p>
    <p>
    I've spent almost four years thinking about the Q&amp;A format, and these two presentations are the culmination of that line of thought. In them I present ten "scary ideas", ideas which are <i>counterintuitive</i> for most folks. These are the building blocks we used to construct Stack Overflow, and by extension, Server Fault, Super User, and the rest of the <a href="http://stackexchange.com/sites">Stack Exchange network</a>.
    </p>
    <p>
    </p>
    <ol>
    <li>Radically lower the bar for participation.
    </li>
    <li>Trusting (some of) your users.
    </li>
    <li>Life is the world’s biggest MMORPG.
    </li>
    <li>Bad stuff happens.
    </li>
    <li>Love trumps money.
    </li>
    <li>Rules can be fun and social.
    </li>
    <li>All modern website design is game design.
    </li>
    <li>Thoughtful game design creates sustainable communities.
    </li>
    <li>The community isn’t always right.
    </li>
    <li>Some moderation required.
    </li>
    </ol>
    <p>
    It's not the same experience as attending the actual live presentation, of course, but you can certainly get the gist of it by viewing the slides for these two presentations online:
    </p>
    <p>
    <a href="http://www.slideshare.net/codinghorror/building-social-software-for-the-anti-social-final"><img alt="Building Social Software for the Anti-Social" title="Building Social Software for the Anti-Social" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b015438857c59970c-800wi.png" style="border:2px solid #aaa; box-shadow: 5px 5px 5px #ccc; border-radius:5px"></a>
    </p>
    <p>
    <a href="http://www.slideshare.net/codinghorror/oredev-2011-building-social-software-for-the-antisocial-part-ii"><img class="asset  asset-image at-xid-6a0120a85dcdae970b0162fe07287e970d image-full" alt="Building Social Software for the Anti-Social: Part II" title="Building Social Software for the Anti-Social: Part II" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b0162fe07287e970d-800wi.png" style="border:2px solid #aaa; box-shadow: 5px 5px 5px #ccc; border-radius:5px"></a>
    </p>
    <p>
    The Øredev organizers hired <a href="http://www.imagethink.net/">ImageThink</a> to draw each presentation on a whiteboard live on stage as it was presented. I was skeptical that this would work, but the whiteboard visualizations came out great for all the presentations. Here's the two whiteboard drawings ImageThink created during my presentation. (Yes, they had <i>two</i> artists on stage "live whiteboarding", one on the left side, and one on the right side.)
    </p>
    <p>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b01675efb6ba3970b-pi"><img alt="Imagethink-oredev-atwood-1-small" title="Imagethink-oredev-atwood-1-small" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b0162fe073a40970d-800wi.jpg" border="0"></a><br>
    </p>
    <p>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b01675efb694c970b-pi"><img alt="Imagethink-oredev-atwood-2-small" title="Imagethink-oredev-atwood-2-small" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b0162fe073d2b970d-800wi.jpg" border="0"></a>
    </p>
    <p>
    It's not a bad approximation of what was covered. If you're curious about live whiteboard visualizations, ImageThink posted <a href="http://www.blog.imagethink.net/line-by-line/2011/12/15/the-power-of-visuals-in-the-virtual-world-imagethink-webinar.html">a great set of links on their blog</a> that I highly recommend.
    </p>
    <p>
    After four years, we've mostly figured out what works and what doesn't work for our particular brand of low noise, high signal Q&amp;A at Stack Exchange. But the title <b>Social Software for the Anti-Social</b> is only partially tongue in cheek. If you want to <i>learn</i> anything online, you have to design your software to refocus and redirect people's natural social group impulses, and that's what these presentations attempt to explain. I hope you enjoy them!
    </p>
    <p>
    <font color="red">Update:</font> Part II is now available as a full talk, with audio and video courtesy of Oredev. <a href="http://vimeo.com/44234748">Watch it now!</a>
    </p>
    <p>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <p>
    <!--kg-card-end: markdown-->
                </p></content>
    <pubDate>2011-12-19T03:31:01.000Z</pubDate>
    <guid>https://blog.codinghorror.com/building-social-software-for-the-anti-social/</guid>
    </item>
    <item>
    <title>Gifts for Geeks, 2011 Edition</title>
    <link>https://blog.codinghorror.com/gifts-for-geeks-2011-edition/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    Between <a href="http://www.codinghorror.com/blog/2008/03/choosing-your-own-adventure.html">founding Stack Overflow</a> (and later, running Stack Exchange) and <a href="http://www.codinghorror.com/blog/2009/03/spawned-a-new-process.html">having a child</a>, I haven't had much time to blog about the holidays for a few years now. The last <a href="http://www.codinghorror.com/blog/2008/12/gifts-for-geeks-2008-edition-sort-of.html">Gifts for Geeks I did was in 2008</a>. Those recommendations are still as valid as ever, but I just couldn't muster the enthusiasm to do it every year.
    </p>
    <p>
    I've also come to realize, especially after having a child, that <b>the goal in life is not to own a lot of "stuff", but rather, to free yourself from everything except that which is essential, and that which you love.</b>
    </p>
    <p>
    I'm still working on this, and I probably will be until I die. That said, there are a few essential things I think any self respecting geek should have, things I use all the time and I truly love – and I feel it's my responsibility to let my fellow geeks, and the spouses and significant others of geeks, know about them. Otherwise you might end up with yet another WiFi Detecting Shirt as a gift this year, and that'd just be … sad, for everyone involved. So consider this a public service, and feel free to share this post, lest you show up to work in January and find yourself and all your coworkers wearing Wifi Detecting Shirts.
    </p>
    <p>
    As I wrote in <a href="http://www.codinghorror.com/blog/2010/08/whats-on-your-utility-belt.html">What's On Your Utility Belt?</a> I've been carrying LED flashlights since 2005, and just in that time the average LED flashlight has gone from bright, to very bright, to amazingly bright, to <i>ridiculously blinding laser-like bright</i>. You can thank <a href="http://en.wikipedia.org/wiki/Haitz's_Law">Haitz's Law</a> for that:
    </p>
    <p>
    </p>
    <blockquote>
    [Haitz's Law] states that every decade, the cost per lumen (unit of useful light emitted) falls by a factor of 10, the amount of light generated per LED package increases by a factor of 20, for a given wavelength (color) of light. It is considered the LED counterpart to Moore's law, which states that the number of transistors in a given integrated circuit doubles every 18 to 24 months. Both laws rely on the process optimization of the production of semiconductor devices.
    </blockquote>
    <p>
    Or, as I like to call it, "why you will be regularly blinded by flashlights for the rest of your natural life." But on the plus side, it also means that today even inexpensive LED flashlights are plenty bright for all but the most niche applications. You no longer have to pay a big premium to get one that's usefully bright. LED lights are so awesome, in fact, that I own and recommend no less than three form factors:
    </p>
    <p>
    </p>
    <ol>
    <li>
    <b><a href="http://www.amazon.com/dp/B004XN5MBW/?tag=codihorr-20">Fenix HL21</a></b> ($35)
    <p>
    <a href="http://www.amazon.com/dp/B004XN5MBW/?tag=codihorr-20"><img alt="Fenix-hl21" title="Fenix-hl21" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b01675eb07d7a970b-800wi.jpg" border="0"></a>
    </p>
    <p>
    If you do any kind of DIY work at all, at some point you're going to want a focused light <i>exactly where you are looking</i>. If you can get over the "hey, I have this lamp strapped to my head and I look like a dork" factor, headlamps are <i>ridiculously</i> convenient. I had a much less bright (~40 lumens) headlamp and switching to this 90 lumen HL21 was a major improvement. I use this thing <i>all the time</i>. Looking cool is overrated.
    </p>
    <p>
    </p>
    </li>
    <li>
    <b><a href="http://www.amazon.com/dp/B0041NE8TG/?tag=codihorr-20">Fenix E21</a></b> ($35)
    <p>
    <a href="http://www.amazon.com/dp/B0041NE8TG/?tag=codihorr-20"><img alt="Fenix-e21" title="Fenix-e21" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b01675eb063c1970b-800wi.jpg" border="0"></a>
    </p>
    <p>
    The E21 is much smaller than your typical full-size flashlight but it is <i>every bit</i> as bright as those giant police-baton like Maglites. It runs off two ubiquitous AA batteries, and has a pleasingly simple design, with an obvious switch in the rear and only two configurable light levels: low (48 lumens) and high (150 lumens). This is a flashlight you could buy your parents without baffling them. We own three, and each of our cars has one in the glove box. This is, in my opinion, what LED lights were meant to be.
    </p>
    </li>
    <li>
    <b><a href="http://www.amazon.com/dp/B004DVIKC2/?tag=codihorr-20">Fenix LD01R4</a></b> ($40)
    <p>
    <a href="http://www.amazon.com/dp/B004DVIKC2/?tag=codihorr-20"><img alt="Fenix-ld01" title="Fenix-ld01" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b0162fdbc8115970d-800wi.jpg" border="0"></a>
    </p>
    <p>
    The latest revision of the LD01 is the proverbial Every Day Carry; a compact single AAA flashlight. As long as you have your keys with you, you'll never without a reliable, bright enough light. Twist the cap to balance between runtime and light output; the three modes are 85 lumens for 1 hour, 28 lumens for 3.5 hours, and 9 lumens for 11 hours. Pretty incredible from a single AAA battery! Oh, and I recommend a <a href="http://www.amazon.com/dp/B004QN2Y56/?tag=codihorr-20">lithium AAA battery</a> because they run longer and are 1/3 lighter than other types of batteries. Normally I wouldn't care, but the reduced weight is surprisingly noticeable in something you'll have in your pocket all the time.
    </p>
    </li>
    </ol>
    <p>
    All these LED lights have one thing in common: <b>batteries</b>. It's unavoidable. Because you're a responsible geek, of <i>course</i> you use modern rechargeable battery technology. And as I wrote in <a href="http://www.codinghorror.com/blog/2008/03/adventures-in-rechargeable-batteries.html">Adventures in Rechargeable Batteries</a>, sophisticated battery chargers are like geek catnip.
    </p>
    <p>
    <a href="http://www.amazon.com/exec/obidos/ASIN/B004J6DLD4/codihorr-20"><img alt="Lacrosse Techology BC-900 AlphaPower battery charger" border="0" class="at-xid-6a0120a85dcdae970b012877703106970c" height="552" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b012877703106970c-pi.jpg" width="455"></a></p>
    <p>
    This is the <b><a href="http://www.amazon.com/exec/obidos/ASIN/B004J6DLD4/codihorr-20">LaCrosse BC1000</a></b> ($60), and it's a ton of fun to mess around with. Also, it recharges batteries. It might <i>seem</i> a little spendy, but it can do miraculous things like bring old nearly-dead rechargeable batteries back to life. And it comes with a bunch of actually useful accessories in the box:
    </p>
    <p>
    </p>
    <ul>
    <li>Nylon carrying bag
    </li>
    <li>4 AA and 4 AAA rechargeable NiMH batteries
    </li>
    <li>4 C size battery adapters
    </li>
    <li>4 D size battery adapters
    </li>
    </ul>
    <p>
    Yep, you can simulate C and D cells by putting the AA and AAA batteries inside the shells. The only battery type not represented here is the 9 volt. I own two of these LaCrosse chargers, and given the stupid number of AA and AAA powered devices in the house I'm thinking of buying a third. If you're a geek, you almost certainly have 99 battery problems, but armed with this baby, <a href="http://www.amazon.com/exec/obidos/ASIN/B004J6DLD4/codihorr-20">recharging ain't one</a>. And don't forget the <a href="http://www.amazon.com/dp/B004UG41W8/?tag=codihorr-20">low self-discharge NiMH batteries</a>, while you're at it.
    </p>
    <p>
    Ah, the dremel. I think <a href="http://forums.gtrcanada.com/gtrc-ot-pit/44384-ode-dremel.html">this Canadian forumgoer expressed it best</a>:
    </p>
    <p>
    </p>
    <blockquote>
    It truly is hard for me to express the joy I feel when I am forced to break out the dremel; the last resort, the "Trojan Horse" of tools. In a dark place when all other tools abandon me and leave me heartbroken, the dremel always provides a loving shoulder to help complete my tasks. The dremel is a very selfless tool, he/she has no purpose to which they cling, yet is always willing to assist its fellow tools in completing theirs...
    <p>
    Drill strip a screw? The dremel can help... The jigsaw leave some nasty edges? dremel can restore them. I like to think of the dremel as the Jesus of tools.
    </p>
    <p>
    They say Jesus performed many miracles and although it's not thoroughly documented, I believe his first miracle was, in fact, the dremel blueprint (he was a carpenter after all). The good Lord presented me with an image in a dream... I would like to share it.
    </p>
    <p>
    <img class="asset  asset-image at-xid-6a0120a85dcdae970b0162fdbcb524970d" alt="Jesus-dremel" title="Jesus-dremel" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b0162fdbcb524970d-800wi.jpg" border="0">
    </p>
    </blockquote>
    <p>
    If you don't own a dremel, I'm sorry, but <i>I'm going to have to ask you to turn in your geek card.</i> The dremel is truly the swiss army knife of DIY projects. Any DIY project.
    </p>
    <p>
    I use my Dremel about once every few months, mostly for things that I probably shouldn't even be attempting. But that's the beauty of the Dremel. It doesn't judge; it just helps you <i>get s**t done, by any means necessary</i>. I don't recommend buying a big Dremel kit to start, because it's hard to tell which accessories you'll actually want or need until you begin using this insanely versatile tool. I suggest starting with the <b><a href="http://www.amazon.com/dp/B002L3RUVQ/?tag=codihorr-20">entry-level high power Dremel kit</a></b> ($90).
    </p>
    <p>
    <a href="http://www.amazon.com/dp/B002L3RUVQ/?tag=codihorr-20"><img alt="Dremel-4000" title="Dremel-4000" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b0154383aad25970c-800wi.jpg" border="0"></a>
    </p>
    <p>
    Finally, I have to put in a mention for an updated version of what is probably the most frequently used thing on my keychain, with the biggest bang for the gram other than my front door key -- the <b><a href="http://www.amazon.com/dp/B0032Y2OT6/?tag=codihorr-20">Leatherman Squirt PS4</a></b> ($24).
    </p>
    <p>
    <a href="http://www.amazon.com/dp/B0032Y2OT6/?tag=codihorr-20"><img alt="Leatherman-squirt-ps4" title="Leatherman-squirt-ps4" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b01675eb09c11970b-800wi.jpg" border="0"></a>
    </p>
    <p>
    That's right, you no longer have to face the terrible existential conundrum of choosing between <i>pliers or scissors</i>. The new PS4 model <b>now includes both pliers and scissors</b>. This is nothing less than a Christmas miracle, people! (Oh yeah, and get <a href="http://www.amazon.com/dp/B002MD01KC/?tag=codihorr-20/">this awesome tiny carabiner</a> to attach it to your keychain so you can easily detach it when you need to bust it out.)
    </p>
    <p>
    So that's it this year. Nothing extravagant. Nothing too expensive. No frills. Just essential stuff I love and use regularly. I hope you, or someone you love, will love them too.
    </p>
    <p>
    </p>
    <p>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <p>
    <!--kg-card-end: markdown-->
                </p></content>
    <pubDate>2011-12-13T00:12:55.000Z</pubDate>
    <guid>https://blog.codinghorror.com/gifts-for-geeks-2011-edition/</guid>
    </item>
    <item>
    <title>Fast Approximate Anti-Aliasing (FXAA)</title>
    <link>https://blog.codinghorror.com/fast-approximate-anti-aliasing-fxaa/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Anti-aliasing has an intimidating name, but what it does for our computer displays is rather fundamental. <b>Think of it this way -- a line has infinite resolution, but our digital displays do not.</b> So when we "snap" a line to the pixel grid on our display, we can compensate by imagineering partial pixels along the line, <i>pretending</i> we have a much higher resolution display than we actually do. Like so:
    </p>
    <p>
    <img title="2d-anti-aliasing" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b0153942af4e7970b-800wi.png" border="0" alt="2d-anti-aliasing">
    </p>
    <p>
    As you can see on these little squiggly black lines I drew, anti-aliasing produces a superior image by using grey pixels to simulate partial pixels along the edges of the line. It is a hack, but as hacks go, it's pretty darn effective. Of course, the <i>proper</i> solution to this problem is to have extremely high resolution displays in the first place. But other than tiny handheld devices, <a href="http://www.codinghorror.com/blog/2007/06/where-are-the-high-resolution-displays.html">I wouldn't hold your breath for that to happen any time soon</a>.
    </p>
    <p>
    This also applies to much more complex 3D graphics scenes. Perhaps even more so, since <b>adding motion amplifies the aliasing effects of all those crawling lines that make up the edges of the scene</b>.
    </p>
    <p>
    <img class="asset  asset-image at-xid-6a0120a85dcdae970b015437fee512970c image-full" alt="No-aa-vs-4x-aa" title="No-aa-vs-4x-aa" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b015437fee512970c-800wi.jpg" border="0">
    </p>
    <p>
    But anti-aliasing, particularly at 30 or 60 frames per second in a complex state of the art game, with millions of polygons and effects active, is not cheap. <a href="http://gaming.stackexchange.com/a/31849">Per my answer here</a>, you can generally expect a <b>performance cost of at least 25% for proper 4X anti-aliasing</b>. And that is for <a href="http://hacksoflife.blogspot.com/2011/04/so-many-aa-techniques-so-little-time.html">the most optimized version of anti-aliasing we've been able to come up with</a>:
    </p>
    <blockquote>
    <ol>
    <li><p><strong>Super-Sampled Anti-Aliasing (SSAA).</strong> The oldest trick in the book - I list it as universal because you can use it pretty much anywhere: forward or deferred rendering, it also anti-aliases alpha cutouts, and it gives you better texture sampling at high anisotropy too. Basically, you render the image at a higher resolution and down-sample with a filter when done. Sharp edges become anti-aliased as they are down-sized. Of course, there's a reason why people don't use SSAA: <em>it costs a fortune</em>. Whatever your fill rate bill, it's 4x for even minimal SSAA.</p></li>
    <li><p><strong>Multi-Sampled Anti-Aliasing (MSAA).</strong> This is what you typically have in hardware on a modern graphics card. The graphics card renders to a surface that is larger than the final image, but in shading each "cluster" of samples (that will end up in a single pixel on the final screen) the pixel shader is run only once. We save a ton of fill rate, but we still burn memory bandwidth. This technique does not anti-alias any effects coming out of the shader, because the shader runs at 1x, so alpha cutouts are jagged. This is the most common way to run a forward-rendering game. MSAA does not work for a deferred renderer because lighting decisions are made after the MSAA is "resolved" (down-sized) to its final image size.</p></li>
    <li><p><strong>Coverage Sample Anti-Aliasing (CSAA).</strong> A further optimization on MSAA from NVidia [ed: ATI has an equivalent]. Besides running the shader at 1x and the framebuffer at 4x, the GPU's rasterizer is run at 16x. So while the depth buffer produces better anti-aliasing, the intermediate shades of blending produced are even better.</p></li>
    </ol>
    </blockquote>
    <p>
    Pretty much all "modern" anti-aliasing is some variant of the MSAA hack, and even <i>that</i> costs a quarter of your framerate. That's prohibitively expensive, unless you have so much performance you don't even care, which will rarely be true for any recent game. While the crawling lines of aliasing do bother me, I don't feel anti-aliasing alone is worth giving up a quarter of my framerate and/or turning down other details to pay for it.
    </p>
    <p>
    But that was before I learned that <a href="http://gamedev.stackexchange.com/questions/18777/full-screen-anti-aliasing-in-opengl">there are some emerging alternatives to MSAA</a>. And then, much to my surprise, these alternatives started showing up as actual graphics options in this season's PC games -- Battlefield 3, Skyrim, Batman: Arkham City, and so on. <b>What is this FXAA thing, and how does it work?</b> Let's see it in action:
    </p>
    <p>
    </p>
    <table>
    <tr>
    <td>
    No AA
    </td>
    <td>
    4x MSAA
    </td>
    <td>
    FXAA
    </td>
    </tr>
    <tr>
    <td>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b0162fd814e0c970d-pi"><img alt="Noaa-closeup-1" title="Noaa-closeup-1" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b015437ff4c5a970c-800wi.png" border="0"></a>
    </td>
    <td>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b0162fd814e81970d-pi"><img alt="Msaa-closeup-1" title="Msaa-closeup-1" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b0153942b77c4970b-800wi.png" border="0"></a>
    </td>
    <td>
    <a href="http://www.codinghorror.com/.a/6a0120a85dcdae970b0153942b9160970b-pi"><img alt="Fxaa-closeup-1" title="Fxaa-closeup-1" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b015437ff4cab970c-800wi.png" border="0"></a>
    </td>
    </tr>
    </table>
    <p>
    (this is a zoomed fragment; click through to see the full screen)
    </p>
    <p>
    FXAA stands for Fast Approximate Anti-Aliasing, and it's an <i>even more clever hack than MSAA</i>, because it ignores polygons and line edges, and simply <b>analyzes the pixels on the screen</b>. It is a pixel shader program <a href="http://developer.download.nvidia.com/assets/gamedev/files/sdk/11/FXAA_WhitePaper.pdf">documented in this PDF</a> that runs every frame in a scant millisecond or two. Where it sees pixels that create an artificial edge, it smooths them. It is, <a href="http://timothylottes.blogspot.com/2011/03/nvidia-fxaa.html">in the words of the author</a>, "the simplest and easiest thing to integrate and use".
    </p>
    <p>
    <img alt="Fxaa-algorithm" title="Fxaa-algorithm" src="https://blog.codinghorror.com/content/images/uploads/2011/12/6a0120a85dcdae970b0153942b9436970b-800wi.jpg" border="0">
    </p>
    <p>
    FXAA has two major advantages:
    </p>
    <p>
    </p>
    <ol>
    <li>FXAA smooths edges in <i>all</i> pixels on the screen, including those inside alpha-blended textures and those resulting from pixel shader effects, which were previously immune to the effects of MSAA without oddball workarounds.
    </li>
    <li>It's fast. Very, very fast. <a href="http://timothylottes.blogspot.com/2011/07/nvidia-fxaa-39-released.html">Version 3</a> of the FXAA algorithm takes about 1.3 milliseconds per frame on a $100 video card. Earlier versions were found to be <a href="http://www.hardocp.com/article/2011/07/18/nvidias_new_fxaa_antialiasing_technology/5">double the speed of 4x MSAA</a>, so you're looking at a modest 12 or 13 percent cost in framerate to enable FXAA -- and in return you get a <i>considerable</i> reduction in aliasing.
    </li>
    </ol>
    <p>
    The only downside, and it is minor, is that you may see a bit of unwanted edge "reduction" inside textures or in other places. I'm not sure if it's fair to call this a downside, but FXAA can't directly be applied to older games; <b>games have to be specifically coded to call the FXAA pixel shader</b> <i>before</i> they draw the game's user interface, otherwise it will happily smooth the edges of on-screen HUD elements, too.
    </p>
    <p>
    The FXAA method is <i>so</i> good, in fact, it makes all other forms of full-screen anti-aliasing pretty much obsolete overnight. <b>If you have an FXAA option in your game, you should enable it immediately</b> and ignore any other AA options.
    </p>
    <p>
    FXAA is an excellent example of the power of simple hacks and heuristics. But it's also <b>a great demonstration of how attacking programming problems from a different angle</b> -- that is, rather than thinking of the screen as a collection of polygons and lines, think of it as a collection of pixels -- can enable you to solve computationally difficult problems faster and arguably <i>better</i> than anyone thought possible.
    </p>
    <p>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <p>
    <!--kg-card-end: markdown-->
                </p></content>
    <pubDate>2011-12-07T17:12:03.000Z</pubDate>
    <guid>https://blog.codinghorror.com/fast-approximate-anti-aliasing-fxaa/</guid>
    </item>
    <item>
    <title>Bias Lighting</title>
    <link>https://blog.codinghorror.com/bias-lighting/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I've talked about <a href="https://blog.codinghorror.com/computer-workstation-ergonomics/">computer workstation ergonomics</a> before, but one topic I didn't address is <b>lighting</b>. We computer geeks like it dark. Really dark. Ideally, we'd be in a cave. A cave … with an internet connection.</p>
    <p><a href="http://tuts.pinehead.tv/2011/03/23/the-geek-room/"><img alt="You-read-my-doormat" title="You-read-my-doormat" src="https://blog.codinghorror.com/content/images/uploads/2011/11/6a0120a85dcdae970b015436b098b8970c-800wi.jpg" border="0"></a></p>
    <p>The one thing that we can't abide is direct overhead lighting. Every time the overhead light gets turned on in this room, I feel like a <a href="http://www.imdb.com/title/tt0087363/">Gremlin</a> shrieking <i>Bright light! Bright light!</i> Oh, how it burns!</p>
    <iframe width="420" height="315" src="https://www.youtube.com/embed/grrADdmfrSI" frameborder="0" allowfullscreen></iframe>
    <p>But <b>there is a rational basis for preferring a darkened room.</b> The light setup in a lot of common computing environments <a href="http://www.dansdata.com/eclipse.htm">causes glare on the screen</a>:</p>
    <blockquote>
    <p>If your room's lit, as most are, by fittings hanging from the ceiling, you'll be wanting to set up your monitor so that you don't see reflections of the lights in it. The flat screens on many modern monitors (like the excellent Samsung I review here) help, because they reflect less of the room behind you. And anti-reflective screen coatings are getting better and better too. But lots of office workers still just can't avoid seeing one or more ceiling fluoros reflected in their screen.</p>
    <p>A good anti-reflective coating can reduce most such reflections to annoyance level only. But if you can see lights reflected in your screen, you can probably also directly see lights over the top of your monitor. Direct line of sight, or minimally darkened reflected line of sight, to light sources is going to give you glare problems.</p>
    <p>Glare happens when there are small things in your field of vision that are much brighter than the general scene. Such small light sources can't be handled well by your irises; your eyes' pupil size is matched to the overall scene illumination, and so small light sources will appear really bright and draw lines on your retinas. The more of them there are, and the brighter they are, the more work your eyes end up doing and the sooner they'll get tired.</p>
    </blockquote>
    <p>While a darkened room is better for viewing most types of computer displays, it has risks of its own. It turns out that sitting in a dark room staring at a super bright white rectangle is … kind of bad for your eyes, too. It doesn't help that most LCDs come from the factory <a href="https://blog.codinghorror.com/computer-display-calibration-101/">with retina-scorching default brightness levels</a>. To give you an idea of how crazy the defaults truly are, the three monitors I'm using right now have brightness set to 25/100. <b>Ideally, your monitors shouldn't be any brighter than a well-lit book.</b> Be sure to crank that brightness level down to something reasonable.</p>
    <p>You don't want total darkness, what you want is some indirect lighting –  specifically bias lighting. It helps your eyes compensate and <a href="http://arstechnica.com/gadgets/news/2011/08/bias-lighting.ars?comments=1#comments-bar">adapt to bright displays</a>.</p>
    <blockquote>
    <p>"[Bias lighting] works because it provides enough ambient light in the viewing area that your pupils don't have to dilate as far. This makes for less eyestrain when a flashbang gets thrown your way or a bolt of lightning streams across the screen," he told Ars. "Because the display is no longer the only object emitting light in the room, colors and black levels appear richer than they would in a totally black environment. Bias lighting is key in maintaining a reference quality picture and reducing eye-strain."</p>
    </blockquote>
    <p>Bias lighting is the happy intersection of indirect lighting and light compensation. <b>It reduces eye strain and produces a better, more comfortable overall computing display experience.</b></p>
    <img alt="Bias-lighting" title="Bias-lighting" src="https://blog.codinghorror.com/content/images/uploads/2011/11/6a0120a85dcdae970b015392dd54fc970b-800wi.jpg">
    <p>The good news is that it's trivially easy to set up a bias lighting configuration these days due to the proliferation of inexpensive and bright LEDs. You can build yourself a bias light with <a href="http://www.instructables.com/id/Bias-lighting-on-the-cheap/">a clamp and a fluorescent bulb</a>, or with <a href="http://www.instructables.com/id/Bias-lighting-using-the-IKEA-Ledberg-light/">some nifty IKEA LED strips</a> and double-sided foam tape. It really is that simple: <b>just strap some lights to the back of your monitors</b>.</p>
    <p>I'm partial to the IKEA <a href="http://www.ikea.com/us/en/catalog/products/20119418/">Dioder</a> and <a href="http://www.ikea.com/us/en/catalog/products/80302715/">Ledberg</a> technique myself; I currently have an array of Ledbergs behind my monitors. But if you don't fancy any minor DIY work, there are a wide array of <a href="https://www.amazon.com/dp/B01BKU7B7I/?tag=codihorr-20">inexpensive self-adhesive LED strips</a> out there – which also have the benefit of being completely USB powered, and thus can power up and down with your monitor or TV.</p>
    <p><a href="https://www.amazon.com/dp/B01BKU7B7I/?tag=codihorr-20"><img alt="https://blog.codinghorror.com/content/images/2016/08/usb-led-strips.jpg" alt=""></a></p>
    <p>Of course, lighting conditions are a personal preference, and I'd never pitch bias lighting as a magic bullet. But there is science behind it, it's cheap and easy to try, and <b>I wish more people who regularly work in front of a computer knew about bias lighting</b>. If nothing else, I hope this post gets people to turn their LCD monitors down from factory brightness level infinity to something a tad more gentle on the old Mark I Eyeball.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2011-11-07T03:22:34.000Z</pubDate>
    <guid>https://blog.codinghorror.com/bias-lighting/</guid>
    </item>
    <item>
    <title>On Parenthood</title>
    <link>https://blog.codinghorror.com/on-parenthood/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Our son was <a href="http://blog.codinghorror.com/spawned-a-new-process/">born March 12th, 2009</a>. He's a little over two and a half years old. Now, I am the wussiest wuss to ever wuss up the joint, so take everything I'm about to say with a grain of salt – but <b>choosing to become a parent is the hardest thing I have ever done.</b> By far. Everything else pales in comparison.</p>
    <p>My feelings on this matter are complex. I made a graph. You know, for the children.</p>
    <img alt="Children" title="Children" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b0153928b12db970b-800wi.png">
    <p>That one percent makes all the difference.</p>
    <p>It's difficult to explain children to people who don't yet have children, because becoming a parent is an intensely personal experience. Every child is different. Every parent is different. Every culture has their own way of doing things. The experience is fundamentally different for every new parent in the world, yet children are the one universally shared thing that binds our giant collective chain letter of human beings together, regardless of nationality and language. <i>How do you explain the unexplainable?</i></p>
    <p>Well, having children changes you. Jonathan Coulton likens it to <a href="http://www.jonathancoulton.com/2006/08/18/thing-a-week-46-you-ruined-everything/">becoming a vampire</a>.</p>
    <blockquote>
    <p>I was having a conversation with a friend who had recently become a parent, and she reminded me of something I had forgotten about since my daughter was born. She was describing this what-have-I-done feeling – I just got everything perfect in my life, and then I went and messed it all up by having a baby. I don’t feel that way anymore, but the thought certainly crossed my mind a few times at the beginning. Eventually you just fall in love and forget about everything else, but it’s not a very comfortable transition. <b>I compare the process to becoming a vampire, your old self dies in a sad and painful way, but then you come out the other side with immortality, super strength and a taste for human blood.</b> At least that’s how it was for me. At any rate, it’s complicated.</p>
    </blockquote>
    <p>Maybe tongue in cheek, but not that far from the truth, honestly. Your children, they ruin everything in the nicest way.</p>
    <iframe width="100%" height="200" scrolling="no" frameborder="no" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/169186312&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;visual=true"></iframe>
    <p>Before Henry was born, I remembered Scott Hanselman writing <a href="http://www.hanselman.com/blog/zissixmonthsold.aspx">this odd blurb about being a parent</a>:</p>
    <blockquote>
    <p>You think you love you wife when you marry her. Then you have a baby and you realize you'd throw your <s>wife</s> yourself under a bus to save your baby. You can't love something more.</p>
    </blockquote>
    <p>Nuts to that, I thought. Hanselman's crazy. Well, <i>obviously</i> he doesn't love his wife as much as I love mine. <i>Sniff.</i> Babies, whatever, sure, they're super cute on calendars, just like puppies and kittens. Then I had a baby. And by God, he was right. I wouldn't just throw myself under a bus for my baby, I'd happily throw my wife under that bus too – without the slightest hesitation. What the hell just happened to me?</p>
    <p>As an adult, you may think you've roughly mapped the continent of love and relationships. You've loved your parents, a few of your friends, eventually a significant other. You have some tentative cartography to work with from your explorations. You form ideas about what love is, its borders and boundaries. Then you have a child, look up to the sky, and suddenly understand that those bright dots in the sky are whole other galaxies.</p>
    <p>You can't possibly know the enormity of the feelings you will have for your children. It is <i>absolutely fucking terrifying.</i></p>
    <p>When I am holding Henry and I tickle him, I can feel him laughing all the way to his toes. And I realize, my God, <i>I had forgotten</i>, I had completely forgotten how unbelievably, inexplicably wonderful it is that any of us exist at all. Here I am with this tiny, warm body so close to me, breathing so fast he can barely catch up, sharing his newfound joy of <i>simply being alive</i> with me. The sublime joy of this moment, and all the other milestones – the first smile, the first laugh, the first "dada" or "mama", the first kiss, the first time you hold hands. The highs are so incredibly high that you'll get vertigo and wonder if you can ever reach that feeling again. But you peak ever higher and higher, with dizzying regularity. Being a new parent is both terrifying and exhilarating, a constant rollercoaster of extreme highs and lows.</p>
    <p>It's also a history lesson. The first four years of your life. Do you remember them? What's your earliest memory? It is <i>fascinating</i> watching your child claw their way up the developmental ladder from baby to toddler to child. All this stuff we take for granted, but your baby will painstakingly work their way through trial and error: eating, moving, walking, talking. Arms and legs, how the hell do they work? Turns out, we human beings are kind of amazing animals. There's no better way to understand just <i>how</i> amazing humans are than the front row seat a child gives you to observe it all unfold from scratch each and every day, from literal square zero. <b>Children give the first four years of your life back to you.</b></p>
    <p>I wasn't sure how to explain meeting new people to Henry, so I decided to just tell him we've met a new "friend" every time. Now, understand that this is not <i>at all</i> the way I view the world. I'm extremely wary of strangers, and of new people in general with their agendas and biases and opinions. I've been burned too many times. But Henry is open to every person he meets by default. Each new person is worth greeting, worth meeting as a new experience, as a fellow <i>human being</i>. Henry taught me, without even trying to, that I've been doing it all wrong. I realized that I'm afraid of other people, and it's only my <i>own</i> fear preventing me from opening up, even a little, to new people that I meet. I really should view every new person I meet as a potential friend. I'm not quite there yet; it's still a work in progress. But with Henry's help, I think I can. I had absolutely no idea my child would end up teaching me as much as I'm teaching him.</p>
    <p>Having a child is a lot like running a marathon. An incredible challenge, but a worthwhile and transformative experience. It leaves you feeling like you truly accomplished something for all that effort. After all, you've created something kind of amazing: <a href="http://www.imdb.com/title/tt0335266/quotes?qt=qt0300021">a person</a>.</p>
    <video poster="/content/images/2015/09/lost-in-translation-children-poster.jpg" width="100%" preload="none" controls>
    <source src="http://discourse-cdn.codinghorror.com/uploads/default/original/3X/1/8/18b208b11cd4cd2d6d53e83bfffa1d4f02b0fc80.mp4">
    </source></video>
    <p><img https: alt=""></p>
    <blockquote>
    <p>Bob: It gets a whole lot more complicated when you have kids.</p>
    <p>Charlotte: It's scary.</p>
    <p>Bob: The most terrifying day of your life is the day the first one is born.</p>
    <p>Charlotte: Nobody ever tells you that.</p>
    <p>Bob: Your life, as you know it... is gone. Never to return. But they learn how to walk, and they learn how to talk, and you want to be with them. And <b>they turn out to be the most delightful people you will ever meet in your life.</b></p>
    </blockquote>
    <p>It's scary and it's wonderful in equal measure. So why not have another baby? Or so we thought.</p>
    <img alt="Atwood-babbies" title="Atwood-babbies" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b0162fbe0aa94970d-800wi.jpg" border="0">
    <p>Turns out, <b>we're having <i>two</i> babies.</b> Both are girls, due in mid-February 2012.</p>
    <p>I've been told several times that you should never be crazy enough to let the children outnumber you. I hope to ultimately win the War of the Lady Babies, but when it comes to children, I think all anyone can ever realistically hope for is a peaceful surrender.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2011-10-24T03:23:38.000Z</pubDate>
    <guid>https://blog.codinghorror.com/on-parenthood/</guid>
    </item>
    <item>
    <title>Multiple Video Cards</title>
    <link>https://blog.codinghorror.com/multiple-video-cards/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    Almost nobody should do what I am about to describe – that is, install and use more than one video card. Nobody really <i>needs</i> that much graphics performance. It's also technically complex and a little expensive. But sometimes you gotta say <b>to hell with rationality and embrace the overkill</b>.
    </p>
    <p>
    Why? <a href="http://www.amazon.com/gp/search?ie=UTF8&amp;keywords=battlefield%203&amp;tag=codihorr-20&amp;index=videogames&amp;linkCode=ur2&amp;camp=1789&amp;creative=9325">Battlefield 3</a>, <i>that's</i> why.
    </p>
    <p>
    <a href="http://www.amazon.com/gp/search?ie=UTF8&amp;keywords=battlefield%203&amp;tag=codihorr-20&amp;index=videogames&amp;linkCode=ur2&amp;camp=1789&amp;creative=9325"><img alt="Battlefield-3-caspian" title="Battlefield-3-caspian" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b01543633c60e970c-800wi.jpg" border="0"></a>
    </p>
    <p>
    I've been a fan of the series from the earliest days of Battlefield 1942, and I lost hundreds of hours to Battlefield 2 and Battlefield: Bad Company 2. I even wrote about <a href="http://www.codinghorror.com/blog/2005/06/battlefield-2-tips.html">the original Battlefield 2 demo</a> on this very blog six years ago. So, yeah, I'm a superfan from way back. As much as I was anticipating Battlefield 3, I have to say the open beta convinced me it is everything I always wanted, and more. Glorious sandbox warfare on an enormous, next-generation <i>destructible</i> battlefield is a beautiful thing.
    </p>
    <p>
    Since PC was the lead platform for Battlefield 3, it is the rare current game that isn't dumbed down to PS3 and Xbox 360 console levels; it is a truly next-generation engine designed to scale over the next few years of PC performance.
    </p>
    <p>
    <img class="asset  asset-image at-xid-6a0120a85dcdae970b014e8c541135970d image-full" alt="Battlefield-3-graphics-levels" title="Battlefield-3-graphics-levels" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b014e8c541135970d-800wi.jpg" border="0">
    </p>
    <p>
    This also means <b>it's going to be rough on current PCs</b>; at a minimum, you'll need a fast dual core CPU, and a modern video card with 512mb or more video memory. It only goes up from there. Way up. Like most games, Battlefield 3 is far more limited by video card performance than CPU performance. This is normally the place where I'd trot out my standard advice urging you to buy one of the new hotness video cards released this holiday season. But unfortunately due to difficulties with the 40nm to 28nm process transition for ATI and NVIDIA, there <i>aren't</i> any new hotness video cards this year.
    </p>
    <p>
    So what's a poor performance addicted Battlefield superfan to do? <b>Double down and add another video card for more performance, that's what.</b> Both ATI and NVIDIA have offered mature multi-GPU support for a few years now, and they've mostly settled on a simple Alternate Frame Rendering (AFR) strategy where each video card alternates between frames to share the graphics rendering work.
    </p>
    <p>
    <img alt="Alternate-frame-rendering-diagram" title="Alternate-frame-rendering-diagram" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b015436346aad970c-800wi.png" border="0">
    </p>
    <p>
    The little arrow there is a bridge attachment that you place on both cards so they can synchronize their work. Yes, there is a bit of overhead, but it scales surprisingly well, producing not <i>quite</i> double the performance but often in the area of 1.8x or so. Certainly enough to make it worth your while. You can technically add up to four video cards in this manner, but as with multiple CPUs your best bang for the buck is adding that second one; the third, fourth, and beyond provide increasingly diminished returns.
    </p>
    <p>
    The good news is that the market crash in BitCoin GPU mining (if you don't know what this is, don't ask… please) means there is a glut of recent video cards up for sale on eBay right now. I have the same AMD Radeon HD 5870 that <a href="http://www.codinghorror.com/blog/2010/04/three-monitors-for-every-user.html">I've had since early 2010</a>. <b>I picked up another 5870 on eBay for a mere $170.</b> This is a great video card, well ahead of its time when it was originally released, and even now only 10% slower than the fastest video card AMD makes. I simply dropped the second card in my system and installed the bridge connector.
    </p>
    <p>
    <a href="http://www.codinghorror.com/blog/2011/07/building-a-pc-part-vii-rebooting.html"><img alt="Dual-radeon-gpus" title="Dual-radeon-gpus" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b01543633fb96970c-800wi.jpg" border="0"></a>
    </p>
    <p>
    You may recognize this computer as a <a href="http://www.codinghorror.com/blog/2011/07/building-a-pc-part-vii-rebooting.html">further tweaked version of my last build</a> (which is still awesome, by the way, and highly recommended). Anyway, for this to work, you'll need to establish a few things about your computer before rushing out and buying that second video card.
    </p>
    <p>
    </p>
    <ol>
    <li>A motherboard that has two video card capable PCI Express slots. Most aftermarket and enthusiast motherboards have this, but if you bought a system from say, Dell, it's less clear.
    </li>
    <li>A power supply with enough headroom to drive two video cards. Warning: modern gaming video cards are major power hogs -- they <i>easily</i> pull 100 to 200 watts under load. <i>Each.</i> Sometimes more than that! Be absolutely sure you have a quality power supply rated for a minimum of 600 watts. Each video card will have two power connectors, either 6 or 8 pin. Check that your power supply offers enough connectors, or that you have converters on hand.
    </li>
    <li>A case with sufficient airflow to dissipate the 400 to 800 watts of CPU and GPU heat that you'll be generating. Understand that this is <i>serious</i> amounts of heat while gaming, way more than even the highest of high end PCs would normally produce. Yes, it is possible to do this quietly (at least in the typical idle case), but it will take some engineering work.
    </li>
    </ol>
    <p>
    Beyond <i>that</i>, I found there are some additional peculiarities of multi-GPU systems that you need to be aware of.
    </p>
    <ul>
    <li>Make sure that the two cards you use are not only of the exact same family (minor vendor differences are OK) but also <b>have <i>identical</i> clock and memory speeds</b>. It's not supposed to matter, but I found that it did and I had to flash one of my cards to set it to default speeds to match the other card.
    </li>
    <li>Do not attempt to overclock your system while getting the multiple GPUs up and running. In particular, be <i>extremely</i> careful not to mess with the bus speed as timings are critical when dealing with two GPUs on the PCI Express bus synchronizing their work. <a href="http://superuser.com/questions/343115/ati-crossfire-instability-and-horizontal-bands">Trust me on this one</a>.
    </li>
    <li>Do a clean video driver remove and install the very very latest video drivers after putting the second card in. I recommend <a href="http://phyxion.net/item/driver-sweeper.html">Driver Sweeper</a> to remove any traces of your old drivers before rebooting.
    </li>
    </ul>
    <p>
    Don't say I didn't warn you about this stuff, because I said it would be technically complex in the first paragraph. <b>But after a (lot) of teething pains, I'm happy to report that multiple GPUs really does work as advertised.</b> I can crank up games to the absolute maximum settings on my 27" monitor and get nearly constant 60 frames per second. As you can see in the below example, we go from 44 fps to 77 fps in Battlefield: Bad Company 2.
    </p>
    <p>
    <a href="http://www.anandtech.com/show/4061/amds-radeon-hd-6970-radeon-hd-6950/18"><img alt="Battlefield-bad-company-2-gpu-scaling" title="Battlefield-bad-company-2-gpu-scaling" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b015392604c9a970b-800wi.png" border="0"></a>
    </p>
    <p>
    Now, Battlefield 3 (beta) is <a href="http://www.pcgameshardware.com/aid,847209/Battlefield-3-Beta-18-Radeon-and-Geforce-cards-SLI-und-Crossfire-benchmarked/Practice/">so very bleeding edge</a> that I can't quite get it to max settings <i>even with two GPUs in play</i>. But I can now run very high settings, much higher than I could with a single GPU.
    </p>
    <p>
    To be honest, it's unlikely I will continue with multiple GPUs through 2012 when the next-generation video cards are released. <b>With every new video card introduction, you're <i>supposed</i> to get about the same performance in the new card as you did with two previous generation video cards working together.</b> So at best this is a sort of sneak preview, cheating time by pretending we have a next-generation video card today. There are obvious efficiencies involved in performing that parallelization on a single GPU die rather than through two distinct video cards sitting on the PCI bus.
    </p>
    <p>
    There's also the issue of <a href="http://techreport.com/articles.x/21516">micro-stuttering</a>. I personally haven't found that to be a big problem unless you're pushing the graphics settings beyond what even two cards can reliably deliver. But if the frame rate dips low enough, the overhead of synchronization between the cards can interfere with overall frame rate in a perceptible way.
    </p>
    <p>
    <b>A single fast video card is <i>always</i> going to be the simpler, easier, and cheaper route.</b> But multiple video cards sure is nifty tech in its own right, and it wasn't too expensive to get started with at $170. In the meantime, I'm having a ball playing with it, and I am dying to test my configuration with the <a href="http://www.amazon.com/gp/search?ie=UTF8&amp;keywords=battlefield%203&amp;tag=codihorr-20&amp;index=videogames&amp;linkCode=ur2&amp;camp=1789&amp;creative=9325">final release of Battlefield 3 on October 25th</a>. Join me if you like!
    </p>
    <p>
    </p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <p>
    <!--kg-card-end: markdown-->
                </p></content>
    <pubDate>2011-10-17T16:04:25.000Z</pubDate>
    <guid>https://blog.codinghorror.com/multiple-video-cards/</guid>
    </item>
    <item>
    <title>Serving at the Pleasure of the King</title>
    <link>https://blog.codinghorror.com/serving-at-the-pleasure-of-the-king/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I enjoy my iPhone tremendously; I think it's the most important product Apple has ever created and <a href="http://www.codinghorror.com/blog/2009/06/the-iphone-software-revolution.html">one they were born to make</a>. As a <b>consumer</b> who has waited far too long for the phone industry to get the swift kick in the ass it so richly deserved, I'm entirely on Apple's side here.</p>
    <p>But as a <b>software developer</b>, I am deeply ambivalent about an Apple dominated future. Apple isn't shy about cultivating the experience around their new iOS products and the App Store. There are unusually strict, often mysterious <a href="http://developer.apple.com/appstore/guidelines.html">rules around what software developers can and cannot do</a> — at least if they want entry into the App Store. And once you're in, the rules can and will change at any time. Apple has cracked down several times already:</p>
    <ul>
    <li>
    <a href="http://money.cnn.com/2011/07/25/technology/apple_kindle/index.htm">Prohibiting applications that include external mechanisms for purchases</a>
    </li>
    <li>
    <a href="http://chillifresh.com/2010/02/20/5000-apps-banned-the-new-rules/">Prohibiting applications that have sexual connotations or innuendo</a>
    </li>
    <li>
    <a href="http://www.wired.co.uk/news/archive/2011-05/3/smuggle-truck">Prohibiting applications with controversial satire</a>
    </li>
    <li>
    <a href="http://www.wired.co.uk/news/archive/2009-05/12/apple-rejects-iphone-bittorrent-app">Prohibiting applications that can potentially be used for unauthorized downloads</a>
    </li>
    </ul>
    <p>The developers involved are contractually prevented from even <i>discussing</i> specifically what happened to them by the terms of the app store. Those frustrating, inconsistent, opaque App Store experiences led developers to coin parodies such as <a href="http://yourhead.tumblr.com/post/3320228508/apples-three-laws-of-developers">Apple's Three Laws of Developers</a>.</p>
    <blockquote>
    <ul>
    <li>A developer may not injure Apple or, through inaction, allow Apple to come to harm.</li>
    <li>A developer must obey any orders given to it by Apple, except where such orders would conflict with the First Law.</li>
    <li>A developer must protect its own existence as long as such protection does not conflict with the First or Second Law.</li>
    </ul>
    </blockquote>
    <p>It is absolutely clear who is in charge when you submit an application to the App Store. <b>Apple developers serve at the pleasure of the king</b>.</p>
    <img class="asset  asset-image at-xid-6a0120a85dcdae970b014e8c444b11970d" alt="Louis-xiv-painting" title="Louis-xiv-painting" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b014e8c444b11970d-800wi.jpg" border="0">
    <p>In Apple's defense, this is done in the name of protecting the consumers from malicious, slimy, or defective applications. Sort of like <a href="http://en.wikipedia.org/wiki/Nintendo#License_guidelines">Nintendo's Seal of Approval</a>, I guess.</p>
    <img alt="https://blog.codinghorror.com/content/images/2015/08/oldnintendoseal.png" width="320" height="320" alt="This seal is your assurance that Nintendo has approved and guaranteed the quality of this product">
    <p>The court of the king is a lucrative place to be, but equally dangerous. While upgrading my iPhone to iOS 5 – an <i>excellent</i> upgrade, by the way – I was surprised to discover <a href="http://www.apple.com/ios/features.html#safari">the following blurb in the feature notes</a>:</p>
    <blockquote>
    <p>Safari Reader displays web articles sans ads or clutter so you can read without distractions. Reading List lets you save interesting articles to peruse later [like the popular Instapaper application], while iCloud keeps your list updated across all your devices.</p>
    </blockquote>
    <p>Apple has since changed the page, but at the time I read it, there was a <i>direct linked reference</i> to <a href="http://www.instapaper.com/">Instapaper</a>, the popular "save this webpage to read later" application which Reading List is a clone of. I distinctly remember this mention, because I was shocked that they would be so open and overt about replacing a beloved third-party application. Perhaps it made Apple uncomfortable too; maybe that's why they pulled the Instapaper text and link.</p>
    <p><b>If Microsoft added a feature to Windows that duplicated a popular application's functionality, developers would be screaming bloody murder</b> and rioting in the, er, blogs and web forums. But in the Mac world, <a href="http://www.marco.org/2011/06/06/safari-reader-and-instapaper">if the king deems it necessary, then so it must be</a>.</p>
    <blockquote>
    <p>When iOS 5 and Lion ship, Apple will show a much larger percentage of iOS-device owners that saving web pages to read later is a useful workflow and can dramatically improve the way they read.</p>
    <p>If Reading List gets widely adopted and millions of people start saving pages for later reading, a portion of those people will be interested in upgrading to a dedicated, deluxe app and service to serve their needs better. And they’ll quickly find Instapaper in the App Store.</p>
    </blockquote>
    <p>I've met Marco Arment, the developer of Instapaper, and I like Marco. He's even <a href="http://blog.stackoverflow.com/2011/06/se-podcast-08/">been a guest on the Stack Exchange podcast</a>. This is a nice, optimistic interpretation, but the <a href="http://twitter.com/#!/marcoarment/status/77796293510037504">reality is a little scarier</a>. I'm struggling to understand why anyone would buy Instapaper when they can click a button in Safari and have that web page delivered to any of their Macs or iOS devices for later reading via iCloud.</p>
    <p>Ah, but wait – what about offline support? Yes, that's something only Instapaper can deliver! <a href="http://www.marco.org/2011/10/13/ios5-caches-cleaning">Or can it?</a></p>
    <blockquote>
    <p>A common scenario: an Instapaper customer is stocking up an iPad for a long flight. She syncs a bunch of movies and podcasts, downloads some magazines, and buys a few new games, leaving very little free space. Right before boarding, she remembers to download the newest issue of The Economist. This causes free space to fall below the threshold that triggers the [new iOS 5 space] cleaner, which — in the background, unbeknownst to her — deletes everything that was saved in Instapaper. Later in the flight, with no internet connectivity, she goes to launch Instapaper and finds it completely empty.</p>
    </blockquote>
    <p>That's the problem with kings, you see. <b>Their rule is absolute law, but they can be capricious, erratic, and impulsive.</b> If you're lucky enough to live under the rule of a fair and generous king, then you'll do well. But historically speaking, monarchies have proven to be … unreliable.</p>
    <p><a href="http://www.bernardpras.fr/"><img class="asset  asset-image at-xid-6a0120a85dcdae970b015436242acc970c" alt="Louis-xiv-convenience-store" title="Louis-xiv-convenience-store" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b015436242acc970c-800wi.jpg" border="0"></a></p>
    <p>I tend to agree with Marco that this is, in the big scheme of things, a minor technical problem. A private application cache not subject to iCloud syncing and space limitations would fix it. But it speaks volumes that Marco – a dedicated subject of the king – apparently had no idea this change was coming until it was on top of him. It's negatively impacting his Instapaper business and his customers. It's also concerning that this issue wasn't resolved or at least raised as a serious concern during the lengthy iOS 5 beta. Perhaps Apple's legendary secrecy is to blame. I honestly don't know.</p>
    <p>As a consumer, I like that Apple is perfectly willing to throw its software developers under a bus to protect me (or, more cynically, Apple itself). But as a software developer, I'm not sure I can cope with that and I am unlikely to ever develop anything for an iOS device as a result. If you choose to deliver software in the Apple ecosystem, this is simply the tradeoff you've chosen to make. <b>Apple developers serve at the pleasure of the king</b>.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2011-10-15T02:58:47.000Z</pubDate>
    <guid>https://blog.codinghorror.com/serving-at-the-pleasure-of-the-king/</guid>
    </item>
    <item>
    <title>The Gamification</title>
    <link>https://blog.codinghorror.com/the-gamification/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>When Joel Spolsky and I set out to design the <a href="http://stackexchange.com">Stack Exchange</a> Q&amp;A engine in 2008 – then known as Stack Overflow – we borrowed liberally and unapologetically from any online system that we felt worked. Some of our notable influences included:</p>
    <ul>
    <li>Reddit and Digg voting</li>
    <li>Xbox 360 achievements</li>
    <li>Wikipedia editing</li>
    <li>eBay karma</li>
    <li>Blogs and blog comments</li>
    <li>Classic web bulletin boards</li>
    </ul>
    <p>All these elements were folded up into the Stack Exchange Q&amp;A engine, so that we might help people create useful artifacts on the internet while learning with and among their peers. You know the old adage that <i>good artists copy, great artists steal?</i> That quote is <a href="http://www.businessofdesignonline.com/picasso-good-artists-copy/">impossible to source</a>, but it means we were <i>repurposing</i> these elements we liked.</p>
    <blockquote>
    <p>So, what do Picasso and T.S. Eliot mean? They say, in the briefest of terms: <b>take old work to a new place</b>. Steal the Google site, strip down what works (fast load, nonexistent graphics, small quirky changes that delight) and use the parts on your own site. Look at the curve of a Coke Bottle and create a beautiful landscape painting with it. Take the hairline pinstriping on the side of somebody’s car, reimagine it on your print job. Find inspiration in the world you live in, where nothing is truly new so that everything has the potential to be innovative.</p>
    </blockquote>
    <p>Unfortunately, the elements we liked were often buried in mounds of stuff that we ... sort of hated. So extracting just the good parts and removing the rest was part of the mission. If you're lucky enough to have <a href="http://www.codinghorror.com/blog/2009/03/whos-your-arch-enemy.html">a convenient villain to position yourself against</a>, that might be all you need.</p>
    <p>Traditional web bulletin board systems have a design that was apparently permanently frozen in place circa 2001 along with Windows XP. Consider this typical forum thread.</p>
    <img alt="Web-forum-thread-screenshot" title="Web-forum-thread-screenshot" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b014e8c336227970d-800wi.png" border="0">
    <p>Here is the <i>actual information</i> from that forum thread.</p>
    <img alt="Web-forum-thread-information-screenshot" title="Web-forum-thread-information-screenshot" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b0153923f2fd2970b-800wi.png" border="0">
    <p>Based on the original size of those screenshots, only <b>18 percent</b> of that forum thread page is content. The other 82 percent is lost to signatures, avatars, UI doohickeys, and other web forum frippery that has somehow become accepted as "the way things are done". I regularly participate in several expert niche bulletin boards of various types today, and they're all built the same way. Nobody complains.</p>
    <p><i>But they should.</i></p>
    <p>This is the status quo that we're up against. Yes, we fixed it for programmers with Stack Overflow, but why stop there? We want to liberate all the brilliant experts <b>stuck in these horrible Soviet-era concrete block housing forums</b> all over the web. We'd like to introduce them to the focused, no-nonsense <a href="http://stackexchange.com/sites">Stack Exchange Way</a>, a beautiful silo of pure Q&amp;A signal without all the associated web forum gunk.</p>
    <p>There's only one teeny-tiny obstacle in our way. As a great programmer I worked with once said:</p>
    <blockquote>
    <p>It's the damn users. They've ruined every program I've ever created.</p>
    </blockquote>
    <p>Every web forum is the way it is <i>because users wanted it that way</i>. Yes, the design of the forum software certainly influences behavior, but the classic 2001-era web forum paradigm assumed that what users wanted made sense for the rest of the larger internet. As it turns out, <a href="http://www.codinghorror.com/blog/2005/05/a-group-is-its-own-worst-enemy.html">groups are their own worst enemy</a>. What groups want, and what the rest of the world needs, are often two very different things. Random discussion is fine for entertainment, but it's not particularly useful, nor does it tend to generate the kind of artifacts that will be relevant a few years from now like Wikipedia does. So then the problem becomes <b>how do you encourage groups to do what's best for the <i>world</i></b> rather than their own specific, selfish needs?</p>
    <p>When I looked at this problem, I felt I knew the answer. But there wasn't a word for it in 2008. Now there is: <a href="http://en.wikipedia.org/wiki/Gamification">Gamification</a>.</p>
    <blockquote>
    <p><b>Gamification is the use of game design techniques and mechanics to solve problems and engage audiences.</b> […] Gamification works by … taking advantage of humans' psychological predisposition to engage in gaming. The technique can encourage people to perform chores that they ordinarily consider boring, such as completing surveys, shopping, or reading web sites.</p>
    </blockquote>
    <p>I had no idea this Wikipedia article even existed until a few months ago, but we are featured prominently in it. It is true that all our stolen ideas about reputation systems, achievements, identity, and vote scoring are in place specifically to encourage the adoption of the brave new no-nonsense, all-signal Stack Exchange Q&amp;A model. Without those incentive systems, when left to their own devices, what you get is … well, every forum ever created. Broken by design.</p>
    <p>Yes, <a href="http://www.codinghorror.com/blog/2011/02/how-to-write-without-writing.html">we have ulterior motives</a>, but let me explain why I think gaming elements are not tacked on to the Stack Exchange Q&amp;A engine, but a natural and essential element of the design from day one.</p>
    <h2>Learning is (supposed to be) fun</h2>
    <p>I've had this concept in my head way before the web emerged, long before anyone coined the term "Gamification" in 2010. In fact, I'd trace my inspiration for this all the way back to 1983.</p>
    <p><a href="http://www.panic.com/~stevenf/beagle/"><img alt="Beagle Brothers: Our programs are FUN to use. Our instructions are CLEAR and complete." height="256" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b0120a85dde3f970b-pi.gif" width="333"></a></p>
    <p>For programmers, everything we know is pretty much guaranteed to be obsolete in 10 years if we're lucky, and 5 years if we aren't. It's changing all the time. The field of programming is almost by definition <a href="http://www.codinghorror.com/blog/2008/02/the-years-of-experience-myth.html">one of constant learning</a>. Programming <a href="http://www.codinghorror.com/blog/2007/10/remember-this-stuff-is-supposed-to-be-fun.html">is supposed to be fun</a> – and it is, if you're doing it right. Nobody taught me that better than the Beagle Bros on my Apple II. Why can't learning in every <i>other</i> subject matter be just as enjoyable?</p>
    <h2>Games are learning aids</h2>
    <p>There's a long, rich history of <a href="http://www.codinghorror.com/blog/2006/08/game-player-game-programmer.html">programmers as gamers</a>. Oftentimes, the whole reason we became programmers in the first place is because we wanted to move beyond being a mere player and <i>change</i> the game, control it, modify its parameters, maybe even create our own games.</p>
    <img alt="Basic-computer-games" title="Basic-computer-games" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b015436136381970c-800wi.jpg" border="0">
    <p>We used games to learn how to program. To a programmer, a game is <a href="http://www.amazon.com/Computer-gamesmanship-complete-structuring-intelligent/dp/0671495321">a perfectly natural introduction to real programming problems</a>. I'd posit that <i>any</i> field can use games as an introduction to the subject matter – and as a reinforcement to learning.</p>
    <h2>Games help people work toward a goal</h2>
    <p>It's something of a revelation to me that solid game design can defeat the <a href="http://www.penny-arcade.com/comic/2004/3/19/">Greater Internet F**kwad Theory</a>. Two great examples of this are Counter-Strike and Team Fortress. Both games are more than ten years old, but they're still actively being played right now, by tens of thousands of people, all anonymous … and playing as cohesive teams!</p>
    <p>The game's objectives and rules are all cleverly constructed to make working <i>together</i> the most effective way to win. None of these players know each other; the design of the game forces players to work together, whether they want to or not. It is quite literally impossible to win as a single lone wolf.</p>
    <img alt="Counter-strike-italy-start" title="Counter-strike-italy-start" src="https://blog.codinghorror.com/content/images/uploads/2011/10/6a0120a85dcdae970b015436138f0e970c-800wi.jpg" border="0">
    <p>I haven't ever quite come out and said it this way, but … I played a lot of Counter-Strike from 1998 to 2001, and <b>Stack Overflow is in many ways my personal Counter-Strike</b>. It is a programmer in Brazil learning alongside a programmer in New Jersey. Not because they're friends – but because they both love programming. The <i>design</i> of Stack Overflow makes helping your fellow programmers the most effective way to "win" and advance the craft of software development together.</p>
    <p>And I say we all win when that happens, no matter which profession we're talking about.</p>
    <p>I feel a little responsible for "Gamification", since we're often cited as an example (even, much to my chagrin, on Wikipedia). I wanted to clear up exactly why we made those choices, and specifically that <b>all the gaming elements are there in service of a higher purpose</b>. I play the <a href="http://stackexchange.com/sites">Stack Exchange game</a> happily alongside everyone else, collecting reputation and badges and rank and upvotes, and I am proud to do so, because I believe it ultimately helps me become more knowledgeable and a better communicator while also improving the very fabric of the web for everyone. I hope you feel the same way.</p>
    <p>(If you'd like to learn more about the current state of Gamification, I highly recommend <a href="http://codingconduct.cc/">Sebastian Deterding's page</a>, and specifically his <a href="http://www.slideshare.net/dings/meaningful-play-getting-gamification-right">Meaningful Play: Getting Gamification Right</a> presentation.)</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2011-10-12T08:22:26.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-gamification/</guid>
    </item>
    <item>
    <title>Cutting the Gordian Knot of Web Identity</title>
    <link>https://blog.codinghorror.com/cutting-the-gordian-knot-of-web-identity/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>Perhaps you've seen <a href="http://xkcd.com/936/">this recent XKCD</a> about password choice?</p>
    <p><a href="http://xkcd.com/936/"><img alt="https://blog.codinghorror.com/content/images/uploads/2011/09/060UH.png" width="630" height="512" alt="To anyone who understands information theory and security and is in an infuriating argument with someone who does not (possibly involving mixed case), I sincerely apologize." title="To anyone who understands information theory and security and is in an infuriating argument with someone who does not (possibly involving mixed case), I sincerely apologize."></a></p>
    <p>It prompted a spirited debate – even <a href="http://security.stackexchange.com/questions/6095/xkcd-936-short-complex-password-or-long-dictionary-passphrase">on our very own Security Stack Exchange</a> – about the merits of the argument presented there. Now, to be clear, I'm <i>completely</i> on Randall's side here; I'm all for passphrases over passwords, and <a href="http://www.codinghorror.com/blog/2005/07/passwords-vs-pass-phrases.html">I have been</a> for <a href="http://www.codinghorror.com/blog/2005/08/passphrase-evangelism.html">years</a>.</p>
    <p>But this is merely <b>one symptom of a much larger disease: identity on the internet</b>. Every time you touch a website that actually cares who the heck you are – and this is an increasingly large list of sites as the web matures – you have to, <i>sigh</i>, "log in". And logging in inevitably requires you to create a username and a password. Over and over and over and <i>over</i>. And, oh by the way, you'll be logging in again each and every time on every browser and every computer and every device you own. It's a <i>great</i> system. And by "great" I mean fracking terrible.</p>
    <p>This isn't just tedious busywork for us, the poor web users, it's also downright <i>dangerous</i> as I explained in <a href="http://www.codinghorror.com/blog/2010/12/the-dirty-truth-about-web-passwords.html">The Dirty Truth About Web Passwords</a>. It's a near-impossible problem, an intractable <a href="http://en.wikipedia.org/wiki/Gordian_Knot">Gordian Knot</a>. So I'm going to answer one comic with another.</p>
    <p><a href="http://en.wikiquote.org/wiki/Watchmen#Adrian_Veidt.2FOzymandias"><img alt="Watchmen-gordian-knot" title="Watchmen-gordian-knot" src="https://blog.codinghorror.com/content/images/uploads/2011/09/6a0120a85dcdae970b017616b267ca970c-pi.jpg" width="253" height="400"></a></p>
    <p>The problem is not choosing <i>better</i> passwords for the dozens or hundreds of web sites we have to log in. The problem is <i>passwords</i>.</p>
    <p>Thus, the only real cure to the disease of identity on the web is to <b><i>get rid of passwords altogether</i></b>.</p>
    <p>Yes, you read that correctly. But "Jeff", you might say, "how can we <i>possibly</i> log in to websites without our beloved, mile-long list of site-specific usernames and passwords?" I'm so glad you asked! Try to make time in your busy schedule of account and password creation to read a few more paragraphs into this post and I'll attempt to explain my crazy scheme.</p>
    <p>We could use <a href="http://www.codinghorror.com/blog/2010/11/your-internet-drivers-license.html">our internet driver's license</a> and log in to a particular website using our existing Google, Facebook, Twitter, or OpenID credentials. This works, but it assumes a lot; is the website <i>enlightened</i> enough to accept third party logins, or is there a political agenda (or delusions of grandeur) preventing them from recognizing any form of identity other than <i>their own</i>? To be fair, accepting third party identity is <i>hard</i> and undeniably adds complexity. There are a million ways to get it wrong, and only a handful of sites that get it right. I like to think <a href="http://stackexchange.com/sites">Stack Exchange</a> is one of the websites that gets this right, but I'll fully acknowledge that it is challenging to get there. Unfortunately, the path of least resistance for web identity leads inexorably to one sad, depressing, dysfunctional place:</p>
    <img alt="Username-password-input" title="Username-password-input" src="https://blog.codinghorror.com/content/images/uploads/2011/09/6a0120a85dcdae970b0153915bb0ef970b-800wi.png" border="0">
    <p>Yep. Get used to it. Username. Password. For every single website you'll ever visit. On every single device you'll ever own. Forever. Until the end of time. <i>Oh God.</i></p>
    <p>Lately I've begun to hope there might be a viable solution, even outside the third-party logins I've championed for the last 3 years. A way of absolving users of username and password selection. Like Alexander's solution to the Gordian Knot, it might be a bit scary in its … absolutism. But anything has to be better than the unspeakable terror of a million logins on a million different websites on a million different devices. Right? <i>Right?</i></p>
    <p><font color="maroon">(Warning, Extreme Hand Waviness Ahead: while I <i>do</i> honestly believe the techniques described below would work, I am glossing over many of the technical implementation details. This is absolutely <i>not</i> intended to be a spec but an "I Have a Dream" outline. Feel free to help me clarify and expand on the necessary details by blogging a more technical plan for this in any form you like.)</font></p>
    <p>Imagine, if you will, visiting a new website and deciding you'd like to create an account there. You click the "Create New Account" link and then …</p>
    <ul>
    <li>The website presents a secure account creation page decorated with specific <code>meta</code> tags that indicate this page supports automated account creation with a standard(ish) set of user info HTML form fields.
    </li>
    <li>The browser, seeing these <code>meta</code> tags in the page, <i>does not present the page to the user</i> but retrieves the user's standard information fields like name, email address, etcetera from some form of secure https cloud storage, and readies them. The browser will also <b>automatically select a completely random, cryptographically secure password for the new account</b>.
    </li>
    <li>The browser must, unfortunately, prompt the user with a confirm dialog containing a CAPTCHA at this point to ensure that the signup process isn't being scripted in any way, and that a real human being actually wants to create an account on this website. While we're there, we might as well confirm the identity data we're about to send to the website (though hopefully the defaults should suffice). Once confirmed, the user credentials and password will be sent to the site and stored securely in the cloud.
    </li>
    <li>The website redirects the newly created account to an appropriate page.
    </li>
    </ul>
    <p>There may be some more information that the browser (or the site) needs to ask the user for in there somewhere. But account creation is a one-time event, and in the typical case where you're signing up for some simple website, your preferred defaults should suffice. Caveats aside, look what we have wrought: <b>you clicked "Create New Account", completed a single captcha and clicked OK</b> – now you're logged in to your brand new account on any website.</p>
    <p>Once you <i>have</i> an account, it's even simpler. Imagine clicking the "Sign In" link, and then …</p>
    <ul>
    <li>The website presents a secure login page decorated with specific <code>meta</code> tags that indicate this page supports automated login with a standard set of username and password HTML form fields.
    </li>
    <li>The browser, seeing these <code>meta</code> tags in the page, <i>does not present the page to the user</i> but retrieves the user's credentials from some form of secure https cloud storage, and sends them to the site.
    </li>
    <li>The site receives the credentials via https, validates them, and returns a valid login cookie to the browser.
    </li>
    <li>The browser redirects the now logged-in user to the page they originally wanted to see as a logged in user.
    </li>
    </ul>
    <p>From the perspective of this weary citizen of the web, at least, a miracle just happened. <b>You clicked "Sign In", and you're <i>immediately</i> signed in</b> without having to look at a <i>single</i> stinking username and password field!</p>
    <p>Seems like magic, yes? Gotta be a catch, yes? Well, there is. Two catches, to be precise.</p>
    <ol>
    <li>
    <b>Web browsers will have to be rewritten to understand basic identity protocols.</b> I suppose it <i>could</i> be a browser plugin as well, but I'd rest a lot easier knowing basic identity protocols are officially "baked in" to the browser and supported by the Powers That Be, perhaps even as accepted W3C standards. And yes, you will need to log in to your browser at a minimum.
    </li>
    <li>
    <b>You have to trust "The Cloud" at least a little</b>. There has to be some trusted, secure location on the internet for all your usernames, passwords, and basic identity information to reside. Otherwise this scheme can't possibly work, because how would you log in from your (insert favorite device name here) if it has no access to the secret, hidden list of account information and automagically generated secure passwords created on your behalf?
    </li>
    </ol>
    <p>Identity is fundamental to the modern internet; more and more websites need to know something about <i>who you are</i> to work. The current status quo of thousands of websites with thousands of differing ideas about identity and passwords and account information is beyond broken. We want – no, we <i>demand</i> – that the browser understand and standardize identity the same way it does HTML and CSS. Maybe it's crazy, but <b>I dream of the day when I never need to see another password field in my browser ever again</b>.</p>
    <p>I hope you can too.</p>
    <table>
    <tr><td class="welovecodinghorror">
    [advertisement] What's your next career move? <a href="http://careers.stackoverflow.com/" rel="nofollow">Stack Overflow Careers</a> has the best job listings from great companies, whether you're looking for opportunities at a startup or Fortune 500. You can search our <a href="http://careers.stackoverflow.com/jobs" rel="nofollow">job listings</a> or <a href="http://careers.stackoverflow.com/cv" rel="nofollow">create a profile</a> and let employers find you.
    </td></tr>
    </table>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2011-09-06T02:51:23.000Z</pubDate>
    <guid>https://blog.codinghorror.com/cutting-the-gordian-knot-of-web-identity/</guid>
    </item>
    <item>
    <title>Nobody's Going to Help You, and That's Awesome</title>
    <link>https://blog.codinghorror.com/nobodys-going-to-help-you-and-thats-awesome/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I'm not into <a href="http://en.wikipedia.org/wiki/Self-help">self-help</a>. I don't buy self-help books, I don't read productivity blogs, and I certainly don't subscribe to <a href="http://www.stevepavlina.com/" rel="nofollow">self-proclaimed self-help guru</a> newsletters. Reading someone else's advice on the rather generic concept of <i>helping yourself</i> always struck me as a particularly misguided idea.</p>
    <p>Apparently I'm not the only person to <a href="http://commonsenseatheism.com/?p=12651">reach this conclusion</a>, either.</p>
    <blockquote>
    <p>I spent two years reading all the self-help books I could find. As of a year ago, I had read 340 self-help books. Because I’m insane.</p>
    <p>My conclusion from all that reading?</p>
    <p><b>95% of self-help books are complete bullshit.</b></p>
    </blockquote>
    <p>To be clear, I am all for <i>self-improvement</i>. Reading books, blogs, and newsletters by people who have accomplished great things is a fine way to research your own path in life. But these people, however famous and important they may be, <a href="http://sivers.org/up2you">are not going to help you</a>.</p>
    <blockquote>
    <p>Unfortunately that's not the answer he wanted. To him, my answer [that nobody was going to help him become successful] was really discouraging. To me, if I was receiving that answer from someone else, it would be really encouraging.</p>
    <p>I like being reminded that nobody's going to help me - that it's all up to me. <b>It puts my focus back on the things I can control - not waiting for outside circumstances.</b></p>
    </blockquote>
    <p>Take it from <a href="http://productiveblog.tumblr.com/">The Ultimate Productivity Blog</a>:</p>
    <p><a href="http://productiveblog.tumblr.com/"><img alt="Ultimate-productivity-blog" title="Ultimate-productivity-blog" src="https://blog.codinghorror.com/content/images/2014/Jul/you-should-be-working.png"></a></p>
    <p>Reading self-help advice from other people, however well-intentioned, is no substitute for <b>getting your own damn work done</b>. The sooner you come to terms with this, the better off you'll be.</p>
    <p>Get out there and do stuff <i>because you fundamentally enjoy it</i> and <i>because it makes you better</i>. As a writer, as an analyst, as a techie, whatever. Learn to <a href="http://headrush.typepad.com/creating_passionate_users/2006/03/dont_forget_squ.html">love practicing the fundamentals</a> and <b>do it better each time</b>. Over time, quality does lead to success, but you have to be patient. <i>Really</i> patient. Turns out, <a href="http://www.codinghorror.com/blog/2009/01/overnight-success-it-takes-years.html">"overnight" success takes years</a>. Maybe even decades. This is not a sprint, it's a marathon. Plan accordingly.</p>
    <p>For example, I don't care if anyone reads what I write here. I'm writing to satisfy myself first and foremost. If others read it and benefit from it, fantastic -- that's a welcome side effect. If I worry about <i>who</i> is reading, <i>why</i> they're reading, or if <i>anyone</i> is even reading at all, I'd be too paralyzed to write! That'd be the least productive outcome of all.</p>
    <p>That's not to say that <i>some</i> introspection about the nature of your work isn't useful. It is. Even <a href="http://commonsenseatheism.com/?p=12651">the weary self-help student</a> I quoted above concluded that 5% of self-help advice surprisingly <i>wasn't</i> bullshit. The one book he recommended without hesitation? <b><a href="http://www.amazon.com/59-Seconds-Little-Change-Borzoi/dp/B0057DCE7M/?tag=codihorr-20">59 Seconds: Think a Little, Change a Lot</a></b>.</p>
    <p><a href="http://www.amazon.com/59-Seconds-Little-Change-Borzoi/dp/B0057DCE7M/?tag=codihorr-20"><img alt="59-seconds-book-cover" title="59-seconds-book-cover" src="https://blog.codinghorror.com/content/images/uploads/2011/07/6a0120a85dcdae970b014e8a27c433970d-800wi.png" border="0"></a></p>
    <p>Despite my deep reservations about the genre, I ordered this book based on his recommendation and a number of credible references to it I noticed on the <a href="http://skeptics.stackexchange.com">Skeptic Stack Exchange</a>.</p>
    <p>Why does this self-help book work when so many others fail? In a word, <b>science</b>! The author goes out of his way to find actual published scientific research documenting specific ways we can make small changes in our behavior to produce better outcomes for ourselves and those around us. It's powerful stuff, and the book is full of great, research backed insights like this one:</p>
    <blockquote>
    <p>A group of participants were asked to select a negative experience. One group of participants were then asked to have a long chat with a supportive experimenter about the event, while a second group were invited to chat about a far more mundane topic - a typical day.</p>
    <p>Participants who had spent time talking about their traumatic event thought the chat had been helpful. However, the various questionnaires told a very different story. In reality the chat had no significant impact at all. They might just as well have been chatting about a typical day.</p>
    <p>In several studies, participants who have experienced a traumatic event have been encouraged to spend just a few minutes each day writing in a diary-type account of their deepest thoughts and feelings about it. For example, in one study participants who had just been made redundant were asked to reflect upon their deepest thoughts and feelings about their job loss, including how it had affected both their personal and professional lives. Although these types of exercises were  both speedy and simple, the results revealed a remarkable boost in their psychological and physical well-being, including a reduction in health problems and an increase in self-esteem and happiness.</p>
    <p>The results left psychologists with something of a mystery. <b>Why would talking about a traumatic experience have almost no effect but writing about it yield such significant benefits?</b> From a psychological perspective, talking and writing are very different. Talking can often be somewhat unstructured, disorganized, even chaotic. In contrast, writing encourages the creation of a story line and structure that help people make sense of what has happened and work towards a solution. In short, talking can add to a sense of confusion, but writing provides a more systematic, solution-based approach.</p>
    </blockquote>
    <p>Therefore, the real world change you would make based on this advice – the proverbial 59 seconds on the book jacket – is to avoid talking through traumatic experiences in favor of writing about them. Not because some self-help guru said so, but because the published research data tells us that talking doesn't work and writing does. Not exactly intuitive, since talking through our problems with a friend always feels like the right thing to do, but I have certainly documented many times over the value of writing through a problem.</p>
    <p><a href="http://www.amazon.com/59-Seconds-Little-Change-Borzoi/dp/B0057DCE7M/?tag=codihorr-20">59 Seconds</a> is <i>so</i> good, in fact, <b>it has rekindled my hopes that our new <a href="http://productivity.stackexchange.com">Stack Exchange Productivity Q&amp;A</a> can work.</b> I'd love for our productivity site to be founded on a scientific basis, and not the blind cult of personality I've come to expect from the self-help industry.</p>
    <p>Remember, nobody's going to help you … except <i>science</i>, and if you're willing to put in the required elbow grease each and every day – <i>yourself</i>.</p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2011-07-27T03:00:55.000Z</pubDate>
    <guid>https://blog.codinghorror.com/nobodys-going-to-help-you-and-thats-awesome/</guid>
    </item>
    <item>
    <title>Building a PC, Part VII: Rebooting</title>
    <link>https://blog.codinghorror.com/building-a-pc-part-vii-rebooting/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>I've had more or less the same PC, with various updates, since 2007. I've written about most of it here:</p>
    <ul>
    <li><a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-i.html">Building a PC, Part I: Minimal boot</a></li>
    <li><a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-ii.html">Building a PC, Part II: Burn in</a></li>
    <li><a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-iii---overclocking.html">Building a PC, Part III: Overclocking</a></li>
    <li><a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-iv-now-its-your-turn.html">Building a PC, Part IV: Now It's Your Turn</a></li>
    <li><a href="http://www.codinghorror.com/blog/2008/04/building-a-pc-part-v-upgrading.html">Building a PC, Part V: Upgrading</a></li>
    <li><a href="http://www.codinghorror.com/blog/2009/12/building-a-pc-part-vi-rebuilding.html">Building a PC, Part VI: Rebuilding</a></li>
    </ul>
    <p>While the advice in those original articles is still quite sound, my old 2007 era case was feeling mighty creaky. I needed a new chassis. I also wanted a motherboard that supported native 6 Gbps SATA for the latest generation of SSDs that <a href="http://www.codinghorror.com/blog/2011/05/the-hot-crazy-solid-state-drive-scale.html">truly benefit from them</a>. The buzz around the Sandy Bridge based Core i7-2600k was nearly deafening, and I've fallen <em>completely</em> in love with <a href="http://www.codinghorror.com/blog/2011/03/revisiting-the-home-theater-pc.html">my last HTPC build based on the same technology</a>. (Oh, and even if you already read that article, read it again because I added new PicoPSU and case information that takes it from awesome to sublime – on the order of 17 watts idle!)</p>
    <p>So I decided it was time to build myself a nice Sandy Bridge system. What I ended up with is <b>easily the best case and motherboard combination I've ever laid hands on</b>. Read on!</p>
    <p>I cut out a lot of the initial research work by relying on my old, dear friends at Tech Report and <a href="http://techreport.com/articles.x/21164/8">their current workstation recommendations</a>:</p>
    <ul>
    <li>
    <a href="http://www.amazon.com/gp/product/B00503EA80/?tag=codihorr-20">Asus P8Z68-V Pro</a> $220</li>
    <li>
    <a href="http://www.amazon.com/gp/product/B004RFBIUU/?tag=codihorr-20">Corsair Vengeance 16 GB kit</a> $155</li>
    <li>
    <a href="http://www.amazon.com/gp/product/B004EBUXSA/?tag=codihorr-20">Core i7-2600K</a> $315</li>
    </ul>
    <p>As for the case, I was impressed by <a href="http://techreport.com/articles.x/19638">the Tech Report review of the Corsair 600T</a>, which even comes in a heart-stopping pseudo stormtrooper white. <em>WANT.</em></p>
    <p><a href="http://www.amazon.com/gp/product/B004O0PAKW/?tag=codihorr-20"><img alt="Corsair-600t-special-edition" title="Corsair-600t-special-edition" src="https://blog.codinghorror.com/content/images/uploads/2011/07/6a0120a85dcdae970b014e89f20a7f970d-800wi.jpg" border="0"></a></p>
    <p>When it comes to power supplies, <a href="http://www.codinghorror.com/blog/2007/05/upgrading-to-a-high-efficiency-power-supply.html">I'm crazy about efficiency</a>, and fortunately there are now lots of so-called "80 Plus Gold" PSUs out there now, offering a staggering <em>90% efficiency</em> under most loads. Power supply efficiency is important, because the rest of that heat is dumped back into your case. The less efficient your PSU, the more heat buildup you'll have under load. I chose <a href="http://www.amazon.com/Seasonic-ATX12V-EPS12V-Power-Supply/dp/B004F0AQ8C/?tag=codihorr-20">the Seasonic X-760</a> – which, when bench tested, <a href="http://www.jonnyguru.com/modules.php?name=NDReviews&amp;op=Story3&amp;reid=192">indeed delivered the promised 90% efficiency</a> – but <b>any high quality 80 Plus Gold model will generally do</b>.</p>
    <p>The CPU (and possibly, depending on your tastes, the video card) is the biggest heat generator inside your PC. The better and more efficient the CPU cooler, the quieter your whole system can be. This also affects how much you can overclock. I chose the <a href="http://www.amazon.com/gp/product/B003NWXH9S/?tag=codihorr-20">Thermalright Venomous-X Silent Edition</a> on the basis of it being <a href="http://www.silentpcreview.com/tr-venomousx">the current top dog for efficiency</a>, <em>and</em> because it had a simple mounting system. Large coolers can be a real bear to install. And did I mention it comes with an especially quiet fan out of the box, too?</p>
    <p>Once I had all the parts in hand, it was a simple matter of building it up, as documented in <a href="http://www.codinghorror.com/blog/archives/000905.html">my previous post series</a>. I adore this Corsair case; it is <em>an absolute joy to work in</em>. Everything in it is cleverly designed, from the rear cable routing area with rubber grommets all over the place for easily passing cables back and forth, to the tool-less 2.5" and 3.5" bays, to the super easily removable side panels. It's like they read a giant list of all my prior complaints with every PC case I've ever used and fixed every. single. last. one of them.</p>
    <p>The end result is what you see here:</p>
    <img alt="New-sandy-bridge-build-internal" title="New-sandy-bridge-build-internal" src="https://blog.codinghorror.com/content/images/uploads/2011/07/6a0120a85dcdae970b014e89f1f08d970d-800wi.jpg" border="0">
    <p>There are some significant tweaks visible in the above picture that I do recommend:</p>
    <ul>
    <li>
    <p><b>Use tin snips to remove the rear exhaust grill.</b> We don't need it back there, and the exhaust airflow is critical. <a href="http://www.silentpcreview.com/forums/viewtopic.php?t=15810">Fan grills affect low-speed fan airflow more than you'd think</a>:</p>
    <blockquote>
    <p>Wire grills also have an effect: ~20%. This was checked with an anemometer on several different fans of 80, 92 and 120mm size, at full and lower speeds. The airflow reduction went as high as 24% but it was never below 19%. At 12V, the reduction in airflow with most fans will be relatively harmless, though there is an increase in turbulence noise (audible to me). But at the low airflow rates SPCR members run fans, I think the airflow reduction is significant.</p>
    </blockquote>
    </li>
    <li>
    <p><b>Install a 140mm rear exhaust fan</b>. The <a href="http://www.amazon.com/gp/product/B002XISTXM/?tag=codihorr-20">Noctua NF-P14</a> is expensive at $25 but is cleverly designed to give you 140mm of super-quiet fan in the space a 120mm fan would normally take. It just <em>barely</em> fits in the rear exhaust fan slot with a little nudging. But it does fit; it's the beige fan in the above picture. It also comes with its own speed reducers and accessories.<br><br></p>
    </li>
    <li>
    <p><b>Use fan speed reducers on <em>all</em> the fans</b>. The case has two 200mm fans, and the 140mm fan we're adding. I couldn't get the Asus motherboard's "QFan" fan control system to work, as it seems to require 4-pin fans, and all the ones I had (including the ones that came with the case) are 3-pin. While I do prefer dynamic, temperature based control when I can get it, the next best thing is to use hardware to slow down the fans. I like the <a href="http://www.google.com/search?q=zalman%20zm-56&amp;tbm=shop">Zalman-ZM-RC56 resistor connector</a> as the simplest solution, but it's getting hard to find for some reason. The <a href="http://www.google.com/search?q=zalman%20fanmate%202&amp;tbm=shop">Zalman Fan Mate 2</a> will also work, and allows you to individually adjust the speed of each fan. The case also has a built in fan controller – that's the knob you see on the front top – but I found it too limited in range for my purposes.<br><br></p>
    </li>
    <li>
    <p><b>Add acoustic foam to taste</b>. Between inexpensive eggcrate foam and thin, adhesive backed open-cell foam, you can easily reduce that last 10-20% of fan noise to a very pleasant white noise. It works well in the areas pictured, and also on the interior of the side panel "facing" the fans. See item 6 in my <a href="http://www.codinghorror.com/blog/2006/08/building-a-quiet-pc.html">Building a Quiet PC</a> post for details.</p>
    </li>
    </ul>
    <p>And then, of course, <a href="http://www.codinghorror.com/blog/2007/07/building-a-pc-part-iii---overclocking.html">the overclockening</a>. What kind of geek would I be if I didn't attempt to <em>turn this baby up to 11?</em> This is another area where Sandy Bridge is a revelation: <b>so long as you buy one of the blessed "K" series processors, overclocking is as simple as setting the multiplier to the desired value.</b> It is ridiculously simple. And my results, for once, were immediately as good as the ones everyone else was crowing about: <em>4.4 GHz totally stable!</em></p>
    <img alt="Sandy-bridge-overclock" title="Sandy-bridge-overclock" src="https://blog.codinghorror.com/content/images/uploads/2011/07/6a0120a85dcdae970b01538ffee801970b-800wi.png" border="0">
    <p>(<font color="red">beware:</font> there is one <a href="http://vip.asus.com/forum/view.aspx?id=20110611021059226&amp;SLanguage=en-us&amp;board_id=1&amp;model=P8P67%20PRO&amp;page=1">nasty little issue</a> with the Asus motherboard's auto-overclock feature. The PLL Overvoltage setting, which auto-overclock "helpfully" enables, completely bollixes up resuming from sleep. Just turn it off, and all is well. I don't even want to tell you how long it took me to figure <em>that</em> one out.)</p>
    <p>The total package with a nice SSD delivers a near-perfect <a href="http://www.codinghorror.com/blog/2006/09/have-you-ever-been-windows-experienced.html">Windows Experience score</a>:</p>
    <img alt="Sandy-bridge-windows-experience-score" title="Sandy-bridge-windows-experience-score" src="https://blog.codinghorror.com/content/images/uploads/2011/07/6a0120a85dcdae970b015433d240d0970c-800wi.png" border="0">
    <p>I won't lie to you. This is not a compact build. It's big! Those roomy side areas come at a cost, and that makes it a very <em>wide</em> case. But that's to be expected for a desktop powerhouse machine. And since my last case lasted me from 2007-2011, I'll happily accept a little bulk for something that's easy to work on and upgrade over time.</p>
    <img alt="New-sandy-bridge-build-external" title="New-sandy-bridge-build-external" src="https://blog.codinghorror.com/content/images/uploads/2011/07/6a0120a85dcdae970b01538ffe7761970b-800wi.jpg" border="0">
    <p>It's a fantastic new reboot of my system, and I didn't expect to be this excited about the final result. This is not merely an incremental improvement over what I had, it's <em>much</em> quieter, easier to work on, and when overclocked to 4.4 GHz, noticeably faster too. (I do slightly mourn <a href="http://www.codinghorror.com/blog/2011/01/24-gigabytes-of-memory-ought-to-be-enough-for-anybody.html">the loss of 8 GB of RAM</a>, but I'll survive.)</p>
    <p>In this build, I already had hard drives, DVD drive, a sound card, and so forth … but for completeness' sake I'll list everything here if you want to mirror this setup. Realize that some of this comes down to personal taste, so I'm just listing what I recommend. Feel free to change anything out, and bear in mind that Sandy Bridge has decent default onboard video as well.</p>
    <ul>
    <li>
    <a href="http://www.amazon.com/gp/product/B00503EA80/?tag=codihorr-20">Asus P8Z68-V Pro</a> $220</li>
    <li>
    <a href="http://www.amazon.com/gp/product/B004RFBIUU/?tag=codihorr-20">Corsair Vengeance 16 GB RAM</a> $155</li>
    <li>
    <a href="http://www.amazon.com/gp/product/B004EBUXSA/?tag=codihorr-20">Core i7-2600K CPU</a> $315</li>
    <li>
    <a href="http://www.amazon.com/gp/product/B004O0PAKW/?tag=codihorr-20">Corsair 600T Special Edition case</a> $170</li>
    <li>
    <a href="http://www.amazon.com/Corsair-Professional-High-Performance-850-Watt-CMPSU-850AX/dp/B003PJ6QW4/?tag=codihorr-20">Corsair 850w 80 Plus Gold PSU</a> $170</li>
    <li>
    <a href="http://www.amazon.com/gp/product/B003NWXH9S/?tag=codihorr-20">Thermalright Venomous-X Silent Edition CPU heatsink</a> $75</li>
    <li>
    <a href="http://www.amazon.com/OCZ-Technology-Vertex-2-5-Inch-VTX3-25SAT3-240G/dp/B004QJM1HG/?tag=codihorr-20">Vertex 3 240 GB SSD</a> $500</li>
    <li>
    <a href="http://www.amazon.com/Western-Digital-3-5-Inch-Internal-Desktop/dp/B004YNQKRG">WD Caviar Green 3 TB HDD</a> $170</li>
    <li>
    <a href="http://www.amazon.com/gp/product/B002XISTXM/?tag=codihorr-20">Noctua Ultra Silent 140mm Fan NF-P14 FLX</a> $25</li>
    <li>
    <a href="http://www.amazon.com/Sapphire-DL-DVI-I-SL-DVI-D-PCI-Express-100315L/dp/B0047ZGIUK/?tag=codihorr-20">Radeon 6850 triple monitor capable video card</a> $170</li>
    </ul>
    <p>Remember, if you can put together a LEGO kit, you can build this totally sweet PC for yourself, too. Good luck and happy building!</p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2011-07-18T16:06:37.000Z</pubDate>
    <guid>https://blog.codinghorror.com/building-a-pc-part-vii-rebooting/</guid>
    </item>
    <item>
    <title>Performance is a Feature</title>
    <link>https://blog.codinghorror.com/performance-is-a-feature/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    We've always put a heavy emphasis on performance at Stack Overflow and <a href="http://stackexchange.com">Stack Exchange</a>. Not just because we're performance wonks (guilty!), but because we think speed is a competitive advantage. There's <a href="http://www.codinghorror.com/blog/2006/11/speed-still-matters.html">plenty of experimental data</a> proving that <b>the slower your website loads and displays, the less people will use it.</b>
    </p>
    <p>
    </p>
    <blockquote>
    [Google found that] the page with 10 results took 0.4 seconds to generate. The page with 30 results took 0.9 seconds. Half a second delay caused a 20% drop in traffic. Half a second delay killed user satisfaction.<br><br>In A/B tests, [Amazon] tried delaying the page in increments of 100 milliseconds and found that even very small delays would result in substantial and costly drops in revenue.
    </blockquote>
    <p>
    I believe the converse of this is also true. That is, the faster your website is, the <i>more</i> people will use it. This follows logically if you think like <a href="http://www.codinghorror.com/blog/2007/06/designing-for-informavores-or-why-users-behave-like-animals-online.html">an information omnivore</a>: the faster you can load the page, the faster you can tell whether that page contains what you want. Therefore, you should always favor fast websites. The opportunity cost for switching on the public internet is effectively nil, and whatever it is that you're looking for, there are multiple websites that offer a similar experience. So how do you distinguish yourself? <b>You start by being, above all else, <i>fast</i>.</b>
    </p>
    <p>
    Do you, too, <a href="http://www.youtube.com/watch?v=OlkInNZ7xis">feel the need – the need for speed?</a> If so, I have three pieces of advice that I'd like to share with you.
    </p>
    <p>
    </p>
    <h3>1. Follow the Yahoo Guidelines. Religiously.</h3>
    <p>
    The golden reference standard for building a fast website remains <a href="http://www.codinghorror.com/blog/2007/08/yslow-yahoos-problems-are-not-your-problems.html">Yahoo's 13 Simple Rules for Speeding Up Your Web Site</a> from 2007. There is one caveat, however:
    </p>
    <p>
    </p>
    <blockquote>
    There's some good advice here, but there's also a lot of advice that only makes sense if you run a website that gets millions of unique users per day. Do you run a website like that? If so, what are you doing reading this instead of flying your private jet to a Bermuda vacation with your trophy wife?
    </blockquote>
    <p>
    So … a funny thing happened to me since I wrote that four years ago. I now run <a href="http://stackexchange.com/sites">a network of public, community driven Q&amp;A web sites</a> that <i>do</i> get millions of daily unique users. (I'm still waiting on the jet and trophy wife.) It does depend a little on the size of your site, but if you run a public website, <b>you really should <a href="http://developer.yahoo.com/performance/rules.html">pore over Yahoo's checklist</a> and take every line of it to heart</b>. Or use the tools that do this for you:
    </p>
    <p>
    </p>
    <ul>
    <li>
    <a href="http://developer.yahoo.com/yslow/">Yahoo YSlow</a>
    </li>
    <li>
    <a href="http://code.google.com/speed/page-speed/">Google Page Speed</a>
    </li>
    <li>
    <a href="http://tools.pingdom.com/">Pingdom Tools</a>
    </li>
    </ul>
    <p>
    We've long since implemented most of the 13 items on Yahoo's list, except for one. But it's a big one: <a href="http://developer.yahoo.com/performance/rules.html#cdn">Using a Content Delivery Network</a>.
    </p>
    <p>
    </p>
    <blockquote>
    The user's proximity to your web server has an impact on response times. Deploying your content across multiple, geographically dispersed servers will make your pages load faster from the user's perspective. But where should you start?
    <p>
    As a first step to implementing geographically dispersed content, don't attempt to redesign your web application to work in a distributed architecture. Depending on the application, changing the architecture could include daunting tasks such as synchronizing session state and replicating database transactions across server locations. Attempts to reduce the distance between users and your content could be delayed by, or never pass, this application architecture step.
    </p>
    <p>
    Remember that 80-90% of the end-user response time is spent downloading all the components in the page: images, stylesheets, scripts, Flash, etc. This is the <i>Performance Golden Rule</i>. Rather than starting with the difficult task of redesigning your application architecture, it's better to first disperse your static content. This not only achieves a bigger reduction in response times, but it's easier thanks to content delivery networks.
    </p>
    </blockquote>
    <p>
    As a final optimization step, we just <a href="http://blog.stackoverflow.com/2011/05/the-speed-of-light-sucks/">rolled out a CDN for all our static content</a>. The results are promising; the baseline here is our datacenter in NYC, so the below should be read as <i>"how much faster did our website get for users in this area of the world?"</i>
    </p>
    <p>
    <img alt="Cdn-performance-test-world-map" title="Cdn-performance-test-world-map" src="https://blog.codinghorror.com/content/images/uploads/2011/06/6a0120a85dcdae970b01543324aae7970c-800wi.png" border="0">
    </p>
    <p>
    In the interests of technical accuracy, static content isn't the complete performance picture; you still have to talk to our servers in NYC to get the dynamic content which is the meat of the page. But 90% of our visitors are anonymous, only 36% of our traffic is from the USA, and Yahoo's research shows that <a href="http://yuiblog.com/blog/2007/01/04/performance-research-part-2/">40 to 60 percent of daily vistors come in with an empty browser cache</a>. Optimizing this cold cache performance worldwide is a <i>huge</i> win.
    </p>
    <p>
    Now, I would not recommend going <i>directly</i> for a CDN. I'd leave that until later, as there are a bunch of performance tweaks on Yahoo's list which are free and trivial to implement. But using a CDN has gotten a heck of a lot less expensive and much simpler since 2007, with lots more competition in the space from companies like <a href="http://aws.amazon.com/cloudfront/">Amazon's</a>, <a href="http://www.netdna.com/">NetDNA</a>, and <a href="http://www.cachefly.com/">CacheFly</a>. So when the time comes, and you've worked through the Yahoo list as religiously as I recommend, you'll be ready.
    </p>
    <p>
    </p>
    <h3>2. Love (and Optimize for) Your Anonymous <i>and</i> Registered Users</h3>
    <p>
    Our Q&amp;A sites are all about making the internet better. That's why all the contributed content is <a href="http://blog.stackoverflow.com/category/cc-wiki-dump/">licensed back to the community under Creative Commons</a> and <i>always</i> visible regardless of whether you are logged in or not. I <a href="http://www.codinghorror.com/blog/2007/06/avoiding-walled-gardens-on-the-internet.html">despise walled gardens</a>. In fact, you don't actually have to log in <i>at all</i> to participate in Q&amp;A with us. Not even a little!
    </p>
    <p>
    The primary source of our traffic is <a href="http://www.codinghorror.com/blog/2011/01/trouble-in-the-house-of-google.html">anonymous users arriving from search engines</a> and elsewhere. It's classic "write once, read – and <a href="http://blog.stackoverflow.com/2011/02/suggested-edits-and-edit-review/">hopefully edit</a> – millions of times." But we are also making the site richer and more dynamic for our avid community members, who definitely <i>are</i> logged in. We add features all the time, which means we're serving up more JavaScript and HTML. There's an unavoidable tension here between the download footprint for users who are on the site every day, and users who may visit once a month or once a year.
    </p>
    <p>
    Both classes are important, but have fundamentally different needs. Anonymous users are voracious consumers optimizing for rapid browsing, while our avid community members are the source of all the great content that drives the network. These guys (and gals) need each other, and they both deserve special treatment. <b>We design and optimize for two classes of users: anonymous, and logged in.</b> Consider the following Google Chrome network panel trace on a random Super User question I picked:
    </p>
    <p>
    </p>
    <table cellpadding="2" cellspacing="2" width="640px">
    <tr>
    <td> </td>
    <td>requests</td>
    <td>data transferred</td>
    <td>DOMContentLoaded</td>
    <td>onload</td>
    </tr>
    <tr>
    <td>Logged in (as me)</td>
    <td>29</td>
    <td>233.31 KB</td>
    <td>1.17 s</td>
    <td>1.31 s</td>
    </tr>
    <tr>
    <td>Anonymous</td>
    <td>22</td>
    <td>111.40 KB</td>
    <td>768 ms</td>
    <td>1.28 s</td>
    </tr>
    </table>
    <p>
    We minimize the footprint of HTML, CSS and Javascript for anonymous users so they get their pages <i>even faster</i>. We load a stub of very basic functionality and dynamically "rez in" things like editing when the user focuses the answer input area. For logged in users, the footprint is necessarily larger, but we can also add features for our most avid community members at will without fear of harming the experience of the vast, silent majority of anonymous users.
    </p>
    <p>
    </p>
    <h3>3. Make Performance a Point of (Public) Pride</h3>
    <p>
    Now that we've exhausted the Yahoo performance guidance, and made sure we're serving the absolute minimum necessary to our anonymous users – where else can we go for performance? Back to our code, of course.
    </p>
    <p>
    When it comes to website performance, there is no getting around one fundamental law of the universe: <b>you can never serve a webpage faster than it you can render it on the server.</b> I know, duh. But I'm telling you, it's very easy to fall into the trap of not noticing a few hundred milliseconds here and there over the course of a year or so of development, and then one day you turn around and your pages are taking almost a full freaking second to render on the server. It's a heck of a liability to start <i>1 full second in the hole</i> before you've even transmitted your first byte over the wire!
    </p>
    <p>
    That's why, as a developer, you need to put performance right in front of your face on every single page, all the time. That's exactly what we did with our <a href="http://code.google.com/p/mvc-mini-profiler/">MVC Mini Profiler</a>, which we are contributing back to the world as open source. The simple act of <b>putting a render time in the upper right hand corner of every page we serve</b> forced us to fix all our performance regressions and omissions.
    </p>
    <p>
    <a href="http://code.google.com/p/mvc-mini-profiler/"><img alt="Mvc-mini-profiler-question-page" title="Mvc-mini-profiler-question-page" src="https://blog.codinghorror.com/content/images/uploads/2011/06/6a0120a85dcdae970b014e89452246970d-800wi.png" border="0"></a>
    </p>
    <p>
    (Note that you can click on the SQL linked above to see what's actually being run and how long it took in each step. <i>And</i> you can use the share link to share the profiler data for this run with your fellow developers to <s>shame them</s> diagnose a particular problem. <i>And</i> it works for multiple AJAX requests. Have I mentioned that our open source MVC Mini Profiler is totally freaking awesome? If you're on a .NET stack, you should really <a href="http://code.google.com/p/mvc-mini-profiler/">check it out</a>. )
    </p>
    <p>
    In fact, with the render time appearing on every page for everyone on the dev team, <b>performance became a point of pride</b>. We had so many places where we had just gotten a <i>little</i> sloppy or missed some <i>tiny</i> thing that slowed a page down inordinately. Most of the performance fixes were trivial, and even the ones that were not turned into fantastic opportunities to rearchitect and make things simpler and faster for all of our users.
    </p>
    <p>
    Did it work? You bet your sweet <a href="http://msdn.microsoft.com/en-us/library/496e4ekx.aspx">ILAsm</a> it worked:
    </p>
    <p>
    <img alt="Google-webmaster-crawl-stats-download-time" title="Google-webmaster-crawl-stats-download-time" src="https://blog.codinghorror.com/content/images/uploads/2011/06/6a0120a85dcdae970b0154332506cc970c-800wi.png" border="0">
    </p>
    <p>
    That's the Google crawler page download time; the experimental Google <a href="http://www.google.com/support/webmasters/bin/answer.py?answer=158541">Site Performance page</a>, which ostensibly reflects complete full-page browser load time, confirms the improvements:
    </p>
    <p>
    <img alt="Google-webmaster-site-performance-overview" title="Google-webmaster-site-performance-overview" src="https://blog.codinghorror.com/content/images/uploads/2011/06/6a0120a85dcdae970b015433250717970c-800wi.png" border="0">
    </p>
    <p>
    While server page render time is only part of the performance story, it is the baseline from which you start. I cannot emphasize enough how much the simple act of putting the page render time on the page helped us, as a development team, build a dramatically faster site. Our site was always relatively fast, but even for a historically "fast" site like ours, we realized huge gains in performance from this one simple change.
    </p>
    <p>
    I won't lie to you. Performance isn't easy. It's been a long, hard road getting to where we are now – and we've thrown a lot of unicorn dollars toward <a href="http://blog.serverfault.com/post/1432571770/">really nice hardware</a> to run everything on, though I wouldn't call any of our hardware choices particularly extravagant. And I did <a href="http://www.codinghorror.com/blog/2008/12/hardware-is-cheap-programmers-are-expensive.html">follow my own advice</a>, for the record.
    </p>
    <p>
    I distinctly remember switching from AltaVista to Google back in 2000 in no small part because it was blazing fast. To me, <b>performance is a feature</b>, and I simply like using fast websites more than slow websites, so naturally I'm going to build a site that I would want to use. But I think there's also a lesson to be learned here about the competitive landscape of the public internet, where there are two kinds of websites: <b>the quick and the dead</b>.
    </p>
    <p>
    Which one will you be?
    </p>
    <p>
    <!--kg-card-end: markdown-->
                </p></content>
    <pubDate>2011-06-20T15:38:41.000Z</pubDate>
    <guid>https://blog.codinghorror.com/performance-is-a-feature/</guid>
    </item>
    <item>
    <title>Geek Transportation Systems</title>
    <link>https://blog.codinghorror.com/geek-transportation-systems/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    On my first visit to the Fog Creek Software offices in 2008, I was surprised to see programmers zooming around the office on scooters. I didn't realize that scooters were something geeks would be into, but it sure looked like fun, albeit borderline <i>dangerous</i> fun, on the 25th floor of an office building in Manhattan.
    </p>
    <p>
    It turns out that having children is a great <s>excuse</s> reason to get into fun things like scooters. I didn't know much about scooters for adults, so being an obsessive geek, of course I had to research the heck out of this topic. My research turned up the <a href="http://www.amazon.com/gp/product/B001LUQGYC/codihorr-20">Xootr MG</a> as a top choice.
    </p>
    <p>
    <a href="http://www.amazon.com/gp/product/B001LUQGYC/codihorr-20"><img alt="Xootr-mg-scooter" title="Xootr-mg-scooter" src="https://blog.codinghorror.com/content/images/uploads/2011/06/6a0120a85dcdae970b01538f170506970b-800wi.jpg" border="0"></a>
    </p>
    <p>
    News flash: scooters <i>are</i> fun. Really fun!
    </p>
    <p>
    But per my research (and now, personal experience) <b>scooters are also surprisingly practical forms of transportation in certain situations</b>, namely when …
    </p>
    <p>
    </p>
    <ul>
    <li>you need to travel 1-3 miles</li>
    <li>the route is not too hilly</li>
    <li>it is not raining or wet</li>
    <li>the route is mostly paved or has sidewalks</li>
    <li>you are comfortable being "that awkward looking guy on a scooter"</li>
    </ul>
    <p>
    Scooters are <i>very</i> primitive machines; it is both their greatest strength and their greatest weakness. It's arguably the simplest personal wheeled vehicle there is. In these short distance scenarios, scooters tend to win over, say, bicycles because there's less setup and teardown necessary – you don't have to lock up a scooter, nor do you have to wear a helmet (though I highly recommend one). Just hop on and go! You get almost all the benefits of gravity and wheeled efficiency with a minimum of fuss and maintenance. And yes, it's fun, too!
    </p>
    <p>
    I'm just a scooter newbie, but the <a href="http://www.amazon.com/gp/product/B001LUQGYC/codihorr-20">Xootr MG</a> has a few characteristics I liked a lot, including rock-solid construction, a front brake (not super efficient, but reasonably effective when combined with the rear foot fender brake), and a wide, comfortable platform for your feet. But it does take some effort to kick around – don't forget to alternate your legs – and the ride can be rough at times depending on the surface. Large bumps and very uneven surfaces are wreck material. And going uphill on a scooter, beyond the absolute wussiest and mildest of grades, is simply out of the question.
    </p>
    <p>
    For longer distances, or if the terrain is rougher or hillier, a scooter might work, but it'd be a tough way to travel. What you need in those cases is a small, portable bicycle – one you can take with you. I've dabbled in foldable bicycles before, and we own two <a href="http://www.amazon.com/gp/search?ie=UTF8&amp;keywords=dahon%20folding%20bicycle&amp;tag=codihorr-20">Dahon folding bicycles</a>. They're great, versatile and inexpensive bikes.
    </p>
    <p>
    <a href="http://www.amazon.com/gp/search?ie=UTF8&amp;keywords=dahon%20folding%20bicycle&amp;tag=codihorr-20"><img alt="New-foldable-bikes" title="New-foldable-bikes" src="https://blog.codinghorror.com/content/images/uploads/2011/06/6a0120a85dcdae970b01538f17003b970b-800wi.jpg" border="0"></a>
    </p>
    <p>
    Dahon makes fine traditional folding bicycles, but they are not quite as pick-up-and-go as I would like for short trips. As an experiment, I purchased something I've had my eye on for a long time: the <a href="http://www.amazon.com/gp/product/B003BO4PKI/codihorr-20">Strida LT</a> folding bicycle. Or, as I like to call it, my "mid-life crisis vehicle".
    </p>
    <p>
    <a href="http://www.amazon.com/gp/product/B003BO4PKI/codihorr-20"><img alt="Strida-green-side" title="Strida-green-side" src="https://blog.codinghorror.com/content/images/uploads/2011/06/6a0120a85dcdae970b01538f17503f970b-800wi.jpg" border="0"></a>
    </p>
    <p>
    (also pictured: some cool accessories that I recommend for Strida owners: a Cateye Reflex rear LED light on the rack, Knog beetle silicone front LED light on the handlebars, and a Sunlite Bicycle bungie cargo net.)
    </p>
    <p>
    The appeal of the Strida is that it folds down to an <i>incredibly</i> small size.
    </p>
    <p>
    <a href="http://www.amazon.com/gp/product/B003BO4PKI/codihorr-20"><img class="asset  asset-image at-xid-6a0120a85dcdae970b014e890a8d60970d image-full" alt="Strida-green-folded" title="Strida-green-folded" src="https://blog.codinghorror.com/content/images/uploads/2011/06/6a0120a85dcdae970b014e890a8d60970d-800wi.jpg" border="0"></a>
    </p>
    <p>
    It's almost a pogo stick in folded form. I took my Strida on a short trip into San Francisco for a speaking gig in the city, which involved riding on BART, and the Strida in practice is <b>everything I dreamed a modern ultra-portable folding bicycle could be</b>:
    </p>
    <p>
    </p>
    <ul>
    <li>front and rear disc brakes; superb stoppers
    </li>
    <li>belt drive so no grease on your hands or pants
    </li>
    <li>built in fenders in case you encounter puddles or rain
    </li>
    <li>comfortable, full size(ish) upright riding position
    </li>
    <li>super-easy, crazy fast folding: <a href="http://www.youtube.com/watch?v=y0qx95hxyuQ">five seconds, no kidding!</a>
    </li>
    <li>when folded, the bike can be propped by the rear rack (as pictured) or strolled along by rolling it on its wheels.
    </li>
    </ul>
    <p>
    The Strida may look odd, and perhaps it is odd, but I found it to be shockingly close to an ideal go-anywhere do-anything convenience bicycle. It isn't perfect, of course:
    </p>
    <p>
    </p>
    <ul>
    <li>My only real beef with the Strida: the seat adjustment is <i>horrendously</i> kludgey. Adjusting the seat height on a Strida is painfully awkward even in the garage; on the go it's not an option.
    </li>
    <li>It is a small wheel bicycle, with all the unavoidable physical compromises that entails. It'll always be a little twitchy and not something you would want to go on a 10 or 20 mile ride with.
    </li>
    <li>It's a single speed, and you're not supposed to stand out of the saddle for power pedaling at any time. The frame and belt drive won't take it. On anything other than a moderate uphill you'll need to hop off and walk. (There is a slightly fancier Strida that has two internal hub gears, but I know nothing about it.)
    </li>
    <li>Because the fold involves a ball joint, it <i>is</i> possible to permanently damage the bike if you aren't careful when you fold and force it. I doubt this is a real concern for anyone who has folded a Strida more than once, but if a ham-fisted friend tries to fold your Strida to "test it out", you might be in trouble.
    </li>
    </ul>
    <p>
    None of these criticisms apply to the Dahon, so hopefully you can get a sense of the dividing line between an ultra-folder and a plain old folding bicycle.
    </p>
    <p>
    Being a geek, it's <a href="http://www.codinghorror.com/blog/2007/10/geek-diet-and-exercise-programs.html">not like I spend a lot of time outdoors</a>. But when I do venture outside, I like to travel in a manner befitting a geek. That is, with my <a href="http://www.codinghorror.com/blog/2010/08/whats-on-your-utility-belt.html">utility belt fully equipped</a>, and in the <i>dorkiest, most efficient vehicle possible</i> for a trip of that particular length. Scooters, folding bicycles, recumbents, pogo sticks … whatever it takes. If you, too, would like to geek out around town, consider adding the <a href="http://www.amazon.com/gp/product/B001LUQGYC/codihorr-20">Xootr MG scooter</a> and <a href="http://www.amazon.com/gp/product/B003BO4PKI/codihorr-20">Strida LT folding bicycle</a> to your stable of geek transportation systems.
    </p>
    <p>
    <!--kg-card-end: markdown-->
                </p></content>
    <pubDate>2011-06-10T04:51:26.000Z</pubDate>
    <guid>https://blog.codinghorror.com/geek-transportation-systems/</guid>
    </item>
    <item>
    <title>Suspension, Ban or Hellban?</title>
    <link>https://blog.codinghorror.com/suspension-ban-or-hellban/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    For almost eight months after launching Stack Overflow to the public, we had no concept of banning or blocking users. Like any new frontier town in the wilderness of the internet, I suppose it was inevitable that we'd be obliged to build a jail at some point. But first we had to come up with some form of <i>government</i>.
    </p>
    <p>
    Stack Overflow was always intended to be a democracy. With the <a href="http://stackexchange.com/sites">Stack Exchange Q&amp;A network</a>, we've come a long way towards that goal:
    </p>
    <ul>
    <li>We create new communities through the open, democratic process defined at <a href="http://area51.stackexchange.com/">Area 51</a>.
    </li>
    <li>Our communities are maintained and operated by the most avid citizens within that community. The more reputation you have, the more <a href="http://blog.stackoverflow.com/2010/10/membership-has-its-privileges/">privileges you earn</a>.
    </li>
    <li>We hold <a href="http://blog.stackoverflow.com/2010/12/stack-exchange-moderator-elections-begin/">yearly moderator elections</a> once each community is large enough to support them.
    </li>
    </ul>
    <p>
    We strive mightily to build self organizing, self governing communities of people who are passionate about a topic, whether it be <a href="http://mechanics.stackexchange.com/">motor vehicles</a> or <a href="http://homebrew.stackexchange.com/">homebrewing</a> or <a href="http://music.stackexchange.com/">musical instruments</a>, or … <a href="http://area51.stackexchange.com/"><i>whatever</i></a>. Our general philosophy is <i>power to the people</i>.
    </p>
    <p>
    <img class="asset  asset-image at-xid-6a0120a85dcdae970b01538eefee40970b" alt="Power-to-the-people" title="Power-to-the-people" src="https://blog.codinghorror.com/content/images/uploads/2011/06/6a0120a85dcdae970b01538eefee40970b-800wi.jpg" border="0">
    </p>
    <p>
    But in the absence of <i>some</i> system of law, the tiny minority of users out to do harm – intentionally or not – eventually drive out all the civil community members, leaving behind a lawless, chaotic badland.
    </p>
    <p>
    Our method of dealing with disruptive or destructive community members is simple: <b>their accounts are placed in timed suspension.</b> Initial suspension periods range from 1 to 7 days, and increase exponentially with each subsequent suspension. We prefer the term "timed suspension" to "ban" to emphasize that we <i>do</i> want users to come back to their accounts, <i>if</i> they can learn to refrain from engaging in those disruptive or problematic behaviors. It's not so much a punishment as a time for the user to cool down and reflect on the nature of their participation in our community. (Well, at least in theory.)
    </p>
    <p>
    Timed suspension works, but much like democracy itself, it is a highly imperfect, noisy system. The transparency provides ample evidence that moderators aren't secretly whisking people away in the middle of the night. But it can also be a bit too … <i>entertaining</i> for some members of the community, leading to hours and hours of meta-discussion about who is suspended, why they are suspended, whether it was <i>fair</i>, what the <i>evidence</i> is, how we are <i>censoring</i> people, and on and on and on. While a certain amount of introspection is important and necessary, it can also become <a href="http://www.codinghorror.com/blog/2009/07/meta-is-murder.html">a substitute for getting stuff done</a>. This might naturally lead one to wonder – <b>what if we could suspend problematic users without anyone knowing they had been suspended?</b>
    </p>
    <p>
    There are three primary forms of secretly suspending users that I know of:
    </p>
    <p>
    </p>
    <ol>
    <li>A <b>hellbanned</b> user is invisible to all other users, but crucially, not himself. From their perspective, they are participating normally in the community but <i>nobody ever responds to them</i>. They can no longer disrupt the community because they are effectively a ghost. It's a clever way of enforcing the "don't feed the troll" rule in the community. When nothing they post ever gets a response, a hellbanned user is likely to get bored or frustrated and leave. I believe it, too; if I learned anything from reading <a href="http://www.amazon.com/dp/0803725906/?tag=codihorr-20">The Great Brain</a> as a child, it's that the silent treatment is the cruelest punishment of them all.
    <p>
    I've always associated hellbanning with the Something Awful Forums. Per <a href="http://ask.metafilter.com/117775/What-was-the-first-website-to-hide-trolls-activity-to-everyone-but-the-troll-himself">this amazing MetaFilter discussion</a>, it turns out the roots of hellbanning go much deeper – all the way back to an early Telnet BBS system called <a href="http://anticlimactic.retrovertigo.com/">Citadel</a>, where the "problem user bit" was introduced around 1986. Like so many other things in social software, it keeps getting reinvented over and over again by <a href="http://www.wired.com/techbiz/people/magazine/17-04/st_thompson">clueless software developers</a> who believe they're the first programmer smart enough to figure out how people work. It's supported in most popular forum and blog software, as documented in the <a href="http://drupal.org/project/cave">Drupal Cave module</a>.
    </p>
    <p>
    (There is one additional form of hellbanning that I feel compelled to mention because it is particularly cruel – when hellbanned users can see only themselves <i>and other hellbanned users</i>. Brrr. I'm pretty sure Dante wrote a chapter about that, <a href="http://en.wikipedia.org/wiki/Inferno_(Dante)">somewhere</a>.)
    </p>
    <p>
    </p>
    </li>
    <li>A <b>slowbanned</b> user has delays forcibly introduced into every page they visit. From their perspective, your site has just gotten terribly, horribly slow. And stays that way. They can hardly disrupt the community when they're struggling to get web pages to load. There's also science behind this one, because <a href="http://www.codinghorror.com/blog/2006/11/speed-still-matters.html">per research from Google and Amazon</a>, every page load delay directly reduces participation. Get slow enough, for long enough, and a slowbanned user is likely to seek out greener and speedier pastures elsewhere on the internet.
    <p>
    </p>
    </li>
    <li>An <b>errorbanned</b> user has errors inserted at random into pages they visit. You might consider this a more severe extension of slowbanning – instead of pages loading slowly, they might not load at all, return cryptic HTTP errors, return the wrong page altogether, fail to load key dependencies like JavaScript and images and CSS, and so forth. I'm sure your devious little brains can imagine dozens of ways things could go "wrong" for an errorbanned user. This one is a bit more esoteric, but it isn't theoretical; an existing implementation exists in the form of the <a href="http://drupal.org/project/misery">Drupal Misery module</a>.
    </li>
    </ol>
    <p>
    Because we try to hew so closely to the real world model of democracy with Stack Exchange, I'm not quite sure how I feel about these sorts of reality-altering tricks that are impossible in the world of atoms. On some level, they feel disingenuous to me. And it's a bit like <a href="http://en.wikipedia.org/wiki/It's_a_Good_Life_(The_Twilight_Zone)">wishing users into the cornfield</a> with superhuman powers far beyond the ken of normal people. But I've also spent many painful hours trapped in public dialog about users who were, <i>at best</i>, just wasting everyone's time. Democracy is a wonderful thing, but efficient, it ain't.
    </p>
    <p>
    That said, every community is different. I've personally talked to people in charge of large online communities – ones you probably participate in every day – and part of the reason those communities <i>haven't</i> broken down into utter chaos by now is because they secretly <b>hellban</b> and <b>slowban</b> their most problematic users. These solutions do neatly solve the problem of getting troublesome users to "voluntarily" decide to leave a community with a minimum of drama. It's hard to argue with techniques that are proven to work.
    </p>
    <p>
    I think everyone has a right to know what sort of jail their community uses, even these secret, invisible ones. But keep in mind that whether it's timed suspensions, traditional bans, or exotic hellbans and beyond, the goal is the same: civil, sane, and safe online communities for everyone.
    </p>
    <p>
    <!--kg-card-end: markdown-->
                </p></content>
    <pubDate>2011-06-04T05:07:55.000Z</pubDate>
    <guid>https://blog.codinghorror.com/suspension-ban-or-hellban/</guid>
    </item>
    <item>
    <title>The Infinite Version</title>
    <link>https://blog.codinghorror.com/the-infinite-version/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    One of the things I like most about Google's Chrome web browser is <a href="http://www.codinghorror.com/blog/2010/09/go-that-way-really-fast.html">how often it is updated</a>. But now that Chrome has rocketed through <a href="http://en.wikipedia.org/wiki/Google_Chrome#Release_history">eleven versions in two and a half years</a>, the thrill of seeing that version number increment has largely worn off. It seems they've picked off all the low hanging fruit at this point and are mostly polishing. The highlights from <b>Version 11</b>, the current release of Chrome?
    </p>
    <p>
    </p>
    <blockquote>
    HTML5 Speech Input API. Updated icon.
    </blockquote>
    <p>
    Exciting, eh? Though there was no shortage of hand-wringing over the new icon, <a href="http://www.google.com/search?q=new+google+chrome+icon+sucks">of course</a>.
    </p>
    <p>
    Chrome's version number has been changing so rapidly lately that every time someone opens a Chrome bug on a Stack Exchange site, I have to check my version against theirs just to make sure we're still talking about the same software. And once -- I swear I am not making this up -- <i>the version incremented while I was checking the version</i>.
    </p>
    <p>
    <a href="http://twitter.com/#!/codinghorror/status/64432690597871616">
    <img alt="another nanosecond, another Chrome version." title="another nanosecond, another Chrome version." src="https://blog.codinghorror.com/content/images/uploads/2011/05/6a0120a85dcdae970b014e889ba13c970d-800wi.png" border="0">
    </a>
    </p>
    <p>
    That was the day I officially stopped caring what version Chrome is. I mean, I care in the sense that sometimes <a href="http://www.codinghorror.com/blog/2007/02/whats-in-a-version-number-anyway.html">I need to check its dogtags in battle</a>, but as a regular user of Chrome, I no longer think of myself as using <i>a specific version</i> of Chrome, I just … use Chrome. Whatever the latest version is, I have it automagically.
    </p>
    <p>
    For the longest time, web browsers have been strongly associated with specific versions. The very mention of Internet Explorer 6 or Netscape 4.77 should send a shiver down the spine of any self-respecting geek. And for good reason! Who can forget what a breakout hit Firefox 3 was, or the epochs that Internet Explorer 7, 8 and 9 represent in Microsoft history. But Chrome? <b>Chrome is so fluid that it has transcended software versioning altogether.</b>
    </p>
    <p>
    <img alt="Chrome-infinite-version" title="Chrome-infinite-version" src="https://blog.codinghorror.com/content/images/uploads/2011/05/6a0120a85dcdae970b0154327b11c0970c-800wi.png" border="0">
    </p>
    <p>
    This fluidity is difficult to achieve for client software that runs on millions of PCs, Macs, and other devices. Google put an extreme amount of engineering effort into making the Chrome auto-update process "just work". They've <a href="http://blog.chromium.org/2009/07/smaller-is-faster-and-safer-too.html">optimized the heck out of the update process</a>.
    </p>
    <p>
    </p>
    <blockquote>
    Rather then push put a whole new 10MB update [for each version], we send out a diff that takes the previous version of Google Chrome and generates the new version. We tried several binary diff algorithms and have been using bsdiff up until now. We are big fans of <a href="http://www.daemonology.net/bsdiff/">bsdiff</a> - it is small and worked better than anything else we tried.
    <p>
    But bsdiff was still producing diffs that were bigger than we felt were necessary. So we wrote a new diff algorithm that knows more about the kind of data we are pushing - large files containing compiled executables. Here are the sizes for the recent 190.1 -&gt; 190.4 update on the developer channel:
    </p>
    <p>
    </p>
    <ul>
    <li>Full update: 10 megabytes
    </li>
    <li>bsdiff update: 704 kilobytes
    </li>
    <li>Courgette update: 78 kilobytes
    </li>
    </ul>
    <p>
    The small size in combination with Google Chrome's silent update means we can update as often as necessary to keep users safe.
    </p>
    </blockquote>
    <p>
    Google's <a href="http://dev.chromium.org/developers/design-documents/software-updates-courgette">Courgette</a> -- the French word for Zucchini, oddly enough -- is an amazing bit of software optimization, capable of producing uncannily small diffs of binary executables. To achieve this, it has to know intimate details about the source code:
    </p>
    <p>
    </p>
    <blockquote>
    The problem with compiled applications is that even a small source code change causes a disproportional number of byte level changes.  When you add a few lines of code, for example, a range check to prevent a buffer overrun, all the subsequent code gets moved to make room for the new instructions.  The compiled code is full of internal references where some instruction or datum contains the address (or offset) of another instruction or datum.  It only takes a few source changes before almost all of these internal pointers have a different value, and there are a lot of them - roughly half a million in a program the size of chrome.dll.
    <p>
    The source code does not have this problem because all the entities in the source are symbolic. Functions don't get committed to a specific address until very late in the compilation process, during assembly or linking.  If we could step backwards a little and make the internal pointers symbolic again, could we get smaller updates?
    </p>
    </blockquote>
    <p>
    Since the version updates are relatively small, they can be downloaded in the background. But even Google hasn't figured out how to install an update while the browser is running. Yes, there are little alert icons to let you know your browser is out of date, and you eventually do get nagged if you are woefully behind, but <b>updating <i>always</i> requires the browser to restart</b>.
    </p>
    <p>
    <a href="http://www.flickr.com/photos/factoryjoe/4841343705/"><img alt="Please-restart-google-chrome" title="Please-restart-google-chrome" src="https://blog.codinghorror.com/content/images/uploads/2011/05/6a0120a85dcdae970b01538ea83cb9970b-800wi.png" border="0"></a>
    </p>
    <p>
    Web applications have it far easier, but they have version delivery problems, too. Consider WordPress, one of the largest and most popular webapps on the planet. We run WordPress on multiple blogs and even have <a href="http://wordpress.stackexchange.com/">our own WordPress community</a>. WordPress doesn't auto-update to each new version, but it makes it as painless as I've seen for a webapp. Click the update link on the dashboard and WordPress (and its add-ons) update to the latest version all by themselves. There might be the briefest of interruptions in service for visitors to your WordPress site, but then you're back in business with the latest update.
    </p>
    <p>
    <img alt="Wordpress-update" title="Wordpress-update" src="https://blog.codinghorror.com/content/images/uploads/2011/05/6a0120a85dcdae970b014e889bd9cc970d-800wi.png" border="0">
    </p>
    <p>
    <b>WordPress needs everyone to update to the latest versions regularly</b> for the same reasons Google Chrome does -- security, performance, and stability. An internet full of old, unpatched WordPress or Chrome installations is no less dangerous than an internet full of old, unpatched Windows XP machines.
    </p>
    <p>
    These are both relatively seamless update processes. But they're nowhere near as seamless as they <i>should</i> be. <b>One click updates that require notification and restart aren't good enough.</b> To achieve the infinite version, we software engineers have to go a lot deeper.
    </p>
    <p>
    <a href="http://twitter.com/#!/jilliancyork/status/50024539610034176">
    <img alt="Twitter-google-docs-infinite-version" title="Twitter-google-docs-infinite-version" src="https://blog.codinghorror.com/content/images/uploads/2011/05/6a0120a85dcdae970b01538ea8419e970b-800wi.png" border="0"></a>
    </p>
    <p>
    Somehow, we have to be able to automatically update software while it is running without interrupting the user at all. <b>Not <i>if</i> -- but <i>when</i> -- the infinite version arrives</b>, our users probably won't even know. Or care. And that's how we'll know we've achieved our goal.
    </p>
    <p>
    <!--kg-card-end: markdown-->
                </p></content>
    <pubDate>2011-05-23T03:36:57.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-infinite-version/</guid>
    </item>
    <item>
    <title>Who Needs a Sound Card, Anyway?</title>
    <link>https://blog.codinghorror.com/who-needs-a-sound-card-anyway/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    The last sound card I purchased was in 2006, and that's only because I'm (occasionally) a bleeding edge PC gamer. The very same card was still in my current PC until a few days ago. It's perhaps too generous to describe PC sound hardware as stagnant; it's borderline <i>irrelevant</i>.
    </p>
    <p>
    <b>The default, built-in sound chips on most motherboards have evolved from "totally crap" to "surprisingly decent" in the last 5 years.</b> But besides that, in this era of ubiquitous quad core CPUs nearing 4 GHz, it'd be difficult to make a plausible case that you <i>need</i> a discrete set of silicon to handle sound processing, even for <a href="http://www.codinghorror.com/blog/2006/01/3d-positional-audio-and-hrtfs.html">the very fanciest of 3D sound algorithms and HRTFs</a>.
    </p>
    <p>
    That said, if you enjoy music even a <i>little</i>, I still strongly recommend investing in a quality set of headphones. As I wrote in 2005's <a href="http://www.codinghorror.com/blog/2005/12/headphone-snobbery.html">Headphone Snobbery</a>:
    </p>
    <p>
    </p>
    <blockquote>
    <b>Am I really advocating spending two hundred dollars on a set of headphones?</b> <i>Yes. Yes I am.</i> Now, you could spend a lot more. This is about extracting the maximum bang for your buck:
    <p>
    </p>
    <ol>
    <li>Unlike your computer, or your car, your headphones will never wear out or become obsolete. I hesitate to say lifetime, but they're multiple decade investments at the very least.
    </li>
    <li>The number one item that affects the music you hear is the speakers. Without a good set of headphones, everything else is irrelevant.
    </li>
    <li>The right headphones can deliver sound equivalent to extremely high-end floorstanding speakers worth thousands of dollars.
    </li>
    </ol>
    <p>
    If you're the type of person who is perfectly happy listening to 64 kilobit MP3s through a $5 set of beige headphones, that's fine. There's nothing wrong with that. Keep on scrolling; this post is not for you.
    </p>
    </blockquote>
    <p>
    I realize that there's a fine line between audiophile and bats**t insane -- <i>and that line better not be near any sources of interference!</i> But nice headphones require powerful, reasonably clean output to deliver the best listening experience. This isn't <a href="http://www.amazon.com/AudioQuest-K2-terminated-speaker-cable/dp/B000J36XR2">high end audio crackpot snake oil</a>, it's actual physics.
    </p>
    <p>
    I'll let the guys at headroom <a href="http://www.headphone.com/learning-center/how-do-i-know-if-my-headphones-need-an-amp.php">explain</a>:
    </p>
    <p>
    </p>
    <blockquote>
    You may have heard of a headphone's "impedance." Impedance is the combined resistance and reactivity the headphones present to the amplifier as an electrical load. High impedance cans will usually need more voltage to get up to a solid listening level, so they will often benefit from an amp, especially with portable players that have limited voltage available from their internal batteries. But low impedance cans may require more current, and will lower the damping factor between the amp and headphones. So while low impedance headphones may be driven loud enough from a portable player, the quality of sound may be dramatically improved with an amp.
    <p>
    The size of your headphone will give you some clues to whether an amp may be warranted. Most earbud and in ear headphones are typically very efficient and are less likely to benefit strongly from an amp. Many larger headphones will benefit, or even require, a headphone amp to reach listenable volume levels with portable players.
    </p>
    </blockquote>
    <p>
    Thus, once you have a set of nice headphones, you <i>do</i> need some kind of amplified output for them. Something like the <a href="http://boostaroo.com/">Boostaroo</a>, or a <a href="http://www.amazon.com/exec/obidos/ASIN/B003WXBFS8/codihorr-20">Total BitHead</a>. And if you're on a laptop these outboard solutions might be your only options.
    </p>
    <p>
    <a href="http://www.amazon.com/exec/obidos/ASIN/B003WXBFS8/codihorr-20"><img alt="Total-bithead" title="Total-bithead" src="https://blog.codinghorror.com/content/images/uploads/2011/05/6a0120a85dcdae970b014e883fc211970d-800wi.jpg" border="0"></a>
    </p>
    <p>
    But desktops offer the option of adding a sound card. The good news is that <b>arguably the best sound card on the planet, the <a href="http://www.dpbolvw.net/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16829132020%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Sound%2BCard-_-ASUS-_-29132020&amp;cjsku=N82E16829132020">Xonar DG</a>, is all of 30 measly bucks.</b> It's a big step up in fundamental sound quality from even the best current integrated HD audio motherboard sound chips, per <a href="http://techreport.com/articles.x/19997/1">this Tech Report review</a>.
    </p>
    <p>
    </p>
    <table width="700">
    <tr>
    <td width="*"></td>
    <td colspan="9">
    <a href="http://audio.rightmark.org">RightMark Audio Analyzer</a> audio quality, 16-bit/44.1kHz</td>
    </tr>
    <tr>
    <td width="*"></td>
    <td align="center" width="60">freq response</td>
    <td align="center" width="60">noise level</td>
    <td align="center" width="60">range</td>
    <td align="center" width="60">THD</td>
    <td align="center" width="60">THD + Noise</td>
    <td align="center" width="60">IMD + Noise</td>
    <td align="center" width="60">crosstalk</td>
    <td align="center" width="60">IMD at 10kHz</td>
    <td align="center" width="60">overall</td>
    </tr>
    <tr>
    <td width="*">Realtek ALC892 HD</td>
    <td align="center" width="60">5</td>
    <td align="center" width="60">4</td>
    <td align="center" width="60">4</td>
    <td align="center" width="60">3</td>
    <td align="center" width="60">1</td>
    <td align="center" width="60">3</td>
    <td align="center" width="60">5</td>
    <td align="center" width="60">3</td>
    <td align="center" width="60">4</td>
    </tr>
    <tr>
    <td width="*"><a href="http://www.dpbolvw.net/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16829132020%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Sound%2BCard-_-ASUS-_-29132020&amp;cjsku=N82E16829132020">Xonar DG</a></td>
    <td align="center" width="60">5</td>
    <td align="center" width="60">6</td>
    <td align="center" width="60">6</td>
    <td align="center" width="60">5</td>
    <td align="center" width="60">4</td>
    <td align="center" width="60">6</td>
    <td align="center" width="60">6</td>
    <td align="center" width="60">6</td>
    <td align="center" width="60">5</td>
    </tr>
    </table>
    
    It also includes a little something extra of particular interest to us music loving programmers with nice headphones:
    <p>
    </p>
    <blockquote>
    <b>Built-in headphone amplification</b> is something you won't find on a motherboard, but it's featured in both Xonars. On the DG, Asus has gone with Texas Instruments' DRV601RTJR, which is optimized for headphone impedances of 32-150 Ω according to the card's spec sheet. The Xense gets something considerably fancier: a TI amp capable of pushing headphones with impedances up to 600 Ω. Of course, the headphones bundled with the card are rated for an impedance of only 150 Ω. Mid-range stereo cans like Sennheiser's excellent HD 555s, which we use for listening tests, have a rated impedance of just 50 Ω. You don't need big numbers for high-quality sound.
    </blockquote>
    <p>
    The headphone amplification options are a bit buried in the Xonar driver user interface. To get there, select headphone mode, then click the little hammer icon to bring up the headphone amp gain settings.
    </p>
    <p>
    <img alt="Xonar-dg-audio-center-headphones" title="Xonar-dg-audio-center-headphones" src="https://blog.codinghorror.com/content/images/uploads/2011/05/6a0120a85dcdae970b0154321f2ec1970c-800wi.png" border="0">
    </p>
    <p>
    After my last upgrade, I was truly hoping I could get away with just the on-board Realtek HD audio my motherboard provides. I resisted mightily -- but the drop in headphone output quality with the onboard stuff was noticeable. Not to mention that I had to absolutely <i>crank</i> the volume to get even moderate loudness with my fancy-ish Sennheiser HD 600 headphones. The Xonar DG neatly solves both of these problems.
    </p>
    <p>
    As you probably expected, the answer to the question "Who needs a sound card?" is "Almost nobody." <i>Except those of us who <a href="http://www.codinghorror.com/blog/2005/12/headphone-snobbery.html">invested in quality headphones</a>.</i> Rather than spending $30 or $150 on an outboard headphone amp, <a href="http://www.dpbolvw.net/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16829132020%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Sound%2BCard-_-ASUS-_-29132020&amp;cjsku=N82E16829132020">spend $30 on the Xonar DG</a> to get a substantial sound quality upgrade <i>and</i> a respectable headphone amp to boot.
    </p>
    <p>
    <!--kg-card-end: markdown-->
                </p></content>
    <pubDate>2011-05-04T19:34:18.000Z</pubDate>
    <guid>https://blog.codinghorror.com/who-needs-a-sound-card-anyway/</guid>
    </item>
    <item>
    <title>The Hot/Crazy Solid State Drive Scale</title>
    <link>https://blog.codinghorror.com/the-hot-crazy-solid-state-drive-scale/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    As an early advocate of solid state hard drives …
    </p>
    <p>
    </p>
    <ul>
    <li>
    <a href="http://www.codinghorror.com/blog/2009/10/the-state-of-solid-state-hard-drives.html">The State of Solid State Hard Drives</a> (October 2009)
    </li>
    <li>
    <a href="http://www.codinghorror.com/blog/2010/09/revisiting-solid-state-hard-drives.html">Revisiting Solid State Hard Drives</a> (October 2010)
    </li>
    </ul>
    <p>
    … I feel ethically and morally obligated to let you in on a dirty little secret I've discovered in the last two years of full time SSD ownership. <b>Solid state hard drives fail. A lot.</b> And not just any fail. I'm talking about <i>catastrophic, oh-my-God-what-just-happened-to-all-my-data instant gigafail</i>. It's not pretty.
    </p>
    <p>
    I bought a set of three Crucial 128 GB SSDs in October 2009 for the original two members of the Stack Overflow team plus myself. As of last month, two out of three of those had failed. And just the other day I was chatting with Joel on the podcast (yep, <a href="http://blog.stackoverflow.com/2011/04/se-podcast-02/">it's back</a>), and he casually mentioned to me that the Intel SSD in his Thinkpad, which was purchased roughly around the same time as ours, had also failed.
    </p>
    <p>
    <a href="http://portmanwills.com/">Portman Wills</a>, friend of the company and generally awesome guy, has a far scarier tale to tell. He got infected with the SSD religion based on my original 2009 blog post, and he went all in. He purchased <i>eight</i> SSDs over the last two years … and <i>all of them failed</i>. The tale of the tape is frankly a little terrifying:
    </p>
    <p>
    </p>
    <ul>
    <li>Super Talent 32 GB SSD, failed after 137 days
    </li>
    <li>OCZ Vertex 1 250 GB SSD, failed after 512 days
    </li>
    <li>G.Skill 64 GB SSD, failed after 251 days
    </li>
    <li>G.Skill 64 GB SSD, failed after 276 days
    </li>
    <li>Crucial 64 GB SSD, failed after 350 days
    </li>
    <li>OCZ Agility 60 GB SSD, failed after 72 days
    </li>
    <li>Intel X25-M 80 GB SSD, failed after 15 days
    </li>
    <li>Intel X25-M 80 GB SSD, failed after 206 days
    </li>
    </ul>
    <p>
    You might think after this I'd be swearing off SSDs as unstable, unreliable technology. Particularly since <a href="http://www.codinghorror.com/blog/2009/12/international-backup-awareness-day.html">I am the world's foremost expert on backups</a>.
    </p>
    <p>
    Well, you'd be wrong. I just went out and bought myself <a href="http://www.tkqlhce.com/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16820227707%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Solid%2BState%2BDisk-_-OCZ%2BTechnology-_-20227707&amp;cjsku=N82E16820227707">a hot new OCZ Vertex 3 SSD</a>, the clear winner of the latest generation of SSDs to arrive this year. <a href="http://www.storagereview.com/ocz_vertex_3_review_240gb">Storage Review</a> calls it <i>the fastest SATA SSD we've seen</i>.
    </p>
    <p>
    </p>
    <blockquote>
    Beta firmware or not though, the Vertex 3 is a scorcher. We'll get into the details later in the review, but our numbers show it as clearly the fastest SATA SSD to hit our bench.
    <p>
    <a href="http://www.tkqlhce.com/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16820227707%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Solid%2BState%2BDisk-_-OCZ%2BTechnology-_-20227707&amp;cjsku=N82E16820227707"><img alt="ocz-vertex-3" title="ocz-vertex-3" src="https://blog.codinghorror.com/content/images/uploads/2011/05/6a0120a85dcdae970b01543211cee2970c-800wi.jpg" border="0"></a>
    </p>
    <p>
    While that shouldn't be entirely surprising, it's not just faster like, "Woo, it edged out the prior generation SF-1200 SSDs, yeah!" <b>It's faster like, "Holy @% that's fast," boasting 69% faster results in some of our real-world tests.</b>
    </p>
    </blockquote>
    <p>
    Solid state hard drives are so freaking amazing performance wise, and the experience you will have with them is so transformative, that <i>I don't even care if they fail every 12 months on average!</i> I can't imagine using a computer without a SSD any more; it'd be like going back to <a href="http://www.codinghorror.com/blog/2006/05/do-modems-still-matter.html">dial-up internet</a> or 13" CRTs or single button mice. Over my dead body, man!
    </p>
    <p>
    It may seem irrational, but … well, I believe the phenomenon was explained best on the television show <a href="http://www.imdb.com/title/tt0460649/">How I Met Your Mother</a> by Barney Stinson, a character played brilliantly by geek favorite Neil Patrick Harris:
    </p>
    <p>
    </p>
    <blockquote>
    <p>
    Barney: There's no way she's above the line on <a href="http://www.youtube.com/watch?v=5zADosF3XoQ">the 'hot/crazy' scale</a>.
    </p>
    <p>
    Ted: She's not even on the 'hot/crazy' scale; she's just hot.
    </p>
    <p>
    Robin: Wait, 'hot/crazy' scale?
    </p>
    <p>
    Barney: Let me illustrate!
    </p>
    <p>
    <a href="http://www.youtube.com/watch?v=5zADosF3XoQ"><img alt="The-hot-crazy-scale1" title="The-hot-crazy-scale1" src="https://blog.codinghorror.com/content/images/uploads/2011/05/6a0120a85dcdae970b01538e3ee72e970b-800wi.jpg" border="0"></a>
    </p>
    <p>
    Barney: A girl is allowed to be crazy as long as she is equally hot. Thus, if she's <i>this</i> crazy, she has to be <i>this</i> hot. You want the girl to be above this line. Also known as the 'Vickie Mendoza Diagonal'. This girl I dated. She played jump rope with that line. She'd shave her head, then lose 10 pounds. She'd stab me with a fork, then get a boob job. [pause] I should give her a call.
    </p>
    </blockquote>
    <p>
    Thing is, <b>SSDs are so scorching hot that I'm willing to put up with their craziness.</b> Consider that just in the last two years, their performance has <i>doubled</i>. Doubled! And the latest, fastest SSDs can even <a href="http://www.anandtech.com/show/4186/ocz-vertex-3-preview-the-first-client-focused-sf2200/5">saturate existing SATA interfaces</a>; they need brand new 6 Gbps interfaces to fully strut their stuff. No CPU or memory upgrade can come close to touching that kind of real world performance increase.
    </p>
    <p>
    Just make sure you have a <a href="http://www.codinghorror.com/blog/2008/01/whats-your-backup-strategy.html">good backup plan</a> if you're running on a SSD. I do hope they iron out the reliability kinks in the next 2 generations … but I've spent the last two months checking out the hot/crazy solid state drive scale in excruciating detail, and trust me, you want <a href="http://www.tkqlhce.com/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16820227707%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Solid%2BState%2BDisk-_-OCZ%2BTechnology-_-20227707&amp;cjsku=N82E16820227707">one of these new Vertex 3 SSDs</a> <i>right now</i>.
    </p>
    <p>
    <!--kg-card-end: markdown-->
                </p></content>
    <pubDate>2011-05-02T01:24:36.000Z</pubDate>
    <guid>https://blog.codinghorror.com/the-hot-crazy-solid-state-drive-scale/</guid>
    </item>
    <item>
    <title>Working with the Chaos Monkey</title>
    <link>https://blog.codinghorror.com/working-with-the-chaos-monkey/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    </p>
    <p>
    Late last year, the Netflix Tech Blog wrote about <a href="http://techblog.netflix.com/2010/12/5-lessons-weve-learned-using-aws.html">five lessons they learned moving to Amazon Web Services</a>. AWS is, of course, the preeminent provider of so-called "cloud computing", so this can essentially be read as <b>key advice for any website considering a move to the cloud</b>. And it's great advice, too. Here's the one bit that struck me as most essential:
    </p>
    <p>
    </p>
    <blockquote>
    <p>
    We’ve sometimes referred to the Netflix software architecture in AWS as our Rambo Architecture. Each system has to be able to succeed, no matter what, even all on its own. We’re designing each distributed system to expect and tolerate failure from other systems on which it depends.
    </p>
    <p>
    If our recommendations system is down, we degrade the quality of our responses to our customers, but we still respond. We’ll show popular titles instead of personalized picks. If our search system is intolerably slow, streaming should still work perfectly fine.
    </p>
    <p>
    One of the first systems our engineers built in AWS is called the Chaos Monkey. <b>The Chaos Monkey’s job is to randomly kill instances and services within our architecture.</b> If we aren’t constantly testing our ability to succeed despite failure, then it isn’t likely to work when it matters most – in the event of an unexpected outage.
    </p>
    </blockquote>
    <p>
    Which, let's face it, seems like insane advice at first glance. I'm not sure many companies even understand why this would be a good idea, much less have the guts to attempt it. Raise your hand if where you work, <i>someone deployed a daemon or service that randomly kills servers and processes in your server farm</i>.
    </p>
    <p>
    Now raise your other hand if that person is still employed by your company.
    </p>
    <p>
    Who in their right mind would willingly choose to work with a Chaos Monkey?
    </p>
    <p>
    <a href="http://www.youtube.com/watch?v=WgjcvxQjpKA"><img class="asset  asset-image at-xid-6a0120a85dcdae970b014e880f778e970d" alt="Angry-monkey-family-guy" title="Angry-monkey-family-guy" src="https://blog.codinghorror.com/content/images/uploads/2011/04/6a0120a85dcdae970b014e880f778e970d-800wi.png" border="0"></a>
    </p>
    <p>
    Sometimes you don't get a choice; the Chaos Monkey chooses you. At <a href="http://stackexchange.com/">Stack Exchange</a>, we struggled for months with a bizarre problem. <b>Every few days, one of the servers in the <a href="http://blog.stackoverflow.com/2010/01/stack-overflow-network-configuration/">Oregon web farm</a> would simply stop responding to all external network requests.</b> No reason, no rationale, and no recovery except for a slow, excruciating shutdown sequence requiring the server to bluescreen before it would reboot.
    </p>
    <p>
    We spent months -- literally <i>months</i> -- chasing this <a href="http://serverfault.com/questions/104791/windows-server-2008-r2-network-adapter-stops-working-requires-hard-reboot">problem</a> down. We walked the list of everything we could think of to solve it, and then some:
    </p>
    <p>
    </p>
    <ul>
    <li>swapping network ports
    </li>
    <li>replacing network cables
    </li>
    <li>a different switch
    </li>
    <li>multiple versions of the network driver
    </li>
    <li>tweaking OS and driver level network settings
    </li>
    <li>simplifying our network configuration and removing <a href="http://www.balabit.com/support/community/products/tproxy">TProxy</a> for more traditional <code>X-FORWARDED-FOR</code>
    </li>
    <li>switching virtualization providers
    </li>
    <li>changing our <a href="http://en.wikipedia.org/wiki/Host_model">TCP/IP host model</a>
    </li>
    <li>getting Kernel hotfixes and applying them
    </li>
    <li>involving high-level vendor support teams
    </li>
    <li>some other stuff that I've now forgotten because I blacked out from the pain
    </li>
    </ul>
    <p>
    At one point in this saga our team almost came to blows because we were so frustrated. (Well, as close to "blows" as a <a href="http://www.codinghorror.com/blog/2010/05/on-working-remotely.html">remote team</a> can get over Skype, but you know what I mean.) Can you blame us? Every few days, one of our servers -- no telling which one -- would randomly wink off the network. <b>The Chaos Monkey strikes again!</b>
    </p>
    <p>
    Even in our time of greatest frustration, I realized that there was a positive side to all this:
    </p>
    <p>
    </p>
    <ul>
    <li>Where we had one server performing an essential function, we switched to two.
    </li>
    <li>If we didn't have a sensible fallback for something, we created one.
    </li>
    <li>We removed dependencies all over the place, paring down to the absolute minimum we required to run.
    </li>
    <li>We implemented workarounds to stay running at all times, even when services we previously considered essential were suddenly no longer available.
    </li>
    </ul>
    <p>
    Every week that went by, we made our system a tiny bit more redundant, because we had to. Despite the ongoing pain, it became clear that Chaos Monkey was actually doing us a big favor by forcing us to become extremely resilient. Not tomorrow, not someday, not at some indeterminate "we'll get to it eventually" point in the future, but <i>right now where it hurts</i>.
    </p>
    Now, none of this is new news; our problem is long since solved, and the Netflix Tech Blog article I'm referring to was posted last year. I've been meaning to write about it, but <a href="http://stackexchange.com/sites">I've been a little busy</a>. Maybe the timing is prophetic; <a href="http://www.zdnet.com/blog/btl/amazons-web-services-outage-end-of-cloud-innocence/47731">AWS had a huge multi-day outage last week</a>, which took several major websites down, along with a constellation of smaller sites.
    <p>
    Notably absent from that list of affected AWS sites? Netflix.
    </p>
    <p>
    When you work with the Chaos Monkey, you quickly learn that everything happens for a reason. Except for those things which happen completely randomly. And that's why, even though it sounds crazy, <b>the best way to avoid failure is to fail constantly.</b>
    </p>
    <p>
    (<font color="red">update:</font> Netflix <a href="https://github.com/Netflix/SimianArmy">released their version of Chaos Monkey on GitHub</a>. Try it out!)
    </p>
    <!--kg-card-end: markdown-->
                </content>
    <pubDate>2011-04-25T02:53:48.000Z</pubDate>
    <guid>https://blog.codinghorror.com/working-with-the-chaos-monkey/</guid>
    </item>
    <item>
    <title>Revisiting the Home Theater PC</title>
    <link>https://blog.codinghorror.com/revisiting-the-home-theater-pc/</link>
    <content>
                    <!--kg-card-begin: markdown--><p>
    It's been almost three years since I <a href="http://www.codinghorror.com/blog/2008/04/building-your-own-home-theater-pc.html">built my home theater PC</a>. I <i>adore</i> that little machine; it drives all of our family entertainment and serves as a general purpose home media server and streaming box. As I get older, I find that I'm no longer interested in having a home full of PCs whirring away. I only want <i>one</i> PC in my house on all the time, and I want it to be as efficient and versatile as possible.
    </p>
    <p>
    My old low-power Athlon X2 based HTPC generally worked great, but still struggled with some occasional 1080p content. And when you have a toddler in the house, believe me, you <i>need</i> reliable 1080p playback. Only the finest in children's entertainment for my <a href="http://www.codinghorror.com/blog/2009/03/spawned-a-new-process.html">spawned process</a>, I say!
    </p>
    <p>
    When I recently had to transcode <a href="http://www.imdb.com/title/tt1001526/">Megamind</a> down to 720p to get it to play back without stuttering or pausing at times… I knew my current HTPC's days were numbered.
    </p>
    <p>
    <a href="http://www.imdb.com/title/tt1001526/"><img alt="Megamind-evil-overlord-small" title="Megamind-evil-overlord-small" src="https://blog.codinghorror.com/content/images/uploads/2011/03/6a0120a85dcdae970b0147e3838486970b-800wi.jpg" border="0"></a>
    </p>
    <p>
    (Megamind is <i>hilarious</i> and highly recommended, by the way; it's far better than its Metacritic and Rotten Tomatoes percentages would seem to indicate.)
    </p>
    <p>
    Now that Intel has finally released their Sandy Bridge CPUs -- the first with integrated GPUs -- I was eager to revisit and rebuild. The <a href="http://ark.intel.com/Product.aspx?id=53423">low power Core i3-2100T</a> is the one I had my eye on, with <b>a miserly TDP of 35 watts</b>. Combine that with a decent <a href="http://www.codinghorror.com/blog/2006/01/the-impossibly-small-pc-nano-itx.html">Mini-ITX</a> motherboard and a few other essential parts, and you're good to go:
    </p>
    <p>
    </p>
    <table cellpadding="4" cellspacing="4" width="350px">
    <tr>
    <td>CPU</td>
    <td><a href="http://www.directron.com/bx80623i32100t.html">Intel Core i3-2100T</a></td>
    <td>$135
    </td>
    </tr>
    <tr>
    <td>Motherboard</td>
    <td><a href="http://www.tkqlhce.com/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16813157239%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Motherboards%2B-%2BIntel-_-ASRock-_-13157239&amp;cjsku=N82E16813157239">ASRock H67M ITX</a></td>
    <td>$100
    </td>
    </tr>
    <tr>
    <td>RAM</td>
    <td><a href="http://www.anrdoezrs.net/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16820145278%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Memory%2B%28Desktop%2BMemory%29-_-Corsair-_-20145278&amp;cjsku=N82E16820145278">Corsair 4GB DDR3</a></td>
    <td>$45
    </td>
    </tr>
    <tr>
    <td>Case + PSU</td>
    <td><a href="http://www.dpbolvw.net/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16811129068%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Cases%2B%28Computer%2BCases%2B-%2BATX%2BForm%29-_-Antec-_-11129068&amp;cjsku=N82E16811129068">Antec ISK 300-65</a></td>
    <td>$70
    </td>
    </tr>
    <tr>
    <td>HDD</td>
    <td><a href="http://www.jdoqocy.com/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16822149204%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Hard%2BDrives%2B-%2BNotebooks%2B%2F%2BLaptops-_-Toshiba-_-22149204&amp;cjsku=N82E1682214920">750GB 2.5"</a></td>
    <td>$70
    </td>
    </tr>
    </table>
    <p>
    Now, I am fudging a bit here. This is just the basic level of hardware to get a functional home theater PC. I didn't actually buy a case, PSU, or even hard drive for that matter; I recycled many of my old existing parts, so my personal outlay was all of 300 bucks. I'm including the fuller part list as courtesy recommendations in case you're starting from scratch. You also might want to add a <a href="http://www.jdoqocy.com/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16827106325%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Blu-Ray%2BDrives-_-Lite-On-_-27106325&amp;cjsku=N82E16827106325">Blu-Ray drive</a>, and perhaps a <a href="http://www.anrdoezrs.net/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16832116754%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Software%2B-%2BOperating%2BSystems-_-Microsoft-_-32116754&amp;cjsku=N82E16832116754">Windows 7 Home Premium license</a> ($99) for its excellent 10-foot <a href="http://www.codinghorror.com/blog/2007/02/windows-vista-media-center.html">Windows Media Center</a> interface.
    </p>
    <p>
    <a href="http://www.tkqlhce.com/click-2338938-10440897?url=http%3A%2F%2Fwww.newegg.com%2FProduct%2FProduct.aspx%3FItem%3DN82E16813157239%26nm_mc%3DAFC-C8Junction%26cm_mmc%3DAFC-C8Junction-_-Motherboards%2B-%2BIntel-_-ASRock-_-13157239&amp;cjsku=N82E16813157239"><img alt="Asrock-mini-itx-h67-motherboard" title="Asrock-mini-itx-h67-motherboard" src="https://blog.codinghorror.com/content/images/uploads/2011/03/6a0120a85dcdae970b0147e383d8e7970b-800wi.jpg" border="0"></a>
    </p>
    <p>
    The magical part here is the extreme level of hardware integration: the CPU has a GPU and memory controller on die, and the motherboard has optical digital out and HDMI out built in. It's delightfully simple to build and downright <i>cheap</i>. Just assemble it, install your OS of choice (sorry, Apple fans), then plug it into your receiver and television and boot it up.
    </p>
    <p>
    My results? I'll just get right to the good part, but please bear in mind <b>each step is about twice as powerful</b> as the one before:
    </p>
    <p>
    </p>
    <table cellpadding="4" cellspacing="4" width="550px">
    <tr>
    <td><a href="http://www.codinghorror.com/blog/2005/02/pentium-m-home-theater-pc.html">2005</a></td>
    <td>~$1000</td>
    <td>512 MB RAM, single core CPU</td>
    <td>80 watts idle
    </td>
    </tr>
    <tr>
    <td><a href="http://www.codinghorror.com/blog/2008/04/building-your-own-home-theater-pc.html">2008</a></td>
    <td>~$520</td>
    <td>2 GB RAM, dual core CPU</td>
    <td>45 watts idle
    </td>
    </tr>
    <tr>
    <td><b>2011</b></td>
    <td><b>~$420</b></td>
    <td><b>4 GB RAM, dual core CPU + GPU</b></td>
    <td>
    <font color="red"><b>22 watts idle</b></font>
    </td>
    </tr>
    </table>
    <p>
    I know I get way too excited about this stuff, but … <i>holy crap, 22 tesla-lovin' watts at idle!</i> </p>
    <p>
    <img alt="Kill-a-watt-2500t" title="Kill-a-watt-2500t" src="https://blog.codinghorror.com/content/images/uploads/2011/03/6a0120a85dcdae970b014e60290054970c-800wi.jpg" border="0">
    </p>
    <p>
    The <a href="http://www.codinghorror.com/blog/archives/001099.html">kill-a-watt never lies</a>. To be fair, it's more like 25 watts idle with <a href="http://www.codinghorror.com/blog/2007/02/everybody-loves-bittorrent.html">torrents in the background</a>. This little box is remarkably efficient; even when playing back a 1080p video it's not unusual to see CPU usage well under 50%, which equates to around 30-35 watts in practice. Under full, artificial multithreaded Prime95 load, it tops out at an absolute peak of 55 watts.
    </p>
    <p>
    (<font color="red">Update:</font> I ended up replacing my old Seasonic ECO 300 SFX power supply with a <a href="http://www.amazon.com/exec/obidos/ASIN/B0035UETHW/codihorr-20">Pico PSU-90 plus 60 watt adapter</a> kit. That got the idle power down from 22 watts to <b>17 watts</b>, a solid savings of 22%. Recommended!)
    </p>
    <p>
    This is a killer setup, but don't take my word for it. There is an <a href="http://www.missingremote.com/review/intel-core-i3-2100t-and-bh67cf-mini-itx-motherboard">excruciatingly in-depth review</a> of essentially the same system at <a href="http://www.missingremote.com/">Missing Remote</a>, with a particular eye toward home theater duties. Spoiler: they loved the hell out of it too. And it compromises almost nothing in performance, with a Windows Experience score of 5.1 -- that would be a solid 5.8 if you factored out desktop Aero performance.
    </p>
    <p>
    <img alt="Windows-experience-score" title="Windows-experience-score" src="https://blog.codinghorror.com/content/images/uploads/2011/03/6a0120a85dcdae970b014e602a2c2f970c-800wi.png" border="0">
    </p>
    <p>
    (Also, in case you're wondering, I intentionally dropped the analog cable tuner. All modern cable is now digital, which means awkward DRM-ed up the wazoo CableCard systems. I've cancelled cable altogether; I'd rather take that $60+ per month and use it to support innovative companies who will deliver media through the internet, like Netflix, Hulu, etcetera. Or as I like to call it: <i>the future</i>, unless the media congolomerates with vaults full of cash manage to <a href="http://www.codinghorror.com/blog/2011/02/the-importance-of-net-neutrality.html">subvert net neutrality</a>.)
    </p>
    <p>
    When all is said and done, I have a new always-on, does-anything home theater box that is <b>twice as fast as the one I built in 2008, while consuming less than half the power</b>.
    </p>
    <p>
    I've been a computer nerd since age 8, and I just turned 40. I should be jaded by <a href="http://www.codinghorror.com/blog/2007/05/computer-hardware-pornography.html">computer hardware pornography</a> by now, but I still find this progress <i>amazing</i>. At this rate, I can't wait to find out what my 2014 home theater PC will look like.
    </p>
    <p>
    <!--kg-card-end: markdown-->
                </p></content>
    <pubDate>2011-03-28T01:51:23.000Z</pubDate>
    <guid>https://blog.codinghorror.com/revisiting-the-home-theater-pc/</guid>
    </item>
    
    
</channel>
</rss>
